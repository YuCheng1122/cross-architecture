Label: 253
Function: __condvar_cancel_waiting
Architecture: mips
Source File: Unknown
Entry Point: 00480ce0

High-level P-code:

(unique, 0x1000012a, 8) PIECE (register, 0x18, 4) , (register, 0x1c, 4)
(stack, 0x10, 4) SUBPIECE (stack, 0x10, 8) , (const, 0x4, 4)
(stack, 0x14, 4) SUBPIECE (stack, 0x10, 8) , (const, 0x0, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x10000180, 4) , (const, 0x20, 4)
(unique, 0x10000180, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x10, 4) PTRSUB (unique, 0x10000184, 4) , (const, 0x20, 4)
(unique, 0x10000170, 4) COPY (register, 0x8, 4)
(unique, 0x10000184, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x10000170, 4) , (unique, 0x10000174, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x480ea0, 1) , (unique, 0x1700, 1)
(register, 0x14, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x480d5c, 1) , (unique, 0x1700, 1)
(unique, 0x10000174, 4) COPY (register, 0x14, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0x18, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0x47, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0x47, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0x47, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0x47, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0x47, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
(VARIABLE, 0x0, 8) CALL (ram, 0x476c24, 8) , (register, 0x10, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0x56, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0x56, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0x56, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0x56, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0x56, 4)
(register, 0x10, 4) PTRSUB (unique, 0x10000188, 4) , (const, 0x8, 4)
(unique, 0x10000188, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x10, 4) SUBPIECE (unique, 0x10000164, 8) , (const, 0x0, 4)
(unique, 0x100000a8, 8) INT_RIGHT (VARIABLE, 0x0, 8) , (const, 0x1, 4)
(unique, 0x10000164, 8) INT_RIGHT (unique, 0x100000a8, 8) , (const, 0x20, 4)
(unique, 0x5380, 1) INT_LESSEQUAL (register, 0x10, 4) , (unique, 0x1000018c, 4)
(unique, 0x1000018c, 4) CAST (register, 0x18, 4)
(register, 0xc, 4) SUBPIECE (unique, 0x100000a8, 8) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x480dd8, 1) , (unique, 0x5380, 1)
 ---  CALL (ram, 0x480b88, 8) , (register, 0x10, 4) , (stack, 0x14, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0x6b, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0x6b, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0x6b, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0x6b, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0x6b, 4)
(unique, 0x1000017c, 4) COPY (unique, 0x100001a8, 4)
(unique, 0x100001a8, 4) CAST (ram, 0x4b3898, 4)
(register, 0x64, 4) MULTIEQUAL (unique, 0x1000017c, 4) , (unique, 0x10000178, 4)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
 ---  CALLIND (register, 0x64, 4) , (register, 0x10, 4)
 ---  RETURN (const, 0x1, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0x9b, 4)
(ram, 0x4b2eb8, 4) COPY (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0x9b, 4)
(ram, 0x4b2ff4, 4) COPY (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0x9b, 4)
(ram, 0x4b3848, 4) COPY (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0x9b, 4)
(ram, 0x4b2ed0, 4) COPY (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0x9b, 4)
(ram, 0x4b3898, 4) COPY (ram, 0x4b3898, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x18, 4)
(unique, 0x5380, 1) INT_LESSEQUAL (register, 0xc, 4) , (register, 0x1c, 4)
 ---  CBRANCH (ram, 0x480de8, 1) , (unique, 0x1700, 1)
 ---  CBRANCH (ram, 0x480d90, 1) , (unique, 0x5380, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x10000190, 4) , (const, 0x20, 4)
(unique, 0x10000190, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x4c, 4) INT_MULT (stack, 0x10, 4) , (const, 0x4, 4)
(register, 0x4c, 4) INT_MULT (stack, 0x10, 4) , (const, 0x4, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4)
(unique, 0x100000b8, 8) INT_ZEXT (register, 0x8, 4)
(unique, 0x100000b0, 8) INT_ADD (unique, 0x100000a8, 8) , (unique, 0x100000b8, 8)
(unique, 0x10000132, 1) INT_LESSEQUAL (unique, 0x100000b0, 8) , (unique, 0x1000012a, 8)
(unique, 0x10000198, 4) INT_ADD (unique, 0x10000194, 4) , (unique, 0x1000015c, 4)
(register, 0x10, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x1000015c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
(unique, 0x10000194, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x10000198, 4)
 ---  CBRANCH (ram, 0x480e5c, 1) , (unique, 0x10000132, 1)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x480d90, 1) , (unique, 0x1200, 1)
(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
(unique, 0x100001a4, 4) INT_ADD (unique, 0x100001a0, 4) , (unique, 0x10000160, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x10, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0xbf, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0xbf, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0xbf, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0xbf, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0xbf, 4)
(unique, 0x10000160, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
(unique, 0x100001a0, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x100001a4, 4)
 ---  CALL (ram, 0x480b88, 8) , (register, 0x10, 4) , (stack, 0x14, 4)
 ---  RETURN (const, 0x0, 8)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0xe4, 4)
(ram, 0x4b2eb8, 4) COPY (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0xe4, 4)
(ram, 0x4b2ff4, 4) COPY (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0xe4, 4)
(ram, 0x4b3848, 4) COPY (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0xe4, 4)
(ram, 0x4b2ed0, 4) COPY (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0xe4, 4)
(ram, 0x4b3898, 4) COPY (ram, 0x4b3898, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xe0000000, 4)
 ---  CBRANCH (ram, 0x480e1c, 1) , (unique, 0x1700, 1)
 ---  CALL (ram, 0x480b88, 8) , (register, 0x10, 4) , (stack, 0x14, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0xf7, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0xf7, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0xf7, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0xf7, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0xf7, 4)
 ---  BRANCH (ram, 0x480db0, 1)
(unique, 0x10000178, 4) COPY (unique, 0x1000019c, 4)
(unique, 0x1000019c, 4) CAST (ram, 0x4b2ed0, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x2, 4)
(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xfffffffc, 4)
 ---  CBRANCH (ram, 0x480ef0, 1) , (unique, 0x1200, 1)
(register, 0x8, 4) MULTIEQUAL (unique, 0x1000016c, 4) , (register, 0x8, 4)
(register, 0xc, 4) MULTIEQUAL (register, 0xc, 4) , (register, 0xc, 4)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x2, 4)
(register, 0x1c, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x480edc, 1) , (unique, 0x1700, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0xc, 4)
(ram, 0x4b2eb8, 4) INDIRECT (ram, 0x4b2eb8, 4) , (const, 0x115, 4)
(ram, 0x4b2ff4, 4) INDIRECT (ram, 0x4b2ff4, 4) , (const, 0x115, 4)
(ram, 0x4b3848, 4) INDIRECT (ram, 0x4b3848, 4) , (const, 0x115, 4)
(ram, 0x4b2ed0, 4) INDIRECT (ram, 0x4b2ed0, 4) , (const, 0x115, 4)
(ram, 0x4b3898, 4) INDIRECT (ram, 0x4b3898, 4) , (const, 0x115, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
 ---  CBRANCH (ram, 0x480f20, 1) , (unique, 0x1700, 1)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x480d64, 1) , (unique, 0x1200, 1)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
 ---  BRANCH (ram, 0x480eb0, 1)
(register, 0x8, 4) MULTIEQUAL (register, 0x1c, 4) , (register, 0x8, 4)
(ram, 0x4b2eb8, 4) MULTIEQUAL (ram, 0x4b2eb8, 4) , (ram, 0x4b2eb8, 4)
(ram, 0x4b2ff4, 4) MULTIEQUAL (ram, 0x4b2ff4, 4) , (ram, 0x4b2ff4, 4)
(ram, 0x4b3848, 4) MULTIEQUAL (ram, 0x4b3848, 4) , (ram, 0x4b3848, 4)
(ram, 0x4b2ed0, 4) MULTIEQUAL (ram, 0x4b2ed0, 4) , (ram, 0x4b2ed0, 4)
(ram, 0x4b3898, 4) MULTIEQUAL (ram, 0x4b3898, 4) , (ram, 0x4b3898, 4)
(unique, 0x1000016c, 4) COPY (register, 0x8, 4)
