Label: 306
Function: __gnu_Unwind_Backtrace
Architecture: arm
Source File: Unknown
Entry Point: 0006f504

High-level P-code:

(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x10000045, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000e5, 4) PTRSUB (unique, 0x10000045, 4) , (const, 0x0, 4)
(unique, 0x8280, 4) PTRADD (unique, 0x100000e5, 4) , (const, 0xe, 4) , (const, 0x4, 4)
(register, 0x54, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffda8, 4)
(register, 0x54, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffda8, 4)
(register, 0x54, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffda8, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x8280, 4) , (register, 0x2c, 4)
(unique, 0x10000059, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000ed, 4) PTRSUB (unique, 0x10000059, 4) , (const, 0x0, 4)
(unique, 0x8280, 4) PTRADD (unique, 0x100000ed, 4) , (const, 0xf, 4) , (const, 0x4, 4)
(register, 0x50, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000065, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x10000065, 4) PTRSUB (register, 0x50, 4) , (const, 0x0, 4)
(unique, 0x10000069, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000071, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000079, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000081, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000f5, 4) PTRSUB (unique, 0x10000069, 4) , (const, 0x0, 4)
(unique, 0x100000fd, 4) PTRSUB (unique, 0x10000071, 4) , (const, 0x0, 4)
(unique, 0x10000105, 4) PTRSUB (unique, 0x10000079, 4) , (const, 0x0, 4)
(unique, 0x1000010d, 4) PTRSUB (unique, 0x10000081, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x100000f5, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x100000fd, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000105, 4) , (const, 0x3, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000010d, 4) , (const, 0x4, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x10000089, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000091, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000099, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000a1, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000115, 4) PTRSUB (unique, 0x10000089, 4) , (const, 0x0, 4)
(unique, 0x1000011d, 4) PTRSUB (unique, 0x10000091, 4) , (const, 0x0, 4)
(unique, 0x10000125, 4) PTRSUB (unique, 0x10000099, 4) , (const, 0x0, 4)
(unique, 0x1000012d, 4) PTRSUB (unique, 0x100000a1, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000115, 4) , (const, 0x5, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000011d, 4) , (const, 0x6, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000125, 4) , (const, 0x7, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000012d, 4) , (const, 0x8, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x100000a9, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000b1, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000b9, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000c1, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000135, 4) PTRSUB (unique, 0x100000a9, 4) , (const, 0x0, 4)
(unique, 0x1000013d, 4) PTRSUB (unique, 0x100000b1, 4) , (const, 0x0, 4)
(unique, 0x10000145, 4) PTRSUB (unique, 0x100000b9, 4) , (const, 0x0, 4)
(unique, 0x1000014d, 4) PTRSUB (unique, 0x100000c1, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000135, 4) , (const, 0x9, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000013d, 4) , (const, 0xa, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000145, 4) , (const, 0xb, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000014d, 4) , (const, 0xc, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x100000c9, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000d1, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100000d9, 4) PTRSUB (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x10000155, 4) PTRSUB (unique, 0x100000c9, 4) , (const, 0x0, 4)
(unique, 0x1000015d, 4) PTRSUB (unique, 0x100000d1, 4) , (const, 0x0, 4)
(unique, 0x10000165, 4) PTRSUB (unique, 0x100000d9, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000155, 4) , (const, 0xd, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000015d, 4) , (const, 0xe, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000165, 4) , (const, 0xf, 4) , (const, 0x4, 4)
(stack, 0xfffffffffffffe00, 4) COPY (const, 0xffffffff, 4)
(register, 0x3c, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffe00, 4)
(stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)
(stack, 0xfffffffffffffe00, 4) MULTIEQUAL (stack, 0xfffffffffffffe00, 4) , (stack, 0xfffffffffffffe00, 4)
(stack, 0xfffffffffffffe04, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe04, 4)
(stack, 0xfffffffffffffe08, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe08, 4)
(stack, 0xfffffffffffffe0c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe0c, 4)
(stack, 0xfffffffffffffe10, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe10, 4)
(stack, 0xfffffffffffffe14, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe14, 4)
(stack, 0xfffffffffffffe18, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe18, 4)
(stack, 0xfffffffffffffe1c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe1c, 4)
(stack, 0xfffffffffffffe20, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe20, 4)
(stack, 0xfffffffffffffe24, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe24, 4)
(stack, 0xfffffffffffffe28, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe28, 4)
(stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe2c, 4)
(stack, 0xfffffffffffffe30, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe30, 4)
(stack, 0xfffffffffffffe34, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe34, 4)
(stack, 0xfffffffffffffe38, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe38, 4)
(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe3c, 4)
(stack, 0xfffffffffffffe40, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe40, 4)
(register, 0x20, 4) CALL (ram, 0x6ef74, 8) , (register, 0x54, 4) , (stack, 0xfffffffffffffe40, 4)
(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xa5, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xa5, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6f5c4, 1) , (register, 0x65, 1)
 ---  CALL (ram, 0x6f4dc, 8) , (unique, 0x100001b1, 4) , (const, 0xc, 4) , (unique, 0x100001b5, 4)
(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xc7, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xc7, 4)
(unique, 0x100001b1, 4) CAST (register, 0x3c, 4)
(unique, 0x100001b5, 4) CAST (register, 0x54, 4)
(register, 0x20, 4) CALLIND (register, 0x20, 4) , (unique, 0x100001b9, 4) , (register, 0x24, 4)
(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xcf, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xcf, 4)
(unique, 0x100001b9, 4) CAST (register, 0x3c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6f5c4, 1) , (register, 0x65, 1)
(register, 0x20, 4) CALLIND (unique, 0x100001bd, 4) , (const, 0x8, 4) , (register, 0x54, 4) , (register, 0x3c, 4)
(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xf7, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xf7, 4)
(unique, 0x100001bd, 4) CAST (stack, 0xfffffffffffffdb8, 4)
(register, 0x2c, 4) INT_ADD (register, 0x20, 4) , (const, 0xfffffffb, 4)
(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xfffffffb, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6f554, 1) , (register, 0x65, 1)
(register, 0x30, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x30, 4)
(stack, 0xfffffffffffffe00, 4) MULTIEQUAL (stack, 0xfffffffffffffe00, 4) , (stack, 0xfffffffffffffe00, 4)
(stack, 0xfffffffffffffe04, 4) MULTIEQUAL (stack, 0xfffffffffffffe04, 4) , (stack, 0xfffffffffffffe04, 4)
(stack, 0xfffffffffffffe08, 4) MULTIEQUAL (stack, 0xfffffffffffffe08, 4) , (stack, 0xfffffffffffffe08, 4)
(stack, 0xfffffffffffffe0c, 4) MULTIEQUAL (stack, 0xfffffffffffffe0c, 4) , (stack, 0xfffffffffffffe0c, 4)
(stack, 0xfffffffffffffe10, 4) MULTIEQUAL (stack, 0xfffffffffffffe10, 4) , (stack, 0xfffffffffffffe10, 4)
(stack, 0xfffffffffffffe14, 4) MULTIEQUAL (stack, 0xfffffffffffffe14, 4) , (stack, 0xfffffffffffffe14, 4)
(stack, 0xfffffffffffffe18, 4) MULTIEQUAL (stack, 0xfffffffffffffe18, 4) , (stack, 0xfffffffffffffe18, 4)
(stack, 0xfffffffffffffe1c, 4) MULTIEQUAL (stack, 0xfffffffffffffe1c, 4) , (stack, 0xfffffffffffffe1c, 4)
(stack, 0xfffffffffffffe20, 4) MULTIEQUAL (stack, 0xfffffffffffffe20, 4) , (stack, 0xfffffffffffffe20, 4)
(stack, 0xfffffffffffffe24, 4) MULTIEQUAL (stack, 0xfffffffffffffe24, 4) , (stack, 0xfffffffffffffe24, 4)
(stack, 0xfffffffffffffe28, 4) MULTIEQUAL (stack, 0xfffffffffffffe28, 4) , (stack, 0xfffffffffffffe28, 4)
(stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (stack, 0xfffffffffffffe2c, 4) , (stack, 0xfffffffffffffe2c, 4)
(stack, 0xfffffffffffffe30, 4) MULTIEQUAL (stack, 0xfffffffffffffe30, 4) , (stack, 0xfffffffffffffe30, 4)
(stack, 0xfffffffffffffe34, 4) MULTIEQUAL (stack, 0xfffffffffffffe34, 4) , (stack, 0xfffffffffffffe34, 4)
(stack, 0xfffffffffffffe38, 4) MULTIEQUAL (stack, 0xfffffffffffffe38, 4) , (stack, 0xfffffffffffffe38, 4)
(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (stack, 0xfffffffffffffe3c, 4) , (stack, 0xfffffffffffffe3c, 4)
(stack, 0xfffffffffffffe40, 4) MULTIEQUAL (stack, 0xfffffffffffffe40, 4) , (stack, 0xfffffffffffffe40, 4)
 ---  CALL (ram, 0x6f074, 8) , (register, 0x3c, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x11a, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0x11a, 4)
(register, 0x20, 4) COPY (register, 0x30, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(register, 0x30, 4) COPY (const, 0x9, 4)
(stack, 0xfffffffffffffe00, 4) MULTIEQUAL (stack, 0xfffffffffffffe00, 4) , (stack, 0xfffffffffffffe00, 4)
(stack, 0xfffffffffffffe04, 4) MULTIEQUAL (stack, 0xfffffffffffffe04, 4) , (stack, 0xfffffffffffffe04, 4)
(stack, 0xfffffffffffffe08, 4) MULTIEQUAL (stack, 0xfffffffffffffe08, 4) , (stack, 0xfffffffffffffe08, 4)
(stack, 0xfffffffffffffe0c, 4) MULTIEQUAL (stack, 0xfffffffffffffe0c, 4) , (stack, 0xfffffffffffffe0c, 4)
(stack, 0xfffffffffffffe10, 4) MULTIEQUAL (stack, 0xfffffffffffffe10, 4) , (stack, 0xfffffffffffffe10, 4)
(stack, 0xfffffffffffffe14, 4) MULTIEQUAL (stack, 0xfffffffffffffe14, 4) , (stack, 0xfffffffffffffe14, 4)
(stack, 0xfffffffffffffe18, 4) MULTIEQUAL (stack, 0xfffffffffffffe18, 4) , (stack, 0xfffffffffffffe18, 4)
(stack, 0xfffffffffffffe1c, 4) MULTIEQUAL (stack, 0xfffffffffffffe1c, 4) , (stack, 0xfffffffffffffe1c, 4)
(stack, 0xfffffffffffffe20, 4) MULTIEQUAL (stack, 0xfffffffffffffe20, 4) , (stack, 0xfffffffffffffe20, 4)
(stack, 0xfffffffffffffe24, 4) MULTIEQUAL (stack, 0xfffffffffffffe24, 4) , (stack, 0xfffffffffffffe24, 4)
(stack, 0xfffffffffffffe28, 4) MULTIEQUAL (stack, 0xfffffffffffffe28, 4) , (stack, 0xfffffffffffffe28, 4)
(stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (stack, 0xfffffffffffffe2c, 4) , (stack, 0xfffffffffffffe2c, 4)
(stack, 0xfffffffffffffe30, 4) MULTIEQUAL (stack, 0xfffffffffffffe30, 4) , (stack, 0xfffffffffffffe30, 4)
(stack, 0xfffffffffffffe34, 4) MULTIEQUAL (stack, 0xfffffffffffffe34, 4) , (stack, 0xfffffffffffffe34, 4)
(stack, 0xfffffffffffffe38, 4) MULTIEQUAL (stack, 0xfffffffffffffe38, 4) , (stack, 0xfffffffffffffe38, 4)
(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (stack, 0xfffffffffffffe3c, 4) , (stack, 0xfffffffffffffe3c, 4)
(stack, 0xfffffffffffffe40, 4) MULTIEQUAL (stack, 0xfffffffffffffe40, 4) , (stack, 0xfffffffffffffe40, 4)
 ---  BRANCH (ram, 0x6f5b0, 1)
