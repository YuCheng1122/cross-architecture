Label: 220
Function: ___pthread_cond_signal
Architecture: mips
Source File: Unknown
Entry Point: 00482c10

High-level P-code:

(register, 0x48, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000df, 4) , (const, 0x24, 4)
(unique, 0x100000df, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x48, 4) , (const, 0x3, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482d74, 1) , (unique, 0x1200, 1)
(register, 0x18, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000e3, 4) , (const, 0x20, 4)
(unique, 0x100000e3, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x44, 4) PTRSUB (unique, 0x100000e7, 4) , (const, 0x20, 4)
(unique, 0x100000d3, 4) COPY (register, 0x18, 4)
(unique, 0x100000e7, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_AND (unique, 0x100000eb, 4) , (const, 0x3, 4)
(register, 0x18, 4) MULTIEQUAL (unique, 0x100000d3, 4) , (unique, 0x100000d7, 4)
(unique, 0x100000eb, 4) CAST (register, 0x18, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
(unique, 0x100000f3, 4) INT_OR (unique, 0x100000ef, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x4830a0, 1) , (unique, 0x1700, 1)
(unique, 0x100000ef, 4) CAST (register, 0x18, 4)
(register, 0x10, 4) CAST (unique, 0x100000f3, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
 ---  CBRANCH (ram, 0x482c9c, 1) , (unique, 0x1700, 1)
(unique, 0x100000d7, 4) COPY (register, 0xc, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x44, 4) , (register, 0x10, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(VARIABLE, 0x0, 8) CALL (ram, 0x476c24, 8) , (unique, 0x10000107, 4)
(register, 0x8, 4) SUBPIECE (unique, 0x100000bf, 8) , (const, 0x0, 4)
(register, 0xc, 4) SUBPIECE (VARIABLE, 0x0, 8) , (const, 0x0, 4)
(unique, 0x100000bf, 8) INT_RIGHT (VARIABLE, 0x0, 8) , (const, 0x20, 4)
(unique, 0x10000107, 4) CAST (register, 0x10, 4)
(register, 0x54, 4) INT_NEGATE (register, 0xc, 4)
(register, 0x54, 4) INT_AND (register, 0x54, 4) , (const, 0x1, 4)
(register, 0xc, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
(unique, 0x1000010f, 4) INT_ADD (unique, 0x1000010b, 4) , (unique, 0x10000075, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x10000075, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
(unique, 0x1000010b, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x1000010f, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482da8, 1) , (unique, 0x1200, 1)
(unique, 0x100000db, 4) COPY (register, 0x54, 4)
(register, 0x54, 4) MULTIEQUAL (unique, 0x100000db, 4) , (register, 0x58, 4)
(register, 0x10, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
(register, 0x10, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
(register, 0x10, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
(register, 0x10, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(unique, 0x10000193, 4) INT_ADD (unique, 0x1000018f, 4) , (unique, 0x10000079, 4)
(register, 0x4, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x10000079, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
(unique, 0x1000018f, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x10000193, 4)
(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x2, 4)
(unique, 0x1000019b, 4) INT_ADD (unique, 0x10000197, 4) , (unique, 0x1000007d, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x4, 4)
(unique, 0x1000007d, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
(unique, 0x10000197, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x1000019b, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(unique, 0x100001a3, 4) INT_ADD (unique, 0x1000019f, 4) , (unique, 0x10000081, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x10000081, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
(unique, 0x1000019f, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x100001a3, 4)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
(unique, 0x100001ab, 4) INT_ADD (unique, 0x100001a7, 4) , (unique, 0x10000085, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0xc, 4)
(unique, 0x10000085, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
(unique, 0x100001a7, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x100001ab, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(unique, 0x100001b3, 4) INT_AND (unique, 0x100001af, 4) , (const, 0xfffffffc, 4)
(unique, 0x100001af, 4) CAST (register, 0x8, 4)
(register, 0x4, 4) CAST (unique, 0x100001b3, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x44, 4) , (register, 0x4, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) INT_AND (unique, 0x100001b7, 4) , (const, 0x3, 4)
(unique, 0x100001b7, 4) CAST (register, 0x8, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x482f44, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(register, 0x8, 4) PTRSUB (unique, 0x10000113, 4) , (const, 0x8, 4)
(unique, 0x10000113, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x4c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x10000117, 4) , (const, 0x20, 4)
(unique, 0x10000117, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x58, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)
(unique, 0x1000003f, 8) INT_AND (VARIABLE, 0x0, 8) , (const, 0x1, 8)
(VARIABLE, 0x0, 8) CALL (ram, 0x476c24, 8) , (unique, 0x1000011b, 4)
(register, 0x8, 4) SUBPIECE (unique, 0x100000c7, 8) , (const, 0x0, 4)
(register, 0xc, 4) SUBPIECE (VARIABLE, 0x0, 8) , (const, 0x0, 4)
(unique, 0x100000c7, 8) INT_RIGHT (VARIABLE, 0x0, 8) , (const, 0x20, 4)
(unique, 0x1000011b, 4) CAST (register, 0x8, 4)
(register, 0x78, 4) INT_MULT (register, 0x58, 4) , (const, 0x4, 4)
(register, 0x78, 4) INT_MULT (register, 0x58, 4) , (const, 0x4, 4)
(register, 0x78, 4) INT_MULT (register, 0x58, 4) , (const, 0x4, 4)
(register, 0x10, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)
(unique, 0x10000123, 4) INT_ADD (unique, 0x1000011f, 4) , (unique, 0x10000091, 4)
(register, 0x18, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x10000091, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
(unique, 0x1000011f, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x10000123, 4)
(register, 0x14, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x10, 4) INT_OR (register, 0x14, 4) , (register, 0x10, 4)
(register, 0x4c, 4) INT_RIGHT (unique, 0x10000127, 4) , (const, 0x2, 4)
(unique, 0x10000127, 4) CAST (register, 0x4c, 4)
(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)
(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)
(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x4c, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (register, 0x18, 4)
 ---  CBRANCH (ram, 0x482e70, 1) , (unique, 0x1700, 1)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(unique, 0x10000187, 4) INT_AND (unique, 0x10000183, 4) , (const, 0xfffffffc, 4)
(unique, 0x10000183, 4) CAST (register, 0x8, 4)
(register, 0x4, 4) CAST (unique, 0x10000187, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x44, 4) , (register, 0x4, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) INT_AND (unique, 0x1000018b, 4) , (const, 0x3, 4)
(unique, 0x1000018b, 4) CAST (register, 0x8, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x482d74, 1) , (unique, 0x1700, 1)
(unique, 0x10000036, 1) COPY (const, 0x0, 1)
(unique, 0x10000034, 1) MULTIEQUAL (unique, 0x10000037, 1) , (unique, 0x10000036, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482d74, 1) , (unique, 0x10000035, 1)
(unique, 0x10000035, 1) BOOL_NEGATE (unique, 0x10000034, 1)
(register, 0xc, 4) INT_MULT (register, 0x54, 4) , (const, 0x4, 4)
(unique, 0x1000012f, 4) INT_ADD (unique, 0x1000012b, 4) , (unique, 0x1000009d, 4)
(unique, 0x1000009d, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
(unique, 0x1000012b, 4) CAST (register, 0x10, 4)
(register, 0x54, 4) CAST (unique, 0x1000012f, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x4, 4) LOAD (const, 0x1a1, 4) , (register, 0x54, 4)
(register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x54, 4) , (register, 0x4, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(unique, 0x10000137, 4) INT_ADD (unique, 0x10000133, 4) , (unique, 0x100000a1, 4)
(unique, 0x100000a1, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
(unique, 0x10000133, 4) CAST (register, 0x10, 4)
(register, 0x10, 4) CAST (unique, 0x10000137, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0x8, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)
(unique, 0x100000bd, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482f4c, 1) , (unique, 0x100000bd, 1)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x18, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0x4, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x1, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482ed0, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
 ---  BRANCH (ram, 0x482e30, 1)
(unique, 0x10000037, 1) COPY (const, 0x1, 1)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(unique, 0x1200, 1) INT_EQUAL (unique, 0x1000003f, 8) , (const, 0x0, 8)
(register, 0x8, 4) INT_MULT (register, 0x4c, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x483068, 1) , (unique, 0x1200, 1)
(register, 0x14, 4) COPY (const, 0xffffffff, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)
 ---  CALL (ram, 0x476bc0, 8) , (unique, 0x1000013b, 4) , (register, 0x14, 4)
(unique, 0x1000013b, 4) CAST (register, 0x8, 4)
(register, 0xc, 4) PTRSUB (unique, 0x1000013f, 4) , (const, 0x4, 4)
(unique, 0x1000013f, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x54, 4) , (const, 0x0, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x14, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000a9, 4)
(unique, 0x100000a9, 4) PTRSUB (unique, 0x10000143, 4) , (const, 0x0, 4)
(unique, 0x10000143, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x10, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
 ---  CBRANCH (ram, 0x482f7c, 1) , (unique, 0x1700, 1)
(unique, 0x1600, 1) INT_SLESS (unique, 0x10000147, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x483058, 1) , (unique, 0x1600, 1)
(unique, 0x10000147, 4) CAST (register, 0x14, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7fffffff, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000ad, 4)
(unique, 0x100000ad, 4) PTRSUB (unique, 0x1000014f, 4) , (const, 0x0, 4)
(unique, 0x1000014f, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x4, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000b1, 4) , (register, 0x4, 4)
(unique, 0x100000b1, 4) PTRSUB (unique, 0x10000153, 4) , (const, 0x0, 4)
(unique, 0x10000153, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x7fffffff, 4)
(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x7fffffff, 4)
(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)
 ---  CBRANCH (ram, 0x482fe4, 1) , (unique, 0x5380, 1)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
(register, 0x10, 4) INT_MULT (register, 0x8, 4) , (const, 0x80000000, 4)
(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)
(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x10, 4)
(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)
(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
(register, 0x10, 4) INT_MULT (register, 0x10, 4) , (const, 0x80000000, 4)
(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x10000157, 4) , (const, 0x20, 4)
(unique, 0x10000157, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x5c, 4)
(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)
(register, 0x10, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
(register, 0xc, 4) INT_AND (unique, 0x1000015b, 4) , (const, 0x3, 4)
(unique, 0x1000015b, 4) CAST (register, 0xc, 4)
(unique, 0x1000015f, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)
(register, 0xc, 4) CAST (unique, 0x1000015f, 4)
(register, 0x14, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x44, 4) , (register, 0xc, 4)
(register, 0xc, 4) INT_XOR (unique, 0x10000163, 4) , (unique, 0x10000167, 4)
(unique, 0x10000163, 4) CAST (register, 0xc, 4)
(unique, 0x10000167, 4) CAST (register, 0x14, 4)
(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x483070, 1) , (unique, 0x1700, 1)
(unique, 0x10000177, 4) INT_ADD (unique, 0x10000173, 4) , (unique, 0x10000095, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x10000095, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
(unique, 0x10000173, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x10000177, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
(unique, 0x1000017f, 4) INT_ADD (unique, 0x1000017b, 4) , (unique, 0x10000099, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x482ce0, 1) , (unique, 0x1700, 1)
(unique, 0x10000099, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
(unique, 0x1000017b, 4) CAST (register, 0x10, 4)
(unique, 0x100, 4) CAST (unique, 0x1000017f, 4)
(unique, 0x1600, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000014b, 4)
 ---  CBRANCH (ram, 0x482fa4, 1) , (unique, 0x1600, 1)
(unique, 0x1000014b, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
 ---  BRANCH (ram, 0x482fa4, 1)
(register, 0x14, 4) COPY (const, 0x1, 4)
 ---  BRANCH (ram, 0x482f5c, 1)
(unique, 0x1000016b, 4) INT_OR (register, 0x10, 4) , (const, 0x2, 4)
(register, 0x10, 4) CAST (unique, 0x1000016b, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x10, 4)
 ---  BRANCH (ram, 0x48303c, 1)
(unique, 0x100, 4) PTRSUB (unique, 0x1000016f, 4) , (const, 0x20, 4)
(unique, 0x1000016f, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4)
(register, 0x8, 4) INT_AND (unique, 0x100000f7, 4) , (const, 0xfffffffc, 4)
 ---  CBRANCH (ram, 0x4830f4, 1) , (unique, 0x1200, 1)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)
(unique, 0x100000f7, 4) CAST (register, 0x18, 4)
(unique, 0x100000fb, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)
(register, 0x8, 4) CAST (unique, 0x100000fb, 4)
(register, 0x1c, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x18, 4)
 ---  CBRANCH (ram, 0x4830e0, 1) , (unique, 0x1700, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x44, 4) , (register, 0x8, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) INT_AND (unique, 0x100000ff, 4) , (const, 0x3, 4)
 ---  CBRANCH (ram, 0x483124, 1) , (unique, 0x1700, 1)
(unique, 0x100000cf, 4) COPY (register, 0x1c, 4)
(unique, 0x100000ff, 4) CAST (register, 0x1c, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x482ca4, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x18, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(register, 0x8, 4) INT_AND (unique, 0x10000103, 4) , (const, 0x3, 4)
 ---  BRANCH (ram, 0x4830b4, 1)
(register, 0x18, 4) MULTIEQUAL (unique, 0x100000cf, 4) , (register, 0x18, 4)
(unique, 0x10000103, 4) CAST (register, 0x18, 4)
