Label: 308
Function: __gnu_Unwind_RaiseException
Architecture: arm
Source File: Unknown
Entry Point: 0006f280

High-level P-code:

(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x1000003d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000de, 4) PTRSUB (unique, 0x1000003d, 4) , (const, 0x0, 4)
(unique, 0x8280, 4) PTRADD (unique, 0x100000de, 4) , (const, 0xe, 4) , (const, 0x4, 4)
(register, 0x54, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffe00, 4)
(register, 0x54, 4) PTRSUB (register, 0x54, 4) , (const, 0xfffffe00, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x8280, 4) , (register, 0x2c, 4)
(unique, 0x1000004d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000e6, 4) PTRSUB (unique, 0x1000004d, 4) , (const, 0x0, 4)
(unique, 0x8280, 4) PTRADD (unique, 0x100000e6, 4) , (const, 0xf, 4) , (const, 0x4, 4)
(register, 0x58, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000059, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x10000059, 4) PTRSUB (register, 0x58, 4) , (const, 0x0, 4)
(unique, 0x1000005d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x10000065, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x1000006d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x10000075, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000ee, 4) PTRSUB (unique, 0x1000005d, 4) , (const, 0x0, 4)
(unique, 0x100000f6, 4) PTRSUB (unique, 0x10000065, 4) , (const, 0x0, 4)
(unique, 0x100000fe, 4) PTRSUB (unique, 0x1000006d, 4) , (const, 0x0, 4)
(unique, 0x10000106, 4) PTRSUB (unique, 0x10000075, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x100000ee, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x100000f6, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x100000fe, 4) , (const, 0x3, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000106, 4) , (const, 0x4, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x1000007d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x10000085, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x1000008d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x10000095, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x1000010e, 4) PTRSUB (unique, 0x1000007d, 4) , (const, 0x0, 4)
(unique, 0x10000116, 4) PTRSUB (unique, 0x10000085, 4) , (const, 0x0, 4)
(unique, 0x1000011e, 4) PTRSUB (unique, 0x1000008d, 4) , (const, 0x0, 4)
(unique, 0x10000126, 4) PTRSUB (unique, 0x10000095, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000010e, 4) , (const, 0x5, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000116, 4) , (const, 0x6, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000011e, 4) , (const, 0x7, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000126, 4) , (const, 0x8, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x1000009d, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000a5, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000ad, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000b5, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x1000012e, 4) PTRSUB (unique, 0x1000009d, 4) , (const, 0x0, 4)
(unique, 0x10000136, 4) PTRSUB (unique, 0x100000a5, 4) , (const, 0x0, 4)
(unique, 0x1000013e, 4) PTRSUB (unique, 0x100000ad, 4) , (const, 0x0, 4)
(unique, 0x10000146, 4) PTRSUB (unique, 0x100000b5, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000012e, 4) , (const, 0x9, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000136, 4) , (const, 0xa, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000013e, 4) , (const, 0xb, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000146, 4) , (const, 0xc, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(unique, 0x100000bd, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000c5, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x100000cd, 4) PTRSUB (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x1000014e, 4) PTRSUB (unique, 0x100000bd, 4) , (const, 0x0, 4)
(unique, 0x10000156, 4) PTRSUB (unique, 0x100000c5, 4) , (const, 0x0, 4)
(unique, 0x1000015e, 4) PTRSUB (unique, 0x100000cd, 4) , (const, 0x0, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000014e, 4) , (const, 0xd, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000156, 4) , (const, 0xe, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000015e, 4) , (const, 0xf, 4) , (const, 0x4, 4)
(stack, 0xfffffffffffffe00, 4) COPY (const, 0xffffffff, 4)
(stack, 0xfffffffffffffe00, 4) MULTIEQUAL (stack, 0xfffffffffffffe00, 4) , (stack, 0xfffffffffffffe00, 4)
(stack, 0xfffffffffffffe04, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe04, 4)
(stack, 0xfffffffffffffe08, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe08, 4)
(stack, 0xfffffffffffffe0c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe0c, 4)
(stack, 0xfffffffffffffe10, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe10, 4)
(stack, 0xfffffffffffffe14, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe14, 4)
(stack, 0xfffffffffffffe18, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe18, 4)
(stack, 0xfffffffffffffe1c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe1c, 4)
(stack, 0xfffffffffffffe20, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe20, 4)
(stack, 0xfffffffffffffe24, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe24, 4)
(stack, 0xfffffffffffffe28, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe28, 4)
(stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe2c, 4)
(stack, 0xfffffffffffffe30, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe30, 4)
(stack, 0xfffffffffffffe34, 4) MULTIEQUAL (register, 0x20, 4) , (stack, 0xfffffffffffffe34, 4)
(stack, 0xfffffffffffffe38, 4) MULTIEQUAL (register, 0x24, 4) , (stack, 0xfffffffffffffe38, 4)
(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (register, 0x28, 4) , (stack, 0xfffffffffffffe3c, 4)
(stack, 0xfffffffffffffe40, 4) MULTIEQUAL (register, 0x2c, 4) , (stack, 0xfffffffffffffe40, 4)
(register, 0x20, 4) CALL (ram, 0x6ef74, 8) , (register, 0x20, 4) , (stack, 0xfffffffffffffe40, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x97, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0x97, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6f318, 1) , (register, 0x65, 1)
(unique, 0x100001ae, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x100000d5, 4) PTRSUB (register, 0x20, 4) , (const, 0xc, 4)
(unique, 0x8280, 4) PTRSUB (unique, 0x100000d5, 4) , (const, 0x4, 4)
(register, 0x2c, 4) CAST (unique, 0x100001ae, 4)
(register, 0x20, 4) CALLIND (register, 0x2c, 4) , (const, 0x0, 4) , (register, 0x20, 4) , (register, 0x54, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xb3, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xb3, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x8, 4)
 ---  CBRANCH (ram, 0x6f2cc, 1) , (register, 0x65, 1)
 ---  CALL (ram, 0x6f074, 8) , (register, 0x54, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xc8, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xc8, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x6, 4)
 ---  CBRANCH (ram, 0x6f318, 1) , (register, 0x65, 1)
 ---  CALL (ram, 0x6f0f8, 8) , (register, 0x20, 4) , (register, 0x24, 4)
 ---  RETURN (const, 0x1, 4)
(stack, 0xfffffffffffffe00, 4) INDIRECT (stack, 0xfffffffffffffe00, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe04, 4) INDIRECT (stack, 0xfffffffffffffe04, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe08, 4) INDIRECT (stack, 0xfffffffffffffe08, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe0c, 4) INDIRECT (stack, 0xfffffffffffffe0c, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe10, 4) INDIRECT (stack, 0xfffffffffffffe10, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe14, 4) INDIRECT (stack, 0xfffffffffffffe14, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe18, 4) INDIRECT (stack, 0xfffffffffffffe18, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe1c, 4) INDIRECT (stack, 0xfffffffffffffe1c, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe20, 4) INDIRECT (stack, 0xfffffffffffffe20, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe24, 4) INDIRECT (stack, 0xfffffffffffffe24, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe28, 4) INDIRECT (stack, 0xfffffffffffffe28, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe30, 4) INDIRECT (stack, 0xfffffffffffffe30, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe34, 4) INDIRECT (stack, 0xfffffffffffffe34, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe38, 4) INDIRECT (stack, 0xfffffffffffffe38, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xde, 4)
(stack, 0xfffffffffffffe40, 4) INDIRECT (stack, 0xfffffffffffffe40, 4) , (const, 0xde, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
