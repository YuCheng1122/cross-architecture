Label: 607
Function: __stpcpy
Architecture: mips
Source File: Unknown
Entry Point: 00466a80

High-level P-code:

(unique, 0x10000000, 4) INT_2COMP (unique, 0x10000054, 4)
(unique, 0x10000054, 4) CAST (register, 0x10, 4)
(register, 0x10, 4) INT_AND (unique, 0x10000000, 4) , (const, 0x3, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x10000058, 4) PTRADD (register, 0x10, 4) , (register, 0x10, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x466ac0, 1) , (unique, 0x1200, 1)
(register, 0x10, 4) CAST (unique, 0x10000058, 4)
(unique, 0x10000078, 4) INT_ADD (unique, 0x10000074, 4) , (const, 0x1, 4)
(unique, 0x10000074, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000078, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (unique, 0x1000007c, 4) , (register, 0x10, 4)
(register, 0x28, 4) INT_AND (unique, 0x10000080, 4) , (const, 0x3, 4)
 ---  CBRANCH (ram, 0x466ac8, 1) , (unique, 0x1200, 1)
(unique, 0x10000044, 4) COPY (register, 0x10, 4)
(unique, 0x1000007c, 4) CAST (register, 0x8, 4)
(unique, 0x10000080, 4) CAST (register, 0x14, 4)
(unique, 0x2d00, 1) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x10, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(unique, 0x10000068, 4) INT_ADD (unique, 0x10000064, 4) , (const, 0x1, 4)
(unique, 0x10000064, 4) CAST (register, 0x14, 4)
(register, 0x14, 4) CAST (unique, 0x10000068, 4)
(unique, 0x1700, 1) INT_EQUAL (unique, 0x2d00, 1) , (const, 0x0, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (unique, 0x2d00, 1)
 ---  CBRANCH (ram, 0x466a9c, 1) , (unique, 0x1700, 1)
 ---  RETURN (const, 0x0, 4) , (unique, 0x100000b0, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) COPY (unique, 0x1000006c, 4)
 ---  RETURN (const, 0x0, 4) , (unique, 0x10000070, 4)
(unique, 0x1000006c, 4) CAST (register, 0x8, 4)
(unique, 0x10000070, 4) CAST (register, 0x8, 4)
(unique, 0x100000b0, 4) CAST (register, 0x8, 4)
(register, 0x28, 4) INT_AND (unique, 0x1000005c, 4) , (const, 0x3, 4)
(unique, 0x10000048, 4) COPY (unique, 0x10000060, 4)
(unique, 0x1000005c, 4) CAST (register, 0x14, 4)
(unique, 0x10000060, 4) CAST (register, 0x10, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x466b58, 1) , (unique, 0x1700, 1)
(register, 0x10, 4) MULTIEQUAL (unique, 0x10000044, 4) , (unique, 0x10000048, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1000009c, 4)
(unique, 0x1000009c, 4) CAST (register, 0x14, 4)
(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xfefefeff, 4)
(register, 0x18, 4) INT_NEGATE (register, 0xc, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x80808080, 4)
(unique, 0x10000013, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x466b24, 1) , (unique, 0x10000013, 1)
(unique, 0x1000000f, 4) MULTIEQUAL (register, 0xc, 4) , (register, 0xc, 4)
(unique, 0x10000014, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)
(unique, 0x10000018, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(unique, 0x100000a4, 4) INT_ADD (unique, 0x100000a0, 4) , (const, 0x4, 4)
(unique, 0x100000a0, 4) CAST (unique, 0x10000018, 4)
(register, 0x14, 4) CAST (unique, 0x100000a4, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000014, 4) , (unique, 0x1000000f, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000a8, 4)
(unique, 0x100000a8, 4) CAST (register, 0x14, 4)
(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xfefefeff, 4)
(register, 0x18, 4) INT_NEGATE (register, 0xc, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)
(register, 0x10, 4) PTRADD (unique, 0x10000014, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x14, 4) COPY (const, 0x18, 4)
(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x10, 4) INT_RIGHT (unique, 0x1000000f, 4) , (unique, 0x5780, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x10000014, 4) , (register, 0x8, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x13, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (const, 0x8, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x13, 1) , (const, 0x0, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000ac, 4) , (register, 0x13, 1)
 ---  CBRANCH (ram, 0x466ab8, 1) , (unique, 0x1200, 1)
(unique, 0x100000ac, 4) CAST (register, 0x8, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x14, 4) , (const, 0xfffffff8, 4)
(unique, 0x100000b8, 4) INT_ADD (unique, 0x100000b4, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x466b30, 1) , (unique, 0x1700, 1)
(unique, 0x100000b4, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x100000b8, 4)
 ---  RETURN (const, 0x0, 4) , (unique, 0x100000bc, 4)
(unique, 0x100000bc, 4) CAST (register, 0x8, 4)
(unique, 0x10000088, 4) INT_AND (unique, 0x10000084, 4) , (const, 0xfffffffc, 4)
(unique, 0x10000084, 4) CAST (register, 0x14, 4)
(register, 0x14, 4) CAST (unique, 0x10000088, 4)
(register, 0x28, 4) INT_MULT (register, 0x28, 4) , (const, 0x8, 4)
(register, 0x1c, 4) LOAD (const, 0x1a1, 4) , (register, 0x14, 4)
(register, 0x34, 4) INT_ADD (unique, 0x10000004, 4) , (const, 0x20, 4)
(unique, 0x10000004, 4) INT_MULT (register, 0x28, 4) , (const, 0xfffffff8, 4)
(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_RIGHT (const, 0xffffffff, 4) , (unique, 0x5780, 4)
(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (register, 0x28, 4)
(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xfefefeff, 4)
(register, 0x18, 4) INT_NEGATE (register, 0xc, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x80808080, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x466bf4, 1) , (unique, 0x1700, 1)
(unique, 0x10000034, 4) COPY (register, 0x10, 4)
 ---  BRANCH (ram, 0x466bbc, 1)
(register, 0x8, 4) PTRADD (register, 0x14, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(unique, 0x1000003c, 4) COPY (register, 0x10, 4)
(unique, 0x1000004c, 4) COPY (register, 0x1c, 4)
(register, 0x10, 4) PTRADD (register, 0x10, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0xc, 4)
 ---  CBRANCH (ram, 0x466c28, 1) , (unique, 0x1700, 1)
(register, 0x8, 4) PTRADD (register, 0x8, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x10000040, 4) COPY (register, 0x10, 4)
(unique, 0x10000050, 4) COPY (register, 0x1c, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x10, 4) MULTIEQUAL (unique, 0x1000003c, 4) , (unique, 0x10000040, 4)
(register, 0x1c, 4) MULTIEQUAL (unique, 0x1000004c, 4) , (unique, 0x10000050, 4)
(register, 0x1c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRADD (register, 0x8, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (register, 0x28, 4)
(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
(register, 0x14, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)
(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)
(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0xfefefeff, 4)
(register, 0x30, 4) INT_NEGATE (register, 0xc, 4)
(register, 0x18, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfefefeff, 4)
(register, 0x2c, 4) INT_NEGATE (register, 0x1c, 4)
(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x30, 4)
(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x2c, 4)
(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x80808080, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
(register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x80808080, 4)
 ---  CBRANCH (ram, 0x466bac, 1) , (unique, 0x1200, 1)
(unique, 0x10000038, 4) COPY (register, 0x10, 4)
(register, 0xc, 4) MULTIEQUAL (register, 0xc, 4) , (register, 0xc, 4) , (register, 0xc, 4)
(register, 0x10, 4) MULTIEQUAL (unique, 0x10000034, 4) , (unique, 0x10000038, 4) , (register, 0x10, 4)
(register, 0x14, 4) COPY (const, 0x18, 4)
(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x10, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x8, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x13, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (const, 0x8, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x13, 1) , (const, 0x0, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x1000008c, 4) , (register, 0x13, 1)
 ---  CBRANCH (ram, 0x466ab8, 1) , (unique, 0x1200, 1)
(unique, 0x1000008c, 4) CAST (register, 0x8, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x14, 4) , (const, 0xfffffff8, 4)
(unique, 0x10000094, 4) INT_ADD (unique, 0x10000090, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x466c00, 1) , (unique, 0x1700, 1)
(unique, 0x10000090, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000094, 4)
 ---  RETURN (const, 0x0, 4) , (unique, 0x10000098, 4)
(unique, 0x10000098, 4) CAST (register, 0x8, 4)
(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (register, 0x28, 4)
 ---  BRANCH (ram, 0x466bf4, 1)
