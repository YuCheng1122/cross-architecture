Label: 882
Function: checksum_tcpudp
Architecture: mips
Source File: Unknown
Entry Point: 0040c868

High-level P-code:

(unique, 0x1000001c, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x1000001c, 4)
(unique, 0x10000020, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x10000020, 4)
(stack, 0xffffffffffffffe4, 4) COPY (const, 0x0, 4)
 ---  BRANCH (ram, 0x40c91c, 1)
(unique, 0x10000014, 4) COPY (register, 0x1c, 4)
(unique, 0x10000018, 4) COPY (register, 0x14, 4)
(unique, 0x3300, 2) LOAD (const, 0x1a1, 4) , (stack, 0xffffffffffffffe0, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffe4, 4) , (register, 0x8, 4)
(register, 0x8, 4) PTRADD (stack, 0xffffffffffffffe0, 4) , (const, 0x1, 4) , (const, 0x2, 4)
(register, 0x8, 4) INT_ADD (stack, 0xc, 4) , (const, 0xfffffffe, 4)
(stack, 0xc, 4) MULTIEQUAL (unique, 0x10000014, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (unique, 0x10000018, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (register, 0x8, 4)
(unique, 0x5180, 1) INT_SLESS (const, 0x1, 4) , (stack, 0xc, 4)
 ---  CBRANCH (ram, 0x40c8d8, 1) , (unique, 0x5180, 1)
(unique, 0x1700, 1) INT_EQUAL (stack, 0xc, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x40c964, 1) , (unique, 0x1700, 1)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x10000024, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)
(unique, 0x10000024, 4) CAST (stack, 0xffffffffffffffe0, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffe4, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffe4, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
(unique, 0x10000028, 4) INT_ADD (register, 0x10, 4) , (const, 0x9, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x10000028, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (register, 0x12, 2)
(register, 0x8, 2) INDIRECT (const, 0x0, 2) , (const, 0xad, 4)
(register, 0x8, 4) PIECE (register, 0x8, 2) , (register, 0xa, 2)
(register, 0x12, 2) INT_ZEXT (unique, 0x2f00, 1)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_ZEXT (register, 0x1a, 2)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
 ---  BRANCH (ram, 0x40ca40, 1)
(register, 0xc, 4) INT_AND (stack, 0xffffffffffffffe4, 4) , (const, 0xffff, 4)
(register, 0x8, 4) INT_RIGHT (stack, 0xffffffffffffffe4, 4) , (const, 0x10, 4)
(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_RIGHT (stack, 0xffffffffffffffe4, 4) , (const, 0x10, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x40ca20, 1) , (unique, 0x1700, 1)
(unique, 0x10000009, 2) INT_NEGATE (unique, 0x1000000d, 2)
(register, 0xa, 2) COPY (unique, 0x10000009, 2)
 ---  RETURN (const, 0x0, 4) , (register, 0xa, 2)
(unique, 0x1000000d, 2) SUBPIECE (stack, 0xffffffffffffffe4, 4) , (const, 0x0, 4)
