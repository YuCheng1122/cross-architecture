Label: 36
Function: checksum_tcpudp
Architecture: arm
Source File: Unknown
Entry Point: 0001a3b4

High-level P-code:

(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000030, 4)
(unique, 0x8280, 4) PTRSUB (register, 0x20, 4) , (const, 0xc, 4)
(unique, 0x10000030, 4) PTRSUB (unique, 0x10000050, 4) , (const, 0x0, 4)
(unique, 0x10000050, 4) PTRSUB (unique, 0x8280, 4) , (const, 0x0, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x10000034, 4) PTRSUB (register, 0x20, 4) , (const, 0xc, 4)
(unique, 0x8280, 4) PTRSUB (unique, 0x10000054, 4) , (const, 0x4, 4)
(unique, 0x10000054, 4) PTRSUB (unique, 0x10000034, 4) , (const, 0x0, 4)
(stack, 0xfffffffffffffff0, 4) COPY (const, 0x0, 4)
 ---  BRANCH (ram, 0x1a438, 1)
(unique, 0x10000048, 4) COPY (register, 0x2c, 4)
(unique, 0x1000004c, 4) COPY (unique, 0x10000058, 4)
(unique, 0x10000058, 4) CAST (register, 0x24, 4)
(unique, 0x44100, 2) LOAD (const, 0x1a1, 4) , (stack, 0xfffffffffffffff4, 4)
(register, 0x2c, 4) INT_ZEXT (unique, 0x44100, 2)
(register, 0x2c, 4) INT_ADD (stack, 0xfffffffffffffff0, 4) , (register, 0x2c, 4)
(register, 0x2c, 4) PTRADD (stack, 0xfffffffffffffff4, 4) , (const, 0x1, 4) , (const, 0x2, 4)
(register, 0x2c, 4) INT_ADD (stack, 0xffffffffffffffd0, 4) , (const, 0xfffffffe, 4)
(stack, 0xffffffffffffffd0, 4) MULTIEQUAL (unique, 0x10000048, 4) , (register, 0x2c, 4)
(stack, 0xfffffffffffffff0, 4) MULTIEQUAL (stack, 0xfffffffffffffff0, 4) , (register, 0x2c, 4)
(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (unique, 0x1000004c, 4) , (register, 0x2c, 4)
(unique, 0x2480, 1) INT_SLESS (const, 0x1, 4) , (stack, 0xffffffffffffffd0, 4)
 ---  CBRANCH (ram, 0x1a408, 1) , (unique, 0x2480, 1)
(register, 0x65, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x1a468, 1) , (register, 0x65, 1)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1000005c, 4)
(register, 0x2c, 4) INT_ZEXT (unique, 0x43980, 1)
(unique, 0x1000005c, 4) CAST (stack, 0xfffffffffffffff4, 4)
(register, 0x2c, 4) INT_ADD (stack, 0xfffffffffffffff0, 4) , (register, 0x2c, 4)
(stack, 0xfffffffffffffff0, 4) MULTIEQUAL (stack, 0xfffffffffffffff0, 4) , (register, 0x2c, 4)
(unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x10, 4)
(register, 0x2c, 4) INT_ADD (stack, 0xfffffffffffffff0, 4) , (unique, 0x3b00, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3b00, 4)
(unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x10, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3b00, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x2c, 4) , (const, 0xffff, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x3b00, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x8280, 4) PTRSUB (register, 0x20, 4) , (const, 0x9, 4)
(register, 0x20, 2) CALL (ram, 0x2bbf4, 8) , (register, 0x20, 2)
(register, 0x20, 2) INT_ZEXT (unique, 0x43980, 1)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 2)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x20, 4)
(register, 0x2c, 4) INT_ZEXT (register, 0x28, 2)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x2c, 4)
 ---  BRANCH (ram, 0x1a514, 1)
(unique, 0x3b00, 4) INT_AND (stack, 0xfffffffffffffff0, 4) , (const, 0xffff, 4)
(unique, 0x3b00, 4) INT_RIGHT (stack, 0xfffffffffffffff0, 4) , (const, 0x10, 4)
(register, 0x2c, 4) INT_ADD (unique, 0x3b00, 4) , (unique, 0x3b00, 4)
(stack, 0xfffffffffffffff0, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(unique, 0x3b00, 4) INT_RIGHT (stack, 0xfffffffffffffff0, 4) , (const, 0x10, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x3b00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x1a4f8, 1) , (register, 0x65, 1)
(register, 0x20, 2) INT_NEGATE (unique, 0x10000027, 2)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 2)
(unique, 0x10000027, 2) SUBPIECE (stack, 0xfffffffffffffff0, 4) , (const, 0x0, 4)
