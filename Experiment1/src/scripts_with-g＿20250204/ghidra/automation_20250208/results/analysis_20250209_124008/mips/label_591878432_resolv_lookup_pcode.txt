Label: 591878432
Function: resolv_lookup
Architecture: mips
Source File: Unknown
Entry Point: 0040fb38

High-level P-code:

(unique, 0x1000026d, 4) CALL (ram, 0x400380, 8) , (const, 0x1, 4) , (const, 0x8, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x15, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x15, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x15, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x15, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x15, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x15, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x15, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x15, 4)
(register, 0x8, 4) CAST (unique, 0x1000026d, 4)
 ---  CALL (ram, 0x40f8c0, 8) , (unique, 0x10000271, 4) , (unique, 0x10000275, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x31, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x31, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x31, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x31, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x31, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x31, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x31, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x31, 4)
(unique, 0x10000271, 4) CAST (stack, 0xffffffffffffeee8, 4)
(unique, 0x10000275, 4) CAST (stack, 0xffffffffffffeeec, 4)
(register, 0x8, 4) CALL (ram, 0x410cd0, 8) , (unique, 0x10000279, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x37, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x37, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x37, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x37, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x37, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x37, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x37, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x37, 4)
(unique, 0x10000279, 4) CAST (stack, 0xffffffffffffeee8, 4)
(unique, 0x10000142, 4) INT_ADD (register, 0x8, 4) , (const, 0xd, 4)
(unique, 0x10000146, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffef4c, 4)
(register, 0x8, 4) PTRADD (unique, 0x10000146, 4) , (unique, 0x10000142, 4) , (const, 0x1, 4)
(stack, 0xffffffffffffff4c, 4) PIECE (stack, 0xffffffffffffff4c, 2) , (stack, 0xffffffffffffff4e, 2)
(stack, 0xffffffffffffff4c, 2) COPY (const, 0x0, 2)
(stack, 0xffffffffffffff4e, 2) COPY (const, 0x0, 2)
(stack, 0xffffffffffffff50, 4) COPY (const, 0x0, 4)
(stack, 0xffffffffffffff54, 2) PIECE (stack, 0xffffffffffffff54, 1) , (stack, 0xffffffffffffff55, 1)
(stack, 0xffffffffffffff54, 3) PIECE (stack, 0xffffffffffffff54, 2) , (stack, 0xffffffffffffff56, 1)
(stack, 0xffffffffffffff54, 4) PIECE (stack, 0xffffffffffffff54, 3) , (stack, 0xffffffffffffff57, 1)
(stack, 0xffffffffffffff54, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff55, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff56, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff57, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff58, 2) PIECE (stack, 0xffffffffffffff58, 1) , (stack, 0xffffffffffffff59, 1)
(stack, 0xffffffffffffff58, 3) PIECE (stack, 0xffffffffffffff58, 2) , (stack, 0xffffffffffffff5a, 1)
(stack, 0xffffffffffffff58, 4) PIECE (stack, 0xffffffffffffff58, 3) , (stack, 0xffffffffffffff5b, 1)
(stack, 0xffffffffffffff58, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff59, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff5a, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffff5b, 1) COPY (const, 0x0, 1)
(register, 0x8, 4) CALL (ram, 0x410cd0, 8) , (unique, 0x1000027d, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x57, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x57, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x57, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x57, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x57, 4)
(unique, 0x1000027d, 4) CAST (stack, 0xffffffffffffeee8, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x11, 4)
(stack, 0xffffffffffffef0c, 4) COPY (const, 0x0, 4)
(stack, 0xffffffffffffef10, 4) COPY (const, 0xffffffff, 4)
(register, 0x8, 4) CALL (ram, 0x40f524, 8)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x6b, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x6b, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x6b, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x6b, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x6b, 4)
(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (const, 0xffff, 4)
(register, 0xa, 2) SUBPIECE (register, 0x3000, 4) , (const, 0x0, 4)
 ---  CALL (ram, 0x410fe8, 8) , (stack, 0xffffffffffffeee8, 4) , (unique, 0x10000281, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x7c, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x7c, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x7c, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x7c, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x7c, 4)
(unique, 0x10000281, 4) CAST (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffff4e, 2) SUBPIECE (stack, 0xffffffffffffff4c, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffff4c, 2) COPY (const, 0x2, 2)
(register, 0x8, 4) CALL (ram, 0x422288, 8) , (const, 0x8080808, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x85, 4)
(stack, 0xffffffffffffff4e, 2) INDIRECT (stack, 0xffffffffffffff4e, 2) , (const, 0x85, 4)
(stack, 0xffffffffffffff4c, 2) INDIRECT (stack, 0xffffffffffffff4c, 2) , (const, 0x85, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x85, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x85, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x85, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x35, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (register, 0x8, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff4e, 2) INDIRECT (stack, 0xffffffffffffff4e, 2) , (const, 0x8c, 4)
(stack, 0xffffffffffffff4c, 2) INDIRECT (stack, 0xffffffffffffff4c, 2) , (const, 0x8c, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x8c, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x8c, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x8c, 4)
(stack, 0xffffffffffffff4c, 4) PIECE (stack, 0xffffffffffffff4c, 2) , (stack, 0xffffffffffffff4e, 2)
(stack, 0xffffffffffffff4e, 2) COPY (register, 0xa, 2)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x100, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xa0, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (unique, 0x10000265, 2) , (const, 0xa0, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xa0, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xa0, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xa0, 4)
(unique, 0x10000265, 2) COPY (register, 0xa, 2)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x1, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xac, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0xac, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (register, 0xa, 2) , (const, 0xac, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xac, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xac, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xac, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x1, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xb8, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0xb8, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0xb8, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (register, 0xa, 2) , (const, 0xb8, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xb8, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xb8, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xb8, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000285, 4) , (register, 0xa, 2)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xc1, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xc1, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xc1, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xc1, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xc1, 4)
(unique, 0x10000285, 4) CAST (register, 0x8, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x1, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xc4, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0xc4, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0xc4, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0xc4, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xc4, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xc4, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xc4, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000289, 4) , (register, 0xa, 2)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xcd, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xcd, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xcd, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xcd, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0xcd, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0xcd, 4)
(unique, 0x100001ca, 4) INT_ADD (register, 0x8, 4) , (const, 0xf, 4)
(unique, 0x100001ce, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffef4c, 4)
(unique, 0x100, 4) PTRADD (unique, 0x100001ce, 4) , (unique, 0x100001ca, 4) , (const, 0x1, 4)
(unique, 0x10000289, 4) CAST (unique, 0x100, 4)
 ---  BRANCH (ram, 0x4102dc, 1)
(unique, 0x1000023f, 4) COPY (stack, 0xffffffffffffef0c, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (stack, 0xffffffffffffef10, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x40fcec, 1) , (unique, 0x1200, 1)
 ---  CALL (ram, 0x41f008, 8) , (stack, 0xffffffffffffef10, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x11a, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x11a, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x11a, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x11a, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x11a, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x11a, 4)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffeeec, 4) MULTIEQUAL (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffeef0, 4) MULTIEQUAL (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
(stack, 0xfffffffffffff74c, 2) MULTIEQUAL (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2)
(stack, 0xfffffffffffff752, 2) MULTIEQUAL (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
(register, 0x8, 4) CALL (ram, 0x400350, 8) , (const, 0x2, 4) , (const, 0x1, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x11f, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x11f, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x11f, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x11f, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x11f, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x11f, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x11f, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x40fd28, 1) , (unique, 0x1700, 1)
(unique, 0x10000267, 4) COPY (register, 0xc, 4)
 ---  CALL (ram, 0x41eed8, 8) , (const, 0x1, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x12d, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x12d, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x12d, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x12d, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x12d, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x12d, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x12d, 4)
 ---  BRANCH (ram, 0x4102dc, 1)
(register, 0x8, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff4c, 4)
(register, 0x8, 4) CALL (ram, 0x421988, 8) , (register, 0x8, 4) , (unique, 0x1000028d, 4) , (const, 0x10, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x137, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x137, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x137, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x137, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x137, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x137, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x137, 4)
(unique, 0x1000028d, 4) CAST (register, 0x8, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x40fd64, 1) , (unique, 0x1700, 1)
 ---  CALL (ram, 0x41eed8, 8) , (const, 0x1, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x13e, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x13e, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x13e, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x13e, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x13e, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x13e, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x13e, 4)
 ---  BRANCH (ram, 0x4102dc, 1)
(register, 0xc, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffef4c, 4)
(register, 0x8, 4) CALL (ram, 0x421ec8, 8) , (register, 0x8, 4) , (register, 0xc, 4) , (register, 0x8, 4) , (const, 0x4000, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x14d, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x14d, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x14d, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x14d, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x14d, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x14d, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x14d, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x40fda8, 1) , (unique, 0x1700, 1)
 ---  CALL (ram, 0x41eed8, 8) , (const, 0x1, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x154, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x154, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x154, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x154, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x154, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x154, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x154, 4)
 ---  BRANCH (ram, 0x4102dc, 1)
(register, 0x8, 4) CALL (ram, 0x41f128, 8) , (const, 0x3, 4) , (register, 0x8, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x15d, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x15d, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x15d, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x15d, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x15d, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x15d, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x15d, 4)
(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x80, 4)
 ---  CALL (ram, 0x41f128, 8) , (const, 0x4, 4) , (register, 0x8, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x166, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x166, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x166, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x166, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x166, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x166, 4)
(stack, 0xffffffffffffef18, 4) COPY (const, 0x0, 4)
 ---  BRANCH (ram, 0x40fe10, 1)
(unique, 0x10000162, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff6c, 4)
(unique, 0x10000207, 4) PTRSUB (unique, 0x10000162, 4) , (const, 0x0, 4)
(register, 0x8, 4) PTRADD (unique, 0x10000207, 4) , (stack, 0xffffffffffffef18, 4) , (const, 0x4, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffef18, 4) , (const, 0x1, 4)
(stack, 0xffffffffffffef18, 4) MULTIEQUAL (stack, 0xffffffffffffef18, 4) , (register, 0x8, 4)
(unique, 0x5280, 1) INT_LESS (stack, 0xffffffffffffef18, 4) , (const, 0x20, 4)
 ---  CBRANCH (ram, 0x40fde8, 1) , (unique, 0x5280, 1)
(unique, 0x1300, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x40fe38, 1) , (unique, 0x1300, 1)
(unique, 0x1000023b, 4) COPY (register, 0x8, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_SRIGHT (unique, 0x10000291, 4) , (const, 0x5, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x1000023b, 4) , (register, 0x8, 4)
(unique, 0x10000291, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100001da, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff6c, 4)
(unique, 0x1000020f, 4) PTRSUB (unique, 0x100001da, 4) , (const, 0x0, 4)
(unique, 0x100, 4) PTRADD (unique, 0x1000020f, 4) , (register, 0x8, 4) , (const, 0x4, 4)
(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (register, 0x10, 4)
(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x10, 4)
(unique, 0x100001e6, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff6c, 4)
(unique, 0x10000217, 4) PTRSUB (unique, 0x100001e6, 4) , (const, 0x0, 4)
(unique, 0x100, 4) PTRADD (unique, 0x10000217, 4) , (register, 0x8, 4) , (const, 0x4, 4)
(stack, 0xffffffffffffff5c, 4) COPY (const, 0x5, 4)
(stack, 0xffffffffffffff60, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
(unique, 0x10000295, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff6c, 4)
(register, 0x10, 4) CAST (unique, 0x10000295, 4)
(unique, 0x10000299, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff5c, 4)
(register, 0xc, 4) CAST (unique, 0x10000299, 4)
(register, 0x8, 4) CALL (ram, 0x400360, 8) , (register, 0x8, 4) , (register, 0x10, 4) , (const, 0x0, 4) , (const, 0x0, 4) , (register, 0xc, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x1b2, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x1b2, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x1b2, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x1b2, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x1b2, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x1b2, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x1b2, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x410300, 1) , (unique, 0x1200, 1)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x4102b4, 1) , (unique, 0x1200, 1)
(unique, 0x1300, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x40feec, 1) , (unique, 0x1300, 1)
(unique, 0x10000237, 4) COPY (register, 0x8, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_SRIGHT (unique, 0x1000029d, 4) , (const, 0x5, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x10000237, 4) , (register, 0x8, 4)
(unique, 0x1000029d, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100001f2, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff6c, 4)
(unique, 0x1000021f, 4) PTRSUB (unique, 0x100001f2, 4) , (const, 0x0, 4)
(unique, 0x100, 4) PTRADD (unique, 0x1000021f, 4) , (register, 0x8, 4) , (const, 0x4, 4)
(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0xc, 4) INT_LEFT (const, 0x1, 4) , (register, 0xc, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x41030c, 1) , (unique, 0x1200, 1)
(register, 0xc, 4) PTRSUB (register, 0x74, 4) , (const, 0xfffff74c, 4)
(register, 0x8, 4) CALL (ram, 0x421d48, 8) , (register, 0x8, 4) , (register, 0xc, 4) , (const, 0x800, 4) , (const, 0x4000, 4) , (const, 0x0, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x1f0, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x1f0, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x1f0, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x1f0, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x1f0, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x1f0, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x1f0, 4)
(register, 0x8, 4) CALL (ram, 0x410cd0, 8) , (unique, 0x100002a1, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x1fa, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x1fa, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x1fa, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x1fa, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x1fa, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x1fa, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x1fa, 4)
(unique, 0x100002a1, 4) CAST (stack, 0xffffffffffffeee8, 4)
(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x11, 4)
(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
 ---  CBRANCH (ram, 0x4102c0, 1) , (unique, 0x5380, 1)
(register, 0x8, 4) CALL (ram, 0x410cd0, 8) , (unique, 0x100002a5, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x217, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x217, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x217, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x217, 4)
(stack, 0xfffffffffffff74c, 2) INDIRECT (stack, 0xfffffffffffff74c, 2) , (const, 0x217, 4)
(stack, 0xfffffffffffff752, 2) INDIRECT (stack, 0xfffffffffffff752, 2) , (const, 0x217, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x217, 4)
(unique, 0x100002a5, 4) CAST (stack, 0xffffffffffffeee8, 4)
(unique, 0x10000182, 4) INT_ADD (register, 0x8, 4) , (const, 0x11, 4)
(unique, 0x10000186, 4) PTRSUB (register, 0x74, 4) , (const, 0xfffff74c, 4)
(register, 0x8, 4) PTRADD (unique, 0x10000186, 4) , (unique, 0x10000182, 4) , (const, 0x1, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xa, 2) , (stack, 0xfffffffffffff74c, 2)
 ---  CBRANCH (ram, 0x4102cc, 1) , (unique, 0x1700, 1)
(unique, 0x1200, 1) INT_EQUAL (stack, 0xfffffffffffff752, 2) , (const, 0x0, 2)
 ---  CBRANCH (ram, 0x4102d8, 1) , (unique, 0x1200, 1)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (stack, 0xfffffffffffff752, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x251, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x251, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x251, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x251, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x251, 4)
 ---  BRANCH (ram, 0x410294, 1)
(unique, 0x1000025f, 2) COPY (register, 0xa, 2)
 ---  CALL (ram, 0x40f9ec, 8) , (unique, 0x100002a9, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x271, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x271, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x271, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x271, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x271, 4)
(unique, 0x100002a9, 4) PTRSUB (stack, 0xffffffffffffeee8, 4) , (const, 0x0, 4)
(unique, 0x100002ad, 4) PTRADD (stack, 0xffffffffffffef1c, 4) , (stack, 0xffffffffffffff64, 4) , (const, 0x1, 4)
(register, 0x8, 4) CAST (unique, 0x100002ad, 4)
(unique, 0x1000010a, 2) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x1000010a, 2)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x1, 2)
(register, 0x8, 2) INDIRECT (const, 0x0, 2) , (const, 0x2a4, 4)
(register, 0x8, 4) PIECE (register, 0x8, 2) , (register, 0xa, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x2a4, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x2a4, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x2a4, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x2a4, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x2a4, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x41025c, 1) , (unique, 0x1700, 1)
(unique, 0x100, 4) PTRADD (register, 0x8, 4) , (const, 0x1, 4) , (const, 0x2, 4)
(unique, 0x1000010e, 2) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x1000010e, 2)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (const, 0x1, 2)
(register, 0x8, 2) INDIRECT (const, 0x0, 2) , (const, 0x2ba, 4)
(register, 0x8, 4) PIECE (register, 0x8, 2) , (register, 0xa, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x2ba, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x2ba, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x2ba, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x2ba, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x2ba, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x41025c, 1) , (unique, 0x1700, 1)
(unique, 0x100, 4) PTRADD (register, 0x8, 4) , (const, 0x4, 4) , (const, 0x2, 4)
(unique, 0x10000112, 2) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (unique, 0x10000112, 2)
(register, 0x8, 2) INDIRECT (const, 0x0, 2) , (const, 0x2d0, 4)
(register, 0x8, 4) PIECE (register, 0x8, 2) , (register, 0xa, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x2d0, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x2d0, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x2d0, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x2d0, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x2d0, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x410210, 1) , (unique, 0x1700, 1)
(stack, 0xffffffffffffef14, 4) COPY (const, 0x0, 4)
 ---  BRANCH (ram, 0x410164, 1)
(unique, 0x100002c1, 4) INT_ADD (unique, 0x100002bd, 4) , (unique, 0x10000196, 4)
(unique, 0x10000196, 4) INT_ADD (stack, 0xffffffffffffef14, 4) , (const, 0xa, 4)
(unique, 0x100002bd, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x100002c1, 4)
(unique, 0x2d00, 1) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (unique, 0x2d00, 1)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x367, 4)
(unique, 0x100001fe, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffff68, 4)
(unique, 0x100, 4) PTRADD (unique, 0x100001fe, 4) , (stack, 0xffffffffffffef14, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffef14, 4) , (const, 0x1, 4)
(stack, 0xffffffffffffef14, 4) MULTIEQUAL (stack, 0xffffffffffffef14, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
(unique, 0x5180, 1) INT_SLESS (stack, 0xffffffffffffef14, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x410128, 1) , (unique, 0x5180, 1)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (register, 0x8, 4) , (const, 0x4, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100001aa, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)
(unique, 0x100001aa, 4) PTRSUB (register, 0x8, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4)
(unique, 0x100002c5, 4) CALL (ram, 0x4003e0, 8) , (register, 0xc, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x2fd, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x2fd, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x2fd, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x2fd, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x2fd, 4)
(register, 0x8, 4) CAST (unique, 0x100002c5, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
(unique, 0x100, 4) PTRSUB (register, 0x8, 4) , (const, 0x4, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (register, 0x8, 4) , (const, 0x4, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100001b6, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)
(unique, 0x100001b6, 4) PTRSUB (register, 0x8, 4) , (const, 0x0, 4)
(register, 0x17, 1) INT_ADD (unique, 0x2f00, 1) , (const, 0x1, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100001ba, 4) , (register, 0x17, 1)
(unique, 0x100001ba, 4) PTRSUB (register, 0x8, 4) , (const, 0x0, 4)
(unique, 0x100002c9, 4) PTRADD (register, 0xc, 4) , (register, 0x8, 4) , (const, 0x4, 4)
(register, 0x8, 4) CAST (unique, 0x100002c9, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x8, 4) , (stack, 0xffffffffffffff68, 4)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffeeec, 4) MULTIEQUAL (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffeef0, 4) MULTIEQUAL (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
(unique, 0x100, 4) PTRADD (register, 0x8, 4) , (const, 0x4, 4) , (const, 0x2, 4)
(unique, 0x1000011a, 2) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (unique, 0x1000011a, 2)
(register, 0x8, 2) INDIRECT (const, 0x0, 2) , (const, 0x343, 4)
(register, 0x8, 4) PIECE (register, 0x8, 2) , (register, 0xa, 2)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x343, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x343, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x343, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x343, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x343, 4)
(unique, 0x100002d1, 4) INT_ADD (unique, 0x100002cd, 4) , (unique, 0x1000018e, 4)
(unique, 0x1000018e, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)
(unique, 0x100002cd, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x100002d1, 4)
 ---  BRANCH (ram, 0x410294, 1)
(unique, 0x10000261, 2) COPY (register, 0xe, 2)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffeeec, 4) MULTIEQUAL (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffeef0, 4) MULTIEQUAL (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
 ---  CALL (ram, 0x40f9ec, 8) , (unique, 0x100002b1, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffeeec, 4) INDIRECT (stack, 0xffffffffffffeeec, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffeef0, 4) INDIRECT (stack, 0xffffffffffffeef0, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x37a, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x37a, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x37a, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x37a, 4)
(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x37a, 4)
(unique, 0x100002b1, 4) PTRSUB (stack, 0xffffffffffffeee8, 4) , (const, 0x0, 4)
(unique, 0x100002b9, 4) INT_ADD (unique, 0x100002b5, 4) , (unique, 0x10000192, 4)
(unique, 0x10000192, 4) INT_ADD (stack, 0xffffffffffffff64, 4) , (const, 0xa, 4)
(unique, 0x100002b5, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x100002b9, 4)
(unique, 0x10000263, 2) COPY (register, 0xe, 2)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffeeec, 4) MULTIEQUAL (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffeef0, 4) MULTIEQUAL (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffef1c, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffef20, 2) MULTIEQUAL (unique, 0x1000025f, 2) , (unique, 0x10000261, 2) , (unique, 0x10000263, 2)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
(register, 0xe, 2) INT_SUB (stack, 0xffffffffffffef20, 2) , (const, 0x1, 2)
(unique, 0x1700, 1) INT_NOTEQUAL (stack, 0xffffffffffffef20, 2) , (const, 0x0, 2)
 ---  CBRANCH (ram, 0x410014, 1) , (unique, 0x1700, 1)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffeeec, 4) MULTIEQUAL (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4) , (stack, 0xffffffffffffeeec, 4)
(stack, 0xffffffffffffeef0, 4) MULTIEQUAL (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4) , (stack, 0xffffffffffffeef0, 4)
(stack, 0xffffffffffffef0c, 4) MULTIEQUAL (unique, 0x1000023f, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4) , (unique, 0x10000267, 4)
(stack, 0xffffffffffffef10, 4) MULTIEQUAL (stack, 0xffffffffffffef10, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
(stack, 0xfffffffffffff74c, 2) MULTIEQUAL (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2) , (stack, 0xfffffffffffff74c, 2)
(stack, 0xfffffffffffff752, 2) MULTIEQUAL (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2) , (stack, 0xfffffffffffff752, 2)
(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)
(register, 0xc, 4) INT_ADD (stack, 0xffffffffffffef0c, 4) , (const, 0x1, 4)
(unique, 0x5180, 1) INT_SLESS (const, 0x4, 4) , (stack, 0xffffffffffffef0c, 4)
 ---  CBRANCH (ram, 0x40fcd0, 1) , (unique, 0x5180, 1)
(stack, 0xffffffffffffeee8, 4) MULTIEQUAL (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffef10, 4) MULTIEQUAL (register, 0x8, 4) , (stack, 0xffffffffffffef10, 4) , (register, 0x8, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)
(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)
(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)
(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)
(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)
(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)
(stack, 0xffffffffffffef4c, 2) MULTIEQUAL (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2) , (stack, 0xffffffffffffef4c, 2)
(stack, 0xffffffffffffef4e, 2) MULTIEQUAL (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2) , (stack, 0xffffffffffffef4e, 2)
(stack, 0xffffffffffffef50, 2) MULTIEQUAL (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2) , (stack, 0xffffffffffffef50, 2)
 ---  CALL (ram, 0x41f008, 8) , (stack, 0xffffffffffffef10, 4)
(stack, 0xffffffffffffeee8, 4) INDIRECT (stack, 0xffffffffffffeee8, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xe2, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0xe2, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0xe2, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0xe2, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100001c6, 4)
(unique, 0x100001c6, 4) PTRSUB (register, 0x8, 4) , (const, 0x0, 4)
(unique, 0x1200, 1) INT_EQUAL (unique, 0x2f00, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x410340, 1) , (unique, 0x1200, 1)
 ---  CALL (ram, 0x41036c, 8) , (stack, 0xffffffffffffeee8, 4)
(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x10c, 4)
(stack, 0xffffffffffffef4c, 2) INDIRECT (stack, 0xffffffffffffef4c, 2) , (const, 0x10c, 4)
(stack, 0xffffffffffffef4e, 2) INDIRECT (stack, 0xffffffffffffef4e, 2) , (const, 0x10c, 4)
(stack, 0xffffffffffffef50, 2) INDIRECT (stack, 0xffffffffffffef50, 2) , (const, 0x10c, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
