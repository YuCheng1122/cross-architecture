Label: 213074136
Function: __gnu_unwind_execute
Architecture: arm
Source File: Unknown
Entry Point: 0006ff10

High-level P-code:

(register, 0x3c, 4) COPY (const, 0x0, 4)
(register, 0x3c, 4) MULTIEQUAL (register, 0x3c, 4) , (register, 0x3c, 4) , (register, 0x3c, 4) , (register, 0x3c, 4)
(ram, 0x702d0, 4) MULTIEQUAL (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4)
(ram, 0x702d4, 4) MULTIEQUAL (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4)
(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 1)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x2c, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x2c, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0xb0, 4)
 ---  CBRANCH (ram, 0x6ff80, 1) , (register, 0x65, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x3c, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6ff74, 1) , (register, 0x65, 1)
(register, 0x30, 4) PTRSUB (register, 0x54, 4) , (const, 0xffffffd8, 4)
 ---  CALL (ram, 0x6f3f8, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (const, 0xe, 4) , (const, 0x0, 4) , (register, 0x30, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x70, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x70, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x70, 4)
 ---  CALL (ram, 0x6f47c, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (const, 0xf, 4) , (const, 0x0, 4) , (register, 0x30, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x83, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x83, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x83, 4)
(ram, 0x702d0, 4) MULTIEQUAL (ram, 0x702d0, 4) , (ram, 0x702d0, 4)
(ram, 0x702d4, 4) MULTIEQUAL (ram, 0x702d4, 4) , (ram, 0x702d4, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
(register, 0x20, 4) COPY (const, 0x0, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
(register, 0x20, 4) COPY (const, 0x9, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x10000081, 1) , (const, 0x0, 1)
(unique, 0x10000081, 1) INT_AND (register, 0x20, 1) , (const, 0x80, 1)
 ---  CBRANCH (ram, 0x6ffe0, 1) , (register, 0x65, 1)
(register, 0x44, 4) PTRSUB (register, 0x54, 4) , (const, 0xffffffd8, 4)
 ---  CALL (ram, 0x6f3f8, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (const, 0xd, 4) , (const, 0x0, 4) , (register, 0x44, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0xf6, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0xf6, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0xf6, 4)
(register, 0x40, 4) INT_MULT (unique, 0x100000dc, 4) , (const, 0x4, 4)
(unique, 0x100000dc, 4) INT_AND (register, 0x20, 4) , (const, 0x3f, 4)
(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x10000082, 1) , (const, 0x0, 1)
(unique, 0x10000082, 1) INT_AND (register, 0x20, 1) , (const, 0x40, 1)
 ---  CBRANCH (ram, 0x6ffbc, 1) , (register, 0x65, 1)
(register, 0x40, 4) INT_ADD (stack, 0xffffffffffffffd8, 4) , (unique, 0x100000f5, 4)
(unique, 0x10000083, 4) INT_2COMP (register, 0x40, 4)
(unique, 0x100000f5, 4) MULTIEQUAL (unique, 0x10000083, 4) , (register, 0x40, 4)
(ram, 0x702d0, 4) MULTIEQUAL (ram, 0x702d0, 4) , (ram, 0x702d0, 4)
(ram, 0x702d4, 4) MULTIEQUAL (ram, 0x702d4, 4) , (ram, 0x702d4, 4)
(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (register, 0x40, 4) , (stack, 0xffffffffffffffd8, 4)
(stack, 0xffffffffffffffd0, 4) PTRSUB (register, 0x54, 4) , (const, 0xffffffd8, 4)
 ---  CALL (ram, 0x6f47c, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (const, 0xd, 4) , (const, 0x0, 4) , (stack, 0xffffffffffffffd0, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x151, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x151, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x151, 4)
 ---  BRANCH (ram, 0x6ff24, 1)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (const, 0xf0, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x80, 4)
 ---  CBRANCH (ram, 0x7003c, 1) , (register, 0x65, 1)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x17d, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x17d, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x17d, 4)
(register, 0x20, 4) INT_ZEXT (unique, 0x100000f0, 2)
(unique, 0x100000f0, 2) PIECE (register, 0x20, 1) , (register, 0x20, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x8000, 4)
 ---  CBRANCH (ram, 0x7000c, 1) , (register, 0x65, 1)
(unique, 0x3580, 4) INT_LEFT (register, 0x20, 4) , (const, 0x4, 4)
(register, 0x28, 4) INT_AND (ram, 0x702d0, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) CALL (ram, 0x6f980, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (register, 0x28, 4) , (const, 0x0, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x1c7, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x1c7, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x1c7, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (register, 0x65, 1)
(unique, 0x3580, 4) INT_LEFT (register, 0x20, 4) , (const, 0x14, 4)
(unique, 0x3b00, 4) INT_RIGHT (unique, 0x3580, 4) , (const, 0x1f, 4)
(register, 0x3c, 4) INT_OR (register, 0x3c, 4) , (unique, 0x3b00, 4)
 ---  BRANCH (ram, 0x6ff24, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x90, 4)
 ---  CBRANCH (ram, 0x70074, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (const, 0xd, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0xd, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (register, 0x65, 1)
(register, 0x40, 4) PTRSUB (register, 0x54, 4) , (const, 0xffffffd8, 4)
(register, 0x28, 4) INT_AND (register, 0x20, 4) , (const, 0xf, 4)
 ---  CALL (ram, 0x6f3f8, 8) , (register, 0x20, 4) , (const, 0x0, 4) , (register, 0x28, 4) , (const, 0x0, 4) , (register, 0x40, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x247, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x247, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x247, 4)
 ---  BRANCH (ram, 0x6ffc8, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0xa0, 4)
 ---  CBRANCH (ram, 0x700a4, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0x7, 4)
(unique, 0x5e80, 4) INT_SRIGHT (const, 0xff0, 4) , (register, 0x2c, 4)
(register, 0x28, 4) INT_AND (unique, 0x5e80, 4) , (const, 0xff0, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x1000009f, 1) , (const, 0x0, 1)
(unique, 0x1000009f, 1) INT_AND (register, 0x20, 1) , (const, 0x8, 1)
 ---  CBRANCH (ram, 0x70098, 1) , (register, 0x65, 1)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x4000, 4)
(register, 0x2c, 4) COPY (const, 0x0, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(unique, 0x1000012a, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0xb0, 4)
 ---  CBRANCH (ram, 0x701d4, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0xb1, 4)
(register, 0x28, 4) INT_ADD (ram, 0x702d4, 4) , (const, 0x700bc, 4)
(unique, 0x1f00, 1) INT_LESS (register, 0x2c, 4) , (const, 0x5, 4)
 ---  CBRANCH (ram, 0x701b4, 1) , (unique, 0x1f00, 1)
(unique, 0x1000013a, 4) INT_ADD (register, 0x28, 4) , (register, 0x2c, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(register, 0x2c, 4) INT_ZEXT (unique, 0x43980, 1)
(unique, 0x8480, 4) CAST (unique, 0x1000013a, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x2c, 4) , (const, 0x4, 4)
(unique, 0x1000013e, 4) INT_ADD (unique, 0x3580, 4) , (const, 0x700cc, 4)
(register, 0x20, 4) CALLIND (unique, 0x40780, 4)
 ---  RETURN (const, 0x1, 4) , (register, 0x20, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x324, 4)
(ram, 0x702d0, 4) COPY (ram, 0x702d0, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x324, 4)
(ram, 0x702d4, 4) COPY (ram, 0x702d4, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x324, 4)
(unique, 0x40780, 4) CAST (unique, 0x1000013e, 4)
(register, 0x28, 4) INT_OR (register, 0x20, 4) , (register, 0x28, 4)
 ---  BRANCH (ram, 0x7009c, 1)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x2c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x10000122, 4) , (unique, 0x10000126, 4) , (unique, 0x1000012a, 4) , (unique, 0x1000012e, 4) , (unique, 0x10000132, 4) , (unique, 0x10000136, 4)
(ram, 0x702d0, 4) MULTIEQUAL (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4)
(ram, 0x702d4, 4) MULTIEQUAL (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4)
(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)
(register, 0x20, 4) CALL (ram, 0x6f980, 8) , (register, 0x20, 4) , (register, 0x24, 4) , (register, 0x28, 4) , (register, 0x2c, 4)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x2c6, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x2c6, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x2c6, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x6ff24, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (const, 0xfc, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0xb4, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (register, 0x65, 1)
(register, 0x28, 4) INT_AND (register, 0x20, 4) , (const, 0x7, 4)
(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
(register, 0x2c, 4) COPY (const, 0x1, 4)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x80000, 4)
 ---  BRANCH (ram, 0x7009c, 1)
(unique, 0x1000012e, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0xc0, 4)
 ---  CBRANCH (ram, 0x702b0, 1) , (register, 0x65, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0xc6, 4)
 ---  CBRANCH (ram, 0x70204, 1) , (register, 0x65, 1)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 1)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x399, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x399, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x399, 4)
(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xf, 4)
(register, 0x2c, 4) COPY (const, 0x3, 4)
(register, 0x28, 4) INT_LEFT (unique, 0x100000e4, 4) , (const, 0xc, 4)
(unique, 0x100000e4, 4) INT_AND (register, 0x20, 4) , (const, 0xf0, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
(unique, 0x10000132, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0xc7, 4)
 ---  CBRANCH (ram, 0x70234, 1) , (register, 0x65, 1)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 1)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x3f0, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x3f0, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x3f0, 4)
(register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0xff, 4)
(unique, 0x1f00, 1) INT_LESS (const, 0xe, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (unique, 0x1f00, 1)
(register, 0x2c, 4) COPY (const, 0x0, 4)
(register, 0x24, 4) COPY (const, 0x4, 4)
 ---  BRANCH (ram, 0x70180, 1)
(unique, 0x10000122, 4) COPY (register, 0x2c, 4)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (const, 0xf8, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0xc0, 4)
 ---  CBRANCH (ram, 0x70254, 1) , (register, 0x65, 1)
(register, 0x28, 4) INT_AND (register, 0x20, 4) , (const, 0xf, 4)
(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
(register, 0x2c, 4) COPY (const, 0x3, 4)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xa0000, 4)
 ---  BRANCH (ram, 0x7009c, 1)
(unique, 0x10000136, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0xc8, 4)
 ---  CBRANCH (ram, 0x70284, 1) , (register, 0x65, 1)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 1)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x499, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x499, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x499, 4)
(register, 0x28, 4) INT_AND (register, 0x20, 4) , (const, 0xf0, 4)
(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xf, 4)
(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x10, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x28, 4) , (const, 0x1000, 4)
(register, 0x28, 4) INT_OR (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x24, 4) COPY (const, 0x1, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) COPY (const, 0x5, 4)
(ram, 0x702d0, 4) MULTIEQUAL (ram, 0x702d0, 4) , (ram, 0x702d0, 4) , (ram, 0x702d0, 4)
(ram, 0x702d4, 4) MULTIEQUAL (ram, 0x702d4, 4) , (ram, 0x702d4, 4) , (ram, 0x702d4, 4)
(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)
 ---  BRANCH (ram, 0x70180, 1)
(unique, 0x10000126, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0xc9, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (register, 0x65, 1)
(register, 0x20, 1) CALL (ram, 0x6fe7c, 8) , (register, 0x24, 4)
(register, 0x20, 4) INT_ZEXT (register, 0x20, 1)
(ram, 0x702d0, 4) INDIRECT (ram, 0x702d0, 4) , (const, 0x501, 4)
(ram, 0x702d4, 4) INDIRECT (ram, 0x702d4, 4) , (const, 0x501, 4)
(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x501, 4)
(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xf, 4)
(register, 0x28, 4) INT_LEFT (unique, 0x100000ec, 4) , (const, 0xc, 4)
(unique, 0x100000ec, 4) INT_AND (register, 0x20, 4) , (const, 0xf0, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x28, 4) INT_OR (register, 0x20, 4) , (register, 0x28, 4)
 ---  BRANCH (ram, 0x7027c, 1)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (const, 0xf8, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0xd0, 4)
 ---  CBRANCH (ram, 0x70004, 1) , (register, 0x65, 1)
(register, 0x28, 4) INT_AND (register, 0x20, 4) , (const, 0x7, 4)
(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x80000, 4)
 ---  BRANCH (ram, 0x7027c, 1)
