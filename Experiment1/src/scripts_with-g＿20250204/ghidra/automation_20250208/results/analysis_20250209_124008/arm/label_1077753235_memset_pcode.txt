Label: 1077753235
Function: memset
Architecture: arm
Source File: Unknown
Entry Point: 00028180

High-level P-code:

(register, 0x66, 1) INT_LESS (const, 0x7, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x281d4, 1) , (register, 0x66, 1)
(unique, 0x10000092, 4) COPY (unique, 0x100000a6, 4)
(unique, 0x100000a6, 4) CAST (register, 0x20, 4)
(unique, 0x74000, 4) INT_AND (unique, 0x100000aa, 4) , (const, 0x3, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x10000092, 4) , (register, 0x2c, 4)
(unique, 0x100000aa, 4) CAST (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x28194, 1) , (register, 0x65, 1)
(unique, 0x100000b6, 4) INT_ADD (unique, 0x100000b2, 4) , (const, 0x1, 4)
(unique, 0x70d00, 1) SUBPIECE (register, 0x24, 4) , (const, 0x0, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000ae, 4) , (unique, 0x70d00, 1)
(unique, 0x100000ae, 4) CAST (register, 0x2c, 4)
(unique, 0x100000b2, 4) CAST (register, 0x2c, 4)
(register, 0x2c, 4) CAST (unique, 0x100000b6, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
(register, 0x24, 4) INT_AND (register, 0x24, 4) , (const, 0xff, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x8, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (unique, 0x3580, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (unique, 0x3580, 4)
(register, 0x66, 1) INT_LESS (const, 0x7, 4) , (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x8, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x80, 4)
 ---  CBRANCH (ram, 0x281b4, 1) , (register, 0x66, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x2c, 4) , (register, 0x24, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x24, 4)
(register, 0x80, 4) PTRADD (register, 0x2c, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x2c, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(unique, 0x1000007a, 4) COPY (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x10, 4)
(unique, 0x10000024, 1) INT_LESS (const, 0x7, 4) , (register, 0x28, 4)
(unique, 0x1000007e, 4) COPY (register, 0x28, 4)
 ---  CBRANCH (ram, 0x281bc, 1) , (unique, 0x1000004d, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000032, 4) , (register, 0x24, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x24, 4)
(unique, 0x10000082, 4) MULTIEQUAL (unique, 0x1000007a, 4) , (unique, 0x1000007e, 4)
(register, 0x62, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000024, 1)
(unique, 0x10000032, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x80, 4)
(unique, 0x1000004d, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000024, 1)
(register, 0x80, 4) PTRADD (unique, 0x10000032, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000032, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x28, 4) COPY (unique, 0x10000082, 4)
(register, 0x66, 1) INT_LESS (const, 0x7, 4) , (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x8, 4)
 ---  CBRANCH (ram, 0x281c4, 1) , (register, 0x62, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000036, 4) , (register, 0x24, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x24, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x62, 1) , (register, 0x66, 1)
(unique, 0x10000036, 4) MULTIEQUAL (unique, 0x10000032, 4) , (register, 0x80, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000036, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x10000036, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x66, 1) INT_LESS (const, 0x7, 4) , (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x8, 4)
 ---  CBRANCH (ram, 0x281cc, 1) , (unique, 0x10000058, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x1000003a, 4) , (register, 0x24, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x24, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x62, 1) , (register, 0x66, 1)
(unique, 0x1000003a, 4) MULTIEQUAL (unique, 0x10000036, 4) , (register, 0x80, 4)
(unique, 0x10000058, 1) BOOL_NEGATE (register, 0x62, 1)
(register, 0x80, 4) PTRADD (unique, 0x1000003a, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (unique, 0x1000003a, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7, 4)
(register, 0x66, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x10000092, 4) , (unique, 0x1000003a, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x281dc, 1) , (register, 0x66, 1)
(unique, 0x100000be, 4) INT_ADD (unique, 0x100000ba, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000c2, 4) , (unique, 0x70d00, 1)
(unique, 0x70d00, 1) SUBPIECE (register, 0x24, 4) , (const, 0x0, 4)
(unique, 0x10000086, 4) COPY (register, 0x28, 4)
(unique, 0x1000009a, 4) COPY (register, 0x2c, 4)
(unique, 0x100000ba, 4) CAST (register, 0x2c, 4)
(register, 0x2c, 4) CAST (unique, 0x100000be, 4)
(unique, 0x100000c2, 4) CAST (register, 0x2c, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x2, 4)
(unique, 0x10000027, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)
(unique, 0x1000008a, 4) COPY (register, 0x28, 4)
 ---  CBRANCH (ram, 0x281e4, 1) , (unique, 0x10000053, 1)
(unique, 0x100000ca, 4) INT_ADD (unique, 0x100000c6, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000ce, 4) , (unique, 0x70d00, 1)
(unique, 0x1000008e, 4) MULTIEQUAL (unique, 0x10000086, 4) , (unique, 0x1000008a, 4)
(register, 0x62, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000027, 1)
(unique, 0x1000003e, 4) MULTIEQUAL (unique, 0x1000009a, 4) , (register, 0x2c, 4)
(unique, 0x10000053, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000027, 1)
(register, 0x28, 4) COPY (unique, 0x1000008e, 4)
(unique, 0x1000009e, 4) COPY (unique, 0x1000003e, 4)
(unique, 0x100000c6, 4) CAST (unique, 0x1000003e, 4)
(register, 0x2c, 4) CAST (unique, 0x100000ca, 4)
(unique, 0x100000ce, 4) CAST (unique, 0x1000003e, 4)
(register, 0x66, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x281ec, 1) , (register, 0x62, 1)
(unique, 0x100000d6, 4) INT_ADD (unique, 0x100000d2, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000da, 4) , (unique, 0x70d00, 1)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x62, 1) , (register, 0x66, 1)
(unique, 0x10000042, 4) MULTIEQUAL (unique, 0x1000009e, 4) , (register, 0x2c, 4)
(unique, 0x100000a2, 4) COPY (unique, 0x10000042, 4)
(unique, 0x100000d2, 4) CAST (unique, 0x10000042, 4)
(register, 0x2c, 4) CAST (unique, 0x100000d6, 4)
(unique, 0x100000da, 4) CAST (unique, 0x10000042, 4)
(register, 0x66, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x281f4, 1) , (unique, 0x10000059, 1)
(unique, 0x100000e2, 4) INT_ADD (unique, 0x100000de, 4) , (const, 0x1, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000e6, 4) , (unique, 0x70d00, 1)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x62, 1) , (register, 0x66, 1)
(unique, 0x10000046, 4) MULTIEQUAL (unique, 0x100000a2, 4) , (register, 0x2c, 4)
(unique, 0x10000059, 1) BOOL_NEGATE (register, 0x62, 1)
(unique, 0x100000de, 4) CAST (unique, 0x10000046, 4)
(register, 0x2c, 4) CAST (unique, 0x100000e2, 4)
(unique, 0x100000e6, 4) CAST (unique, 0x10000046, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
