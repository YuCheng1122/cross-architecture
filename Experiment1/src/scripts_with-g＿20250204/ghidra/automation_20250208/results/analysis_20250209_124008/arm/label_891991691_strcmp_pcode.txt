Label: 891991691
Function: strcmp
Architecture: arm
Source File: Unknown
Entry Point: 0003c5c4

High-level P-code:

(unique, 0x10000014, 4) INT_2COMP (unique, 0x100000bc, 4)
(unique, 0x100000bc, 4) CAST (register, 0x20, 4)
(register, 0x58, 4) INT_AND (unique, 0x10000014, 4) , (const, 0x3, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c7f8, 1) , (register, 0x65, 1)
(unique, 0x100000c0, 4) PTRADD (register, 0x20, 4) , (register, 0x58, 4) , (const, 0x1, 4)
(unique, 0x1000009c, 4) COPY (unique, 0x100000c4, 4)
(unique, 0x100000a4, 4) COPY (unique, 0x100000c8, 4)
(register, 0x58, 4) CAST (unique, 0x100000c0, 4)
(unique, 0x100000c4, 4) CAST (register, 0x24, 4)
(unique, 0x100000c8, 4) CAST (register, 0x20, 4)
(unique, 0x100000d0, 4) INT_ADD (unique, 0x100000cc, 4) , (const, 0x1, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100000d4, 4)
(register, 0x2c, 4) INT_ZEXT (unique, 0x43980, 1)
(register, 0x24, 4) MULTIEQUAL (unique, 0x1000009c, 4) , (unique, 0x100000a0, 4)
(register, 0x50, 4) MULTIEQUAL (unique, 0x100000a4, 4) , (unique, 0x100000a8, 4)
(unique, 0x100000cc, 4) CAST (register, 0x24, 4)
(register, 0x24, 4) CAST (unique, 0x100000d0, 4)
(unique, 0x100000d4, 4) CAST (register, 0x24, 4)
(unique, 0x100000dc, 4) INT_ADD (unique, 0x100000d8, 4) , (const, 0x1, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100000e0, 4)
(register, 0x28, 4) INT_ZEXT (unique, 0x43980, 1)
(unique, 0x100000d8, 4) CAST (register, 0x50, 4)
(register, 0x50, 4) CAST (unique, 0x100000dc, 4)
(unique, 0x100000e0, 4) CAST (register, 0x50, 4)
(register, 0x20, 4) INT_SUB (register, 0x28, 4) , (register, 0x2c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
(register, 0x2c, 1) BOOL_OR (register, 0x65, 1) , (register, 0x65, 1)
 ---  CBRANCH (ram, 0x3c600, 1) , (register, 0x2c, 1)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x50, 4) , (register, 0x58, 4)
 ---  CBRANCH (ram, 0x3c5dc, 1) , (register, 0x65, 1)
(unique, 0x100000a0, 4) COPY (unique, 0x100000e4, 4)
(unique, 0x100000a8, 4) COPY (register, 0x50, 4)
(unique, 0x100000b8, 4) COPY (unique, 0x100000e8, 4)
(unique, 0x100000e4, 4) CAST (register, 0x24, 4)
(unique, 0x100000e8, 4) CAST (register, 0x58, 4)
(register, 0x30, 4) INT_AND (unique, 0x100000ec, 4) , (const, 0x3, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x58, 4) MULTIEQUAL (unique, 0x100000b8, 4) , (register, 0x20, 4)
(unique, 0x100000ec, 4) CAST (register, 0x24, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000f8, 4)
(unique, 0x100000f4, 4) INT_ADD (unique, 0x100000f0, 4) , (const, 0x4, 4)
(unique, 0x100000f0, 4) CAST (register, 0x58, 4)
(register, 0x58, 4) CAST (unique, 0x100000f4, 4)
(unique, 0x100000f8, 4) CAST (register, 0x58, 4)
 ---  CBRANCH (ram, 0x3c654, 1) , (register, 0x65, 1)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000fc, 4)
(unique, 0x10000104, 4) INT_ADD (unique, 0x10000100, 4) , (const, 0x4, 4)
(unique, 0x100000fc, 4) CAST (register, 0x24, 4)
(unique, 0x10000100, 4) CAST (register, 0x24, 4)
(register, 0x24, 4) CAST (unique, 0x10000104, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x3c740, 1) , (register, 0x65, 1)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x58, 4)
(register, 0x58, 4) PTRADD (register, 0x58, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000108, 4)
(unique, 0x10000108, 4) CAST (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x3c740, 1) , (register, 0x65, 1)
(unique, 0x100000b4, 4) COPY (register, 0x58, 4)
(register, 0x28, 4) INT_ADD (register, 0x2c, 4) , (ram, 0x3c800, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x58, 4) MULTIEQUAL (unique, 0x100000b4, 4) , (register, 0x58, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x2c, 4)
(register, 0x2c, 4) INT_AND (register, 0x28, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3c804, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c62c, 1) , (register, 0x65, 1)
(register, 0x20, 4) COPY (const, 0x0, 4)
(register, 0x20, 4) COPY (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(unique, 0x10000110, 4) INT_AND (unique, 0x1000010c, 4) , (const, 0xfffffffc, 4)
(unique, 0x1000010c, 4) CAST (register, 0x24, 4)
(register, 0x24, 4) CAST (unique, 0x10000110, 4)
(register, 0x50, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x30, 4) , (const, 0x8, 4)
(register, 0x3c, 4) INT_ADD (unique, 0x10000030, 4) , (const, 0x20, 4)
(unique, 0x10000030, 4) INT_MULT (register, 0x30, 4) , (const, 0xfffffff8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x3580, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x4a80, 4)
(register, 0x20, 4) INT_OR (unique, 0x5780, 4) , (unique, 0x5080, 4)
(register, 0x28, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3c800, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x28, 4) INT_AND (register, 0x28, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x28, 4) , (ram, 0x3c804, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c6e4, 1) , (register, 0x65, 1)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x8280, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x24, 4) PTRADD (register, 0x24, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (register, 0x20, 4) , (unique, 0x4a80, 4)
(register, 0x50, 4) INT_OR (unique, 0x5780, 4) , (unique, 0x5080, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x50, 4)
 ---  CBRANCH (ram, 0x3c6bc, 1) , (register, 0x65, 1)
(unique, 0x1000008c, 4) COPY (register, 0x20, 4)
(unique, 0x10000094, 4) COPY (register, 0x24, 4)
(unique, 0x100000ac, 4) COPY (register, 0x58, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x24, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x58, 4)
(register, 0x58, 4) PTRADD (register, 0x58, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4a80, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x50, 4) INT_OR (unique, 0x5080, 4) , (unique, 0x5780, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x3c79c, 1) , (register, 0x65, 1)
(unique, 0x10000090, 4) COPY (register, 0x28, 4)
(unique, 0x10000098, 4) COPY (register, 0x24, 4)
(unique, 0x100000b0, 4) COPY (register, 0x58, 4)
(register, 0x28, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3c800, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x1000008c, 4) , (unique, 0x10000090, 4)
(register, 0x24, 4) MULTIEQUAL (unique, 0x10000094, 4) , (unique, 0x10000098, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x58, 4) MULTIEQUAL (unique, 0x100000ac, 4) , (unique, 0x100000b0, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x28, 4) INT_AND (register, 0x28, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x28, 4) , (ram, 0x3c804, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c6a0, 1) , (register, 0x65, 1)
(register, 0x34, 4) INT_ADD (register, 0x2c, 4) , (ram, 0x3c800, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x2c, 4)
(register, 0x2c, 4) INT_AND (register, 0x34, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3c804, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c64c, 1) , (register, 0x65, 1)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x58, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (unique, 0x5780, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x58, 4) INT_XOR (register, 0x2c, 4) , (register, 0x20, 4)
(register, 0x24, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3c808, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (ram, 0x3c808, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x24, 4) INT_NEGATE (register, 0x24, 4)
(register, 0x50, 4) INT_AND (register, 0x58, 4) , (ram, 0x3c808, 4)
(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (ram, 0x3c808, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (register, 0x58, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (register, 0x50, 4)
(register, 0x28, 4) INT_AND (ram, 0x3c804, 4) , (register, 0x24, 4)
(unique, 0x1000003c, 4) INT_2COMP (register, 0x28, 4)
(register, 0x28, 4) INT_AND (register, 0x28, 4) , (unique, 0x1000003c, 4)
(register, 0x28, 4) LZCOUNT (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (const, 0x1f, 4) , (register, 0x28, 4)
(unique, 0x5180, 4) INT_AND (register, 0x28, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (register, 0x28, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x58, 4) INT_XOR (register, 0x2c, 4) , (register, 0x28, 4)
(register, 0x20, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3c808, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3c808, 4)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x2c, 4)
(register, 0x20, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x50, 4) INT_AND (register, 0x58, 4) , (ram, 0x3c808, 4)
(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (ram, 0x3c808, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (register, 0x58, 4)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x50, 4)
(register, 0x24, 4) INT_AND (ram, 0x3c804, 4) , (register, 0x20, 4)
(unique, 0x10000048, 4) INT_2COMP (register, 0x24, 4)
(register, 0x24, 4) INT_AND (register, 0x24, 4) , (unique, 0x10000048, 4)
(register, 0x24, 4) LZCOUNT (register, 0x24, 4)
(register, 0x24, 4) INT_SUB (const, 0x1f, 4) , (register, 0x24, 4)
(unique, 0x5180, 4) INT_AND (register, 0x24, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (register, 0x24, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x28, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x50, 4) MULTIEQUAL (register, 0x50, 4) , (register, 0x50, 4)
(register, 0x58, 4) INT_XOR (register, 0x50, 4) , (register, 0x2c, 4)
(register, 0x24, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3c808, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (ram, 0x3c808, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x24, 4) INT_NEGATE (register, 0x24, 4)
(register, 0x20, 4) INT_AND (register, 0x58, 4) , (ram, 0x3c808, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3c808, 4)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x58, 4)
(register, 0x24, 4) INT_OR (register, 0x24, 4) , (register, 0x20, 4)
(register, 0x28, 4) INT_AND (ram, 0x3c804, 4) , (register, 0x24, 4)
(unique, 0x10000054, 4) INT_2COMP (register, 0x28, 4)
(register, 0x28, 4) INT_AND (register, 0x28, 4) , (unique, 0x10000054, 4)
(register, 0x28, 4) LZCOUNT (register, 0x28, 4)
(register, 0x28, 4) INT_SUB (const, 0x1f, 4) , (register, 0x28, 4)
(unique, 0x5180, 4) INT_AND (register, 0x28, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (register, 0x28, 4) , (const, 0xf8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x28, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3c800, 4) COPY (ram, 0x3c800, 4)
(ram, 0x3c804, 4) COPY (ram, 0x3c804, 4)
(ram, 0x3c808, 4) COPY (ram, 0x3c808, 4)
