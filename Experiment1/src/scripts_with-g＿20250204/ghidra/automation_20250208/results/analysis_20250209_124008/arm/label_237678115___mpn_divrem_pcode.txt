Label: 237678115
Function: __mpn_divrem
Architecture: arm
Source File: Unknown
Entry Point: 000646cc

High-level P-code:

(register, 0x65, 1) INT_EQUAL (stack, 0x4, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x6490c, 1) , (register, 0x65, 1)
(register, 0x65, 1) INT_EQUAL (stack, 0x4, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x64700, 1) , (register, 0x65, 1)
(register, 0x65, 1) INT_EQUAL (stack, 0x4, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64b00, 1) , (register, 0x65, 1)
(unique, 0x100003ef, 4) CALLOTHER (const, 0x11, 4) , (const, 0x0, 4) , (const, 0x646fc, 4)
 ---  CALLIND (unique, 0x3cd80, 4)
 ---  RETURN (const, 0x1, 4)
(unique, 0x3cd80, 4) CAST (unique, 0x100003ef, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3ffffffe, 4)
(register, 0x40, 4) PTRADD (register, 0x28, 4) , (register, 0x2c, 4) , (const, 0x4, 4)
(register, 0x3c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (register, 0x28, 4) , (register, 0x2c, 4) , (const, 0x4, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x8280, 4) PTRADD (register, 0x40, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x34, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x8280, 4) PTRADD (stack, 0x0, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x38, 4) LOAD (const, 0x1a1, 4) , (stack, 0x0, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x34, 4)
 ---  CBRANCH (ram, 0x64724, 1) , (unique, 0x10000289, 1)
(unique, 0x10000289, 1) INT_LESS (register, 0x20, 4) , (register, 0x34, 4)
(stack, 0xffffffffffffffc8, 4) COPY (const, 0x0, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x3c, 4) MULTIEQUAL (register, 0x3c, 4) , (register, 0x3c, 4) , (register, 0x2c, 4)
(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (unique, 0x100002fc, 4) , (stack, 0xffffffffffffffc8, 4)
(unique, 0x100002fc, 4) COPY (const, 0x0, 4)
(register, 0x30, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
(register, 0x48, 4) INT_ADD (register, 0x30, 4) , (const, 0xfffffffd, 4)
(register, 0x64, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x48, 4)
 ---  CBRANCH (ram, 0x648e8, 1) , (register, 0x64, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64744, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_SUB (register, 0x38, 4) , (const, 0x1, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x10000300, 4) , (register, 0x2c, 4)
(unique, 0x10000300, 4) COPY (const, 0x0, 4)
(unique, 0x10000096, 4) INT_2COMP (register, 0x38, 4)
(register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xfffffffe, 4)
(register, 0x4c, 4) PTRADD (register, 0x20, 4) , (register, 0x30, 4) , (const, 0x4, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
 ---  BRANCH (ram, 0x647b0, 1)
(register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x40, 4)
(register, 0x2c, 4) INT_ADD (register, 0x34, 4) , (register, 0x40, 4)
(unique, 0x1b80, 1) BOOL_NEGATE (register, 0x66, 1)
 ---  CBRANCH (ram, 0x648fc, 1) , (unique, 0x1b80, 1)
(register, 0x24, 4) INT_SUB (register, 0x2c, 4) , (register, 0x38, 4)
(register, 0x66, 1) INT_CARRY (unique, 0x10000280, 4) , (register, 0x38, 4)
(register, 0x2c, 4) INT_ADD (unique, 0x10000280, 4) , (register, 0x38, 4)
(unique, 0x3f900, 4) INT_ZEXT (register, 0x66, 1)
(register, 0x20, 4) INT_ADD (register, 0x24, 4) , (unique, 0x3f900, 4)
(register, 0x66, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x3c, 4) , (const, 0xffffffff, 4)
(register, 0x3c, 4) PTRADD (register, 0x3c, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x648e0, 1) , (register, 0x66, 1)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x3c, 4) MULTIEQUAL (register, 0x4c, 4) , (register, 0x3c, 4) , (register, 0x3c, 4)
(register, 0x40, 4) MULTIEQUAL (register, 0x3c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x48, 4) MULTIEQUAL (register, 0x48, 4) , (register, 0x48, 4) , (register, 0x48, 4)
(register, 0x4c, 4) MULTIEQUAL (register, 0x40, 4) , (unique, 0x10000284, 4) , (unique, 0x10000284, 4)
(unique, 0x2680, 1) INT_SLESS (register, 0x48, 4) , (register, 0x24, 4)
 ---  CBRANCH (ram, 0x647bc, 1) , (unique, 0x2680, 1)
(register, 0x2c, 4) COPY (const, 0x0, 4)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8380, 4)
(unique, 0x8380, 4) PTRADD (register, 0x4c, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(register, 0x4c, 4) PTRADD (register, 0x4c, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x4c, 4) , (const, 0x0, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (register, 0x20, 4)
(unique, 0x10000280, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x2c, 4)
(unique, 0x10000284, 4) MULTIEQUAL (register, 0x4c, 4) , (register, 0x4c, 4)
 ---  CBRANCH (ram, 0x64784, 1) , (register, 0x65, 1)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0x57d, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0x57d, 4)
(unique, 0x3b00, 4) INT_RIGHT (register, 0x40, 4) , (const, 0x10, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) INT_MULT (register, 0x20, 4) , (unique, 0x3b00, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64828, 1) , (unique, 0x10000290, 1)
(unique, 0x10000290, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003cf, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x50, 1) INT_XOR (register, 0x66, 1) , (const, 0x1, 1)
(register, 0x66, 1) INT_LESS (register, 0x20, 4) , (register, 0x24, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64810, 1) , (unique, 0x10000294, 1)
(unique, 0x10000294, 1) BOOL_OR (register, 0x66, 1) , (register, 0x65, 1)
(register, 0x50, 1) COPY (const, 0x0, 1)
(register, 0x58, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x50, 1) MULTIEQUAL (register, 0x50, 1) , (register, 0x50, 1)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x50, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x64820, 1) , (register, 0x65, 1)
(register, 0x44, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x34, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x44, 4) MULTIEQUAL (unique, 0x100003cf, 4) , (register, 0x44, 4) , (register, 0x58, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0x642, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0x642, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x40, 4) , (const, 0xffff, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x2c, 4) INT_MULT (register, 0x20, 4) , (unique, 0x3b00, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64880, 1) , (unique, 0x10000298, 1)
(unique, 0x10000298, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003b3, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x50, 1) INT_XOR (register, 0x66, 1) , (const, 0x1, 1)
(register, 0x66, 1) INT_LESS (register, 0x2c, 4) , (register, 0x24, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64868, 1) , (unique, 0x1000029c, 1)
(unique, 0x1000029c, 1) BOOL_OR (register, 0x66, 1) , (register, 0x65, 1)
(register, 0x50, 1) COPY (const, 0x0, 1)
(register, 0x58, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x50, 1) MULTIEQUAL (register, 0x50, 1) , (register, 0x50, 1)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x50, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x64878, 1) , (register, 0x65, 1)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x34, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x44, 4) , (const, 0x10, 4)
(register, 0x50, 4) INT_OR (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x100003b3, 4) , (register, 0x20, 4) , (register, 0x58, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(unique, 0x7ca00, 8) INT_ZEXT (register, 0x50, 4)
(unique, 0x7cb00, 8) INT_ZEXT (register, 0x38, 4)
(unique, 0x7cc00, 8) INT_MULT (unique, 0x7ca00, 8) , (unique, 0x7cb00, 8)
(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x58, 4) , (register, 0x24, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x44, 4) SUBPIECE (unique, 0x1000022c, 8) , (const, 0x0, 4)
(register, 0x50, 4) MULTIEQUAL (register, 0x50, 4) , (register, 0x50, 4) , (register, 0x50, 4)
(register, 0x58, 4) SUBPIECE (unique, 0x10000397, 8) , (const, 0x0, 4)
(unique, 0x1000022c, 8) MULTIEQUAL (unique, 0x7cc00, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8)
(unique, 0x10000397, 8) INT_RIGHT (unique, 0x100003df, 8) , (const, 0x20, 4)
(unique, 0x100003df, 8) CAST (unique, 0x1000022c, 8)
(unique, 0x1f00, 1) INT_LESSEQUAL (register, 0x58, 4) , (register, 0x24, 4)
 ---  CBRANCH (ram, 0x648b0, 1) , (unique, 0x1f00, 1)
(unique, 0x2680, 1) INT_LESSEQUAL (register, 0x44, 4) , (unique, 0x10000280, 4)
(unique, 0x100002a4, 1) BOOL_OR (unique, 0x2680, 1) , (register, 0x65, 1)
 ---  CBRANCH (ram, 0x648c8, 1) , (unique, 0x100002a4, 1)
(register, 0x66, 1) INT_LESS (register, 0x44, 4) , (register, 0x38, 4)
(register, 0x2c, 4) INT_SUB (register, 0x44, 4) , (register, 0x38, 4)
(unique, 0x59980, 4) INT_ZEXT (register, 0x66, 1)
(register, 0x58, 4) INT_SUB (register, 0x58, 4) , (unique, 0x59980, 4)
(unique, 0x10000234, 8) PIECE (register, 0x58, 4) , (register, 0x2c, 4)
(register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (register, 0x34, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x34, 4)
(register, 0x50, 4) INT_SUB (register, 0x50, 4) , (const, 0x1, 4)
(unique, 0x1b80, 1) BOOL_NEGATE (register, 0x66, 1)
 ---  CBRANCH (ram, 0x6488c, 1) , (unique, 0x1b80, 1)
(register, 0x66, 1) INT_LESS (unique, 0x10000280, 4) , (register, 0x44, 4)
(register, 0x2c, 4) INT_SUB (unique, 0x10000280, 4) , (register, 0x44, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x44, 4) SUBPIECE (unique, 0x10000244, 8) , (const, 0x0, 4)
(register, 0x50, 4) MULTIEQUAL (register, 0x50, 4) , (register, 0x50, 4)
(register, 0x58, 4) SUBPIECE (unique, 0x1000039f, 8) , (const, 0x0, 4)
(unique, 0x10000244, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8)
(unique, 0x1000039f, 8) INT_RIGHT (unique, 0x100003e7, 8) , (const, 0x20, 4)
(unique, 0x100003e7, 8) CAST (unique, 0x10000244, 8)
(unique, 0x59b80, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x58, 4) , (unique, 0x59b80, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (unique, 0x59c00, 4)
(register, 0x66, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x3c, 4) , (register, 0x50, 4)
(register, 0x3c, 4) PTRADD (register, 0x3c, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x647b0, 1) , (register, 0x66, 1)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x8280, 4) , (register, 0x20, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x3c, 4) MULTIEQUAL (register, 0x3c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x40, 4) MULTIEQUAL (register, 0x40, 4) , (unique, 0x10000284, 4) , (unique, 0x10000284, 4)
(unique, 0x8280, 4) PTRADD (register, 0x40, 4) , (const, 0x1, 4) , (const, 0x4, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x40, 4) , (register, 0x3c, 4)
(register, 0x20, 4) COPY (stack, 0xffffffffffffffc8, 4)
(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(register, 0x50, 4) COPY (const, 0xffffffff, 4)
(unique, 0x1000023c, 8) PIECE (register, 0x2c, 4) , (unique, 0x10000096, 4)
 ---  BRANCH (ram, 0x6488c, 1)
(register, 0x48, 4) LOAD (const, 0x1a1, 4) , (stack, 0x0, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x3fffffff, 4)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (register, 0x28, 4) , (register, 0x2c, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x64924, 1) , (unique, 0x100002a8, 1)
(unique, 0x100002a8, 1) INT_LESS (register, 0x20, 4) , (register, 0x48, 4)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x48, 4)
(stack, 0xffffffffffffffc8, 4) COPY (stack, 0x4, 4)
(stack, 0xffffffffffffffc8, 4) COPY (const, 0x0, 4)
(unique, 0x10000268, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4)
(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)
(unique, 0x2600, 1) INT_SLESS (const, 0x1, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x64a24, 1) , (unique, 0x2600, 1)
(register, 0x34, 4) INT_ADD (register, 0x24, 4) , (const, 0x3fffffff, 4)
(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (register, 0x2c, 4)
(register, 0x30, 4) INT_ADD (register, 0x2c, 4) , (const, 0xffffffff, 4)
(register, 0x30, 4) PTRADD (register, 0x28, 4) , (register, 0x30, 4) , (const, 0x4, 4)
(register, 0x34, 4) PTRADD (register, 0x20, 4) , (register, 0x34, 4) , (const, 0x4, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x48, 4) , (const, 0xffff, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x10000268, 4) , (register, 0x20, 4)
(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)
(register, 0x34, 4) MULTIEQUAL (register, 0x34, 4) , (register, 0x34, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0x97f, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0x97f, 4)
(register, 0x4c, 4) LOAD (const, 0x1a1, 4) , (register, 0x30, 4)
(register, 0x30, 4) PTRADD (register, 0x30, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(unique, 0x3b00, 4) INT_RIGHT (register, 0x4c, 4) , (const, 0x10, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) INT_MULT (unique, 0x3b00, 4) , (register, 0x20, 4)
(register, 0x66, 1) INT_LESS (register, 0x24, 4) , (register, 0x20, 4)
 ---  CBRANCH (ram, 0x649b8, 1) , (register, 0x66, 1)
(unique, 0x100003d3, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x48, 4) , (register, 0x24, 4)
(register, 0x66, 1) INT_LESS (register, 0x24, 4) , (register, 0x20, 4)
(register, 0x50, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x649b0, 1) , (unique, 0x10000389, 1)
(unique, 0x10000389, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x1000038b, 1)
(unique, 0x1000038b, 1) BOOL_NEGATE (register, 0x66, 1)
(register, 0x44, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x48, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x44, 4) MULTIEQUAL (unique, 0x100003d3, 4) , (register, 0x44, 4) , (register, 0x50, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0xa32, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0xa32, 4)
(register, 0x28, 4) INT_MULT (unique, 0x3b00, 4) , (register, 0x20, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x4c, 4) , (const, 0xffff, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x66, 1) INT_LESS (register, 0x24, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x64a08, 1) , (register, 0x66, 1)
(unique, 0x100003bb, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x48, 4) , (register, 0x24, 4)
(register, 0x66, 1) INT_LESS (register, 0x24, 4) , (register, 0x28, 4)
(register, 0x58, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x64a00, 1) , (unique, 0x1000038c, 1)
(unique, 0x1000038c, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x1000038e, 1)
(unique, 0x1000038e, 1) BOOL_NEGATE (register, 0x66, 1)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x48, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x44, 4) , (const, 0x10, 4)
(register, 0x2c, 4) INT_OR (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x100003bb, 4) , (register, 0x20, 4) , (register, 0x58, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0x30, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (register, 0x28, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x34, 4) , (register, 0x2c, 4)
(register, 0x34, 4) PTRADD (register, 0x34, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x64968, 1) , (register, 0x65, 1)
(register, 0x20, 4) MULTIEQUAL (unique, 0x10000268, 4) , (register, 0x20, 4)
(unique, 0x2600, 1) INT_SLESS (const, 0x0, 4) , (register, 0x24, 4)
 ---  CBRANCH (ram, 0x64af0, 1) , (unique, 0x2600, 1)
(register, 0x30, 4) PTRADD (register, 0x20, 4) , (register, 0x24, 4) , (const, 0x4, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x48, 4) , (const, 0xffff, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0xb45, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0xb45, 4)
(register, 0x2c, 4) INT_MULT (unique, 0x3b00, 4) , (register, 0x20, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x24, 4) , (const, 0x10000, 4)
(register, 0x66, 1) INT_LESSEQUAL (unique, 0x100003d7, 4) , (register, 0x2c, 4)
(unique, 0x42a00, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x10000166, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
(unique, 0x10000166, 4) INT_MULT (register, 0x24, 4) , (const, 0xffff0000, 4)
(unique, 0x100003d7, 4) CAST (unique, 0x3580, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x24, 4) , (const, 0x10000, 4)
 ---  CBRANCH (ram, 0x64a8c, 1) , (unique, 0x100002bd, 1)
(unique, 0x100002bd, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003cb, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) INT_ADD (register, 0x48, 4) , (unique, 0x3580, 4)
(register, 0x66, 1) INT_LESS (register, 0x20, 4) , (register, 0x2c, 4)
(register, 0x24, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x64a84, 1) , (unique, 0x1000038f, 1)
(unique, 0x1000038f, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000391, 1)
(unique, 0x10000391, 1) BOOL_NEGATE (register, 0x66, 1)
(register, 0x40, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x48, 4)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x2c, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x3580, 4) , (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x40, 4) MULTIEQUAL (unique, 0x100003cb, 4) , (register, 0x40, 4) , (register, 0x24, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0xbf2, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0xbf2, 4)
(register, 0x50, 4) INT_MULT (unique, 0x3b00, 4) , (register, 0x20, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x24, 4) , (const, 0x10000, 4)
(register, 0x66, 1) INT_LESSEQUAL (unique, 0x100003db, 4) , (register, 0x50, 4)
(unique, 0x42a00, 4) INT_ADD (register, 0x50, 4) , (unique, 0x1000017a, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
(unique, 0x1000017a, 4) INT_MULT (register, 0x24, 4) , (const, 0xffff0000, 4)
(unique, 0x100003db, 4) CAST (unique, 0x3580, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x24, 4) , (const, 0x10000, 4)
 ---  CBRANCH (ram, 0x64ad8, 1) , (unique, 0x100002c7, 1)
(unique, 0x100002c7, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003bf, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x48, 4) , (unique, 0x3580, 4)
(register, 0x28, 4) INT_ADD (register, 0x48, 4) , (unique, 0x3580, 4)
(register, 0x66, 1) INT_LESS (register, 0x28, 4) , (register, 0x50, 4)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x64ad0, 1) , (unique, 0x10000392, 1)
(unique, 0x10000392, 1) BOOL_AND (register, 0x66, 1) , (unique, 0x10000394, 1)
(unique, 0x10000394, 1) BOOL_NEGATE (register, 0x66, 1)
(register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x48, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x40, 4) , (const, 0x10, 4)
(register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (unique, 0x3580, 4)
(register, 0x28, 4) MULTIEQUAL (unique, 0x3580, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x100003bf, 4) , (register, 0x2c, 4) , (register, 0x20, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x30, 4) , (register, 0x2c, 4)
(register, 0x30, 4) PTRADD (register, 0x30, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x20, 4)
(register, 0x20, 4) INT_SUB (register, 0x28, 4) , (register, 0x50, 4)
 ---  CBRANCH (ram, 0x64a44, 1) , (register, 0x65, 1)
 ---  STORE (const, 0x1a1, 4) , (register, 0x28, 4) , (register, 0x20, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x20, 4) COPY (stack, 0xffffffffffffffc8, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (stack, 0x4, 4)
(register, 0x38, 4) PTRADD (register, 0x28, 4) , (register, 0x2c, 4) , (const, 0x4, 4)
(register, 0x28, 4) INT_ADD (stack, 0x4, 4) , (const, 0x3fffffff, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x34, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (stack, 0x0, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (register, 0x38, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x34, 4)
(register, 0x3c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x10000357, 4) INT_ADD (stack, 0x4, 4) , (const, 0x3ffffffe, 4)
(unique, 0x8480, 4) PTRADD (stack, 0x0, 4) , (unique, 0x10000357, 4) , (const, 0x4, 4)
(register, 0x4c, 4) PTRADD (register, 0x38, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x2080, 1) INT_LESS (register, 0x2c, 4) , (register, 0x34, 4)
 ---  CBRANCH (ram, 0x64d14, 1) , (unique, 0x2080, 1)
(stack, 0xffffffffffffffc8, 4) COPY (const, 0x0, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)
(register, 0x28, 4) INT_ADD (register, 0x2c, 4) , (register, 0x24, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (stack, 0x4, 4)
(register, 0x4c, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)
(register, 0x64, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x4c, 4)
 ---  CBRANCH (ram, 0x648f0, 1) , (register, 0x64, 1)
(register, 0x28, 4) PTRADD (register, 0x20, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x28, 4) INT_ADD (unique, 0x3580, 4) , (const, 0x4, 4)
(register, 0x28, 4) INT_ADD (stack, 0x4, 4) , (const, 0xffffffff, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)
 ---  BRANCH (ram, 0x64bdc, 1)
(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)
 ---  CALL (ram, 0x65b70, 8)
(register, 0x20, 4) INDIRECT (unique, 0x100003af, 4) , (const, 0x354, 4)
(unique, 0x100003af, 4) COPY (register, 0x38, 4)
(register, 0x65, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 4) , (register, 0x20, 4)
 ---  CBRANCH (ram, 0x64bc0, 1) , (register, 0x65, 1)
 ---  CALL (ram, 0x6b6b0, 8)
(register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)
(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffff, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x2c, 4) , (register, 0x30, 4)
(register, 0x2c, 4) PTRADD (stack, 0xffffffffffffffbc, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0xffffffff, 4)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
 ---  CBRANCH (ram, 0x648f0, 1) , (register, 0x65, 1)
(register, 0x30, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)
(register, 0x4c, 4) MULTIEQUAL (register, 0x4c, 4) , (register, 0x4c, 4)
(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
(unique, 0x2480, 1) INT_SLESS (register, 0x4c, 4) , (register, 0x24, 4)
 ---  CBRANCH (ram, 0x64d94, 1) , (unique, 0x2480, 1)
(register, 0x2c, 4) PTRADD (register, 0x38, 4) , (const, 0xffffffff, 4) , (const, 0x4, 4)
(unique, 0x100003f7, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (register, 0x38, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x28, 4) CAST (unique, 0x100003f7, 4)
(register, 0x44, 4) PTRADD (register, 0x38, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(unique, 0x100003c7, 4) COPY (register, 0x2c, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x34, 4) , (register, 0x30, 4)
(register, 0x38, 4) MULTIEQUAL (unique, 0x100003c7, 4) , (register, 0x38, 4)
(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x64c04, 1) , (register, 0x65, 1)
(register, 0x30, 4) COPY (const, 0xffffffff, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x30, 4) , (const, 0x16f, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0x16f, 4)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (register, 0x44, 4)
(unique, 0x3b00, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x10, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) INT_MULT (register, 0x20, 4) , (unique, 0x3b00, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x20, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64c70, 1) , (unique, 0x100002d5, 1)
(unique, 0x100002d5, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003c3, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x50, 1) INT_XOR (register, 0x66, 1) , (const, 0x1, 1)
(register, 0x66, 1) INT_LESS (register, 0x20, 4) , (register, 0x24, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x20, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64c58, 1) , (unique, 0x100002d9, 1)
(unique, 0x100002d9, 1) BOOL_OR (register, 0x66, 1) , (register, 0x65, 1)
(register, 0x50, 1) COPY (const, 0x0, 1)
(register, 0x58, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x50, 1) MULTIEQUAL (register, 0x50, 1) , (register, 0x50, 1)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x50, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x64c68, 1) , (register, 0x65, 1)
(register, 0x2c, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x34, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x2c, 4) MULTIEQUAL (unique, 0x100003c3, 4) , (register, 0x2c, 4) , (register, 0x58, 4)
 ---  CALL (ram, 0x1ead0, 8)
(register, 0x20, 4) INDIRECT (register, 0x20, 4) , (const, 0x239, 4)
(register, 0x24, 4) INDIRECT (const, 0x0, 4) , (const, 0x239, 4)
(unique, 0x3b00, 4) INT_AND (register, 0x30, 4) , (const, 0xffff, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x24, 4) , (const, 0x10, 4)
(register, 0x24, 4) INT_OR (unique, 0x3b00, 4) , (unique, 0x3580, 4)
(register, 0x28, 4) INT_MULT (register, 0x20, 4) , (unique, 0x3b00, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x28, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x28, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64cd0, 1) , (unique, 0x100002dd, 1)
(unique, 0x100002dd, 1) BOOL_AND (register, 0x66, 1) , (register, 0x65, 1)
(unique, 0x100003b7, 4) COPY (register, 0x20, 4)
(register, 0x66, 1) INT_CARRY (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x24, 4) INT_ADD (register, 0x34, 4) , (register, 0x24, 4)
(register, 0x50, 1) INT_XOR (register, 0x66, 1) , (const, 0x1, 1)
(register, 0x66, 1) INT_LESS (register, 0x28, 4) , (register, 0x24, 4)
(unique, 0x42a00, 4) INT_SUB (register, 0x28, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64cb8, 1) , (unique, 0x100002e1, 1)
(unique, 0x100002e1, 1) BOOL_OR (register, 0x66, 1) , (register, 0x65, 1)
(register, 0x50, 1) COPY (const, 0x0, 1)
(register, 0x58, 4) INT_SUB (register, 0x20, 4) , (const, 0x1, 4)
(register, 0x50, 1) MULTIEQUAL (register, 0x50, 1) , (register, 0x50, 1)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x50, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x64cc8, 1) , (register, 0x65, 1)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (const, 0x2, 4)
(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x34, 4)
(unique, 0x3580, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x10, 4)
(register, 0x30, 4) INT_OR (register, 0x20, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x100003b7, 4) , (register, 0x20, 4) , (register, 0x58, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x2c, 4) INT_SUB (register, 0x24, 4) , (register, 0x28, 4)
(unique, 0x7ca00, 8) INT_ZEXT (register, 0x30, 4)
(unique, 0x7cb00, 8) INT_ZEXT (register, 0x3c, 4)
(unique, 0x7cc00, 8) INT_MULT (unique, 0x7ca00, 8) , (unique, 0x7cb00, 8)
 ---  BRANCH (ram, 0x64cec, 1)
(register, 0x66, 1) INT_LESS (register, 0x28, 4) , (register, 0x3c, 4)
 ---  CBRANCH (ram, 0x64ce8, 1) , (register, 0x66, 1)
(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (const, 0x1, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x3c, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(unique, 0x10000254, 8) PIECE (register, 0x24, 4) , (register, 0x28, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x24, 4) SUBPIECE (unique, 0x100003a7, 8) , (const, 0x0, 4)
(register, 0x28, 4) SUBPIECE (unique, 0x1000024c, 8) , (const, 0x0, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)
(unique, 0x1000024c, 8) MULTIEQUAL (unique, 0x7cc00, 8) , (unique, 0x10000254, 8)
(unique, 0x100003a7, 8) INT_RIGHT (unique, 0x100003fb, 8) , (const, 0x20, 4)
(unique, 0x100003fb, 8) CAST (unique, 0x1000024c, 8)
(unique, 0x1f00, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x64d04, 1) , (unique, 0x1f00, 1)
 ---  CBRANCH (ram, 0x64b88, 1) , (register, 0x65, 1)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x10000377, 4) INT_ADD (stack, 0x4, 4) , (const, 0x3ffffffe, 4)
(unique, 0x8480, 4) PTRADD (register, 0x38, 4) , (unique, 0x10000377, 4) , (const, 0x4, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x20, 4)
 ---  CBRANCH (ram, 0x64b88, 1) , (register, 0x66, 1)
(register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (register, 0x34, 4)
(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x34, 4)
(register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)
 ---  CBRANCH (ram, 0x64ce0, 1) , (register, 0x66, 1)
 ---  CBRANCH (ram, 0x64d3c, 1) , (register, 0x66, 1)
(register, 0x28, 4) INT_ADD (stack, 0x4, 4) , (const, 0xffffffff, 4)
(register, 0x20, 4) CALL (ram, 0x64680, 8) , (register, 0x38, 4) , (stack, 0x0, 4) , (register, 0x28, 4)
(register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x64b3c, 1) , (register, 0x64, 1)
 ---  CALL (ram, 0x65af0, 8)
(stack, 0xffffffffffffffc8, 4) COPY (const, 0x1, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x4c, 4)
 ---  BRANCH (ram, 0x64b44, 1)
(unique, 0x2680, 1) INT_LESS (register, 0x3c, 4) , (register, 0x38, 4)
(register, 0x65, 1) BOOL_AND (unique, 0x2680, 1) , (register, 0x66, 1)
 ---  CBRANCH (ram, 0x64d78, 1) , (register, 0x65, 1)
(register, 0x66, 1) INT_LESS (register, 0x3c, 4) , (register, 0x38, 4)
(register, 0x2c, 4) INT_SUB (register, 0x3c, 4) , (register, 0x38, 4)
(unique, 0x59b80, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x34, 4) , (unique, 0x59b80, 4)
(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (unique, 0x59c00, 4)
(stack, 0xffffffffffffffc8, 4) COPY (const, 0x1, 4)
 ---  BRANCH (ram, 0x6472c, 1)
(register, 0x64, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x28, 4)
(unique, 0x100003f3, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8480, 4)
(unique, 0x8480, 4) PTRADD (register, 0x38, 4) , (register, 0x28, 4) , (const, 0x4, 4)
(register, 0x2c, 4) CAST (unique, 0x100003f3, 4)
 ---  CBRANCH (ram, 0x64dbc, 1) , (register, 0x64, 1)
(register, 0x20, 4) PTRADD (register, 0x38, 4) , (const, 0x1, 4) , (const, 0x4, 4)
 ---  CALL (ram, 0x27ed0, 8) , (register, 0x20, 4) , (register, 0x38, 4) , (register, 0x28, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x38, 4) , (const, 0x0, 4)
 ---  BRANCH (ram, 0x64bfc, 1)
