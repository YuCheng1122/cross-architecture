Label: 1881620535
Function: strncmp
Architecture: arm
Source File: Unknown
Entry Point: 0003c80c

High-level P-code:

(unique, 0x10000020, 4) INT_2COMP (unique, 0x10000165, 4)
(unique, 0x10000165, 4) CAST (register, 0x20, 4)
(register, 0x34, 4) INT_AND (unique, 0x10000020, 4) , (const, 0x3, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x34, 4)
 ---  CBRANCH (ram, 0x3c820, 1) , (register, 0x66, 1)
(unique, 0x10000129, 4) COPY (register, 0x34, 4)
(unique, 0x10000125, 4) COPY (register, 0x28, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)
(register, 0x38, 4) MULTIEQUAL (unique, 0x10000125, 4) , (unique, 0x10000129, 4)
 ---  CBRANCH (ram, 0x3ca84, 1) , (register, 0x65, 1)
(unique, 0x10000169, 4) PTRADD (register, 0x20, 4) , (register, 0x38, 4) , (const, 0x1, 4)
(unique, 0x10000115, 4) COPY (unique, 0x1000016d, 4)
(unique, 0x1000012d, 4) COPY (unique, 0x10000171, 4)
(register, 0x30, 4) CAST (unique, 0x10000169, 4)
(unique, 0x1000016d, 4) CAST (register, 0x24, 4)
(unique, 0x10000171, 4) CAST (register, 0x20, 4)
(unique, 0x10000179, 4) INT_ADD (unique, 0x10000175, 4) , (const, 0x1, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x1000017d, 4)
(register, 0x2c, 4) INT_ZEXT (unique, 0x43980, 1)
(register, 0x24, 4) MULTIEQUAL (unique, 0x10000115, 4) , (unique, 0x10000119, 4)
(register, 0x58, 4) MULTIEQUAL (unique, 0x1000012d, 4) , (unique, 0x10000131, 4)
(unique, 0x10000175, 4) CAST (register, 0x24, 4)
(register, 0x24, 4) CAST (unique, 0x10000179, 4)
(unique, 0x1000017d, 4) CAST (register, 0x24, 4)
(unique, 0x10000185, 4) INT_ADD (unique, 0x10000181, 4) , (const, 0x1, 4)
(unique, 0x43980, 1) LOAD (const, 0x1a1, 4) , (unique, 0x10000189, 4)
(register, 0x50, 4) INT_ZEXT (unique, 0x43980, 1)
(unique, 0x10000181, 4) CAST (register, 0x58, 4)
(register, 0x58, 4) CAST (unique, 0x10000185, 4)
(unique, 0x10000189, 4) CAST (register, 0x58, 4)
(register, 0x20, 4) INT_SUB (register, 0x50, 4) , (register, 0x2c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
(register, 0x2c, 1) BOOL_OR (register, 0x65, 1) , (register, 0x65, 1)
 ---  CBRANCH (ram, 0x3c858, 1) , (register, 0x2c, 1)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x58, 4) , (register, 0x30, 4)
 ---  CBRANCH (ram, 0x3c834, 1) , (register, 0x65, 1)
(unique, 0x10000119, 4) COPY (unique, 0x1000018d, 4)
(unique, 0x10000121, 4) COPY (unique, 0x10000191, 4)
(unique, 0x10000131, 4) COPY (register, 0x58, 4)
(unique, 0x1000018d, 4) CAST (register, 0x24, 4)
(unique, 0x10000191, 4) CAST (register, 0x30, 4)
(register, 0x66, 1) INT_LESS (register, 0x34, 4) , (register, 0x28, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(register, 0x30, 4) MULTIEQUAL (unique, 0x10000121, 4) , (register, 0x20, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (register, 0x66, 1)
(register, 0x48, 4) INT_AND (unique, 0x10000195, 4) , (const, 0x3, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
(unique, 0x10000195, 4) CAST (register, 0x24, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100001a1, 4)
(unique, 0x1000019d, 4) INT_ADD (unique, 0x10000199, 4) , (const, 0x4, 4)
(unique, 0x10000199, 4) CAST (register, 0x30, 4)
(register, 0x30, 4) CAST (unique, 0x1000019d, 4)
(unique, 0x100001a1, 4) CAST (register, 0x30, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x38, 4)
 ---  CBRANCH (ram, 0x3c948, 1) , (register, 0x65, 1)
(unique, 0x1f00, 1) INT_LESS (const, 0x4, 4) , (register, 0x28, 4)
(register, 0x50, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100001ad, 4)
(unique, 0x100001b5, 4) INT_ADD (unique, 0x100001b1, 4) , (const, 0x4, 4)
(unique, 0x100001ad, 4) CAST (register, 0x24, 4)
(unique, 0x100001b1, 4) CAST (register, 0x24, 4)
(register, 0x24, 4) CAST (unique, 0x100001b5, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x50, 4)
 ---  CBRANCH (ram, 0x3c8d8, 1) , (unique, 0x100000bb, 1)
(unique, 0x100000bb, 1) BOOL_AND (register, 0x65, 1) , (unique, 0x1f00, 1)
(register, 0x20, 4) INT_ADD (register, 0x2c, 4) , (ram, 0x3caf4, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x30, 4) MULTIEQUAL (unique, 0x1000011d, 4) , (register, 0x30, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x2c, 4)
(register, 0x2c, 4) INT_AND (register, 0x20, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3caf8, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (register, 0x65, 1)
(unique, 0x1f00, 1) INT_LESS (const, 0x4, 4) , (register, 0x28, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x30, 4)
(register, 0x30, 4) PTRADD (register, 0x30, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x50, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100001b9, 4)
(unique, 0x100001b9, 4) CAST (register, 0x24, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x50, 4)
(unique, 0x100000c2, 1) BOOL_AND (register, 0x65, 1) , (unique, 0x1f00, 1)
 ---  CBRANCH (ram, 0x3c8a0, 1) , (unique, 0x100000c2, 1)
(unique, 0x1000011d, 4) COPY (register, 0x30, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x50, 4) MULTIEQUAL (register, 0x50, 4) , (register, 0x50, 4)
(register, 0x30, 4) INT_XOR (register, 0x2c, 4) , (register, 0x50, 4)
(register, 0x20, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3cafc, 4)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3cafc, 4)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x2c, 4)
(register, 0x20, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x58, 4) INT_AND (register, 0x30, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x30, 4)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x58, 4)
(register, 0x24, 4) INT_AND (ram, 0x3caf8, 4) , (register, 0x20, 4)
(unique, 0x10000058, 4) INT_2COMP (register, 0x24, 4)
(register, 0x24, 4) INT_AND (register, 0x24, 4) , (unique, 0x10000058, 4)
(register, 0x24, 4) LZCOUNT (register, 0x24, 4)
(register, 0x24, 4) INT_SUB (const, 0x1f, 4) , (register, 0x24, 4)
(unique, 0x4100, 4) INT_SRIGHT (register, 0x24, 4) , (const, 0x3, 4)
(unique, 0x2080, 1) INT_LESS (unique, 0x4100, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (unique, 0x2080, 1)
(unique, 0x3580, 4) INT_LEFT (unique, 0x4100, 4) , (const, 0x3, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x50, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x28, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
(register, 0x20, 4) COPY (const, 0x0, 4)
(register, 0x20, 4) COPY (const, 0x0, 4)
(register, 0x20, 4) COPY (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(unique, 0x100001a9, 4) INT_AND (unique, 0x100001a5, 4) , (const, 0xfffffffc, 4)
(unique, 0x100001a5, 4) CAST (register, 0x24, 4)
(register, 0x40, 4) CAST (unique, 0x100001a9, 4)
(register, 0x24, 4) LOAD (const, 0x1a1, 4) , (register, 0x40, 4)
(unique, 0x3580, 4) INT_MULT (register, 0x48, 4) , (const, 0x8, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x24, 4) , (unique, 0x3580, 4)
(register, 0x3c, 4) INT_ADD (unique, 0x10000068, 4) , (const, 0x20, 4)
(unique, 0x10000068, 4) INT_MULT (register, 0x48, 4) , (const, 0xfffffff8, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x4a80, 4)
(register, 0x20, 4) INT_OR (unique, 0x5780, 4) , (unique, 0x5080, 4)
(register, 0x50, 4) INT_ADD (register, 0x20, 4) , (ram, 0x3caf4, 4)
(unique, 0x41880, 4) INT_NEGATE (register, 0x20, 4)
(register, 0x50, 4) INT_AND (register, 0x50, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x50, 4) , (ram, 0x3caf8, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3ca1c, 1) , (register, 0x65, 1)
(register, 0x50, 4) INT_SUB (const, 0x4, 4) , (register, 0x48, 4)
(register, 0x66, 1) INT_LESS (register, 0x50, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x3ca1c, 1) , (register, 0x66, 1)
(register, 0x20, 4) LOAD (const, 0x1a1, 4) , (unique, 0x8280, 4)
(unique, 0x8280, 4) PTRADD (register, 0x40, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x40, 4) PTRADD (register, 0x40, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (register, 0x20, 4) , (unique, 0x4a80, 4)
(register, 0x24, 4) INT_OR (unique, 0x5780, 4) , (unique, 0x5080, 4)
(register, 0x44, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c99c, 1) , (register, 0x65, 1)
(register, 0x44, 4) COPY (const, 0x1, 4)
(register, 0x44, 4) MULTIEQUAL (register, 0x44, 4) , (register, 0x44, 4)
(unique, 0x2080, 1) INT_LESS (register, 0x28, 4) , (const, 0x5, 4)
 ---  CBRANCH (ram, 0x3c9a4, 1) , (unique, 0x2080, 1)
(register, 0x44, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)
(unique, 0x10000135, 4) COPY (register, 0x30, 4)
(unique, 0x10000139, 4) COPY (register, 0x30, 4)
(unique, 0x10000145, 4) COPY (register, 0x20, 4)
(unique, 0x10000149, 4) COPY (register, 0x20, 4)
(unique, 0x10000155, 4) COPY (register, 0x40, 4)
(unique, 0x10000110, 1) INT_EQUAL (unique, 0x10000111, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c9dc, 1) , (unique, 0x10000110, 1)
(unique, 0x100000f8, 4) MULTIEQUAL (unique, 0x10000135, 4) , (unique, 0x10000139, 4) , (unique, 0x1000013d, 4) , (unique, 0x1000013d, 4)
(unique, 0x100000fc, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4)
(unique, 0x10000100, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(unique, 0x10000104, 4) MULTIEQUAL (unique, 0x10000145, 4) , (unique, 0x10000149, 4) , (unique, 0x1000014d, 4) , (unique, 0x1000014d, 4)
(unique, 0x10000108, 4) MULTIEQUAL (unique, 0x10000155, 4) , (unique, 0x10000155, 4) , (unique, 0x1000015d, 4) , (unique, 0x1000015d, 4)
(unique, 0x1000010c, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4) , (register, 0x24, 4)
(unique, 0x10000111, 4) MULTIEQUAL (register, 0x44, 4) , (register, 0x44, 4) , (register, 0x20, 4) , (register, 0x20, 4)
(register, 0x44, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000108, 4)
(register, 0x40, 4) PTRADD (unique, 0x10000108, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000f8, 4)
(register, 0x30, 4) PTRADD (unique, 0x100000f8, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x4a80, 4) INT_AND (register, 0x3c, 4) , (const, 0xff, 4)
(unique, 0x5080, 4) INT_LEFT (register, 0x44, 4) , (unique, 0x4a80, 4)
(unique, 0x5780, 4) INT_RIGHT (unique, 0x10000104, 4) , (unique, 0x3580, 4)
(register, 0x24, 4) INT_OR (unique, 0x5080, 4) , (unique, 0x5780, 4)
(register, 0x20, 4) INT_SUB (register, 0x24, 4) , (register, 0x2c, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c9c8, 1) , (register, 0x65, 1)
(register, 0x20, 4) COPY (const, 0x1, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4)
(unique, 0x2080, 1) INT_LESS (register, 0x28, 4) , (const, 0x5, 4)
 ---  CBRANCH (ram, 0x3c9d0, 1) , (unique, 0x2080, 1)
(register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0x1, 4)
(unique, 0x1000013d, 4) COPY (register, 0x30, 4)
(unique, 0x1000014d, 4) COPY (register, 0x44, 4)
(unique, 0x1000015d, 4) COPY (register, 0x40, 4)
(register, 0x24, 4) INT_ADD (unique, 0x10000104, 4) , (ram, 0x3caf4, 4)
(unique, 0x41880, 4) INT_NEGATE (unique, 0x10000104, 4)
(register, 0x24, 4) INT_AND (register, 0x24, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x24, 4) , (ram, 0x3caf8, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
(register, 0x28, 4) INT_SUB (unique, 0x10000100, 4) , (const, 0x4, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x50, 4)
 ---  CBRANCH (ram, 0x3c9b0, 1) , (unique, 0x100000d4, 1)
(unique, 0x100000d4, 1) BOOL_OR (register, 0x66, 1) , (register, 0x65, 1)
(register, 0x34, 4) INT_ADD (unique, 0x100000fc, 4) , (ram, 0x3caf4, 4)
(unique, 0x41880, 4) INT_NEGATE (unique, 0x100000fc, 4)
(register, 0x2c, 4) INT_AND (register, 0x34, 4) , (unique, 0x41880, 4)
(unique, 0x74100, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3caf8, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74100, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (register, 0x65, 1)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000f8, 4)
(unique, 0x5780, 4) INT_RIGHT (unique, 0x10000104, 4) , (unique, 0x3580, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4) , (unique, 0x5780, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
(register, 0x2c, 4) MULTIEQUAL (register, 0x2c, 4) , (register, 0x2c, 4) , (register, 0x2c, 4)
(register, 0x30, 4) INT_XOR (register, 0x2c, 4) , (register, 0x20, 4)
(register, 0x50, 4) INT_AND (register, 0x2c, 4) , (ram, 0x3cafc, 4)
(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (ram, 0x3cafc, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (register, 0x2c, 4)
(register, 0x50, 4) INT_NEGATE (register, 0x50, 4)
(register, 0x58, 4) INT_AND (register, 0x30, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x30, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (register, 0x58, 4)
(register, 0x24, 4) INT_AND (ram, 0x3caf8, 4) , (register, 0x50, 4)
(unique, 0x10000090, 4) INT_2COMP (register, 0x24, 4)
(register, 0x24, 4) INT_AND (register, 0x24, 4) , (unique, 0x10000090, 4)
(register, 0x24, 4) LZCOUNT (register, 0x24, 4)
(register, 0x24, 4) INT_SUB (const, 0x1f, 4) , (register, 0x24, 4)
(unique, 0x4100, 4) INT_SRIGHT (register, 0x24, 4) , (const, 0x3, 4)
(unique, 0x2080, 1) INT_LESS (unique, 0x4100, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (unique, 0x2080, 1)
(unique, 0x3580, 4) INT_LEFT (unique, 0x4100, 4) , (const, 0x3, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (register, 0x20, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x28, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
(register, 0x30, 4) INT_XOR (unique, 0x1000010c, 4) , (unique, 0x100000fc, 4)
(register, 0x50, 4) INT_AND (unique, 0x100000fc, 4) , (ram, 0x3cafc, 4)
(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (ram, 0x3cafc, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (unique, 0x100000fc, 4)
(register, 0x50, 4) INT_NEGATE (register, 0x50, 4)
(register, 0x58, 4) INT_AND (register, 0x30, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (ram, 0x3cafc, 4)
(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x30, 4)
(register, 0x50, 4) INT_OR (register, 0x50, 4) , (register, 0x58, 4)
(register, 0x20, 4) INT_AND (ram, 0x3caf8, 4) , (register, 0x50, 4)
(unique, 0x100000a0, 4) INT_2COMP (register, 0x20, 4)
(register, 0x20, 4) INT_AND (register, 0x20, 4) , (unique, 0x100000a0, 4)
(register, 0x20, 4) LZCOUNT (register, 0x20, 4)
(register, 0x20, 4) INT_SUB (const, 0x1f, 4) , (register, 0x20, 4)
(unique, 0x4100, 4) INT_SRIGHT (register, 0x20, 4) , (const, 0x3, 4)
(unique, 0x2080, 1) INT_LESS (unique, 0x4100, 4) , (unique, 0x10000100, 4)
 ---  CBRANCH (ram, 0x3c940, 1) , (unique, 0x2080, 1)
(unique, 0x3580, 4) INT_LEFT (unique, 0x4100, 4) , (const, 0x3, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (unique, 0x100000fc, 4) , (unique, 0x5180, 4)
(unique, 0x5180, 4) INT_AND (unique, 0x3580, 4) , (const, 0xff, 4)
(unique, 0x5780, 4) INT_RIGHT (unique, 0x1000010c, 4) , (unique, 0x5180, 4)
(register, 0x2c, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x28, 4) INT_AND (unique, 0x5780, 4) , (const, 0xff, 4)
(register, 0x20, 4) INT_SUB (register, 0x2c, 4) , (register, 0x28, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(ram, 0x3caf4, 4) COPY (ram, 0x3caf4, 4)
(ram, 0x3caf8, 4) COPY (ram, 0x3caf8, 4)
(ram, 0x3cafc, 4) COPY (ram, 0x3cafc, 4)
