{
  "paramType": {
    "0x001004f0": [],
    "0x00303020": [],
    "0x00303010": [],
    "0x001004d0": [],
    "0x00303000": [
      "char *",
      "char *",
      "uint",
      "char *"
    ],
    "0x001010d0": [],
    "0x00303018": [],
    "0x00303008": [],
    "0x001004b0": [],
    "0x001004c0": [],
    "0x001005a0": [
      "undefined8",
      "byte"
    ],
    "0x001004a0": [
      "char *",
      "char *",
      "uint",
      "char *"
    ],
    "0x001005b0": [
      "ulong *",
      "uint *",
      "undefined8 *",
      "long *",
      "int",
      "int",
      "long",
      "ulong *"
    ],
    "0x00100570": [],
    "0x00100470": [
      "undefined8",
      "undefined8",
      "undefined8"
    ],
    "0x00101030": [
      "long"
    ],
    "0x00100490": [],
    "0x00101108": []
  },
  "func_names": {
    "0x001004f0": "FUN_001004f0",
    "0x00303020": "__cxa_finalize",
    "0x00303010": "_dl_mcount_wrapper_check",
    "0x001004d0": "entry",
    "0x00303000": "__assert_fail",
    "0x001010d0": "FUN_001010d0",
    "0x00303018": "_Jv_RegisterClasses",
    "0x00303008": "__gmon_start__",
    "0x001004b0": "_dl_mcount_wrapper_check",
    "0x001004c0": "__cxa_finalize",
    "0x001005a0": "FUN_001005a0",
    "0x001004a0": "__assert_fail",
    "0x001005b0": "gconv",
    "0x00100570": "FUN_00100570",
    "0x00100470": "_DT_INIT",
    "0x00101030": "gconv_init",
    "0x00100490": "FUN_00100490",
    "0x00101108": "_DT_FINI"
  },
  "pcode": {
    "0x001004f0": [
      "(register, 0x206, 1) INT_EQUAL (ram, 0x302020, 1) , (const, 0x0, 1)",
      " ---  CBRANCH (ram, 0x100562, 1) , (register, 0x206, 1)",
      " ---  CALL (ram, 0x1004c0, 8) , (ram, 0x302018, 8)",
      "(ram, 0x302018, 8) INDIRECT (ram, 0x302018, 8) , (const, 0x24, 4)",
      "(ram, 0x302020, 1) INDIRECT (ram, 0x302020, 1) , (const, 0x24, 4)",
      "(ram, 0x302028, 8) INDIRECT (ram, 0x302028, 8) , (const, 0x24, 4)",
      "(ram, 0x302020, 1) COPY (const, 0x1, 1)",
      "(ram, 0x302018, 8) MULTIEQUAL (ram, 0x302018, 8) , (ram, 0x302018, 8)",
      "(ram, 0x302020, 1) MULTIEQUAL (ram, 0x302020, 1) , (ram, 0x302020, 1)",
      "(ram, 0x302028, 8) MULTIEQUAL (ram, 0x302028, 8) , (ram, 0x302028, 8)",
      " ---  RETURN (const, 0x0, 8)",
      "(ram, 0x302018, 8) COPY (ram, 0x302018, 8)",
      "(ram, 0x302020, 1) COPY (ram, 0x302020, 1)",
      "(ram, 0x302028, 8) COPY (ram, 0x302028, 8)"
    ],
    "0x00303020": [
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x00303010": [
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x001004d0": [
      " ---  CALL (ram, 0x303008, 8)",
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x00303000": [
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x001010d0": [
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x00303018": [
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x00303008": [
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x001004b0": [
      " ---  CALL (ram, 0x303010, 8)",
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x001004c0": [
      " ---  CALL (ram, 0x303020, 8)",
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x001005a0": [
      "(register, 0x30, 8) INT_ZEXT (register, 0x30, 1)",
      "(unique, 0x4600, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)",
      "(unique, 0x4700, 8) PTRADD (unique, 0x10000008, 8) , (unique, 0x4600, 8) , (const, 0x1, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000010, 8)",
      "(register, 0x0, 4) COPY (unique, 0xdb00, 4)",
      "(unique, 0x10000008, 8) PTRSUB (const, 0x0, 8) , (const, 0x101360, 8)",
      "(unique, 0x10000010, 8) CAST (unique, 0x4700, 8)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)"
    ],
    "0x001004a0": [
      " ---  CALL (ram, 0x303000, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (register, 0x8, 8)",
      " ---  RETURN (const, 0x1, 4)"
    ],
    "0x001005b0": [
      "(stack, 0xffffffffffffff1c, 4) SUBPIECE (unique, 0x1000075a, 8) , (const, 0x0, 4)",
      "(stack, 0xffffffffffffff24, 4) SUBPIECE (unique, 0x10000762, 8) , (const, 0x0, 4)",
      "(unique, 0x1000075a, 8) INT_RIGHT (unique, 0x10000906, 8) , (const, 0x20, 4)",
      "(unique, 0x10000762, 8) INT_RIGHT (unique, 0x100008fe, 8) , (const, 0x20, 4)",
      "(unique, 0x100008fe, 8) CAST (stack, 0xffffffffffffff20, 8)",
      "(unique, 0x10000906, 8) CAST (stack, 0xffffffffffffff18, 8)",
      "(register, 0x0, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000090e, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)",
      "(unique, 0x1000090e, 8) CAST (unique, 0x4400, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0x1000035b, 4) , (const, 0x0, 4)",
      "(unique, 0x1000035b, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x1, 4)",
      "(stack, 0xffffffffffffff68, 8) COPY (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x10062c, 1) , (register, 0x206, 1)",
      "(unique, 0x10000916, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)",
      "(unique, 0xdc80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0xdc80, 8) , (const, 0x0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000916, 8)",
      "(unique, 0x1000091e, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x1000091e, 8)",
      " ---  CBRANCH (ram, 0x10062c, 1) , (register, 0x206, 1)",
      "(unique, 0x4fa80, 8) INT_RIGHT (unique, 0x10000926, 8) , (const, 0x11, 4)",
      "(unique, 0x4fb80, 8) INT_LEFT (unique, 0x1000092e, 8) , (const, 0x2f, 4)",
      "(register, 0x0, 8) INT_OR (unique, 0x4fa80, 8) , (unique, 0x4fb80, 8)",
      "(unique, 0x10000926, 8) CAST (unique, 0xdc00, 8)",
      "(unique, 0x1000092e, 8) CAST (unique, 0xdc00, 8)",
      "(unique, 0x10000936, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6200, 8)",
      "(unique, 0x1000093e, 8) INT_XOR (register, 0x0, 8) , (unique, 0xdc00, 8)",
      "(unique, 0x6200, 8) CAST (unique, 0x10000936, 8)",
      "(register, 0x0, 8) CAST (unique, 0x1000093e, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)",
      "(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0xdc00, 8) , (register, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100f50, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100f3e, 1) , (register, 0x206, 1)",
      "(unique, 0x1000095e, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x1000095e, 8)",
      "(register, 0xa0, 8) COPY (const, 0x0, 8)",
      "(stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)",
      "(unique, 0x10000966, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000966, 8)",
      "(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100672, 1) , (register, 0x206, 1)",
      "(unique, 0x10000822, 8) COPY (register, 0xa0, 8)",
      "(unique, 0x1000082a, 8) COPY (unique, 0x4f80, 8)",
      "(register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)",
      "(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000822, 8) , (unique, 0x1000082a, 8)",
      "(unique, 0x1000096e, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x1000096e, 8)",
      " ---  CBRANCH (ram, 0x10068e, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xdc00, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100a8e, 1) , (register, 0x206, 1)",
      "(unique, 0x10000976, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000976, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (unique, 0xdc00, 8) , (stack, 0xffffffffffffff50, 8)",
      "(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (register, 0x0, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)",
      " ---  CBRANCH (ram, 0x100969, 1) , (register, 0x206, 1)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b2a, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)",
      "(unique, 0x10000b2a, 8) CAST (unique, 0x4400, 8)",
      "(register, 0x90, 4) COPY (const, 0x4, 4)",
      "(unique, 0x100003d3, 1) INT_EQUAL (register, 0x8, 8) , (unique, 0x1000043d, 8)",
      "(stack, 0xffffffffffffff48, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x2, 4)",
      " ---  CBRANCH (ram, 0x1007e5, 1) , (unique, 0x100003d3, 1)",
      "(unique, 0x100003dc, 8) MULTIEQUAL (unique, 0x1000085a, 8) , (unique, 0x10000698, 8) , (register, 0x30, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x100003dc, 8)",
      "(unique, 0x100003e4, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (unique, 0x100006a0, 8) , (unique, 0x100003e4, 8) , (stack, 0xffffffffffffff18, 8) , (unique, 0x100003e4, 8)",
      "(unique, 0x100003ec, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x100006a8, 8) , (unique, 0x100003ec, 8) , (stack, 0xffffffffffffff20, 8) , (unique, 0x100003ec, 8)",
      "(unique, 0x100003f4, 8) MULTIEQUAL (unique, 0x10000872, 8) , (unique, 0x100006b0, 8) , (unique, 0x10000862, 8) , (unique, 0x100008ee, 8) , (unique, 0x100003f4, 8)",
      "(unique, 0x100003fc, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100003fc, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100003fc, 8)",
      "(unique, 0x100008aa, 8) MULTIEQUAL (unique, 0x10000882, 8) , (unique, 0x1000088a, 8) , (unique, 0x10000892, 8) , (unique, 0x1000089a, 8) , (unique, 0x100008a2, 8)",
      "(unique, 0x100003cb, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x0, 4) , (unique, 0x100003cb, 4) , (register, 0x0, 4) , (unique, 0x100003cb, 4)",
      "(unique, 0x100007da, 8) COPY (register, 0x8, 8)",
      "(unique, 0x1000085a, 8) COPY (stack, 0xffffffffffffff50, 8)",
      "(unique, 0x10000872, 8) COPY (stack, 0xffffffffffffff50, 8)",
      "(unique, 0x1000087a, 8) COPY (stack, 0xffffffffffffff60, 8)",
      "(unique, 0x10000882, 8) COPY (unique, 0x1000087a, 8)",
      "(unique, 0x1000043d, 8) COPY (unique, 0x100008aa, 8)",
      "(unique, 0x4400, 8) PTRADD (unique, 0x1000043d, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(register, 0x200, 1) INT_LESS (register, 0x8, 8) , (unique, 0x4400, 8)",
      " ---  CBRANCH (ram, 0x100f33, 1) , (register, 0x200, 1)",
      "(unique, 0x100008e6, 8) COPY (unique, 0x1000043d, 8)",
      "(unique, 0xe600, 1) INT_LESSEQUAL (unique, 0xdc00, 8) , (unique, 0x100003f4, 8)",
      " ---  CBRANCH (ram, 0x100f28, 1) , (unique, 0xe600, 1)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000043d, 8)",
      "(unique, 0xe780, 1) INT_LESS (unique, 0xdb00, 4) , (const, 0xffff, 4)",
      " ---  CBRANCH (ram, 0x100fe4, 1) , (unique, 0xe780, 1)",
      "(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x101220, 8)",
      "(unique, 0xe600, 1) INT_LESS (const, 0xff, 4) , (unique, 0xdb00, 4)",
      " ---  CBRANCH (ram, 0x100739, 1) , (unique, 0xe600, 1)",
      "(unique, 0x10000772, 8) COPY (register, 0x0, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0x10000772, 8) , (unique, 0x1000077a, 8)",
      "(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x2, 8)",
      "(unique, 0xda80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x2, 8)",
      "(register, 0x10, 4) INT_ZEXT (unique, 0xda80, 2)",
      "(unique, 0xe780, 1) INT_LESS (register, 0x10, 4) , (unique, 0xdb00, 4)",
      " ---  CBRANCH (ram, 0x100728, 1) , (unique, 0xe780, 1)",
      "(unique, 0x1000077a, 8) COPY (register, 0x0, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100766, 1) , (register, 0x206, 1)",
      "(unique, 0xda80, 2) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)",
      "(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)",
      "(register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 4) , (unique, 0xdb00, 4)",
      "(register, 0x10, 4) INT_ZEXT (unique, 0xda80, 2)",
      " ---  CBRANCH (ram, 0x100766, 1) , (register, 0x200, 1)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000b32, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x2, 8)",
      "(unique, 0x10000b32, 8) CAST (unique, 0x4400, 8)",
      "(register, 0x0, 8) INT_ZEXT (unique, 0x4700, 4)",
      "(unique, 0x4700, 4) INT_ADD (unique, 0xdb00, 4) , (unique, 0xdb00, 4)",
      "(unique, 0x4700, 8) PTRADD (unique, 0x100004f7, 8) , (register, 0x0, 8) , (const, 0x1, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4700, 8)",
      "(unique, 0x100004f7, 8) PTRSUB (const, 0x0, 8) , (const, 0x101240, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0xd980, 1) , (const, 0x0, 1)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xdb00, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x1007f0, 1) , (unique, 0x100006fe, 1)",
      "(unique, 0x100006fe, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100840, 1) , (register, 0x206, 1)",
      "(unique, 0x10000b52, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000b52, 8)",
      "(unique, 0x10000697, 1) INT_NOTEQUAL (unique, 0x1000068f, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x10078d, 1) , (unique, 0x10000697, 1)",
      "(unique, 0x1000068f, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8)",
      "(unique, 0x10000698, 8) MULTIEQUAL (unique, 0x100003dc, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x100006a0, 8) MULTIEQUAL (unique, 0x100003e4, 8) , (stack, 0xffffffffffffff18, 8)",
      "(unique, 0x100006a8, 8) MULTIEQUAL (unique, 0x100003ec, 8) , (stack, 0xffffffffffffff20, 8)",
      "(unique, 0x100006b0, 8) MULTIEQUAL (unique, 0x100008c6, 8) , (unique, 0x100008ee, 8)",
      "(unique, 0x100006b8, 8) MULTIEQUAL (unique, 0x100003fc, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x100006c0, 8) MULTIEQUAL (unique, 0x1000043d, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x100008c6, 8) COPY (unique, 0x100003f4, 8)",
      "(unique, 0x10000b62, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (unique, 0x1000068f, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000b62, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000068f, 8)",
      " ---  CALL (ram, 0x1004b0, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000698, 8) , (const, 0x56a, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100006c0, 8) , (const, 0x56a, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100006b8, 8) , (const, 0x56a, 4)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (unique, 0x1000068f, 8) , (const, 0x3, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x10000b5a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000068f, 8)",
      "(register, 0x0, 4) CALLIND (unique, 0xdc00, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (unique, 0x4f80, 8) , (register, 0x8, 8) , (unique, 0x4f80, 8) , (register, 0xa0, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000083a, 8) , (const, 0x581, 4)",
      "(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x1000084a, 8) , (const, 0x581, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x581, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x581, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x581, 4)",
      "(unique, 0x1000083a, 8) COPY (unique, 0x4f80, 8)",
      "(unique, 0x1000084a, 8) COPY (register, 0xa0, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000b5a, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6, 4)",
      " ---  CBRANCH (ram, 0x100780, 1) , (register, 0x206, 1)",
      "(unique, 0x100008ee, 8) COPY (stack, 0xffffffffffffffa0, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4)",
      " ---  CBRANCH (ram, 0x100faf, 1) , (register, 0x206, 1)",
      "(unique, 0x100007fa, 8) COPY (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x1000089a, 8) COPY (unique, 0x100007fa, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b3a, 8) , (unique, 0xd980, 1)",
      "(unique, 0x10000b3a, 8) CAST (unique, 0x100003f4, 8)",
      "(unique, 0x10000b4a, 8) INT_ADD (unique, 0x10000b42, 8) , (const, 0x1, 8)",
      "(unique, 0x10000b42, 8) CAST (unique, 0x100003f4, 8)",
      "(register, 0x30, 8) CAST (unique, 0x10000b4a, 8)",
      "(unique, 0x6b80, 8) PTRADD (unique, 0x1000043d, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      " ---  BRANCH (ram, 0x1007d1, 1)",
      "(unique, 0x10000862, 8) COPY (register, 0x30, 8)",
      "(unique, 0x10000892, 8) COPY (unique, 0x6b80, 8)",
      "(register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff48, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x100838, 1) , (register, 0x206, 1)",
      "(unique, 0x6b80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)",
      "(unique, 0x6b80, 8) INT_ADD (unique, 0x6b80, 8) , (const, 0x1, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x6b80, 8)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100006b8, 8) , (const, 0x1f0, 4)",
      "(unique, 0x6b80, 8) PTRADD (unique, 0x100006c0, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(register, 0x0, 4) COPY (const, 0x6, 4)",
      " ---  BRANCH (ram, 0x1007d1, 1)",
      "(unique, 0x1000088a, 8) COPY (unique, 0x6b80, 8)",
      "(register, 0x30, 8) MULTIEQUAL (unique, 0x100003f4, 8) , (unique, 0x100006b0, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x100003e4, 8) , (unique, 0x100006a0, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x100003ec, 8) , (unique, 0x100006a8, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x100003dc, 8) , (unique, 0x10000698, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000043d, 8) , (unique, 0x100006c0, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100003fc, 8) , (unique, 0x100006b8, 8)",
      "(register, 0x90, 4) COPY (const, 0x6, 4)",
      "(unique, 0x100007e2, 8) COPY (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x10000802, 8) COPY (register, 0x30, 8)",
      "(unique, 0x1000070e, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)",
      "(register, 0x18, 8) MULTIEQUAL (unique, 0x100007e2, 8) , (unique, 0x100008e6, 8) , (unique, 0x100008e6, 8) , (unique, 0x100007fa, 8) , (unique, 0x100007da, 8)",
      "(register, 0x30, 8) MULTIEQUAL (unique, 0x10000802, 8) , (unique, 0x1000080a, 8) , (unique, 0x10000812, 8) , (unique, 0x100008ee, 8) , (unique, 0x100003f4, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (unique, 0x100003e4, 8) , (unique, 0x100003e4, 8) , (stack, 0xffffffffffffff18, 8) , (unique, 0x100003e4, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x100003ec, 8) , (unique, 0x100003ec, 8) , (stack, 0xffffffffffffff20, 8) , (unique, 0x100003ec, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x100003dc, 8) , (unique, 0x100003dc, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x100003dc, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000043d, 8) , (unique, 0x1000043d, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000043d, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x100003fc, 8) , (unique, 0x100003fc, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100003fc, 8)",
      "(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x0, 4) , (unique, 0x100003cb, 4)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000b6a, 8)",
      "(unique, 0x10000b6a, 8) CAST (register, 0x18, 8)",
      " ---  CBRANCH (ram, 0x1009f2, 1) , (unique, 0x1000070e, 1)",
      "(unique, 0x1000070f, 8) MULTIEQUAL (unique, 0x100008d6, 8) , (stack, 0xffffffffffffff48, 8)",
      "(unique, 0x10000717, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(unique, 0x1000071f, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(unique, 0x10000727, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)",
      "(unique, 0x1000072f, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)",
      "(unique, 0x10000737, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x1000073f, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x10000747, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x1000074f, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)",
      "(unique, 0x100008d6, 8) COPY (register, 0x30, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)",
      "(unique, 0x100006d0, 1) INT_NOTEQUAL (unique, 0x100006c8, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x1008b1, 1) , (unique, 0x100006d0, 1)",
      "(unique, 0x100006c8, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8)",
      "(unique, 0x100006d1, 8) MULTIEQUAL (unique, 0x10000717, 8) , (stack, 0xffffffffffffff18, 8)",
      "(unique, 0x100006d9, 8) MULTIEQUAL (unique, 0x1000071f, 8) , (stack, 0xffffffffffffff20, 8)",
      "(unique, 0x100006e1, 8) MULTIEQUAL (unique, 0x10000737, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x100006e9, 8) MULTIEQUAL (unique, 0x1000073f, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x100006f1, 8) MULTIEQUAL (unique, 0x10000747, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x10000b72, 8) INT_ADD (unique, 0x100006c8, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000b72, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0xdc00, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x10089e, 1) , (register, 0x206, 1)",
      " ---  CALL (ram, 0x1004b0, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x100006d1, 8) , (const, 0x25a, 4)",
      "(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x100006d9, 8) , (const, 0x25a, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100006e1, 8) , (const, 0x25a, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100006e9, 8) , (const, 0x25a, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100006f1, 8) , (const, 0x25a, 4)",
      "(unique, 0x10000b7a, 8) INT_ADD (unique, 0x100006c8, 8) , (const, 0x18, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000b7a, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x10000b82, 8) INT_ADD (unique, 0x100006c8, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      " ---  CALLIND (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (unique, 0x1000072f, 8) , (unique, 0xdc00, 8) , (unique, 0x10000727, 8) , (unique, 0x1000070f, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x26c, 4)",
      "(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x26c, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x26c, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x26c, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26c, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000b82, 8)",
      "(unique, 0x10000b8a, 8) INT_ADD (unique, 0x100006c8, 8) , (const, 0x20, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x100006d1, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x100006d9, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x100006e1, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100006e9, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100006f1, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000b8a, 8)",
      "(unique, 0x10000ba2, 8) INT_ADD (unique, 0x10000b9a, 8) , (const, 0x14, 8)",
      "(unique, 0x6b00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x6b00, 4) INT_ADD (unique, 0x6b00, 4) , (const, 0x1, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (unique, 0x6b00, 4)",
      "(stack, 0xffffffffffffff24, 4) SUBPIECE (unique, 0x1000076a, 8) , (const, 0x0, 4)",
      "(unique, 0x1000076a, 8) INT_RIGHT (unique, 0x10000b92, 8) , (const, 0x20, 4)",
      "(unique, 0x10000b92, 8) CAST (unique, 0x100006d9, 8)",
      "(unique, 0x10000b9a, 8) CAST (register, 0x30, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000ba2, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000baa, 8)",
      "(unique, 0x58a80, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a80, 1) , (const, 0x0, 1)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)",
      "(unique, 0x10000baa, 8) CAST (unique, 0x4400, 8)",
      " ---  CBRANCH (ram, 0x100f0b, 1) , (register, 0x206, 1)",
      "(unique, 0xe600, 1) INT_LESS (unique, 0x10000727, 8) , (unique, 0x1000070f, 8)",
      " ---  CBRANCH (ram, 0x10093d, 1) , (unique, 0xe600, 1)",
      "(unique, 0x100008b6, 4) COPY (unique, 0x1000074f, 4)",
      "(unique, 0x10000bba, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000bba, 8)",
      " ---  CALL (ram, 0x1004b0, 8) , (stack, 0xffffffffffffff68, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x100006d1, 8) , (const, 0x2be, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0xdc00, 8) , (const, 0x2be, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100006e9, 8) , (const, 0x2be, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100006f1, 8) , (const, 0x2be, 4)",
      "(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x2be, 4)",
      "(unique, 0x10000bca, 8) INT_AND (unique, 0x10000bc2, 8) , (const, 0xffffffff00000000, 8)",
      "(unique, 0x10000bc2, 8) CAST (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff18, 8) CAST (unique, 0x10000bca, 8)",
      "(unique, 0x10000bd2, 8) PIECE (stack, 0xffffffffffffff24, 4) , (stack, 0x10, 4)",
      "(stack, 0xffffffffffffff20, 8) CAST (unique, 0x10000bd2, 8)",
      "(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff68, 8) , (register, 0x0, 8) , (unique, 0x4400, 8) , (unique, 0x4f80, 8) , (unique, 0x1000070f, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2e4, 4)",
      "(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2e4, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2e4, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2e4, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2e4, 4)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4, 4)",
      " ---  CBRANCH (ram, 0x100a08, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000070f, 8) , (stack, 0xffffffffffffffa0, 8)",
      " ---  CBRANCH (ram, 0x100ee6, 1) , (register, 0x206, 1)",
      "(unique, 0x100008be, 4) COPY (register, 0x0, 4)",
      "(unique, 0x10000404, 1) INT_NOTEQUAL (unique, 0x10000405, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x100a1b, 1) , (unique, 0x10000404, 1)",
      "(unique, 0x1000040d, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (unique, 0x100006d1, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(unique, 0x10000415, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x100006d9, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(unique, 0x10000425, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x100006e1, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x1000042d, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x100006e9, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x10000435, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x100006f1, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0x10000405, 4) MULTIEQUAL (unique, 0x100008b2, 4) , (unique, 0x100008b6, 4) , (unique, 0x100008be, 4) , (unique, 0x100008be, 4) , (unique, 0x100008be, 4)",
      "(unique, 0x10000c52, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x10000415, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000425, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000042d, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000435, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000c52, 8)",
      "(unique, 0x10000c5a, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000c5a, 8)",
      "(unique, 0x10000c62, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000c62, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0xdc00, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x1006b5, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (stack, 0xffffffffffffff60, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      " ---  CBRANCH (ram, 0x100aa7, 1) , (register, 0x206, 1)",
      "(register, 0x8, 8) PTRADD (stack, 0xffffffffffffff50, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(register, 0x200, 1) INT_LESS (unique, 0xdc00, 8) , (register, 0x8, 8)",
      " ---  CBRANCH (ram, 0x100ecc, 1) , (register, 0x200, 1)",
      "(unique, 0x100007aa, 8) COPY (stack, 0xffffffffffffff60, 8)",
      "(unique, 0x100007b2, 8) COPY (stack, 0xffffffffffffff50, 8)",
      "(unique, 0x100007c2, 8) COPY (register, 0x8, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(register, 0x200, 1) INT_LESSEQUAL (unique, 0x4400, 8) , (unique, 0xdc00, 8)",
      " ---  CBRANCH (ram, 0x100ebc, 1) , (register, 0x200, 1)",
      "(unique, 0x100007ba, 8) COPY (register, 0x10, 8)",
      "(unique, 0x100007ca, 8) COPY (unique, 0x4400, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000c6a, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0x100007aa, 8) , (register, 0x0, 8)",
      "(register, 0x8, 8) MULTIEQUAL (unique, 0x100007b2, 8) , (unique, 0x100007ba, 8)",
      "(unique, 0x100007d2, 8) MULTIEQUAL (unique, 0x100007c2, 8) , (unique, 0x100007ca, 8)",
      "(register, 0x30, 8) INT_ZEXT (unique, 0xd980, 1)",
      "(register, 0x10, 8) COPY (unique, 0x100007d2, 8)",
      "(unique, 0x10000c6a, 8) CAST (register, 0x0, 8)",
      "(unique, 0x10000c7a, 8) INT_ADD (unique, 0x10000c72, 8) , (const, 0x1, 8)",
      "(unique, 0x10000c72, 8) CAST (register, 0x0, 8)",
      "(register, 0x0, 8) CAST (unique, 0x10000c7a, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8)",
      "(unique, 0x4600, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)",
      "(unique, 0x4700, 8) PTRADD (unique, 0x10000507, 8) , (unique, 0x4600, 8) , (const, 0x1, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c82, 8)",
      "(unique, 0x10000507, 8) PTRSUB (const, 0x0, 8) , (const, 0x101360, 8)",
      "(unique, 0x10000c82, 8) CAST (unique, 0x4700, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xdb00, 4)",
      " ---  CBRANCH (ram, 0x1009b0, 1) , (register, 0x206, 1)",
      "(register, 0x90, 4) COPY (const, 0x4, 4)",
      "(unique, 0x1000078a, 8) COPY (register, 0x8, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0x1000078a, 8) , (unique, 0x10000792, 8) , (unique, 0x1000079a, 8) , (unique, 0x100007a2, 8)",
      "(stack, 0xffffffffffffff48, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)",
      "(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000c8a, 8)",
      "(unique, 0x10000c8a, 8) CAST (register, 0x0, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0x1000070f, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000074f, 4) , (const, 0x5, 4)",
      " ---  CBRANCH (ram, 0x100946, 1) , (register, 0x206, 1)",
      "(unique, 0x100008b2, 4) COPY (unique, 0x1000074f, 4)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000425, 8) , (unique, 0x100006e1, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000042d, 8) , (unique, 0x100006e9, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000435, 8) , (unique, 0x100006f1, 8)",
      "(register, 0x90, 4) MULTIEQUAL (unique, 0x10000405, 4) , (unique, 0x1000074f, 4)",
      "(unique, 0x10000c02, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xdc80, 8) , (const, 0x0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000c02, 8)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x7, 4)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      "(unique, 0x10000c0a, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000c0a, 8)",
      "(register, 0x10, 8) COPY (const, 0x0, 8)",
      "(register, 0x8, 8) INT_SUB (unique, 0x10000c12, 8) , (unique, 0x10000c1a, 8)",
      "(unique, 0x10000c12, 8) CAST (register, 0x8, 8)",
      "(unique, 0x10000c1a, 8) CAST (unique, 0xdc00, 8)",
      "(unique, 0xed00, 1) INT_SLESS (register, 0x8, 8) , (const, 0x4, 8)",
      " ---  CBRANCH (ram, 0x100a65, 1) , (unique, 0xed00, 1)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000c22, 8)",
      "(unique, 0x10000c22, 8) CAST (register, 0x0, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0x10000c32, 8) INT_ADD (unique, 0x10000c2a, 8) , (const, 0x1, 8)",
      "(unique, 0x10000c2a, 8) CAST (register, 0x0, 8)",
      "(register, 0x0, 8) CAST (unique, 0x10000c32, 8)",
      "(unique, 0x4b80, 8) INT_ADD (unique, 0xdc00, 8) , (const, 0x4, 8)",
      "(unique, 0x10000c3a, 8) INT_ADD (unique, 0x4b80, 8) , (register, 0x10, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4d00, 8) , (unique, 0xd980, 1)",
      "(unique, 0x4d00, 8) CAST (unique, 0x10000c3a, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000c42, 8)",
      "(unique, 0x10000c42, 8) CAST (register, 0x0, 8)",
      "(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0xdc00, 8) , (register, 0x0, 8)",
      "(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)",
      "(unique, 0xe680, 1) INT_LESS (register, 0x0, 8) , (register, 0x8, 8)",
      " ---  CBRANCH (ram, 0x100a4e, 1) , (unique, 0xe680, 1)",
      "(unique, 0x10000c4a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000c4a, 8)",
      "(unique, 0x6780, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(unique, 0x6780, 4) INT_AND (unique, 0x6780, 4) , (const, 0xfffffff8, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0xdc00, 8) , (unique, 0x6780, 4)",
      "(unique, 0x6780, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(unique, 0x6780, 4) INT_OR (unique, 0x6780, 4) , (register, 0x10, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0xdc00, 8) , (unique, 0x6780, 4)",
      "(register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)",
      "(register, 0x0, 4) COPY (register, 0x90, 4)",
      "(register, 0x0, 4) COPY (register, 0x0, 4)",
      "(register, 0x0, 4) COPY (const, 0x0, 4)",
      "(register, 0x0, 4) COPY (const, 0x6, 4)",
      "(register, 0x0, 4) COPY (const, 0x5, 4)",
      "(register, 0x0, 4) COPY (const, 0x7, 4)",
      "(register, 0x0, 4) COPY (const, 0x7, 4)",
      "(register, 0x0, 4) COPY (register, 0x90, 4)",
      "(register, 0x0, 4) COPY (register, 0x90, 4)",
      "(register, 0x0, 4) COPY (unique, 0x1000074f, 4)",
      "(register, 0x0, 4) COPY (const, 0x7, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)",
      "(unique, 0x1000097e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x1000097e, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0x100001d8, 4) , (const, 0x0, 4)",
      "(unique, 0x100001d8, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x7, 4)",
      " ---  CBRANCH (ram, 0x100abf, 1) , (register, 0x206, 1)",
      "(unique, 0x10000986, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000986, 8)",
      " ---  BRANCH (ram, 0x100697, 1)",
      "(register, 0x90, 4) COPY (const, 0x4, 4)",
      "(stack, 0xffffffffffffff48, 8) COPY (stack, 0xffffffffffffff50, 8)",
      " ---  BRANCH (ram, 0x1009e2, 1)",
      "(unique, 0x100007a2, 8) COPY (register, 0x8, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100bd1, 1) , (register, 0x206, 1)",
      "(unique, 0x1000098e, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x1000098e, 8)",
      "(stack, 0xffffffffffffffa8, 8) COPY (stack, 0xffffffffffffff50, 8)",
      "(register, 0x0, 8) COPY (const, 0x0, 8)",
      "(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)",
      "(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)",
      "(register, 0x8, 8) INT_ZEXT (register, 0x8, 4)",
      "(register, 0x8, 4) MULTIEQUAL (unique, 0xdb00, 4) , (unique, 0xdb00, 4)",
      "(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)",
      "(register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x8, 8)",
      " ---  CBRANCH (ram, 0x100b06, 1) , (register, 0x200, 1)",
      "(unique, 0x1000099e, 8) INT_ADD (unique, 0x10000996, 8) , (unique, 0x100005cf, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4d00, 8)",
      "(unique, 0x100005cf, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)",
      "(unique, 0x10000996, 8) CAST (unique, 0xdc00, 8)",
      "(unique, 0x4d00, 8) CAST (unique, 0x1000099e, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4700, 8) , (unique, 0xd980, 1)",
      "(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x66d, 4)",
      "(unique, 0x100005d7, 8) INT_SUB (register, 0x0, 8) , (const, 0x4, 8)",
      "(unique, 0x100005df, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)",
      "(unique, 0x100009ae, 8) INT_ADD (unique, 0x100009a6, 8) , (unique, 0x100005d7, 8)",
      "(unique, 0x100009a6, 8) CAST (unique, 0x100005df, 8)",
      "(unique, 0x4700, 8) CAST (unique, 0x100009ae, 8)",
      "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      " ---  BRANCH (ram, 0x100aee, 1)",
      "(unique, 0x100009be, 8) INT_ADD (unique, 0x100009b6, 8) , (unique, 0x100005ef, 8)",
      "(unique, 0x100005ef, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)",
      "(unique, 0x100009b6, 8) CAST (unique, 0xdc00, 8)",
      "(register, 0x8, 8) CAST (unique, 0x100009be, 8)",
      "(register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x8, 8)",
      " ---  CBRANCH (ram, 0x100ba0, 1) , (register, 0x200, 1)",
      "(register, 0x200, 1) INT_LESSEQUAL (unique, 0xdc00, 8) , (stack, 0xffffffffffffff50, 8)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x200, 1)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)",
      "(unique, 0x100009fe, 8) INT_ADD (unique, 0x100009f6, 8) , (register, 0x0, 8)",
      "(unique, 0x100009f6, 8) CAST (unique, 0x4f80, 8)",
      "(register, 0x8, 8) CAST (unique, 0x100009fe, 8)",
      " ---  BRANCH (ram, 0x100b47, 1)",
      "(unique, 0xe680, 1) INT_LESS (register, 0x0, 8) , (const, 0x4, 8)",
      " ---  CBRANCH (ram, 0x100b66, 1) , (unique, 0xe680, 1)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a06, 8)",
      "(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)",
      "(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)",
      "(register, 0x10, 8) MULTIEQUAL (unique, 0xdc00, 8) , (register, 0x10, 8)",
      "(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)",
      "(unique, 0x10000a06, 8) CAST (register, 0x10, 8)",
      "(unique, 0x10000a16, 8) INT_ADD (unique, 0x10000a0e, 8) , (const, 0x1, 8)",
      "(unique, 0x10000a0e, 8) CAST (register, 0x10, 8)",
      "(register, 0x10, 8) CAST (unique, 0x10000a16, 8)",
      "(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xd980, 1)",
      "(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x6d3, 4)",
      "(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      "(unique, 0xe680, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x10, 8)",
      " ---  CBRANCH (ram, 0x100b41, 1) , (unique, 0xe680, 1)",
      "(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x101220, 8)",
      "(unique, 0x10000a26, 8) INT_ADD (unique, 0x10000a1e, 8) , (register, 0x0, 8)",
      "(unique, 0x10000a1e, 8) CAST (unique, 0x4f80, 8)",
      "(register, 0x98, 8) CAST (unique, 0x10000a26, 8)",
      "(unique, 0xe780, 1) INT_LESS (unique, 0x10000a2e, 4) , (const, 0xffff, 4)",
      " ---  CBRANCH (ram, 0x100cc0, 1) , (unique, 0xe780, 1)",
      "(unique, 0x10000a2e, 4) CAST (stack, 0xffffffffffffffb8, 4)",
      "(unique, 0xda80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x2, 8)",
      "(register, 0x8, 4) INT_ZEXT (unique, 0xda80, 2)",
      "(unique, 0xe600, 1) INT_LESS (register, 0x8, 4) , (unique, 0x10000a36, 4)",
      " ---  CBRANCH (ram, 0x100bf0, 1) , (unique, 0xe600, 1)",
      "(unique, 0x10000a36, 4) CAST (stack, 0xffffffffffffffb8, 4)",
      "(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x2, 8)",
      " ---  BRANCH (ram, 0x100b92, 1)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100009c6, 8)",
      "(unique, 0x100009c6, 8) CAST (register, 0x8, 8)",
      "(unique, 0x100009d6, 8) INT_ADD (unique, 0x100009ce, 8) , (unique, 0x1000060f, 8)",
      "(unique, 0x1000060f, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)",
      "(unique, 0x100009ce, 8) CAST (unique, 0xdc00, 8)",
      "(unique, 0x4d00, 8) CAST (unique, 0x100009d6, 8)",
      "(register, 0x0, 8) MULTIEQUAL (unique, 0x4d00, 8) , (register, 0x0, 8)",
      "(register, 0x10, 8) MULTIEQUAL (unique, 0xdc00, 8) , (register, 0x10, 8)",
      "(unique, 0xe600, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)",
      " ---  CBRANCH (ram, 0x100a73, 1) , (unique, 0xe600, 1)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009de, 8)",
      "(unique, 0x100009de, 8) CAST (register, 0x10, 8)",
      "(unique, 0x100009ee, 8) INT_ADD (unique, 0x100009e6, 8) , (const, 0x1, 8)",
      "(unique, 0x100009e6, 8) CAST (register, 0x10, 8)",
      "(register, 0x10, 8) CAST (unique, 0x100009ee, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xd980, 1)",
      "(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      " ---  BRANCH (ram, 0x100bb1, 1)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x10000467, 8) , (unique, 0x1000044f, 8) , (const, 0x22f, 4) , (unique, 0x100004b7, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa1f, 4)",
      "(unique, 0x1000044f, 8) COPY (const, 0x101120, 8)",
      "(unique, 0x10000467, 8) COPY (const, 0x101134, 8)",
      "(unique, 0x100004b7, 8) COPY (const, 0x1011a5, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100c21, 1) , (register, 0x206, 1)",
      "(unique, 0xda80, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(register, 0x200, 1) INT_LESS (unique, 0x10000a3a, 4) , (register, 0x8, 4)",
      "(register, 0x8, 4) INT_ZEXT (unique, 0xda80, 2)",
      "(unique, 0x10000a3a, 4) CAST (stack, 0xffffffffffffffb8, 4)",
      " ---  CBRANCH (ram, 0x100c21, 1) , (register, 0x200, 1)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a3e, 8)",
      "(register, 0x8, 4) INT_ADD (unique, 0x10000a46, 4) , (unique, 0xdb00, 4)",
      "(register, 0x8, 8) INT_ZEXT (unique, 0x10000a4a, 4)",
      "(unique, 0x4400, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x2, 8)",
      "(unique, 0x10000a3e, 8) CAST (unique, 0x4400, 8)",
      "(unique, 0x10000a46, 4) CAST (stack, 0xffffffffffffffb8, 4)",
      "(unique, 0x10000a4a, 4) CAST (register, 0x8, 4)",
      "(unique, 0x4700, 8) PTRADD (unique, 0x100004ff, 8) , (register, 0x8, 8) , (const, 0x1, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4700, 8)",
      "(unique, 0x100004ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x101240, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xd980, 1) , (const, 0x0, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x100d2e, 1) , (unique, 0x1000044c, 1)",
      "(unique, 0x1000044c, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)",
      "(unique, 0x4f80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)",
      "(unique, 0x10000a4e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000a4e, 8)",
      " ---  BRANCH (ram, 0x100ca0, 1)",
      "(unique, 0x10000852, 8) COPY (unique, 0x10000a56, 8)",
      "(unique, 0x10000a56, 8) CAST (unique, 0x4f80, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
      " ---  CALL (ram, 0x1004b0, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x931, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x931, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x931, 4)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0xb8, 8) , (const, 0x3, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x10000a5e, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)",
      "(register, 0x0, 4) CALLIND (unique, 0xdc00, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0xdc00, 8) , (unique, 0xdc00, 8) , (unique, 0x4f80, 8) , (register, 0x98, 8) , (unique, 0x4f80, 8) , (register, 0xa0, 8)",
      "(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x10000832, 8) , (const, 0x94e, 4)",
      "(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000842, 8) , (const, 0x94e, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x94e, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x94e, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x94e, 4)",
      "(unique, 0x10000832, 8) COPY (unique, 0x4f80, 8)",
      "(unique, 0x10000842, 8) COPY (register, 0xa0, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000a5e, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6, 4)",
      " ---  CBRANCH (ram, 0x100da2, 1) , (register, 0x206, 1)",
      "(unique, 0x10000a66, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000a66, 8)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)",
      "(register, 0xb8, 8) MULTIEQUAL (unique, 0xdc00, 8) , (unique, 0xdc00, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000852, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      " ---  CBRANCH (ram, 0x100c50, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0x100003c7, 4) , (const, 0x0, 4)",
      "(unique, 0x100003c7, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x2, 4)",
      " ---  CBRANCH (ram, 0x100e1d, 1) , (register, 0x206, 1)",
      "(register, 0x90, 4) COPY (const, 0x6, 4)",
      " ---  BRANCH (ram, 0x100ce2, 1)",
      "(register, 0x0, 4) INT_RIGHT (unique, 0x10000a32, 4) , (const, 0x7, 4)",
      "(unique, 0x10000a32, 4) CAST (stack, 0xffffffffffffffb8, 4)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1c00, 4)",
      " ---  CBRANCH (ram, 0x100c21, 1) , (register, 0x206, 1)",
      "(register, 0x90, 4) COPY (const, 0x0, 4)",
      "(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)",
      "(register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000a86, 8)",
      "(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)",
      "(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)",
      "(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffa0, 8)",
      "(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)",
      "(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)",
      "(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x0, 4)",
      "(unique, 0x10000a86, 8) CAST (unique, 0x4f80, 8)",
      " ---  CBRANCH (ram, 0x100d7c, 1) , (register, 0x206, 1)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(register, 0x0, 8) INT_SUB (unique, 0x10000a8e, 8) , (unique, 0x10000a96, 8)",
      "(unique, 0x10000a8e, 8) CAST (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x10000a96, 8) CAST (unique, 0x4f80, 8)",
      "(register, 0x10, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x7, 4)",
      "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
      "(unique, 0xed00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (unique, 0x10000a9e, 8)",
      " ---  CBRANCH (ram, 0x100d5d, 1) , (unique, 0xed00, 1)",
      "(unique, 0x10000a9e, 8) CAST (register, 0x10, 8)",
      "(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x6780, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(unique, 0x6780, 4) INT_AND (unique, 0x6780, 4) , (const, 0xfffffff8, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0xdc00, 8) , (unique, 0x6780, 4)",
      "(unique, 0x10000aa6, 8) INT_ADD (register, 0x0, 8) , (unique, 0xdc00, 8)",
      "(register, 0x0, 8) CAST (unique, 0x10000aa6, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000aae, 8)",
      "(unique, 0x10000aae, 8) CAST (register, 0x0, 8)",
      "(unique, 0xdc00, 8) COPY (stack, 0xffffffffffffffa8, 8)",
      "(unique, 0x10000ab6, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000ab6, 8)",
      " ---  BRANCH (ram, 0x100697, 1)",
      "(register, 0x90, 4) COPY (const, 0x0, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a6e, 8) , (unique, 0xd980, 1)",
      "(unique, 0x10000a6e, 8) CAST (stack, 0xffffffffffffff50, 8)",
      "(unique, 0x10000a7e, 8) INT_ADD (unique, 0x10000a76, 8) , (const, 0x1, 8)",
      "(unique, 0x10000a76, 8) CAST (stack, 0xffffffffffffff50, 8)",
      "(register, 0x0, 8) CAST (unique, 0x10000a7e, 8)",
      "(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)",
      " ---  BRANCH (ram, 0x100ce2, 1)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x100004e7, 8) , (unique, 0x10000477, 8) , (const, 0x1bc, 4) , (unique, 0x100004c7, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x817, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x817, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x817, 4)",
      "(unique, 0x10000477, 8) COPY (const, 0x10114f, 8)",
      "(unique, 0x100004c7, 8) COPY (const, 0x1011ab, 8)",
      "(unique, 0x100004e7, 8) COPY (const, 0x1011c0, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x7, 4)",
      " ---  CBRANCH (ram, 0x100daf, 1) , (register, 0x206, 1)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      "(unique, 0x10000b1a, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000b1a, 8)",
      "(unique, 0x10000b22, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000b22, 8)",
      " ---  BRANCH (ram, 0x100697, 1)",
      "(unique, 0x4400, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (unique, 0x4400, 8)",
      " ---  CBRANCH (ram, 0x100e7f, 1) , (register, 0x206, 1)",
      "(unique, 0xdb00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xdc00, 8)",
      "(register, 0x8, 4) INT_AND (unique, 0xdb00, 4) , (const, 0xfffffff8, 4)",
      "(register, 0x10, 4) INT_AND (unique, 0xdb00, 4) , (const, 0x7, 4)",
      "(register, 0x10, 8) INT_ZEXT (register, 0x10, 4)",
      "(register, 0x30, 8) INT_SEXT (unique, 0x10000abe, 4)",
      "(unique, 0x10000abe, 4) CAST (register, 0x8, 4)",
      "(unique, 0x10000293, 8) INT_2COMP (register, 0x10, 8)",
      "(unique, 0x1000065f, 8) INT_SUB (unique, 0x10000293, 8) , (unique, 0x10000ac2, 8)",
      "(unique, 0x10000ac2, 8) CAST (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x6800, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x10000ad2, 8) INT_ADD (unique, 0x10000aca, 8) , (unique, 0x10000667, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x6800, 8)",
      "(unique, 0x10000667, 8) INT_ADD (unique, 0x6800, 8) , (unique, 0x1000065f, 8)",
      "(unique, 0x10000aca, 8) CAST (register, 0x98, 8)",
      "(unique, 0x6800, 8) CAST (unique, 0x10000ad2, 8)",
      "(register, 0x10, 8) INT_SUB (unique, 0x10000ada, 8) , (unique, 0x10000ae2, 8)",
      "(unique, 0x10000ada, 8) CAST (register, 0x98, 8)",
      "(unique, 0x10000ae2, 8) CAST (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0xed00, 1) INT_SLESSEQUAL (register, 0x10, 8) , (register, 0x30, 8)",
      " ---  CBRANCH (ram, 0x100e60, 1) , (unique, 0xed00, 1)",
      "(unique, 0xef00, 1) INT_SLESS (const, 0x7, 8) , (register, 0x10, 8)",
      " ---  CBRANCH (ram, 0x100e41, 1) , (unique, 0xef00, 1)",
      "(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4)",
      "(register, 0x0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4)",
      "(register, 0x10, 4) SUBPIECE (register, 0x98, 8) , (const, 0x0, 4)",
      "(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0xdc00, 8) , (register, 0x10, 4)",
      "(register, 0x0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x0, 8)",
      "(register, 0x18, 8) MULTIEQUAL (unique, 0xdc00, 8) , (register, 0x18, 8)",
      "(unique, 0xe600, 1) INT_LESS (register, 0x0, 8) , (register, 0x98, 8)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (unique, 0xe600, 1)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000aea, 8)",
      "(unique, 0x10000aea, 8) CAST (register, 0x0, 8)",
      "(unique, 0x10000b12, 8) INT_ADD (unique, 0x10000b0a, 8) , (const, 0x1, 8)",
      "(unique, 0x10000b0a, 8) CAST (register, 0x0, 8)",
      "(register, 0x0, 8) CAST (unique, 0x10000b12, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x10000af2, 8) , (unique, 0xd980, 1)",
      "(unique, 0x4400, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      "(unique, 0x10000af2, 8) CAST (unique, 0x4400, 8)",
      "(unique, 0x10000b02, 8) INT_ADD (unique, 0x10000afa, 8) , (const, 0x1, 8)",
      "(unique, 0x10000afa, 8) CAST (register, 0x18, 8)",
      "(register, 0x18, 8) CAST (unique, 0x10000b02, 8)",
      " ---  BRANCH (ram, 0x100dfc, 1)",
      "(unique, 0x6b80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)",
      "(unique, 0x6b80, 8) INT_ADD (unique, 0x6b80, 8) , (const, 0x1, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0x6b80, 8)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x912, 4)",
      "(register, 0x90, 4) COPY (const, 0x6, 4)",
      "(register, 0x0, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)",
      " ---  BRANCH (ram, 0x100ce2, 1)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x1000049f, 8) , (unique, 0x1000047f, 8) , (const, 0x1d9, 4) , (unique, 0x100004cf, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x8f4, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x8f4, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8f4, 4)",
      "(unique, 0x1000047f, 8) COPY (const, 0x10114f, 8)",
      "(unique, 0x1000049f, 8) COPY (const, 0x101174, 8)",
      "(unique, 0x100004cf, 8) COPY (const, 0x1011ab, 8)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x100004ef, 8) , (unique, 0x10000487, 8) , (const, 0x1d8, 4) , (unique, 0x100004d7, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x8fd, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x8fd, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8fd, 4)",
      "(unique, 0x10000487, 8) COPY (const, 0x10114f, 8)",
      "(unique, 0x100004d7, 8) COPY (const, 0x1011ab, 8)",
      "(unique, 0x100004ef, 8) COPY (const, 0x1011e8, 8)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x10000497, 8) , (unique, 0x1000048f, 8) , (const, 0x1ce, 4) , (unique, 0x100004df, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x906, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x906, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x906, 4)",
      "(unique, 0x1000048f, 8) COPY (const, 0x10114f, 8)",
      "(unique, 0x10000497, 8) COPY (const, 0x10115f, 8)",
      "(unique, 0x100004df, 8) COPY (const, 0x1011ab, 8)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x100004a7, 8) , (unique, 0x10000457, 8) , (const, 0x312, 4) , (unique, 0x100004af, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x443, 4)",
      "(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x443, 4)",
      "(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x443, 4)",
      "(unique, 0x10000457, 8) COPY (const, 0x101120, 8)",
      "(unique, 0x100004a7, 8) COPY (const, 0x101187, 8)",
      "(unique, 0x100004af, 8) COPY (const, 0x1011a5, 8)",
      "(register, 0x90, 4) COPY (const, 0x5, 4)",
      " ---  BRANCH (ram, 0x1009e2, 1)",
      "(unique, 0x10000792, 8) COPY (register, 0x0, 8)",
      "(register, 0x90, 4) COPY (const, 0x5, 4)",
      "(stack, 0xffffffffffffff48, 8) COPY (stack, 0xffffffffffffff50, 8)",
      " ---  BRANCH (ram, 0x1009e2, 1)",
      "(unique, 0x10000782, 8) COPY (stack, 0xffffffffffffff60, 8)",
      "(unique, 0x1000079a, 8) COPY (unique, 0x10000782, 8)",
      "(unique, 0x10000bda, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      "(unique, 0xdc80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xdc80, 8) , (const, 0x0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000bda, 8)",
      " ---  CBRANCH (ram, 0x100fc4, 1) , (register, 0x206, 1)",
      "(register, 0x0, 8) INT_SUB (unique, 0x10000be2, 8) , (unique, 0x10000bea, 8)",
      "(unique, 0x10000be2, 8) CAST (stack, 0xffffffffffffffa0, 8)",
      "(unique, 0x10000bea, 8) CAST (unique, 0x1000070f, 8)",
      "(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)",
      "(unique, 0x6800, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x6800, 8) INT_ADD (unique, 0x6800, 8) , (register, 0x0, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x6800, 8)",
      " ---  BRANCH (ram, 0x10093d, 1)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x10000bb2, 8)",
      "(unique, 0x10000bb2, 8) CAST (unique, 0x1000070f, 8)",
      "(unique, 0x6800, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)",
      "(unique, 0x6800, 8) INT_ADD (unique, 0x6800, 8) , (unique, 0x100006f1, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0x6800, 8)",
      " ---  BRANCH (ram, 0x100a1b, 1)",
      "(register, 0x90, 4) COPY (const, 0x5, 4)",
      " ---  BRANCH (ram, 0x100846, 1)",
      "(unique, 0x1000080a, 8) COPY (unique, 0x100003f4, 8)",
      "(register, 0x90, 4) COPY (const, 0x7, 4)",
      " ---  BRANCH (ram, 0x100846, 1)",
      "(unique, 0x10000812, 8) COPY (unique, 0x100003f4, 8)",
      "(unique, 0x10000956, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000956, 8)",
      " ---  BRANCH (ram, 0x100648, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x101003, 1) , (register, 0x206, 1)",
      "(unique, 0x10000946, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)",
      "(unique, 0xdc00, 8) CAST (unique, 0x10000946, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0xdc00, 8) , (const, 0x0, 8)",
      "(unique, 0xd980, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000094e, 8)",
      "(unique, 0x58a80, 1) INT_AND (unique, 0xd980, 1) , (const, 0x1, 1)",
      "(register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a80, 1) , (const, 0x0, 1)",
      "(unique, 0x4400, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)",
      "(unique, 0x1000094e, 8) CAST (unique, 0x4400, 8)",
      " ---  CBRANCH (ram, 0x100a79, 1) , (register, 0x206, 1)",
      " ---  CALL (ram, 0x1004b0, 8) , (stack, 0xffffffffffffff68, 8)",
      "(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xa5a, 4)",
      "(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xa5a, 4)",
      "(stack, 0xffffffffffffff18, 8) PIECE (stack, 0xffffffffffffff1c, 4) , (stack, 0x8, 4)",
      "(stack, 0xffffffffffffff20, 8) PIECE (stack, 0xffffffffffffff24, 4) , (stack, 0x10, 4)",
      "(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff68, 8) , (register, 0x0, 8) , (unique, 0x4400, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff20, 8)",
      "(register, 0x10, 8) INT_SUB (unique, 0x10000bf2, 8) , (unique, 0x10000bfa, 8)",
      "(unique, 0x10000bf2, 8) CAST (unique, 0x1000070f, 8)",
      "(unique, 0x10000bfa, 8) CAST (stack, 0xffffffffffffffa0, 8)",
      "(register, 0x0, 8) INT_SDIV (register, 0x10, 8) , (const, 0x4, 8)",
      "(unique, 0x6800, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)",
      "(unique, 0x6800, 8) INT_SUB (unique, 0x6800, 8) , (register, 0x0, 8)",
      " ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x6800, 8)",
      " ---  BRANCH (ram, 0x10093a, 1)",
      "(register, 0x8, 4) INT_RIGHT (unique, 0xdb00, 4) , (const, 0x7, 4)",
      "(register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x1c00, 4)",
      " ---  CBRANCH (ram, 0x100766, 1) , (register, 0x206, 1)",
      "(unique, 0x100008a2, 8) COPY (unique, 0x4400, 8)",
      " ---  CALL (ram, 0x1004a0, 8) , (unique, 0x1000046f, 8) , (unique, 0x1000045f, 8) , (const, 0x1a0, 4) , (unique, 0x100004bf, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(unique, 0x1000045f, 8) COPY (const, 0x101120, 8)",
      "(unique, 0x1000046f, 8) COPY (const, 0x101134, 8)",
      "(unique, 0x100004bf, 8) COPY (const, 0x1011a5, 8)"
    ],
    "0x00100570": [
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x00100470": [
      " ---  CALL (ram, 0x1004d0, 8) , (register, 0x10, 8) , (const, 0x100479, 8)",
      " ---  CALL (ram, 0x100570, 8)",
      " ---  CALL (ram, 0x1010d0, 8)",
      " ---  RETURN (const, 0x0, 8)"
    ],
    "0x00101030": [
      "(unique, 0x1000008c, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x1000008c, 8)",
      "(register, 0x8, 8) COPY (const, 0xa, 8)",
      "(register, 0x38, 8) COPY (const, 0x10119b, 8)",
      "(unique, 0x1000005c, 8) COPY (unique, 0xdc00, 8)",
      "(unique, 0x1000007c, 8) COPY (register, 0x38, 8)",
      "(unique, 0xf480, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x101048, 1) , (unique, 0xf480, 1)",
      "(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)",
      "(unique, 0xcd80, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      "(unique, 0xc180, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      "(unique, 0xcf80, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
      "(unique, 0xc380, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xc380, 1) , (unique, 0xcf80, 1)",
      " ---  CBRANCH (ram, 0x101046, 1) , (unique, 0x10000094, 1)",
      "(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)",
      "(register, 0x30, 8) MULTIEQUAL (unique, 0x1000005c, 8) , (unique, 0x10000064, 8)",
      "(register, 0x38, 8) MULTIEQUAL (unique, 0x1000007c, 8) , (unique, 0x10000084, 8)",
      "(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)",
      "(unique, 0x10000064, 8) COPY (unique, 0xc180, 8)",
      "(unique, 0x10000084, 8) COPY (unique, 0xcd80, 8)",
      "(unique, 0x10000094, 1) CAST (register, 0x206, 1)",
      " ---  CBRANCH (ram, 0x101088, 1) , (unique, 0x10000095, 1)",
      "(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)",
      "(unique, 0x10000095, 1) CAST (register, 0x206, 1)",
      "(unique, 0x100000d0, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000d0, 8)",
      "(unique, 0x100000d8, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x1, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000d8, 8)",
      "(unique, 0x100000e0, 8) INT_ADD (register, 0x38, 8) , (const, 0x4c, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x1, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000e0, 8)",
      "(unique, 0x100000e8, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x4, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000e8, 8)",
      "(unique, 0x100000f0, 8) INT_ADD (register, 0x38, 8) , (const, 0x54, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x4, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000f0, 8)",
      "(unique, 0x100000f8, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (unique, 0x10000044, 8)",
      "(unique, 0x10000044, 8) PTRSUB (const, 0x0, 8) , (const, 0x1005a0, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000f8, 8)",
      "(unique, 0x10000100, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x0, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000100, 8)",
      "(register, 0x0, 8) COPY (const, 0x0, 8)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)",
      "(unique, 0x10000096, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)",
      "(unique, 0xdc00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4400, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x10000096, 8)",
      "(register, 0x8, 8) COPY (const, 0xa, 8)",
      "(register, 0x38, 8) COPY (const, 0x10119b, 8)",
      "(unique, 0x1000004c, 8) COPY (unique, 0xdc00, 8)",
      "(unique, 0x1000006c, 8) COPY (register, 0x38, 8)",
      "(unique, 0xf480, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)",
      " ---  CBRANCH (ram, 0x101096, 1) , (unique, 0xf480, 1)",
      "(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)",
      "(unique, 0xcd80, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      "(unique, 0xc180, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)",
      "(unique, 0xcf80, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)",
      "(unique, 0xc380, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)",
      "(register, 0x206, 1) INT_EQUAL (unique, 0xc380, 1) , (unique, 0xcf80, 1)",
      " ---  CBRANCH (ram, 0x101094, 1) , (unique, 0x1000009e, 1)",
      "(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)",
      "(register, 0x30, 8) MULTIEQUAL (unique, 0x1000004c, 8) , (unique, 0x10000054, 8)",
      "(register, 0x38, 8) MULTIEQUAL (unique, 0x1000006c, 8) , (unique, 0x10000074, 8)",
      "(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)",
      "(unique, 0x10000054, 8) COPY (unique, 0xc180, 8)",
      "(unique, 0x10000074, 8) COPY (unique, 0xcd80, 8)",
      "(unique, 0x1000009e, 1) CAST (register, 0x206, 1)",
      " ---  CBRANCH (ram, 0x1010c6, 1) , (unique, 0x1000009f, 1)",
      "(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)",
      "(unique, 0x1000009f, 1) CAST (register, 0x206, 1)",
      "(unique, 0x100000a0, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0xffffffffffffffff, 8)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000a0, 8)",
      "(unique, 0x100000a8, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x4, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000a8, 8)",
      "(unique, 0x100000b0, 8) INT_ADD (register, 0x38, 8) , (const, 0x4c, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x4, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000b0, 8)",
      "(unique, 0x100000b8, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x1, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000b8, 8)",
      "(unique, 0x100000c0, 8) INT_ADD (register, 0x38, 8) , (const, 0x54, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x1, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000c0, 8)",
      "(unique, 0x100000c8, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8)",
      " ---  STORE (const, 0x1b1, 4) , (unique, 0x4400, 8) , (const, 0x0, 4)",
      "(unique, 0x4400, 8) CAST (unique, 0x100000c8, 8)",
      "(register, 0x0, 8) COPY (const, 0x0, 8)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)",
      "(register, 0x0, 8) COPY (const, 0x1, 8)",
      " ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)"
    ],
    "0x00100490": [
      " ---  CALLIND (unique, 0x10000011, 8)",
      " ---  RETURN (const, 0x1, 4)",
      "(unique, 0x10000011, 8) CAST (const, 0x0, 8)"
    ],
    "0x00101108": [
      " ---  CALL (ram, 0x1004f0, 8)",
      " ---  RETURN (const, 0x0, 8)"
    ]
  },
  "callees": {
    "0x001004f0": [
      "0x00101108"
    ],
    "0x00303020": [
      "0x001004c0"
    ],
    "0x00303010": [
      "0x001004b0"
    ],
    "0x001004d0": [
      "0x00100470"
    ],
    "0x00303000": [
      "0x001004a0"
    ],
    "0x001010d0": [
      "0x00100470"
    ],
    "0x00303018": [
      "0x00100570"
    ],
    "0x00303008": [
      "0x001004d0"
    ],
    "0x001004b0": [
      "0x001005b0"
    ],
    "0x001004c0": [
      "0x001004f0"
    ],
    "0x001005a0": [
      "0x00101030"
    ],
    "0x001004a0": [
      "0x001005b0"
    ],
    "0x001005b0": [],
    "0x00100570": [
      "0x00100470"
    ],
    "0x00100470": [],
    "0x00101030": [],
    "0x00100490": [],
    "0x00101108": []
  },
  "func_features": {
    "0x001004f0": [
      1,
      1,
      0,
      0
    ],
    "0x00303020": [
      1,
      0,
      0,
      0
    ],
    "0x00303010": [
      1,
      0,
      0,
      0
    ],
    "0x001004d0": [
      1,
      1,
      0,
      0
    ],
    "0x00303000": [
      1,
      0,
      4,
      0
    ],
    "0x001010d0": [
      1,
      0,
      0,
      0
    ],
    "0x00303018": [
      1,
      0,
      0,
      0
    ],
    "0x00303008": [
      1,
      0,
      0,
      0
    ],
    "0x001004b0": [
      1,
      1,
      0,
      0
    ],
    "0x001004c0": [
      1,
      1,
      0,
      0
    ],
    "0x001005a0": [
      1,
      0,
      2,
      0
    ],
    "0x001004a0": [
      1,
      1,
      4,
      0
    ],
    "0x001005b0": [
      0,
      2,
      8,
      0
    ],
    "0x00100570": [
      1,
      1,
      0,
      0
    ],
    "0x00100470": [
      0,
      3,
      3,
      0
    ],
    "0x00101030": [
      0,
      1,
      1,
      0
    ],
    "0x00100490": [
      0,
      0,
      0,
      0
    ],
    "0x00101108": [
      0,
      1,
      0,
      0
    ]
  },
  "callers": {
    "0x001004f0": [
      "0x001004c0"
    ],
    "0x00303020": [],
    "0x00303010": [],
    "0x001004d0": [
      "0x00303008"
    ],
    "0x00303000": [],
    "0x001010d0": [],
    "0x00303018": [],
    "0x00303008": [],
    "0x001004b0": [
      "0x00303010"
    ],
    "0x001004c0": [
      "0x00303020"
    ],
    "0x001005a0": [],
    "0x001004a0": [
      "0x00303000"
    ],
    "0x001005b0": [
      "0x001004b0",
      "0x001004a0"
    ],
    "0x00100570": [
      "0x00303018"
    ],
    "0x00100470": [
      "0x00100570",
      "0x001010d0",
      "0x001004d0"
    ],
    "0x00101030": [
      "0x001005a0"
    ],
    "0x00100490": [],
    "0x00101108": [
      "0x001004f0"
    ]
  }
}