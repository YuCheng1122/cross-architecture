Label: 525
Function: strncmp
Architecture: mips
Source File: Unknown
Entry Point: 00437ee0

P-code:

00437ee0: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

00437ee4: addiu gp,gp,0x2f80
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x2f80, 4)

00437ee8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00437eec: subu t0,zero,a0
	(register, 0x20, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)

00437ef0: andi t0,t0,0x3
	(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0x3, 4)

00437ef4: sltu v0,a2,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00437ef8: beq v0,zero,0x00437f04
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x437f04, 4) , (unique, 0x1200, 1)

00437efc: _or t1,t0,zero
	(register, 0x24, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

00437f00: or t1,a2,zero
	(register, 0x24, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00437f04: beq t1,zero,0x00437f44
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x437f44, 4) , (unique, 0x1200, 1)

00437f08: _addu a3,a0,t1
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x24, 4)

00437f0c: b 0x00437f24
	 ---  BRANCH (ram, 0x437f24, 4)

00437f10: _nop

00437f14: bne v0,zero,0x00437f3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x437f3c, 4) , (unique, 0x1700, 1)

00437f18: _nop

00437f1c: beq a0,a3,0x00437f48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x437f48, 4) , (unique, 0x1200, 1)

00437f20: _nop

00437f24: lbu v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00437f28: lbu v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00437f2c: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

00437f30: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

00437f34: bne v1,zero,0x00437f14
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x437f14, 4) , (unique, 0x1700, 1)

00437f38: _subu v0,v1,v0
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

00437f3c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00437f40: _nop

00437f44: or a3,a0,zero
	(register, 0x1c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00437f48: sltu t0,t0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x18, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

00437f4c: beq t0,zero,0x00438200
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x438200, 4) , (unique, 0x1200, 1)

00437f50: _nop

00437f54: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

00437f58: andi t0,a1,0x3
	(register, 0x20, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)

00437f5c: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00437f60: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00437f64: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00437f68: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00437f6c: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00437f70: lw s0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437f74: subu s2,a2,t1
	(register, 0x48, 4) INT_SUB (register, 0x18, 4) , (register, 0x24, 4)

00437f78: beq t0,zero,0x0043809c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x43809c, 4) , (unique, 0x1200, 1)

00437f7c: _addiu a3,a3,0x4
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)

00437f80: li v0,-0x4
	(register, 0x8, 4) COPY (const, 0xfffffffc, 4)

00437f84: and a1,a1,v0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x8, 4)

00437f88: sll t3,t0,0x3
	(register, 0x2c, 4) INT_LEFT (register, 0x20, 4) , (const, 0x3, 4)

00437f8c: lw a2,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437f90: li t1,0x20
	(register, 0x24, 4) COPY (const, 0x20, 4)

00437f94: subu t1,t1,t3
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x2c, 4)

00437f98: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00437f9c: srlv v1,v1,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

00437fa0: sllv a2,a2,t3
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (unique, 0x4f80, 4)

00437fa4: lui t2,0xfefe
	(register, 0x28, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00437fa8: or s1,v1,a2
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (register, 0x18, 4)

00437fac: ori t2,t2,0xfeff
	(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xfeff, 4)

00437fb0: addu v0,s1,t2
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x28, 4)

00437fb4: nor v1,zero,s1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_NEGATE (unique, 0x4280, 4)

00437fb8: lui t4,0x8080
	(register, 0x30, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00437fbc: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00437fc0: ori t4,t4,0x8080
	(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x8080, 4)

00437fc4: and v0,v0,t4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x30, 4)

00437fc8: bne v0,zero,0x004381b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x4381b0, 4) , (unique, 0x1700, 1)

00437fcc: _lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437fd0: li t5,0x4
	(register, 0x34, 4) COPY (const, 0x4, 4)

00437fd4: subu t5,t5,t0
	(register, 0x34, 4) INT_SUB (register, 0x34, 4) , (register, 0x20, 4)

00437fd8: sltu v0,t5,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x34, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00437fdc: beq v0,zero,0x004381b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)
	 ---  CBRANCH (ram, 0x4381b4, 4) , (unique, 0x1200, 1)

00437fe0: _addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00437fe4: lw a0,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437fe8: sltiu v0,s2,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x48, 4) , (const, 0x5, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00437fec: srlv s1,a0,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x44, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00437ff0: addiu v1,a1,0x8
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)

00437ff4: beq v0,zero,0x00438034
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x44, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x438034, 4) , (unique, 0x1200, 1)

00437ff8: _or s1,s1,a2
	(register, 0x44, 4) INT_OR (register, 0x44, 4) , (register, 0x18, 4)

00437ffc: b 0x0043820c
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x43820c, 4)

00438000: _lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00438004: addiu s2,s2,-0x4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)

00438008: sltu a2,t5,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x34, 4) , (register, 0x48, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)

0043800c: bne v0,zero,0x00438180
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x48, 4) , (const, 0x5, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x438180, 4) , (unique, 0x1700, 1)

00438010: _sltiu t0,s2,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x48, 4) , (const, 0x5, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

00438014: beq a2,zero,0x00438184
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x438184, 4) , (unique, 0x1200, 1)

00438018: _lui v0,0xfefe
	(register, 0x8, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

0043801c: lw a0,-0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00438020: addiu a3,a3,0x4
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)

00438024: srlv s1,a0,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x44, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00438028: lw s0,-0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043802c: bne t0,zero,0x00438208
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x438208, 4) , (unique, 0x1700, 1)

00438030: _or s1,a1,s1
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (register, 0x44, 4)

00438034: nor a1,zero,a0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_NEGATE (unique, 0x4280, 4)

00438038: addu v0,a0,t2
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x28, 4)

0043803c: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

00438040: addiu v1,v1,0x4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)

00438044: and v0,v0,t4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x30, 4)

00438048: beq s1,s0,0x00438004
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x40, 4)
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)
	 ---  CBRANCH (ram, 0x438004, 4) , (unique, 0x1200, 1)

0043804c: _sllv a1,a0,t3
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00438050: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00438054: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00438058: xor a1,s1,s0
	(register, 0x14, 4) INT_XOR (register, 0x44, 4) , (register, 0x40, 4)

0043805c: and a0,a1,v1
	(register, 0x10, 4) INT_AND (register, 0x14, 4) , (register, 0xc, 4)

00438060: and v0,s0,v1
	(register, 0x8, 4) INT_AND (register, 0x40, 4) , (register, 0xc, 4)

00438064: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00438068: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0043806c: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

00438070: nor v0,v0,s0
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00438074: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00438078: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043807c: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00438080: ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

00438084: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x43808c, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CALLIND (register, 0x80, 4)

00438088: _and a0,v0,a0
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

0043808c: sra a0,v0,0x3
	(register, 0x10, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00438090: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00438094: b 0x00438150
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x438150, 4)

00438098: _subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

0043809c: lw s1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004380a0: nop

004380a4: bne s0,s1,0x004380fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (register, 0x44, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x4380fc, 4) , (unique, 0x1700, 1)

004380a8: _addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

004380ac: lui a2,0xfefe
	(register, 0x18, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

004380b0: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

004380b4: ori a2,a2,0xfeff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xfeff, 4)

004380b8: b 0x004380dc
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)
	 ---  BRANCH (ram, 0x4380dc, 4)

004380bc: _ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

004380c0: bne v0,zero,0x004381f8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x4381f8, 4) , (unique, 0x1700, 1)

004380c4: _addiu s2,s2,-0x4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)

004380c8: lw s0,-0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004380cc: lw s1,-0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004380d0: nop

004380d4: bne s0,s1,0x00438100
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x438100, 4) , (unique, 0x1700, 1)

004380d8: _lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

004380dc: nor v1,zero,s0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_NEGATE (unique, 0x4280, 4)

004380e0: addu v0,s0,a2
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x18, 4)

004380e4: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004380e8: sltiu v1,s2,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x48, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004380ec: addiu a3,a3,0x4
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)

004380f0: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

004380f4: beq v1,zero,0x004380c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x4380c0, 4) , (unique, 0x1200, 1)

004380f8: _and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

004380fc: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00438100: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00438104: xor a1,s0,s1
	(register, 0x14, 4) INT_XOR (register, 0x40, 4) , (register, 0x44, 4)

00438108: and a0,a1,v1
	(register, 0x10, 4) INT_AND (register, 0x14, 4) , (register, 0xc, 4)

0043810c: and v0,s0,v1
	(register, 0x8, 4) INT_AND (register, 0x40, 4) , (register, 0xc, 4)

00438110: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00438114: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00438118: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

0043811c: nor v0,v0,s0
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00438120: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00438124: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00438128: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043812c: ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

00438130: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x438138, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CALLIND (register, 0x80, 4)

00438134: _and a0,v0,a0
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00438138: sra v1,v0,0x3
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

0043813c: sltu v0,v1,s2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00438140: beq v0,zero,0x00438168
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x438168, 4) , (unique, 0x1200, 1)

00438144: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00438148: li v0,0x3
	(register, 0x8, 4) COPY (const, 0x3, 4)

0043814c: subu v1,v0,v1
	(register, 0xc, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00438150: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

00438154: srlv v0,s0,v1
	(unique, 0x5780, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x40, 4) , (unique, 0x5780, 4)

00438158: srlv v1,s1,v1
	(unique, 0x5780, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0x44, 4) , (unique, 0x5780, 4)

0043815c: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

00438160: andi v1,v1,0xff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)

00438164: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00438168: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043816c: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00438170: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00438174: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00438178: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0043817c: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00438180: lui v0,0xfefe
	(register, 0x8, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00438184: ori v0,v0,0xfeff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xfeff, 4)

00438188: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

0043818c: lui v1,0x8080
	(register, 0xc, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00438190: nor s0,zero,s0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x40, 4)
	(register, 0x40, 4) INT_NEGATE (unique, 0x4280, 4)

00438194: and v0,v0,s0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x40, 4)

00438198: ori v1,v1,0x8080
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x8080, 4)

0043819c: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004381a0: bne v0,zero,0x004381f8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x44, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)
	 ---  CBRANCH (ram, 0x4381f8, 4) , (unique, 0x1700, 1)

004381a4: _sllv s1,a0,t3
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x44, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

004381a8: lw s0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004381ac: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

004381b0: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

004381b4: xor a1,s0,s1
	(register, 0x14, 4) INT_XOR (register, 0x40, 4) , (register, 0x44, 4)

004381b8: and a0,a1,v1
	(register, 0x10, 4) INT_AND (register, 0x14, 4) , (register, 0xc, 4)

004381bc: and v0,s0,v1
	(register, 0x8, 4) INT_AND (register, 0x40, 4) , (register, 0xc, 4)

004381c0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004381c4: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

004381c8: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

004381cc: nor v0,v0,s0
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

004381d0: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

004381d4: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

004381d8: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004381dc: ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

004381e0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4381e8, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CALLIND (register, 0x80, 4)

004381e4: _and a0,v0,a0
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

004381e8: sra v1,v0,0x3
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

004381ec: sltu v0,v1,s2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004381f0: bne v0,zero,0x00438148
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x438148, 4) , (unique, 0x1700, 1)

004381f4: _nop

004381f8: b 0x00438168
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x438168, 4)

004381fc: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00438200: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  RETURN (register, 0x80, 4)

00438204: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00438208: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

0043820c: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00438210: xor a1,s1,s0
	(register, 0x14, 4) INT_XOR (register, 0x44, 4) , (register, 0x40, 4)

00438214: and a0,a1,v1
	(register, 0x10, 4) INT_AND (register, 0x14, 4) , (register, 0xc, 4)

00438218: and v0,s0,v1
	(register, 0x8, 4) INT_AND (register, 0x40, 4) , (register, 0xc, 4)

0043821c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00438220: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00438224: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

00438228: nor v0,v0,s0
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0043822c: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00438230: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00438234: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00438238: ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

0043823c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x438244, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CALLIND (register, 0x80, 4)

00438240: _and a0,v0,a0
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00438244: sra a0,v0,0x3
	(register, 0x10, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00438248: sltu v0,a0,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0043824c: bne v0,zero,0x00438090
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x438090, 4) , (unique, 0x1700, 1)

00438250: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00438254: b 0x00438168
	 ---  BRANCH (ram, 0x438168, 4)

00438258: _nop

