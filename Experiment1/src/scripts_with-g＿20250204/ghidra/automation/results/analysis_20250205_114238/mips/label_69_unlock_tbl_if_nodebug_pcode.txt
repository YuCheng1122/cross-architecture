Label: 69
Function: unlock_tbl_if_nodebug
Architecture: mips
Source File: Unknown
Entry Point: 0040f1b0

P-code:

0040f1b0: addiu sp,sp,-0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff88, 4)

0040f1b4: sw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040f1b8: sw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040f1bc: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040f1c0: sw a0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040f1c4: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040f1c8: addiu a0,s8,0x28
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)

0040f1cc: addiu v0,v0,0x32a4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x32a4, 4)

0040f1d0: li v1,0x12
	(register, 0xc, 4) COPY (const, 0x12, 4)

0040f1d4: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040f1d8: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f1dc: jal 0x0041c598
	(register, 0x7c, 4) COPY (const, 0x40f1e4, 4)
	 ---  CALL (ram, 0x41c598, 4)

0040f1e0: _nop

0040f1e4: sw zero,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040f1e8: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040f1ec: li v0,-0x51
	(register, 0x8, 4) COPY (const, 0xffffffaf, 4)

0040f1f0: sb v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040f1f4: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040f1f8: addiu a0,s8,0x48
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)

0040f1fc: addiu v0,v0,0x32b8
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x32b8, 4)

0040f200: li v1,0x24
	(register, 0xc, 4) COPY (const, 0x24, 4)

0040f204: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040f208: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f20c: jal 0x0041c598
	(register, 0x7c, 4) COPY (const, 0x40f214, 4)
	 ---  CALL (ram, 0x41c598, 4)

0040f210: _nop

0040f214: sw zero,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040f218: b 0x0040f260
	 ---  BRANCH (ram, 0x40f260, 4)

0040f21c: _nop

0040f220: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f224: nop

0040f228: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040f22c: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f230: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f234: lw v0,0x30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f238: nop

0040f23c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f240: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f244: nop

0040f248: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040f24c: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f250: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f254: nop

0040f258: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040f25c: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f260: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f264: nop

0040f268: slti v0,v0,0x7
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x7, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040f26c: bne v0,zero,0x0040f220
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40f220, 4) , (unique, 0x1700, 1)

0040f270: _nop

0040f274: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f278: nop

0040f27c: bne v0,zero,0x0040f290
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40f290, 4) , (unique, 0x1700, 1)

0040f280: _nop

0040f284: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040f288: b 0x0040f460
	 ---  BRANCH (ram, 0x40f460, 4)

0040f28c: _nop

0040f290: sw zero,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040f294: b 0x0040f3c0
	 ---  BRANCH (ram, 0x40f3c0, 4)

0040f298: _nop

0040f29c: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f2a0: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f2a4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f2a8: lbu v0,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040f2ac: nop

0040f2b0: sb v0,0x26(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x26, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040f2b4: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f2b8: nop

0040f2bc: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040f2c0: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f2c4: nop

0040f2c8: addiu a0,v0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040f2cc: sw a0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040f2d0: addiu a0,s8,0x18
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f2d4: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0040f2d8: lb v1,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040f2dc: addiu a0,s8,0x18
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f2e0: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040f2e4: sb v1,0x24(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0040f2e8: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f2ec: nop

0040f2f0: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040f2f4: sw v1,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040f2f8: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f2fc: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f300: lbu v1,0x26(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x26, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0040f304: nop

0040f308: sb v1,0x24(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0040f30c: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f310: nop

0040f314: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0040f318: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f31c: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f320: nop

0040f324: addiu v0,v0,0xe
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xe, 4)

0040f328: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f32c: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f330: nop

0040f334: srl v1,v0,0x1f
	(register, 0xc, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1f, 4)

0040f338: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f33c: sra v0,v0,0x1
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1, 4)

0040f340: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f344: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f348: nop

0040f34c: addiu v0,v0,-0x7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff9, 4)

0040f350: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f354: lw a0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f358: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40f360, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040f35c: _nop

0040f360: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f364: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f368: nop

0040f36c: div v0,v1
	(register, 0x3004, 4) INT_SDIV (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_SREM (register, 0x8, 4) , (register, 0xc, 4)

0040f370: bne v1,zero,0x0040f37c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40f37c, 4) , (unique, 0x1700, 1)

0040f374: _nop

0040f378: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040f37c: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040f380: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f384: lw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f388: nop

0040f38c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040f390: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040f394: nop

0040f398: nor v0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0040f39c: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0040f3a0: lbu v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040f3a4: nop

0040f3a8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f3ac: sb v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040f3b0: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f3b4: nop

0040f3b8: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0040f3bc: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040f3c0: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f3c4: nop

0040f3c8: sltiu v0,v0,0x12
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x12, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0040f3cc: bne v0,zero,0x0040f29c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40f29c, 4) , (unique, 0x1700, 1)

0040f3d0: _nop

0040f3d4: lbu v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0040f3d8: li v0,0x9
	(register, 0x8, 4) COPY (const, 0x9, 4)

0040f3dc: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0040f3e0: bne v0,zero,0x0040f3ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40f3ec, 4) , (unique, 0x1700, 1)

0040f3e4: _nop

0040f3e8: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040f3ec: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040f3f0: sb v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040f3f4: lbu v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040f3f8: nop

0040f3fc: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040f400: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040f404: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040f408: lw v0,0x30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f40c: nop

0040f410: or t9,v0,zero
	(register, 0x64, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f414: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x40f41c, 4)
	 ---  CALLIND (register, 0x80, 4)

0040f418: _nop

0040f41c: addiu v0,s8,0x3c
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)

0040f420: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f424: lw a0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f428: jal 0x00410e20
	(register, 0x7c, 4) COPY (const, 0x40f430, 4)
	 ---  CALL (ram, 0x410e20, 4)

0040f42c: _nop

0040f430: sb v0,0x25(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x25, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040f434: addiu v0,s8,0x28
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)

0040f438: li a1,0x12
	(register, 0x14, 4) COPY (const, 0x12, 4)

0040f43c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f440: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40f448, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040f444: _nop

0040f448: addiu v0,s8,0x3c
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)

0040f44c: li a1,0xc
	(register, 0x14, 4) COPY (const, 0xc, 4)

0040f450: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040f454: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40f45c, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040f458: _nop

0040f45c: lb v0,0x25(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x25, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040f460: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040f464: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f468: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040f46c: addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

0040f470: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0040f474: _nop

