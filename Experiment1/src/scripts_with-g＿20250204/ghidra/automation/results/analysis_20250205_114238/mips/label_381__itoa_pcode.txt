Label: 381
Function: _itoa
Architecture: mips
Source File: Unknown
Entry Point: 00426974

P-code:

00426974: lui gp,0x9
	(register, 0x70, 4) INT_LEFT (const, 0x9, 4) , (const, 0x10, 4)

00426978: addiu gp,gp,0x44ec
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x44ec, 4)

0042697c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00426980: addiu sp,sp,-0x68
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff98, 4)

00426984: lw v0,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426988: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0042698c: sw s3,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00426990: sw s2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00426994: sw ra,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00426998: sw s8,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0042699c: sw s7,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004269a0: sw s6,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004269a4: sw s5,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004269a8: sw s4,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004269ac: sw s1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004269b0: sw s0,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004269b4: or s3,a2,zero
	(register, 0x4c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004269b8: beq v0,zero,0x00426ab0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426ab0, 4) , (unique, 0x1200, 1)

004269bc: _or s2,a3,zero
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

004269c0: li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

004269c4: lw s1,-0x7bec(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8414, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004269c8: beq s2,v0,0x00426ac0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x426ac0, 4) , (unique, 0x1200, 1)

004269cc: _li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

004269d0: beq s2,v0,0x00426b3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426b3c, 4) , (unique, 0x1200, 1)

004269d4: _nop

004269d8: bne a0,zero,0x00426b8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x426b8c, 4) , (unique, 0x1700, 1)

004269dc: _addiu s8,s2,-0x2
	(register, 0x78, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffe, 4)

004269e0: lw t0,-0x7be4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff841c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004269e4: sw a1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004269e8: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

004269ec: sll t1,s8,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x78, 4) , (const, 0x2, 4)

004269f0: addu s6,t1,s8
	(register, 0x58, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

004269f4: sll s6,s6,0x2
	(register, 0x58, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

004269f8: addu s6,t0,s6
	(register, 0x58, 4) INT_ADD (register, 0x20, 4) , (register, 0x58, 4)

004269fc: sll s5,s5,0x2
	(register, 0x54, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00426a00: addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426a04: addiu s7,sp,0x18
	(register, 0x5c, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

00426a08: lw s4,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a0c: lb a3,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_SEXT (unique, 0x2d00, 1)

00426a10: addu s5,s7,s5
	(register, 0x54, 4) INT_ADD (register, 0x5c, 4) , (register, 0x54, 4)

00426a14: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00426a18: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a1c: bne a3,zero,0x00426d34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426d34, 4) , (unique, 0x1700, 1)

00426a20: _nop

00426a24: beq v0,zero,0x00426ec8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426ec8, 4) , (unique, 0x1200, 1)

00426a28: _or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00426a2c: lb a2,0x5(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_SEXT (unique, 0x2d00, 1)

00426a30: multu v0,s4
	(unique, 0xe000, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x50, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426a34: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00426a38: addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426a3c: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

00426a40: srlv v0,a0,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00426a44: nop

00426a48: mult s2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

00426a4c: mflo a0
	(register, 0x10, 4) COPY (register, 0x3004, 4)

00426a50: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

00426a54: addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00426a58: lb v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426a5c: bne v0,zero,0x00426a30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x426a30, 4) , (unique, 0x1700, 1)

00426a60: _sb v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00426a64: bne s7,s5,0x00426e00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x426e00, 4) , (unique, 0x1700, 1)

00426a68: _addu v0,t1,s8
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

00426a6c: bne s3,s0,0x00426a7c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x40, 4)
	(register, 0x8, 4) COPY (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x426a7c, 4) , (unique, 0x1700, 1)

00426a70: _li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

00426a74: sb v0,-0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00426a78: addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426a7c: lw ra,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a80: lw s8,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a84: lw s7,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a88: lw s6,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a8c: lw s5,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a90: lw s4,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a94: lw s3,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a98: lw s2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426a9c: lw s1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426aa0: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00426aa4: lw s0,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426aa8: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	 ---  RETURN (register, 0x80, 4)

00426aac: _addiu sp,sp,0x68
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)

00426ab0: li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

00426ab4: lw s1,-0x7be8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8418, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426ab8: bne s2,v0,0x004269d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x4269d0, 4) , (unique, 0x1700, 1)

00426abc: _li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

00426ac0: beq a0,zero,0x00426b18
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426b18, 4) , (unique, 0x1200, 1)

00426ac4: _or s0,s3,zero
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00426ac8: addiu a2,s3,-0xa
	(register, 0x18, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff6, 4)

00426acc: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00426ad0: andi v1,a1,0x7
	(register, 0xc, 4) INT_AND (register, 0x14, 4) , (const, 0x7, 4)

00426ad4: addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00426ad8: lb v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426adc: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

00426ae0: srl a1,a1,0x3
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x3, 4)

00426ae4: bne v0,a2,0x00426ad0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x18, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x426ad0, 4) , (unique, 0x1700, 1)

00426ae8: _sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00426aec: sll v1,a0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

00426af0: andi v1,v1,0x4
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)

00426af4: srl a0,a0,0x1
	(register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)

00426af8: beq a0,zero,0x00426eb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x426eb0, 4) , (unique, 0x1200, 1)

00426afc: _or a1,a1,v1
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0xc, 4)

00426b00: addu a1,s1,a1
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (register, 0x14, 4)

00426b04: lb v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00426b08: addiu s3,s3,-0xb
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff5, 4)

00426b0c: sb v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00426b10: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00426b14: or s0,s3,zero
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00426b18: andi v0,a1,0x7
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x7, 4)

00426b1c: addu v0,s1,v0
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00426b20: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00426b24: srl a1,a1,0x3
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x3, 4)

00426b28: addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426b2c: bne a1,zero,0x00426b18
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x426b18, 4) , (unique, 0x1700, 1)

00426b30: _sb v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00426b34: b 0x00426a7c
	 ---  BRANCH (ram, 0x426a7c, 4)

00426b38: _nop

00426b3c: beq a0,zero,0x00426b68
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426b68, 4) , (unique, 0x1200, 1)

00426b40: _or s0,s3,zero
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00426b44: addiu s0,s3,-0x8
	(register, 0x40, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff8, 4)

00426b48: andi v0,a1,0xf
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0xf, 4)

00426b4c: addu v0,s1,v0
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00426b50: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00426b54: addiu s3,s3,-0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffff, 4)

00426b58: srl a1,a1,0x4
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x4, 4)

00426b5c: bne s3,s0,0x00426b48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x40, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x426b48, 4) , (unique, 0x1700, 1)

00426b60: _sb v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00426b64: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00426b68: andi v0,a1,0xf
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0xf, 4)

00426b6c: addu v0,s1,v0
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00426b70: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00426b74: srl a1,a1,0x4
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x4, 4)

00426b78: addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426b7c: bne a1,zero,0x00426b68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x426b68, 4) , (unique, 0x1700, 1)

00426b80: _sb v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00426b84: b 0x00426a7c
	 ---  BRANCH (ram, 0x426a7c, 4)

00426b88: _nop

00426b8c: sll t1,s8,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x78, 4) , (const, 0x2, 4)

00426b90: lw t0,-0x7be4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff841c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426b94: addu v1,t1,s8
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

00426b98: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00426b9c: addu v1,t0,v1
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (register, 0xc, 4)

00426ba0: lw v0,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426ba4: lb a2,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_SEXT (unique, 0x2d00, 1)

00426ba8: sltu a3,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

00426bac: lw v1,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426bb0: bne a3,zero,0x00426e2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)
	 ---  CBRANCH (ram, 0x426e2c, 4) , (unique, 0x1700, 1)

00426bb4: _sllv v0,v0,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

00426bb8: bne a2,zero,0x00426ef4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) COPY (const, 0x40, 4)
	 ---  CBRANCH (ram, 0x426ef4, 4) , (unique, 0x1700, 1)

00426bbc: _li t3,0x40
	(register, 0x2c, 4) COPY (const, 0x40, 4)

00426bc0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426bc4: or t3,zero,zero
	(register, 0x2c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426bc8: li t6,0x20
	(register, 0x38, 4) COPY (const, 0x20, 4)

00426bcc: subu t6,t6,a2
	(register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x18, 4)

00426bd0: andi t2,t6,0x20
	(register, 0x28, 4) INT_AND (register, 0x38, 4) , (const, 0x20, 4)

00426bd4: beq t2,zero,0x00426f64
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x38, 4)
	(register, 0x28, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CBRANCH (ram, 0x426f64, 4) , (unique, 0x1200, 1)

00426bd8: _nor t2,zero,t6
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x38, 4)
	(register, 0x28, 4) INT_NEGATE (unique, 0x4280, 4)

00426bdc: srlv a0,a0,t6
	(unique, 0x5780, 4) INT_AND (register, 0x38, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00426be0: multu a3,v1
	(unique, 0xe000, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426be4: mfhi a3
	(register, 0x1c, 4) COPY (register, 0x3000, 4)

00426be8: addu a3,t3,a3
	(register, 0x1c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x1c, 4)

00426bec: nop

00426bf0: multu a3,v0
	(unique, 0xe000, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426bf4: mflo t5
	(register, 0x34, 4) COPY (register, 0x3004, 4)

00426bf8: subu t2,a0,t5
	(register, 0x28, 4) INT_SUB (register, 0x10, 4) , (register, 0x34, 4)

00426bfc: sltu a0,a0,t2
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x28, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00426c00: mfhi t4
	(register, 0x30, 4) COPY (register, 0x3000, 4)

00426c04: subu t3,t3,t4
	(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x30, 4)

00426c08: beq t3,a0,0x00426c28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x10, 4)
	(register, 0x30, 4) INT_SUB (register, 0x2c, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x426c28, 4) , (unique, 0x1200, 1)

00426c0c: _subu t4,t3,a0
	(register, 0x30, 4) INT_SUB (register, 0x2c, 4) , (register, 0x10, 4)

00426c10: subu a0,t2,v0
	(register, 0x10, 4) INT_SUB (register, 0x28, 4) , (register, 0x8, 4)

00426c14: sltu t2,t2,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0x10, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5380, 1)

00426c18: bne t2,t4,0x00426f98
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0x30, 4)
	(register, 0x28, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426f98, 4) , (unique, 0x1700, 1)

00426c1c: _subu t2,a0,v0
	(register, 0x28, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)

00426c20: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

00426c24: or t2,a0,zero
	(register, 0x28, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00426c28: sltu a0,t2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00426c2c: bne a0,zero,0x00426c40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0xe000, 8) INT_ZEXT (register, 0x28, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426c40, 4) , (unique, 0x1700, 1)

00426c30: _multu t2,v1
	(unique, 0xe000, 8) INT_ZEXT (register, 0x28, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426c34: subu t2,t2,v0
	(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x8, 4)

00426c38: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

00426c3c: multu t2,v1
	(unique, 0xe000, 8) INT_ZEXT (register, 0x28, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426c40: sllv a1,a1,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00426c44: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

00426c48: addu a0,t2,a0
	(register, 0x10, 4) INT_ADD (register, 0x28, 4) , (register, 0x10, 4)

00426c4c: nop

00426c50: multu a0,v0
	(unique, 0xe000, 8) INT_ZEXT (register, 0x10, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426c54: mflo t5
	(register, 0x34, 4) COPY (register, 0x3004, 4)

00426c58: subu t3,a1,t5
	(register, 0x2c, 4) INT_SUB (register, 0x14, 4) , (register, 0x34, 4)

00426c5c: sltu a1,a1,t3
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x2c, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00426c60: mfhi t4
	(register, 0x30, 4) COPY (register, 0x3000, 4)

00426c64: subu t2,t2,t4
	(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0x30, 4)

00426c68: beq t2,a1,0x00426c88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x14, 4)
	(register, 0x30, 4) INT_SUB (register, 0x28, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x426c88, 4) , (unique, 0x1200, 1)

00426c6c: _subu t4,t2,a1
	(register, 0x30, 4) INT_SUB (register, 0x28, 4) , (register, 0x14, 4)

00426c70: subu a1,t3,v0
	(register, 0x14, 4) INT_SUB (register, 0x2c, 4) , (register, 0x8, 4)

00426c74: sltu t3,t3,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x2c, 4) , (register, 0x14, 4)
	(register, 0x2c, 4) INT_ZEXT (unique, 0x5380, 1)

00426c78: bne t3,t4,0x00426fa0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x2c, 4) , (register, 0x30, 4)
	(register, 0x2c, 4) INT_SUB (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426fa0, 4) , (unique, 0x1700, 1)

00426c7c: _subu t3,a1,v0
	(register, 0x2c, 4) INT_SUB (register, 0x14, 4) , (register, 0x8, 4)

00426c80: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

00426c84: or t3,a1,zero
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00426c88: sltu a1,t3,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x2c, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00426c8c: bne a1,zero,0x00426c9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426c9c, 4) , (unique, 0x1700, 1)

00426c90: _nop

00426c94: subu t3,t3,v0
	(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x8, 4)

00426c98: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

00426c9c: srlv t3,t3,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x5780, 4)

00426ca0: beq a2,zero,0x00426cb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)
	 ---  CBRANCH (ram, 0x426cb4, 4) , (unique, 0x1200, 1)

00426ca4: _sw t3,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

00426ca8: sllv a3,a3,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

00426cac: srlv t6,a0,t6
	(unique, 0x5780, 4) INT_AND (register, 0x38, 4) , (const, 0x1f, 4)
	(register, 0x38, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00426cb0: or a3,a3,t6
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0x38, 4)

00426cb4: multu a3,v1
	(unique, 0xe000, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426cb8: sllv a0,a0,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00426cbc: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

00426cc0: addu v1,a3,v1
	(register, 0xc, 4) INT_ADD (register, 0x1c, 4) , (register, 0xc, 4)

00426cc4: nop

00426cc8: multu v1,v0
	(unique, 0xe000, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426ccc: mflo t3
	(register, 0x2c, 4) COPY (register, 0x3004, 4)

00426cd0: subu a1,a0,t3
	(register, 0x14, 4) INT_SUB (register, 0x10, 4) , (register, 0x2c, 4)

00426cd4: sltu a0,a0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00426cd8: mfhi t2
	(register, 0x28, 4) COPY (register, 0x3000, 4)

00426cdc: subu a3,a3,t2
	(register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x28, 4)

00426ce0: beq a3,a0,0x00426d00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x10, 4)
	(register, 0x28, 4) INT_SUB (register, 0x1c, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x426d00, 4) , (unique, 0x1200, 1)

00426ce4: _subu t2,a3,a0
	(register, 0x28, 4) INT_SUB (register, 0x1c, 4) , (register, 0x10, 4)

00426ce8: subu a0,a1,v0
	(register, 0x10, 4) INT_SUB (register, 0x14, 4) , (register, 0x8, 4)

00426cec: sltu a1,a1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00426cf0: bne a1,t2,0x00426fa8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x28, 4)
	(register, 0x14, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426fa8, 4) , (unique, 0x1700, 1)

00426cf4: _subu a1,a0,v0
	(register, 0x14, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)

00426cf8: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00426cfc: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00426d00: sltu a0,a1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00426d04: bne a0,zero,0x00426d14
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426d14, 4) , (unique, 0x1700, 1)

00426d08: _nop

00426d0c: subu a1,a1,v0
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x8, 4)

00426d10: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00426d14: srlv a1,a1,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (unique, 0x5780, 4)

00426d18: sw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00426d1c: sw a1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00426d20: b 0x004269f0
	(register, 0x54, 4) COPY (const, 0x3, 4)
	 ---  BRANCH (ram, 0x4269f0, 4)

00426d24: _li s5,0x3
	(register, 0x54, 4) COPY (const, 0x3, 4)

00426d28: lw v0,-0x4(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426d2c: addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426d30: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00426d34: beq v0,zero,0x00426eb8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426eb8, 4) , (unique, 0x1200, 1)

00426d38: _or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00426d3c: lb a2,0x5(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_SEXT (unique, 0x2d00, 1)

00426d40: nop

00426d44: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

00426d48: multu v0,s4
	(unique, 0xe000, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x50, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426d4c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00426d50: addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426d54: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

00426d58: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

00426d5c: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00426d60: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00426d64: srlv v0,v0,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

00426d68: mult s2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

00426d6c: mflo a0
	(register, 0x10, 4) COPY (register, 0x3004, 4)

00426d70: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

00426d74: addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00426d78: lb v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426d7c: bne v0,zero,0x00426d48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x426d48, 4) , (unique, 0x1700, 1)

00426d80: _sb v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00426d84: beq s7,s5,0x00426a6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x426a6c, 4) , (unique, 0x1200, 1)

00426d88: _nop

00426d8c: addu v0,t1,s8
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

00426d90: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00426d94: addu v0,t0,v0
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

00426d98: lb t2,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_SEXT (unique, 0x2d00, 1)

00426d9c: subu v1,a1,s0
	(register, 0xc, 4) INT_SUB (register, 0x14, 4) , (register, 0x40, 4)

00426da0: slt v0,v1,t2
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00426da4: beq v0,zero,0x00426d28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426d28, 4) , (unique, 0x1200, 1)

00426da8: _nop

00426dac: subu a0,v1,t2
	(register, 0x10, 4) INT_SUB (register, 0xc, 4) , (register, 0x28, 4)

00426db0: lw t9,-0x7fb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8048, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426db4: subu a2,t2,v1
	(register, 0x18, 4) INT_SUB (register, 0x28, 4) , (register, 0xc, 4)

00426db8: sw t0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00426dbc: sw t1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

00426dc0: sw a3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

00426dc4: sw v1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00426dc8: sw t2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

00426dcc: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

00426dd0: bal 0x0041cb30
	(register, 0x7c, 4) COPY (const, 0x426dd8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x10, 4)
	 ---  CALL (ram, 0x41cb30, 4)

00426dd4: _addu a0,s0,a0
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x10, 4)

00426dd8: lw v1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426ddc: lw t2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426de0: addu a1,s0,v1
	(register, 0x14, 4) INT_ADD (register, 0x40, 4) , (register, 0xc, 4)

00426de4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426de8: lw a3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426dec: lw t1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426df0: lw t0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426df4: subu a1,a1,t2
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x28, 4)

00426df8: b 0x00426a18
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
	 ---  BRANCH (ram, 0x426a18, 4)

00426dfc: _addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426e00: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00426e04: addu v0,t0,v0
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

00426e08: lb t2,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_SEXT (unique, 0x2d00, 1)

00426e0c: subu v1,a1,s0
	(register, 0xc, 4) INT_SUB (register, 0x14, 4) , (register, 0x40, 4)

00426e10: slt v0,v1,t2
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00426e14: bne v0,zero,0x00426dac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426dac, 4) , (unique, 0x1700, 1)

00426e18: _nop

00426e1c: addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426e20: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426e24: b 0x00426a24
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426a24, 4)

00426e28: _or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00426e2c: andi a3,a2,0x20
	(register, 0x1c, 4) INT_AND (register, 0x18, 4) , (const, 0x20, 4)

00426e30: beq a3,zero,0x00426f10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426f10, 4) , (unique, 0x1200, 1)

00426e34: _srl a3,a1,0x1
	(register, 0x1c, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x1, 4)

00426e38: sllv a0,a1,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00426e3c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426e40: multu a0,v1
	(unique, 0xe000, 8) INT_ZEXT (register, 0x10, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426e44: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

00426e48: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00426e4c: nop

00426e50: multu v1,v0
	(unique, 0xe000, 8) INT_ZEXT (register, 0xc, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x8, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

00426e54: mflo t3
	(register, 0x2c, 4) COPY (register, 0x3004, 4)

00426e58: subu a3,a1,t3
	(register, 0x1c, 4) INT_SUB (register, 0x14, 4) , (register, 0x2c, 4)

00426e5c: sltu a1,a1,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x1c, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00426e60: mfhi t2
	(register, 0x28, 4) COPY (register, 0x3000, 4)

00426e64: subu a0,a0,t2
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x28, 4)

00426e68: beq a0,a1,0x00426e88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x14, 4)
	(register, 0x28, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x426e88, 4) , (unique, 0x1200, 1)

00426e6c: _subu t2,a0,a1
	(register, 0x28, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)

00426e70: subu a0,a3,v0
	(register, 0x10, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)

00426e74: sltu a3,a3,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x10, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

00426e78: bne a3,t2,0x00426f78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x28, 4)
	(register, 0x1c, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426f78, 4) , (unique, 0x1700, 1)

00426e7c: _subu a3,a0,v0
	(register, 0x1c, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)

00426e80: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00426e84: or a3,a0,zero
	(register, 0x1c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00426e88: sltu a0,a3,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00426e8c: bne a0,zero,0x00426e9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426e9c, 4) , (unique, 0x1700, 1)

00426e90: _nop

00426e94: subu a3,a3,v0
	(register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)

00426e98: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00426e9c: srlv a3,a3,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x1c, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)

00426ea0: sw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00426ea4: sw a3,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

00426ea8: b 0x004269f0
	(register, 0x54, 4) COPY (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4269f0, 4)

00426eac: _li s5,0x2
	(register, 0x54, 4) COPY (const, 0x2, 4)

00426eb0: b 0x00426b14
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426b14, 4)

00426eb4: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00426eb8: bne s7,s5,0x00426f28
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x426f28, 4) , (unique, 0x1700, 1)

00426ebc: _nop

00426ec0: b 0x00426a6c
	 ---  BRANCH (ram, 0x426a6c, 4)

00426ec4: _nop

00426ec8: beq s7,s5,0x00426a6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x426a6c, 4) , (unique, 0x1200, 1)

00426ecc: _nop

00426ed0: addu v0,t1,s8
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

00426ed4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00426ed8: addu v0,t0,v0
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

00426edc: lb t2,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_SEXT (unique, 0x2d00, 1)

00426ee0: nop

00426ee4: blez t2,0x00426f54
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426f54, 4) , (unique, 0x1500, 1)

00426ee8: _or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00426eec: b 0x00426dac
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426dac, 4)

00426ef0: _or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426ef4: subu t3,t3,a2
	(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x18, 4)

00426ef8: andi a3,t3,0x20
	(register, 0x1c, 4) INT_AND (register, 0x2c, 4) , (const, 0x20, 4)

00426efc: beq a3,zero,0x00426f80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x2c, 4)
	(register, 0x28, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CBRANCH (ram, 0x426f80, 4) , (unique, 0x1200, 1)

00426f00: _nor t2,zero,t3
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x2c, 4)
	(register, 0x28, 4) INT_NEGATE (unique, 0x4280, 4)

00426f04: srlv t3,a0,t3
	(unique, 0x5780, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00426f08: b 0x00426bc8
	(register, 0x1c, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426bc8, 4)

00426f0c: _or a3,t3,zero
	(register, 0x1c, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)

00426f10: nor t2,zero,a2
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x18, 4)
	(register, 0x28, 4) INT_NEGATE (unique, 0x4280, 4)

00426f14: srlv a3,a3,t2
	(unique, 0x5780, 4) INT_AND (register, 0x28, 4) , (const, 0x1f, 4)
	(register, 0x1c, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)

00426f18: sllv a0,a0,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00426f1c: or a0,a3,a0
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (register, 0x10, 4)

00426f20: b 0x00426e40
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)
	 ---  BRANCH (ram, 0x426e40, 4)

00426f24: _sllv a1,a1,a2
	(unique, 0x4f80, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00426f28: addu v0,t1,s8
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x78, 4)

00426f2c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00426f30: addu v0,t0,v0
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

00426f34: lb t2,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_SEXT (unique, 0x2d00, 1)

00426f38: nop

00426f3c: bgtz t2,0x00426eec
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x28, 4)
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426eec, 4) , (unique, 0x1400, 1)

00426f40: _or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00426f44: addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426f48: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426f4c: b 0x00426d34
	 ---  BRANCH (ram, 0x426d34, 4)

00426f50: _nop

00426f54: addiu s5,s5,-0x4
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)

00426f58: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426f5c: b 0x00426a24
	 ---  BRANCH (ram, 0x426a24, 4)

00426f60: _nop

00426f64: sll a0,a0,0x1
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x1, 4)

00426f68: sllv t2,a0,t2
	(unique, 0x4f80, 4) INT_AND (register, 0x28, 4) , (const, 0x1f, 4)
	(register, 0x28, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00426f6c: srlv a0,a1,t6
	(unique, 0x5780, 4) INT_AND (register, 0x38, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x14, 4) , (unique, 0x5780, 4)

00426f70: b 0x00426be0
	(register, 0x10, 4) INT_OR (register, 0x28, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x426be0, 4)

00426f74: _or a0,t2,a0
	(register, 0x10, 4) INT_OR (register, 0x28, 4) , (register, 0x10, 4)

00426f78: b 0x00426e88
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x426e88, 4)

00426f7c: _addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

00426f80: sll a3,a0,0x1
	(register, 0x1c, 4) INT_LEFT (register, 0x10, 4) , (const, 0x1, 4)

00426f84: sllv a3,a3,t2
	(unique, 0x4f80, 4) INT_AND (register, 0x28, 4) , (const, 0x1f, 4)
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

00426f88: srlv t3,a1,t3
	(unique, 0x5780, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_RIGHT (register, 0x14, 4) , (unique, 0x5780, 4)

00426f8c: or t3,a3,t3
	(register, 0x2c, 4) INT_OR (register, 0x1c, 4) , (register, 0x2c, 4)

00426f90: b 0x00426bc8
	(register, 0x1c, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426bc8, 4)

00426f94: _or a3,t3,zero
	(register, 0x1c, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)

00426f98: b 0x00426c28
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x426c28, 4)

00426f9c: _addiu a3,a3,0x2
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2, 4)

00426fa0: b 0x00426c88
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x426c88, 4)

00426fa4: _addiu a0,a0,0x2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

00426fa8: b 0x00426d00
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x426d00, 4)

00426fac: _addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

