Label: 528
Function: two_way_long_needle
Architecture: mips
Source File: Unknown
Entry Point: 0046f2a0

P-code:

0046f2a0: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046f2a4: addiu gp,gp,-0x4440
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffbbc0, 4)

0046f2a8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046f2ac: addiu sp,sp,-0x440
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffbc0, 4)

0046f2b0: sltiu v0,a3,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x1c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046f2b4: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046f2b8: sw s7,0x438(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x438, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046f2bc: sw s2,0x424(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x424, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046f2c0: sw s1,0x420(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x420, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046f2c4: sw s0,0x41c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x41c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046f2c8: sw ra,0x43c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x43c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046f2cc: sw s6,0x434(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x434, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046f2d0: sw s5,0x430(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046f2d4: sw s4,0x42c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x42c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046f2d8: sw s3,0x428(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x428, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046f2dc: or s0,a3,zero
	(register, 0x40, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046f2e0: or s2,a0,zero
	(register, 0x48, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046f2e4: or s7,a1,zero
	(register, 0x5c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046f2e8: bne v0,zero,0x0046f710
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f710, 4) , (unique, 0x1700, 1)

0046f2ec: _or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046f2f0: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f2f4: li t1,0x1
	(register, 0x24, 4) COPY (const, 0x1, 4)

0046f2f8: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f2fc: li a3,-0x1
	(register, 0x1c, 4) COPY (const, 0xffffffff, 4)

0046f300: b 0x0046f324
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f324, 4)

0046f304: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046f308: subu t1,v0,a3
	(register, 0x24, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)

0046f30c: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046f310: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f314: addu v0,a1,a0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0046f318: sltu v1,v0,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f31c: beq v1,zero,0x0046f36c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f36c, 4) , (unique, 0x1200, 1)

0046f320: _nop

0046f324: addu v1,s1,a3
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0x1c, 4)

0046f328: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f32c: addu a2,s1,v0
	(register, 0x18, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

0046f330: lbu a2,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f334: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f338: nop

0046f33c: sltu t0,a2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046f340: bne t0,zero,0x0046f308
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f308, 4) , (unique, 0x1700, 1)

0046f344: _nop

0046f348: beq a2,v1,0x0046f4fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46f4fc, 4) , (unique, 0x1200, 1)

0046f34c: _nop

0046f350: or a3,a1,zero
	(register, 0x1c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046f354: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f358: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0046f35c: addu v0,a1,a0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0046f360: sltu v1,v0,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f364: bne v1,zero,0x0046f324
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46f324, 4) , (unique, 0x1700, 1)

0046f368: _li t1,0x1
	(register, 0x24, 4) COPY (const, 0x1, 4)

0046f36c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f370: li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

0046f374: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f378: li s5,-0x1
	(register, 0x54, 4) COPY (const, 0xffffffff, 4)

0046f37c: b 0x0046f3a0
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f3a0, 4)

0046f380: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046f384: subu s6,v0,s5
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x54, 4)

0046f388: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046f38c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f390: addu v0,a1,a0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0046f394: sltu v1,v0,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f398: beq v1,zero,0x0046f3e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f3e8, 4) , (unique, 0x1200, 1)

0046f39c: _nop

0046f3a0: addu v1,s1,s5
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0x54, 4)

0046f3a4: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f3a8: addu a2,s1,v0
	(register, 0x18, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

0046f3ac: lbu a2,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f3b0: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f3b4: nop

0046f3b8: sltu t0,v1,a2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046f3bc: bne t0,zero,0x0046f384
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f384, 4) , (unique, 0x1700, 1)

0046f3c0: _nop

0046f3c4: beq v1,a2,0x0046f50c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46f50c, 4) , (unique, 0x1200, 1)

0046f3c8: _nop

0046f3cc: or s5,a1,zero
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046f3d0: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f3d4: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0046f3d8: addu v0,a1,a0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0046f3dc: sltu v1,v0,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f3e0: bne v1,zero,0x0046f3a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46f3a0, 4) , (unique, 0x1700, 1)

0046f3e4: _li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

0046f3e8: addiu s5,s5,0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)

0046f3ec: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0046f3f0: sltu v0,s5,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f3f4: beq v0,zero,0x0046f408
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x46f408, 4) , (unique, 0x1200, 1)

0046f3f8: _addiu s4,sp,0x18
	(register, 0x50, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0046f3fc: or s6,t1,zero
	(register, 0x58, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046f400: or s5,a3,zero
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046f404: addiu s4,sp,0x18
	(register, 0x50, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0046f408: or v0,s4,zero
	(register, 0x8, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046f40c: addiu v1,sp,0x418
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x418, 4)

0046f410: sw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046f414: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0046f418: bne v0,v1,0x0046f410
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46f410, 4) , (unique, 0x1700, 1)

0046f41c: _nop

0046f420: beq s0,zero,0x0046f450
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46f450, 4) , (unique, 0x1200, 1)

0046f424: _addiu s3,s0,-0x1
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

0046f428: addu a2,s0,s1
	(register, 0x18, 4) INT_ADD (register, 0x40, 4) , (register, 0x44, 4)

0046f42c: or v1,s1,zero
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046f430: addu a1,s1,s3
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)

0046f434: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f438: subu a0,a1,v1
	(register, 0x10, 4) INT_SUB (register, 0x14, 4) , (register, 0xc, 4)

0046f43c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046f440: addu v0,s4,v0
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (register, 0x8, 4)

0046f444: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046f448: bne v1,a2,0x0046f434
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f434, 4) , (unique, 0x1700, 1)

0046f44c: _sw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046f450: lw t9,-0x7e70(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8190, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f454: addu a1,s1,s6
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (register, 0x58, 4)

0046f458: or a2,s5,zero
	(register, 0x18, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f45c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46f464, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046f460: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046f464: bne v0,zero,0x0046f5ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_SUB (register, 0x5c, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x46f5ec, 4) , (unique, 0x1700, 1)

0046f468: _subu a1,s7,s0
	(register, 0x14, 4) INT_SUB (register, 0x5c, 4) , (register, 0x40, 4)

0046f46c: li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0046f470: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f474: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f478: subu t0,t0,s5
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x54, 4)

0046f47c: subu s0,s0,s6
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x58, 4)

0046f480: addu t1,s2,a0
	(register, 0x24, 4) INT_ADD (register, 0x48, 4) , (register, 0x10, 4)

0046f484: addu v0,t1,s3
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x4c, 4)

0046f488: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f48c: nop

0046f490: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046f494: addu v0,s4,v0
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (register, 0x8, 4)

0046f498: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f49c: nop

0046f4a0: beq v0,zero,0x0046f51c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f51c, 4) , (unique, 0x1200, 1)

0046f4a4: _nop

0046f4a8: beq a3,zero,0x0046f4bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46f4bc, 4) , (unique, 0x1200, 1)

0046f4ac: _sltu v1,v0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f4b0: beq v1,zero,0x0046f4bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f4bc, 4) , (unique, 0x1200, 1)

0046f4b4: _nop

0046f4b8: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046f4bc: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0046f4c0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f4c4: sltu v0,a1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f4c8: beq v0,zero,0x0046f480
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f480, 4) , (unique, 0x1200, 1)

0046f4cc: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f4d0: lw ra,0x43c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x43c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4d4: lw s7,0x438(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x438, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4d8: lw s6,0x434(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x434, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4dc: lw s5,0x430(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4e0: lw s4,0x42c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x42c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4e4: lw s3,0x428(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x428, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4e8: lw s2,0x424(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x424, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4ec: lw s1,0x420(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x420, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4f0: lw s0,0x41c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x41c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f4f4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x440, 4)
	 ---  RETURN (register, 0x80, 4)

0046f4f8: _addiu sp,sp,0x440
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x440, 4)

0046f4fc: beq t1,a0,0x0046f704
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f704, 4) , (unique, 0x1200, 1)

0046f500: _nop

0046f504: b 0x0046f314
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f314, 4)

0046f508: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0046f50c: beq s6,a0,0x0046f6f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f6f8, 4) , (unique, 0x1200, 1)

0046f510: _nop

0046f514: b 0x0046f390
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f390, 4)

0046f518: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0046f51c: sltu v0,s5,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f520: beq v0,zero,0x0046f52c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f52c, 4) , (unique, 0x1200, 1)

0046f524: _or v1,s5,zero
	(register, 0xc, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f528: or v1,a3,zero
	(register, 0xc, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046f52c: sltu v0,v1,s3
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f530: bne v0,zero,0x0046f548
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f548, 4) , (unique, 0x1700, 1)

0046f534: _addu v0,v1,a0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f538: b 0x0046f588
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46f588, 4)

0046f53c: _addiu v1,s5,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046f540: beq s3,v1,0x0046f584
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f584, 4) , (unique, 0x1200, 1)

0046f544: _addu v0,v1,a0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f548: addu a2,s1,v1
	(register, 0x18, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

0046f54c: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0046f550: lbu a2,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f554: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f558: nop

0046f55c: beq a2,v0,0x0046f540
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46f540, 4) , (unique, 0x1200, 1)

0046f560: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046f564: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0046f568: sltu v0,v1,s3
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f56c: beq v0,zero,0x0046f584
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f584, 4) , (unique, 0x1200, 1)

0046f570: _nop

0046f574: addu a0,t0,a0
	(register, 0x10, 4) INT_ADD (register, 0x20, 4) , (register, 0x10, 4)

0046f578: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0046f57c: b 0x0046f4c4
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46f4c4, 4)

0046f580: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f584: addiu v1,s5,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046f588: addu t3,v1,a0
	(register, 0x2c, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f58c: sltu v0,a3,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f590: bne v0,zero,0x0046f5ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46f5ac, 4) , (unique, 0x1700, 1)

0046f594: _subu t3,t3,s5
	(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (register, 0x54, 4)

0046f598: b 0x0046f71c
	(register, 0xc, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46f71c, 4)

0046f59c: _or v1,s5,zero
	(register, 0xc, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f5a0: beq v1,a3,0x0046f5d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x1c, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46f5d8, 4) , (unique, 0x1200, 1)

0046f5a4: _sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f5a8: or v1,a2,zero
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046f5ac: addiu a2,v1,-0x1
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0046f5b0: addu v0,t3,v1
	(register, 0x8, 4) INT_ADD (register, 0x2c, 4) , (register, 0xc, 4)

0046f5b4: addu t2,s1,a2
	(register, 0x28, 4) INT_ADD (register, 0x44, 4) , (register, 0x18, 4)

0046f5b8: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0046f5bc: lbu t2,0x1(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f5c0: lbu v0,0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f5c4: nop

0046f5c8: beq t2,v0,0x0046f5a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46f5a0, 4) , (unique, 0x1200, 1)

0046f5cc: _addiu v0,a3,0x1
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0046f5d0: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046f5d4: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f5d8: bne v0,zero,0x0046f4d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f4d0, 4) , (unique, 0x1700, 1)

0046f5dc: _or v0,t1,zero
	(register, 0x8, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046f5e0: addu a0,a0,s6
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x58, 4)

0046f5e4: b 0x0046f4c4
	(register, 0x1c, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46f4c4, 4)

0046f5e8: _or a3,s0,zero
	(register, 0x1c, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046f5ec: subu s0,s0,s5
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x54, 4)

0046f5f0: sltu v0,s0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x40, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f5f4: bne v0,zero,0x0046f6a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f6a4, 4) , (unique, 0x1700, 1)

0046f5f8: _nop

0046f5fc: li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0046f600: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

0046f604: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f608: sltu t1,s5,s3
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x4c, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5380, 1)

0046f60c: b 0x0046f624
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x54, 4)
	 ---  BRANCH (ram, 0x46f624, 4)

0046f610: _subu t0,t0,s5
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x54, 4)

0046f614: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0046f618: sltu v0,a1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f61c: bne v0,zero,0x0046f4d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f4d0, 4) , (unique, 0x1700, 1)

0046f620: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f624: addu v0,s2,a0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x10, 4)

0046f628: addu v1,v0,s3
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x4c, 4)

0046f62c: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f630: nop

0046f634: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046f638: addu v1,s4,v1
	(register, 0xc, 4) INT_ADD (register, 0x50, 4) , (register, 0xc, 4)

0046f63c: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f640: nop

0046f644: bne v1,zero,0x0046f614
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f614, 4) , (unique, 0x1700, 1)

0046f648: _nop

0046f64c: bne t1,zero,0x0046f668
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f668, 4) , (unique, 0x1700, 1)

0046f650: _or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f654: b 0x0046f6ac
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46f6ac, 4)

0046f658: _addiu v1,s5,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046f65c: sltu v1,a3,s3
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x4c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f660: beq v1,zero,0x0046f6ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46f6ac, 4) , (unique, 0x1200, 1)

0046f664: _addiu v1,s5,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046f668: addu v1,a3,a0
	(register, 0xc, 4) INT_ADD (register, 0x1c, 4) , (register, 0x10, 4)

0046f66c: addu a2,s1,a3
	(register, 0x18, 4) INT_ADD (register, 0x44, 4) , (register, 0x1c, 4)

0046f670: addu v1,s2,v1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

0046f674: lbu a2,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f678: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f67c: nop

0046f680: beq a2,v1,0x0046f65c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46f65c, 4) , (unique, 0x1200, 1)

0046f684: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0046f688: addiu a3,a3,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046f68c: sltu v1,a3,s3
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x4c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f690: beq v1,zero,0x0046f6ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46f6ac, 4) , (unique, 0x1200, 1)

0046f694: _addiu v1,s5,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046f698: addu a0,t0,a0
	(register, 0x10, 4) INT_ADD (register, 0x20, 4) , (register, 0x10, 4)

0046f69c: b 0x0046f618
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x1c, 4)
	 ---  BRANCH (ram, 0x46f618, 4)

0046f6a0: _addu a0,a0,a3
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x1c, 4)

0046f6a4: b 0x0046f5fc
	(register, 0x40, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46f5fc, 4)

0046f6a8: _or s0,s5,zero
	(register, 0x40, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f6ac: addu a3,v1,a0
	(register, 0x1c, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046f6b0: li a2,-0x1
	(register, 0x18, 4) COPY (const, 0xffffffff, 4)

0046f6b4: addu t4,s1,v1
	(register, 0x30, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

0046f6b8: beq v1,a2,0x0046f4d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x46f4d0, 4) , (unique, 0x1200, 1)

0046f6bc: _addu a3,s2,a3
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (register, 0x1c, 4)

0046f6c0: addiu v1,t4,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4)

0046f6c4: b 0x0046f6d4
	(register, 0x34, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46f6d4, 4)

0046f6c8: _li t5,-0x1
	(register, 0x34, 4) COPY (const, 0xffffffff, 4)

0046f6cc: beq a2,t5,0x0046f4d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x34, 4)
	 ---  CBRANCH (ram, 0x46f4d0, 4) , (unique, 0x1200, 1)

0046f6d0: _nop

0046f6d4: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0046f6d8: lbu t2,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f6dc: lbu t3,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x2c, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f6e0: addu a2,v1,s5
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (register, 0x54, 4)

0046f6e4: subu a2,a2,t4
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x30, 4)

0046f6e8: beq t3,t2,0x0046f6cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x28, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46f6cc, 4) , (unique, 0x1200, 1)

0046f6ec: _addiu a3,a3,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046f6f0: b 0x0046f618
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x46f618, 4)

0046f6f4: _addu a0,a0,s0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x40, 4)

0046f6f8: addu a1,a1,s6
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x58, 4)

0046f6fc: b 0x0046f390
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f390, 4)

0046f700: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f704: addu a1,a1,t1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x24, 4)

0046f708: b 0x0046f314
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f314, 4)

0046f70c: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046f710: li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

0046f714: b 0x0046f404
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46f404, 4)

0046f718: _or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f71c: b 0x0046f5d4
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f5d4, 4)

0046f720: _addiu v0,a3,0x1
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

