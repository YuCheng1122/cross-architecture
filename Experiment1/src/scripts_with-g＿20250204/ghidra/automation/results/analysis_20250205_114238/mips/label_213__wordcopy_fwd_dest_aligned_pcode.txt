Label: 213
Function: _wordcopy_fwd_dest_aligned
Architecture: mips
Source File: Unknown
Entry Point: 0041ce7c

P-code:

0041ce7c: andi a3,a1,0x3
	(register, 0x1c, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)

0041ce80: li v0,-0x4
	(register, 0x8, 4) COPY (const, 0xfffffffc, 4)

0041ce84: and a1,a1,v0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x8, 4)

0041ce88: sll a3,a3,0x3
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x3, 4)

0041ce8c: li t0,0x20
	(register, 0x20, 4) COPY (const, 0x20, 4)

0041ce90: andi t3,a2,0x3
	(register, 0x2c, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

0041ce94: li t4,0x2
	(register, 0x30, 4) COPY (const, 0x2, 4)

0041ce98: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ce9c: lw v0,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cea0: subu t0,t0,a3
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x1c, 4)

0041cea4: addiu t2,a1,0x4
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0041cea8: beq t3,t4,0x0041cf7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x30, 4)
	(register, 0x24, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41cf7c, 4) , (unique, 0x1200, 1)

0041ceac: _or t1,a0,zero
	(register, 0x24, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041ceb0: li t4,0x3
	(register, 0x30, 4) COPY (const, 0x3, 4)

0041ceb4: beq t3,t4,0x0041cf68
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x30, 4)
	(register, 0x30, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41cf68, 4) , (unique, 0x1200, 1)

0041ceb8: _or t4,v1,zero
	(register, 0x30, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041cebc: li t4,0x1
	(register, 0x30, 4) COPY (const, 0x1, 4)

0041cec0: beq t3,t4,0x0041cfbc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (register, 0x30, 4)
	 ---  CBRANCH (ram, 0x41cfbc, 4) , (unique, 0x1200, 1)

0041cec4: _nop

0041cec8: or t4,v0,zero
	(register, 0x30, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041cecc: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041ced0: sllv v0,v0,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0041ced4: srlv v1,t4,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x5780, 4)

0041ced8: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0041cedc: addiu t3,a0,-0x4
	(register, 0x2c, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0041cee0: lw v1,0x4(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cee4: sw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041cee8: addiu t1,t3,0x8
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)

0041ceec: srlv v0,v1,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0041cef0: sllv t4,t4,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x30, 4) INT_LEFT (register, 0x30, 4) , (unique, 0x4f80, 4)

0041cef4: or t4,t4,v0
	(register, 0x30, 4) INT_OR (register, 0x30, 4) , (register, 0x8, 4)

0041cef8: lw v0,0x8(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cefc: sllv v1,v1,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0041cf00: srlv a0,v0,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041cf04: sw t4,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0041cf08: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

0041cf0c: addiu t1,t3,0xc
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0xc, 4)

0041cf10: addiu a2,a2,-0x4
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffc, 4)

0041cf14: lw a1,0xc(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cf18: addiu t3,t3,0x10
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x10, 4)

0041cf1c: beq a2,zero,0x0041cfa8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41cfa8, 4) , (unique, 0x1200, 1)

0041cf20: _sw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041cf24: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041cf28: addiu t2,t2,0x10
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x10, 4)

0041cf2c: or a0,t3,zero
	(register, 0x10, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)

0041cf30: or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041cf34: lw t4,0x0(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cf38: srlv a1,v0,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041cf3c: sllv v1,v1,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0041cf40: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

0041cf44: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041cf48: sllv v0,v0,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0041cf4c: srlv v1,t4,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0x30, 4) , (unique, 0x5780, 4)

0041cf50: addiu t1,t3,0x4
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)

0041cf54: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0041cf58: lw v1,0x4(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cf5c: sw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041cf60: b 0x0041ceec
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
	 ---  BRANCH (ram, 0x41ceec, 4)

0041cf64: _addiu t1,t3,0x8
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)

0041cf68: addiu t3,a0,-0x8
	(register, 0x2c, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff8, 4)

0041cf6c: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0041cf70: or t2,a1,zero
	(register, 0x28, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041cf74: b 0x0041ceec
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41ceec, 4)

0041cf78: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041cf7c: addiu t3,a0,-0xc
	(register, 0x2c, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff4, 4)

0041cf80: addiu a2,a2,0x2
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)

0041cf84: sllv v1,v1,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0041cf88: srlv a0,v0,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041cf8c: addiu t2,a1,-0x4
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0041cf90: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

0041cf94: addiu a2,a2,-0x4
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffc, 4)

0041cf98: lw a1,0xc(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cf9c: addiu t3,t3,0x10
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x10, 4)

0041cfa0: bne a2,zero,0x0041cf24
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41cf24, 4) , (unique, 0x1700, 1)

0041cfa4: _sw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041cfa8: sllv v0,v0,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0041cfac: srlv a1,a1,t0
	(unique, 0x5780, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (unique, 0x5780, 4)

0041cfb0: or v0,v0,a1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)

0041cfb4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  RETURN (register, 0x80, 4)

0041cfb8: _sw v0,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041cfbc: addiu t2,a1,0x8
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)

0041cfc0: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0041cfc4: b 0x0041cf34
	(register, 0x2c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41cf34, 4)

0041cfc8: _or t3,a0,zero
	(register, 0x2c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

