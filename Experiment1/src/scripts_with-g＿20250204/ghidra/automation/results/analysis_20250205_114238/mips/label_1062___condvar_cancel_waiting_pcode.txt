Label: 1062
Function: __condvar_cancel_waiting
Architecture: mips
Source File: Unknown
Entry Point: 00480ce0

P-code:

00480ce0: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00480ce4: addiu gp,gp,-0x5e80
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffa180, 4)

00480ce8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00480cec: addiu sp,sp,-0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc8, 4)

00480cf0: sw s4,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00480cf4: sw s3,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00480cf8: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00480cfc: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00480d00: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00480d04: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00480d08: sw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00480d0c: sw s6,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00480d10: sw s5,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00480d14: lw s3,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d18: lw s4,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d1c: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00480d20: or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00480d24: lw v0,0x20(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d28: or s2,a3,zero
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00480d2c: addiu a0,a0,0x20
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)

00480d30: andi v1,v0,0x3
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00480d34: bne v1,zero,0x00480ea0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480ea0, 4) , (unique, 0x1700, 1)

00480d38: _ori a2,v0,0x1
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

00480d3c: ll a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d40: bne a1,v0,0x00480d5c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480d5c, 4) , (unique, 0x1700, 1)

00480d44: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00480d48: or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00480d4c: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480d50: beq at,zero,0x00480d3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480d3c, 4) , (unique, 0x1200, 1)

00480d54: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00480d58: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480d5c: beq v1,zero,0x00480d30
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480d30, 4) , (unique, 0x1200, 1)

00480d60: _or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00480d64: lw t9,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d68: nop

00480d6c: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x480d74, 4)
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	 ---  CALL (ram, 0x476c24, 4)

00480d70: _addiu a0,s0,0x8
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00480d74: srl a0,v0,0x1
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00480d78: srl v1,v1,0x1
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00480d7c: sll v0,v0,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00480d80: sltu a1,s1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00480d84: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d88: beq a1,zero,0x00480dd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x480dd8, 4) , (unique, 0x1200, 1)

00480d8c: _or v1,v0,v1
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00480d90: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480d94: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480d98: addiu t9,t9,0xb88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xb88, 4)

00480d9c: bal 0x00480b88
	(register, 0x7c, 4) COPY (const, 0x480da4, 4)
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480b88, 4)

00480da0: _or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00480da4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480da8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480dac: lw t9,-0x75c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480db0: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480db4: lw s6,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480db8: lw s5,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dbc: lw s4,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dc0: lw s3,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dc4: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dc8: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dcc: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dd0: jr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  BRANCHIND (register, 0x80, 4)

00480dd4: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

00480dd8: bne a0,s1,0x00480de8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x44, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x480de8, 4) , (unique, 0x1700, 1)

00480ddc: _sltu v0,s2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00480de0: bne v0,zero,0x00480d90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480d90, 4) , (unique, 0x1700, 1)

00480de4: _nop

00480de8: lw v0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480dec: sll s3,s3,0x2
	(register, 0x4c, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

00480df0: srl v0,v0,0x2
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4)

00480df4: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00480df8: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00480dfc: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00480e00: addu s3,s0,s3
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (register, 0x4c, 4)

00480e04: sltu a1,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00480e08: lw a0,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e0c: beq a1,zero,0x00480e5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480e5c, 4) , (unique, 0x1200, 1)

00480e10: _nop

00480e14: beq a0,zero,0x00480d90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480d90, 4) , (unique, 0x1200, 1)

00480e18: _nop

00480e1c: addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

00480e20: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e24: sw a0,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00480e28: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e2c: lw s6,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e30: lw s5,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e34: lw s3,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e38: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e3c: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e40: or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00480e44: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480e48: lw s4,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e4c: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e50: addiu t9,t9,0xb88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xb88, 4)

00480e54: b 0x00480b88
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  BRANCH (ram, 0x480b88, 4)

00480e58: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

00480e5c: bne v0,s1,0x00480e70
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_LEFT (const, 0xe000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x480e70, 4) , (unique, 0x1700, 1)

00480e60: _lui v0,0xe000
	(register, 0x8, 4) INT_LEFT (const, 0xe000, 4) , (const, 0x10, 4)

00480e64: sltu v1,s2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00480e68: bne v1,zero,0x00480e14
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480e14, 4) , (unique, 0x1700, 1)

00480e6c: _nop

00480e70: bne a0,v0,0x00480e1c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x480e1c, 4) , (unique, 0x1700, 1)

00480e74: _nop

00480e78: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e7c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480e80: addiu t9,t9,0xb88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xb88, 4)

00480e84: bal 0x00480b88
	(register, 0x7c, 4) COPY (const, 0x480e8c, 4)
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480b88, 4)

00480e88: _or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00480e8c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e90: nop

00480e94: lw t9,-0x7f90(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8070, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480e98: b 0x00480db0
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x480db0, 4)

00480e9c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480ea0: li s5,0x2
	(register, 0x54, 4) COPY (const, 0x2, 4)

00480ea4: xori a1,s4,0x80
	(register, 0x14, 4) INT_XOR (register, 0x50, 4) , (const, 0x80, 4)

00480ea8: li ra,-0x4
	(register, 0x7c, 4) COPY (const, 0xfffffffc, 4)

00480eac: li s6,-0xb
	(register, 0x58, 4) COPY (const, 0xfffffff5, 4)

00480eb0: beq v1,s5,0x00480ef0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x7c, 4)
	 ---  CBRANCH (ram, 0x480ef0, 4) , (unique, 0x1200, 1)

00480eb4: _and v1,v0,ra
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x7c, 4)

00480eb8: ori v1,v1,0x2
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x2, 4)

00480ebc: ll a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480ec0: bne a3,v0,0x00480edc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480edc, 4) , (unique, 0x1700, 1)

00480ec4: _li a2,0x0
	(register, 0x18, 4) COPY (const, 0x0, 4)

00480ec8: or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00480ecc: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480ed0: beq at,zero,0x00480ebc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480ebc, 4) , (unique, 0x1200, 1)

00480ed4: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00480ed8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480edc: or v0,a3,zero
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00480ee0: beq a2,zero,0x00480f20
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x480f20, 4) , (unique, 0x1200, 1)

00480ee4: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

00480ee8: beq v1,zero,0x00480d64
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480d64, 4) , (unique, 0x1200, 1)

00480eec: _nop

00480ef0: and a2,v0,ra
	(register, 0x18, 4) INT_AND (register, 0x8, 4) , (register, 0x7c, 4)

00480ef4: ori a2,a2,0x2
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x2, 4)

00480ef8: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480efc: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00480f00: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00480f04: beq a3,zero,0x00480f14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480f14, 4) , (unique, 0x1200, 1)

00480f08: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480f0c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00480f10: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480f14: beq v1,zero,0x00480f28
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480f28, 4) , (unique, 0x1200, 1)

00480f18: _nop

00480f1c: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480f20: b 0x00480eb0
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x480eb0, 4)

00480f24: _andi v1,v0,0x3
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00480f28: beq v0,s6,0x00480f1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x480f1c, 4) , (unique, 0x1200, 1)

00480f2c: _nop

00480f30: beq v0,ra,0x00480f1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x7c, 4)
	 ---  CBRANCH (ram, 0x480f1c, 4) , (unique, 0x1200, 1)

00480f34: _nop

00480f38: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480f3c: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480f40: nop

00480f44: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x480f4c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00480f48: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

