Label: 265
Function: __fcntl64_nocancel_adjusted
Architecture: mips
Source File: Unknown
Entry Point: 0041fdc0

P-code:

0041fdc0: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041fdc4: addiu gp,gp,-0x4f60
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffb0a0, 4)

0041fdc8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041fdcc: addiu sp,sp,-0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffff0, 4)

0041fdd0: li v0,0x17
	(register, 0x8, 4) COPY (const, 0x17, 4)

0041fdd4: beq a1,v0,0x0041fe08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)
	 ---  CBRANCH (ram, 0x41fe08, 4) , (unique, 0x1200, 1)

0041fdd8: _sw gp,0x0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041fddc: li v0,0x107c
	(register, 0x8, 4) COPY (const, 0x107c, 4)

0041fde0: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

0041fde4: bne a3,zero,0x0041fe00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41fe00, 4) , (unique, 0x1700, 1)

0041fde8: _nop

0041fdec: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041fdf0: beq v1,zero,0x0041fe70
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41fe70, 4) , (unique, 0x1200, 1)

0041fdf4: _nop

0041fdf8: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  RETURN (register, 0x80, 4)

0041fdfc: _addiu sp,sp,0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0041fe00: b 0x0041fdec
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x41fdec, 4)

0041fe04: _subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041fe08: li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0041fe0c: addiu a2,sp,0x8
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x8, 4)

0041fe10: li v0,0x107c
	(register, 0x8, 4) COPY (const, 0x107c, 4)

0041fe14: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

0041fe18: beq a3,zero,0x0041fe28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x41fe28, 4) , (unique, 0x1200, 1)

0041fe1c: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041fe20: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041fe24: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041fe28: beq v1,zero,0x0041fe4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41fe4c, 4) , (unique, 0x1200, 1)

0041fe2c: _subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041fe30: lw a0,0x8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041fe34: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0041fe38: lw v0,0xc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041fe3c: bne a0,v1,0x0041fdf8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41fdf8, 4) , (unique, 0x1700, 1)

0041fe40: _nop

0041fe44: b 0x0041fdf8
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x41fdf8, 4)

0041fe48: _subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041fe4c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041fe50: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041fe54: lw v1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041fe58: nop

0041fe5c: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041fe60: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041fe64: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0041fe68: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  RETURN (register, 0x80, 4)

0041fe6c: _addiu sp,sp,0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0041fe70: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041fe74: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041fe78: lw v1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041fe7c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041fe80: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041fe84: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041fe88: b 0x0041fdf8
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x41fdf8, 4)

0041fe8c: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

