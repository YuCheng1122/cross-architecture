Label: 523
Function: __strchrnul
Architecture: mips
Source File: Unknown
Entry Point: 00437b60

P-code:

00437b60: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

00437b64: addiu gp,gp,0x3300
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x3300, 4)

00437b68: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00437b6c: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

00437b70: andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

00437b74: sll a3,a1,0x8
	(register, 0x1c, 4) INT_LEFT (register, 0x14, 4) , (const, 0x8, 4)

00437b78: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00437b7c: li s0,-0x4
	(register, 0x40, 4) COPY (const, 0xfffffffc, 4)

00437b80: addu a3,a3,a1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x14, 4)

00437b84: sw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00437b88: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00437b8c: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00437b90: and s0,a0,s0
	(register, 0x40, 4) INT_AND (register, 0x10, 4) , (register, 0x40, 4)

00437b94: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00437b98: sll v0,a3,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x10, 4)

00437b9c: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437ba0: addu a3,a3,v0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x8, 4)

00437ba4: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437ba8: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00437bac: xor a2,a0,a3
	(register, 0x18, 4) INT_XOR (register, 0x10, 4) , (register, 0x1c, 4)

00437bb0: and v0,a0,v1
	(register, 0x8, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00437bb4: and a1,a2,v1
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0xc, 4)

00437bb8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00437bbc: addu a1,a1,v1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0xc, 4)

00437bc0: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00437bc4: or a1,a1,a2
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x18, 4)

00437bc8: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

00437bcc: nor v0,v0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00437bd0: sll v1,s1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0x44, 4) , (const, 0x3, 4)

00437bd4: sllv a0,v0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

00437bd8: bne a0,zero,0x00437c6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x437c6c, 4) , (unique, 0x1700, 1)

00437bdc: _lui a2,0xfefe
	(register, 0x18, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00437be0: lui t2,0x8080
	(register, 0x28, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00437be4: ori a2,a2,0xfeff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xfeff, 4)

00437be8: ori t2,t2,0x8080
	(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x8080, 4)

00437bec: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437bf0: nop

00437bf4: xor a1,v0,a3
	(register, 0x14, 4) INT_XOR (register, 0x8, 4) , (register, 0x1c, 4)

00437bf8: addu v1,v0,a2
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x18, 4)

00437bfc: nor t1,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x24, 4) INT_NEGATE (unique, 0x4280, 4)

00437c00: addu a0,a1,a2
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x18, 4)

00437c04: nor t0,zero,a1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x20, 4) INT_NEGATE (unique, 0x4280, 4)

00437c08: and v1,v1,t1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x24, 4)

00437c0c: and a0,a0,t0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x20, 4)

00437c10: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

00437c14: and v1,v1,t2
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x28, 4)

00437c18: beq v1,zero,0x00437bec
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x437bec, 4) , (unique, 0x1200, 1)

00437c1c: _addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

00437c20: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437c24: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00437c28: and a0,v0,v1
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00437c2c: and a2,a1,v1
	(register, 0x18, 4) INT_AND (register, 0x14, 4) , (register, 0xc, 4)

00437c30: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00437c34: addu a2,a2,v1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

00437c38: or a0,a0,v0
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

00437c3c: or v0,a2,a1
	(register, 0x8, 4) INT_OR (register, 0x18, 4) , (register, 0x14, 4)

00437c40: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c44: and a0,a0,v0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x8, 4)

00437c48: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x437c50, 4)
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CALLIND (register, 0x80, 4)

00437c4c: _nor a0,a0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

00437c50: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c54: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00437c58: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c5c: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

00437c60: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c64: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00437c68: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00437c6c: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c70: nop

00437c74: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x437c7c, 4)
	 ---  CALLIND (register, 0x80, 4)

00437c78: _nop

00437c7c: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c80: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00437c84: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c88: addu v0,s1,v0
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00437c8c: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437c90: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00437c94: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

