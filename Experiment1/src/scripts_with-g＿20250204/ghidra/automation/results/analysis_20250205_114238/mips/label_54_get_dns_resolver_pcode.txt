Label: 54
Function: get_dns_resolver
Architecture: mips
Source File: Unknown
Entry Point: 0040c47c

P-code:

0040c47c: addiu sp,sp,-0x858
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffff7a8, 4)

0040c480: sw ra,0x854(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x854, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040c484: sw s8,0x850(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x850, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040c488: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040c48c: li a0,0x1e
	(register, 0x10, 4) COPY (const, 0x1e, 4)

0040c490: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40c498, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040c494: _nop

0040c498: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040c49c: li a0,0x1e
	(register, 0x10, 4) COPY (const, 0x1e, 4)

0040c4a0: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40c4a8, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040c4a4: _nop

0040c4a8: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040c4ac: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040c4b0: jal 0x0041f878
	(register, 0x7c, 4) COPY (const, 0x40c4b8, 4)
	 ---  CALL (ram, 0x41f878, 4)

0040c4b4: _nop

0040c4b8: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040c4bc: li a0,0x1e
	(register, 0x10, 4) COPY (const, 0x1e, 4)

0040c4c0: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40c4c8, 4)
	 ---  CALL (ram, 0x410940, 4)

0040c4c4: _nop

0040c4c8: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c4cc: nop

0040c4d0: bltz v0,0x0040c6c8
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c6c8, 4) , (unique, 0x1600, 1)

0040c4d4: _nop

0040c4d8: addiu v0,s8,0x30
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)

0040c4dc: li a2,0x800
	(register, 0x18, 4) COPY (const, 0x800, 4)

0040c4e0: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040c4e4: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c4e8: jal 0x0041fa08
	(register, 0x7c, 4) COPY (const, 0x40c4f0, 4)
	 ---  CALL (ram, 0x41fa08, 4)

0040c4ec: _nop

0040c4f0: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040c4f4: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c4f8: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40c500, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040c4fc: _nop

0040c500: li a0,0x1f
	(register, 0x10, 4) COPY (const, 0x1f, 4)

0040c504: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40c50c, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040c508: _nop

0040c50c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040c510: li a0,0x1f
	(register, 0x10, 4) COPY (const, 0x1f, 4)

0040c514: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40c51c, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040c518: _nop

0040c51c: addiu v1,s8,0x30
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)

0040c520: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040c524: lw a1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c528: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040c52c: jal 0x004116b0
	(register, 0x7c, 4) COPY (const, 0x40c534, 4)
	 ---  CALL (ram, 0x4116b0, 4)

0040c530: _nop

0040c534: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040c538: li a0,0x1f
	(register, 0x10, 4) COPY (const, 0x1f, 4)

0040c53c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40c544, 4)
	 ---  CALL (ram, 0x410940, 4)

0040c540: _nop

0040c544: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c548: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040c54c: beq v1,v0,0x0040c6c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40c6c8, 4) , (unique, 0x1200, 1)

0040c550: _nop

0040c554: sb zero,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040c558: sb zero,0x1d(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040c55c: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c560: nop

0040c564: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040c568: b 0x0040c688
	 ---  BRANCH (ram, 0x40c688, 4)

0040c56c: _nop

0040c570: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c574: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040c578: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040c57c: lbu v0,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040c580: nop

0040c584: sb v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040c588: lb v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040c58c: nop

0040c590: bne v0,zero,0x0040c5c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c5c0, 4) , (unique, 0x1700, 1)

0040c594: _nop

0040c598: lb v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040c59c: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0040c5a0: beq v1,v0,0x0040c674
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40c674, 4) , (unique, 0x1200, 1)

0040c5a4: _nop

0040c5a8: lb v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040c5ac: li v0,0x9
	(register, 0x8, 4) COPY (const, 0x9, 4)

0040c5b0: beq v1,v0,0x0040c674
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40c674, 4) , (unique, 0x1200, 1)

0040c5b4: _nop

0040c5b8: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040c5bc: sb v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040c5c0: lb v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040c5c4: li v0,0x2e
	(register, 0x8, 4) COPY (const, 0x2e, 4)

0040c5c8: beq v1,v0,0x0040c5f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40c5f8, 4) , (unique, 0x1200, 1)

0040c5cc: _nop

0040c5d0: lb v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040c5d4: nop

0040c5d8: slti v0,v0,0x30
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040c5dc: bne v0,zero,0x0040c614
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c614, 4) , (unique, 0x1700, 1)

0040c5e0: _nop

0040c5e4: lb v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040c5e8: nop

0040c5ec: slti v0,v0,0x3a
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3a, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040c5f0: beq v0,zero,0x0040c614
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c614, 4) , (unique, 0x1200, 1)

0040c5f4: _nop

0040c5f8: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c5fc: nop

0040c600: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0040c604: lw v1,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c608: nop

0040c60c: bne v1,v0,0x0040c678
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40c678, 4) , (unique, 0x1700, 1)

0040c610: _nop

0040c614: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c618: addiu v1,s8,0x30
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)

0040c61c: addu a0,v1,v0
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040c620: lw v1,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c624: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c628: nop

0040c62c: subu v0,v1,v0
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0040c630: addiu v1,s8,0x830
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x830, 4)

0040c634: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040c638: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040c63c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040c640: jal 0x00410f50
	(register, 0x7c, 4) COPY (const, 0x40c648, 4)
	 ---  CALL (ram, 0x410f50, 4)

0040c644: _nop

0040c648: lw v1,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c64c: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c650: nop

0040c654: subu v0,v1,v0
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0040c658: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040c65c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040c660: sb zero,0x818(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x818, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040c664: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040c668: sb v0,0x1d(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040c66c: b 0x0040c6a0
	 ---  BRANCH (ram, 0x40c6a0, 4)

0040c670: _nop

0040c674: nop

0040c678: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c67c: nop

0040c680: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040c684: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040c688: lw v1,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c68c: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c690: nop

0040c694: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0040c698: bne v0,zero,0x0040c570
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c570, 4) , (unique, 0x1700, 1)

0040c69c: _nop

0040c6a0: lb v0,0x1d(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040c6a4: nop

0040c6a8: beq v0,zero,0x0040c6c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c6c8, 4) , (unique, 0x1200, 1)

0040c6ac: _nop

0040c6b0: addiu v0,s8,0x830
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x830, 4)

0040c6b4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040c6b8: jal 0x004003b0
	(register, 0x7c, 4) COPY (const, 0x40c6c0, 4)
	 ---  CALL (ram, 0x4003b0, 4)

0040c6bc: _nop

0040c6c0: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c6c4: _nop

0040c6c8: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x40c6d0, 4)
	 ---  CALL (ram, 0x40f524, 4)

0040c6cc: _nop

0040c6d0: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

0040c6d4: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

0040c6d8: beq v0,v1,0x0040c768
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x40c768, 4) , (unique, 0x1200, 1)

0040c6dc: _nop

0040c6e0: sltiu v1,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0040c6e4: beq v1,zero,0x0040c780
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c780, 4) , (unique, 0x1200, 1)

0040c6e8: _nop

0040c6ec: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0040c6f0: beq v0,v1,0x0040c750
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x40c750, 4) , (unique, 0x1200, 1)

0040c6f4: _nop

0040c6f8: sltiu v1,v0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0040c6fc: beq v1,zero,0x0040c780
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c780, 4) , (unique, 0x1200, 1)

0040c700: _nop

0040c704: beq v0,zero,0x0040c720
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40c720, 4) , (unique, 0x1200, 1)

0040c708: _nop

0040c70c: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0040c710: beq v0,v1,0x0040c738
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x40c738, 4) , (unique, 0x1200, 1)

0040c714: _nop

0040c718: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c71c: _nop

0040c720: lui v0,0x808
	(register, 0x8, 4) INT_LEFT (const, 0x808, 4) , (const, 0x10, 4)

0040c724: ori a0,v0,0x808
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x808, 4)

0040c728: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40c730, 4)
	 ---  CALL (ram, 0x422288, 4)

0040c72c: _nop

0040c730: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c734: _nop

0040c738: lui v0,0x4a52
	(register, 0x8, 4) INT_LEFT (const, 0x4a52, 4) , (const, 0x10, 4)

0040c73c: ori a0,v0,0x2a2a
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x2a2a, 4)

0040c740: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40c748, 4)
	 ---  CALL (ram, 0x422288, 4)

0040c744: _nop

0040c748: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c74c: _nop

0040c750: lui v0,0x4006
	(register, 0x8, 4) INT_LEFT (const, 0x4006, 4) , (const, 0x10, 4)

0040c754: ori a0,v0,0x4006
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x4006, 4)

0040c758: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40c760, 4)
	 ---  CALL (ram, 0x422288, 4)

0040c75c: _nop

0040c760: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c764: _nop

0040c768: lui v0,0x402
	(register, 0x8, 4) INT_LEFT (const, 0x402, 4) , (const, 0x10, 4)

0040c76c: ori a0,v0,0x202
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x202, 4)

0040c770: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40c778, 4)
	 ---  CALL (ram, 0x422288, 4)

0040c774: _nop

0040c778: b 0x0040c780
	 ---  BRANCH (ram, 0x40c780, 4)

0040c77c: _nop

0040c780: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040c784: lw ra,0x854(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x854, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c788: lw s8,0x850(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x850, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040c78c: addiu sp,sp,0x858
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x858, 4)

0040c790: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0040c794: _nop

