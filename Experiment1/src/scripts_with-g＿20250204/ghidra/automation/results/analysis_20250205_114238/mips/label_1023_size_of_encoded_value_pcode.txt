Label: 1023
Function: size_of_encoded_value
Architecture: mips
Source File: Unknown
Entry Point: 0047cc78

P-code:

0047cc78: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

0047cc7c: addiu gp,gp,-0x1e18
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffe1e8, 4)

0047cc80: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0047cc84: li v0,0xff
	(register, 0x8, 4) COPY (const, 0xff, 4)

0047cc88: beq a0,v0,0x0047cce4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x47cce4, 4) , (unique, 0x1200, 1)

0047cc8c: _andi a0,a0,0x7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

0047cc90: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0047cc94: beq a0,v0,0x0047ccec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47ccec, 4) , (unique, 0x1200, 1)

0047cc98: _nop

0047cc9c: sltiu v0,a0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047cca0: beq v0,zero,0x0047ccc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47ccc8, 4) , (unique, 0x1200, 1)

0047cca4: _nop

0047cca8: beq a0,zero,0x0047ccdc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x47ccdc, 4) , (unique, 0x1200, 1)

0047ccac: _li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0047ccb0: addiu sp,sp,-0x20
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffe0, 4)

0047ccb4: lw t9,-0x7fcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8034, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047ccb8: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0047ccbc: sw ra,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0047ccc0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x47ccc8, 4)
	 ---  CALLIND (register, 0x80, 4)

0047ccc4: _nop

0047ccc8: li v0,0x3
	(register, 0x8, 4) COPY (const, 0x3, 4)

0047cccc: beq a0,v0,0x0047ccf4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x47ccf4, 4) , (unique, 0x1200, 1)

0047ccd0: _li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

0047ccd4: bne a0,v1,0x0047ccb0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) COPY (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x47ccb0, 4) , (unique, 0x1700, 1)

0047ccd8: _li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

0047ccdc: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0047cce0: _nop

0047cce4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  RETURN (register, 0x80, 4)

0047cce8: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0047ccec: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  RETURN (register, 0x80, 4)

0047ccf0: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0047ccf4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) COPY (const, 0x4, 4)
	 ---  RETURN (register, 0x80, 4)

0047ccf8: _li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

