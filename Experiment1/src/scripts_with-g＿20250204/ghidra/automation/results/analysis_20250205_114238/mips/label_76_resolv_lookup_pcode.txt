Label: 76
Function: resolv_lookup
Architecture: mips
Source File: Unknown
Entry Point: 0040fb38

P-code:

0040fb38: addiu sp,sp,-0x1118
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffeee8, 4)

0040fb3c: sw ra,0x1114(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1114, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040fb40: sw s8,0x1110(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1110, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040fb44: sw s0,0x110c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x110c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0040fb48: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040fb4c: sw a0,0x1118(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040fb50: li a1,0x8
	(register, 0x14, 4) COPY (const, 0x8, 4)

0040fb54: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fb58: jal 0x00400380
	(register, 0x7c, 4) COPY (const, 0x40fb60, 4)
	 ---  CALL (ram, 0x400380, 4)

0040fb5c: _nop

0040fb60: sw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fb64: addiu v0,s8,0x64
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x64, 4)

0040fb68: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fb6c: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fb70: nop

0040fb74: addiu v0,v0,0xc
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)

0040fb78: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fb7c: lw a1,0x1118(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fb80: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fb84: jal 0x0040f8c0
	(register, 0x7c, 4) COPY (const, 0x40fb8c, 4)
	 ---  CALL (ram, 0x40f8c0, 4)

0040fb88: _nop

0040fb8c: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fb90: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40fb98, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040fb94: _nop

0040fb98: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040fb9c: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fba0: nop

0040fba4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040fba8: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fbac: sw zero,0x1064(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbb0: sw zero,0x1068(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1068, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbb4: sw zero,0x106c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x106c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbb8: sw zero,0x1070(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1070, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbbc: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fbc0: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40fbc8, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040fbc4: _nop

0040fbc8: addiu v0,v0,0x11
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x11, 4)

0040fbcc: sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fbd0: sw zero,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbd4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fbd8: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fbdc: sw zero,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fbe0: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x40fbe8, 4)
	 ---  CALL (ram, 0x40f524, 4)

0040fbe4: _nop

0040fbe8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fbec: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

0040fbf0: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0040fbf4: bne v0,zero,0x0040fc00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40fc00, 4) , (unique, 0x1700, 1)

0040fbf8: _nop

0040fbfc: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040fc00: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040fc04: sh v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040fc08: addiu v0,s8,0x1064
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1064, 4)

0040fc0c: li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0040fc10: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fc14: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40fc1c, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040fc18: _nop

0040fc1c: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0040fc20: sh v0,0x1064(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040fc24: lui v0,0x808
	(register, 0x8, 4) INT_LEFT (const, 0x808, 4) , (const, 0x10, 4)

0040fc28: ori a0,v0,0x808
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x808, 4)

0040fc2c: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40fc34, 4)
	 ---  CALL (ram, 0x422288, 4)

0040fc30: _nop

0040fc34: sw v0,0x1068(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1068, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fc38: li a0,0x35
	(register, 0x10, 4) COPY (const, 0x35, 4)

0040fc3c: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40fc44, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040fc40: _nop

0040fc44: sh v0,0x1066(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1066, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040fc48: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fc4c: lhu v1,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

0040fc50: nop

0040fc54: sh v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040fc58: li a0,0x100
	(register, 0x10, 4) COPY (const, 0x100, 4)

0040fc5c: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40fc64, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040fc60: _nop

0040fc64: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fc68: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fc6c: nop

0040fc70: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040fc74: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fc78: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40fc80, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040fc7c: _nop

0040fc80: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fc84: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fc88: nop

0040fc8c: sh v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040fc90: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fc94: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40fc9c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040fc98: _nop

0040fc9c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fca0: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fca4: nop

0040fca8: sh v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040fcac: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fcb0: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40fcb8, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040fcb4: _nop

0040fcb8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fcbc: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fcc0: nop

0040fcc4: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040fcc8: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

0040fccc: _nop

0040fcd0: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fcd4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fcd8: beq v1,v0,0x0040fcec
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40fcec, 4) , (unique, 0x1200, 1)

0040fcdc: _nop

0040fce0: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fce4: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40fcec, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040fce8: _nop

0040fcec: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040fcf0: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040fcf4: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040fcf8: jal 0x00400350
	(register, 0x7c, 4) COPY (const, 0x40fd00, 4)
	 ---  CALL (ram, 0x400350, 4)

0040fcfc: _nop

0040fd00: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fd04: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fd08: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fd0c: bne v1,v0,0x0040fd28
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40fd28, 4) , (unique, 0x1700, 1)

0040fd10: _nop

0040fd14: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fd18: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40fd20, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040fd1c: _nop

0040fd20: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

0040fd24: _nop

0040fd28: addiu v0,s8,0x1064
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1064, 4)

0040fd2c: li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

0040fd30: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fd34: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fd38: jal 0x00421988
	(register, 0x7c, 4) COPY (const, 0x40fd40, 4)
	 ---  CALL (ram, 0x421988, 4)

0040fd3c: _nop

0040fd40: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fd44: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fd48: bne v1,v0,0x0040fd64
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40fd64, 4) , (unique, 0x1700, 1)

0040fd4c: _nop

0040fd50: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fd54: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40fd5c, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040fd58: _nop

0040fd5c: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

0040fd60: _nop

0040fd64: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fd68: addiu v1,s8,0x64
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x64, 4)

0040fd6c: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040fd70: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fd74: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040fd78: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fd7c: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40fd84, 4)
	 ---  CALL (ram, 0x421ec8, 4)

0040fd80: _nop

0040fd84: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fd88: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fd8c: bne v1,v0,0x0040fda8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40fda8, 4) , (unique, 0x1700, 1)

0040fd90: _nop

0040fd94: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040fd98: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40fda0, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040fd9c: _nop

0040fda0: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

0040fda4: _nop

0040fda8: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040fdac: lw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fdb0: li a0,0x3
	(register, 0x10, 4) COPY (const, 0x3, 4)

0040fdb4: jal 0x0041f128
	(register, 0x7c, 4) COPY (const, 0x40fdbc, 4)
	 ---  CALL (ram, 0x41f128, 4)

0040fdb8: _nop

0040fdbc: ori v0,v0,0x80
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x80, 4)

0040fdc0: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fdc4: lw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fdc8: li a0,0x4
	(register, 0x10, 4) COPY (const, 0x4, 4)

0040fdcc: jal 0x0041f128
	(register, 0x7c, 4) COPY (const, 0x40fdd4, 4)
	 ---  CALL (ram, 0x41f128, 4)

0040fdd0: _nop

0040fdd4: addiu v0,s8,0x1084
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1084, 4)

0040fdd8: sw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fddc: sw zero,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fde0: b 0x0040fe10
	 ---  BRANCH (ram, 0x40fe10, 4)

0040fde4: _nop

0040fde8: lw v1,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fdec: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fdf0: nop

0040fdf4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040fdf8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040fdfc: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fe00: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe04: nop

0040fe08: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040fe0c: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fe10: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe14: nop

0040fe18: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0040fe1c: bne v0,zero,0x0040fde8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40fde8, 4) , (unique, 0x1700, 1)

0040fe20: _nop

0040fe24: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe28: nop

0040fe2c: bgez v0,0x0040fe38
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40fe38, 4) , (unique, 0x1300, 1)

0040fe30: _nop

0040fe34: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040fe38: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040fe3c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040fe40: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040fe44: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040fe48: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040fe4c: lw v0,0x1064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe50: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe54: nop

0040fe58: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

0040fe5c: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040fe60: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

0040fe64: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0040fe68: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040fe6c: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040fe70: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040fe74: sw a0,0x1064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040fe78: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

0040fe7c: sw v0,0x1074(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040fe80: sw zero,0x1078(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1078, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040fe84: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fe88: nop

0040fe8c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040fe90: addiu a0,s8,0x1084
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x1084, 4)

0040fe94: addiu v1,s8,0x1074
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x1074, 4)

0040fe98: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040fe9c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040fea0: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040fea4: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040fea8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040feac: jal 0x00400360
	(register, 0x7c, 4) COPY (const, 0x40feb4, 4)
	 ---  CALL (ram, 0x400360, 4)

0040feb0: _nop

0040feb4: sw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040feb8: lw v1,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040febc: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040fec0: beq v1,v0,0x00410300
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x410300, 4) , (unique, 0x1200, 1)

0040fec4: _nop

0040fec8: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fecc: nop

0040fed0: beq v0,zero,0x004102b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4102b4, 4) , (unique, 0x1200, 1)

0040fed4: _nop

0040fed8: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fedc: nop

0040fee0: bgez v0,0x0040feec
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40feec, 4) , (unique, 0x1300, 1)

0040fee4: _nop

0040fee8: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040feec: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040fef0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040fef4: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040fef8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040fefc: lw v0,0x1064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff00: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff04: nop

0040ff08: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

0040ff0c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040ff10: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

0040ff14: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0040ff18: beq v0,zero,0x0041030c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41030c, 4) , (unique, 0x1200, 1)

0040ff1c: _nop

0040ff20: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040ff24: addiu v1,s8,0x864
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x864, 4)

0040ff28: sw zero,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040ff2c: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ff30: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040ff34: li a2,0x800
	(register, 0x18, 4) COPY (const, 0x800, 4)

0040ff38: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040ff3c: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff40: jal 0x00421d48
	(register, 0x7c, 4) COPY (const, 0x40ff48, 4)
	 ---  CALL (ram, 0x421d48, 4)

0040ff44: _nop

0040ff48: sw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ff4c: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff50: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40ff58, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040ff54: _nop

0040ff58: addiu v1,v0,0x11
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x11, 4)

0040ff5c: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff60: nop

0040ff64: sltu v0,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0040ff68: bne v0,zero,0x004102c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4102c0, 4) , (unique, 0x1700, 1)

0040ff6c: _nop

0040ff70: addiu v0,s8,0x864
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x864, 4)

0040ff74: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ff78: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff7c: nop

0040ff80: addiu v0,v0,0xc
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)

0040ff84: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ff88: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff8c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40ff94, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040ff90: _nop

0040ff94: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040ff98: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ff9c: nop

0040ffa0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040ffa4: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ffa8: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ffac: nop

0040ffb0: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0040ffb4: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ffb8: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ffbc: nop

0040ffc0: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ffc4: lhu v1,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

0040ffc8: nop

0040ffcc: bne v1,v0,0x004102cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4102cc, 4) , (unique, 0x1700, 1)

0040ffd0: _nop

0040ffd4: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ffd8: nop

0040ffdc: lhu v0,0x6(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ffe0: nop

0040ffe4: beq v0,zero,0x004102d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4102d8, 4) , (unique, 0x1200, 1)

0040ffe8: _nop

0040ffec: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040fff0: nop

0040fff4: lhu v0,0x6(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040fff8: nop

0040fffc: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410000: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x410008, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00410004: _nop

00410008: sh v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0041000c: b 0x00410294
	 ---  BRANCH (ram, 0x410294, 4)

00410010: _nop

00410014: sw zero,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00410018: addiu v1,s8,0x107c
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x107c, 4)

0041001c: addiu v0,s8,0x864
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x864, 4)

00410020: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00410024: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410028: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041002c: jal 0x0040f9ec
	(register, 0x7c, 4) COPY (const, 0x410034, 4)
	 ---  CALL (ram, 0x40f9ec, 4)

00410030: _nop

00410034: lw v0,0x107c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x107c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410038: nop

0041003c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410040: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410044: nop

00410048: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041004c: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00410050: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410054: nop

00410058: sw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041005c: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410060: nop

00410064: addiu v0,v0,0xa
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)

00410068: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041006c: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410070: nop

00410074: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00410078: nop

0041007c: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

00410080: lbu v0,0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00410084: nop

00410088: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0041008c: andi s0,v0,0xffff
	(register, 0x40, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00410090: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00410094: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x41009c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00410098: _nop

0041009c: bne s0,v0,0x0041025c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41025c, 4) , (unique, 0x1700, 1)

004100a0: _nop

004100a4: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004100a8: nop

004100ac: lbu v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004100b0: nop

004100b4: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

004100b8: lbu v0,0x3(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004100bc: nop

004100c0: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

004100c4: andi s0,v0,0xffff
	(register, 0x40, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

004100c8: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

004100cc: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x4100d4, 4)
	 ---  CALL (ram, 0x4222a8, 4)

004100d0: _nop

004100d4: bne s0,v0,0x0041025c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41025c, 4) , (unique, 0x1700, 1)

004100d8: _nop

004100dc: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004100e0: nop

004100e4: lbu v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004100e8: nop

004100ec: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

004100f0: lbu v0,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004100f4: nop

004100f8: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

004100fc: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00410100: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410104: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x41010c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00410108: _nop

0041010c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410110: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00410114: bne v1,v0,0x00410210
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x410210, 4) , (unique, 0x1700, 1)

00410118: _nop

0041011c: sw zero,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00410120: b 0x00410164
	 ---  BRANCH (ram, 0x410164, 4)

00410124: _nop

00410128: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041012c: lw v1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410130: nop

00410134: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00410138: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0041013c: nop

00410140: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

00410144: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410148: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0041014c: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00410150: sb v1,0x1060(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00410154: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410158: nop

0041015c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00410160: sw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00410164: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410168: nop

0041016c: slti v0,v0,0x4
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00410170: bne v0,zero,0x00410128
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x410128, 4) , (unique, 0x1700, 1)

00410174: _nop

00410178: addiu v0,s8,0x1080
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1080, 4)

0041017c: sw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00410180: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410184: nop

00410188: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041018c: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410190: nop

00410194: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00410198: nop

0041019c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004101a0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004101a4: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004101a8: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004101ac: jal 0x004003e0
	(register, 0x7c, 4) COPY (const, 0x4101b4, 4)
	 ---  CALL (ram, 0x4003e0, 4)

004101b0: _nop

004101b4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004101b8: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004101bc: nop

004101c0: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004101c4: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004101c8: nop

004101cc: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004101d0: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004101d4: nop

004101d8: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004101dc: nop

004101e0: addiu a0,v0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004101e4: andi a1,a0,0xff
	(register, 0x14, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)

004101e8: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004101ec: nop

004101f0: sb a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

004101f4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004101f8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004101fc: lw v1,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410200: nop

00410204: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410208: nop

0041020c: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00410210: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410214: nop

00410218: lbu v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0041021c: nop

00410220: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

00410224: lbu v0,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00410228: nop

0041022c: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00410230: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00410234: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410238: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x410240, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0041023c: _nop

00410240: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410244: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410248: nop

0041024c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00410250: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00410254: b 0x00410294
	 ---  BRANCH (ram, 0x410294, 4)

00410258: _nop

0041025c: addiu v1,s8,0x107c
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x107c, 4)

00410260: addiu v0,s8,0x864
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x864, 4)

00410264: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00410268: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041026c: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410270: jal 0x0040f9ec
	(register, 0x7c, 4) COPY (const, 0x410278, 4)
	 ---  CALL (ram, 0x40f9ec, 4)

00410274: _nop

00410278: lw v0,0x107c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x107c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041027c: nop

00410280: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00410284: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410288: nop

0041028c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00410290: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00410294: lhu v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

00410298: nop

0041029c: addiu v1,v0,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

004102a0: sh v1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

004102a4: bne v0,zero,0x00410014
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x410014, 4) , (unique, 0x1700, 1)

004102a8: _nop

004102ac: b 0x0041030c
	 ---  BRANCH (ram, 0x41030c, 4)

004102b0: _nop

004102b4: nop

004102b8: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

004102bc: _nop

004102c0: nop

004102c4: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

004102c8: _nop

004102cc: nop

004102d0: b 0x004102dc
	 ---  BRANCH (ram, 0x4102dc, 4)

004102d4: _nop

004102d8: nop

004102dc: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004102e0: nop

004102e4: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004102e8: sw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004102ec: slti v0,v0,0x5
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

004102f0: bne v0,zero,0x0040fcd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40fcd0, 4) , (unique, 0x1700, 1)

004102f4: _nop

004102f8: b 0x00410310
	 ---  BRANCH (ram, 0x410310, 4)

004102fc: _nop

00410300: nop

00410304: b 0x00410310
	 ---  BRANCH (ram, 0x410310, 4)

00410308: _nop

0041030c: nop

00410310: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410314: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x41031c, 4)
	 ---  CALL (ram, 0x41f008, 4)

00410318: _nop

0041031c: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410320: nop

00410324: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00410328: nop

0041032c: beq v0,zero,0x00410340
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x410340, 4) , (unique, 0x1200, 1)

00410330: _nop

00410334: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410338: b 0x00410350
	 ---  BRANCH (ram, 0x410350, 4)

0041033c: _nop

00410340: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410344: jal 0x0041036c
	(register, 0x7c, 4) COPY (const, 0x41034c, 4)
	 ---  CALL (ram, 0x41036c, 4)

00410348: _nop

0041034c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00410350: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00410354: lw ra,0x1114(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1114, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410358: lw s8,0x1110(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1110, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041035c: lw s0,0x110c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x110c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00410360: addiu sp,sp,0x1118
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x1118, 4)

00410364: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00410368: _nop

