Label: 881
Function: __mpn_divrem
Architecture: mips
Source File: Unknown
Entry Point: 0046c930

P-code:

0046c930: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046c934: addiu gp,gp,-0x1ad0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffe530, 4)

0046c938: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046c93c: addiu sp,sp,-0x68
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff98, 4)

0046c940: lw v1,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c944: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046c948: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046c94c: sw s5,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046c950: sw s1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046c954: sw s0,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046c958: sw ra,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046c95c: sw s8,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0046c960: sw s7,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046c964: sw s6,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046c968: sw s4,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046c96c: sw s3,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046c970: sw s2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046c974: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046c978: or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046c97c: beq v1,v0,0x0046ce3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ce3c, 4) , (unique, 0x1200, 1)

0046c980: _or s5,a3,zero
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046c984: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0046c988: beq v1,v0,0x0046cc14
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46cc14, 4) , (unique, 0x1200, 1)

0046c98c: _sll v0,a3,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x2, 4)

0046c990: beq v1,zero,0x0046cc10
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cc10, 4) , (unique, 0x1200, 1)

0046c994: _nop

0046c998: lw v0,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c99c: lw v1,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9a0: subu v0,a3,v0
	(register, 0x8, 4) INT_SUB (register, 0x1c, 4) , (register, 0x8, 4)

0046c9a4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c9a8: sll s4,v1,0x2
	(register, 0x50, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046c9ac: addu s8,a2,v0
	(register, 0x78, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0046c9b0: lw v0,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9b4: addiu s4,s4,-0x4
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffffc, 4)

0046c9b8: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046c9bc: addu s2,s8,s4
	(register, 0x48, 4) INT_ADD (register, 0x78, 4) , (register, 0x50, 4)

0046c9c0: lw s6,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9c4: lw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9c8: lw a0,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9cc: addiu v0,s4,-0x4
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffffc, 4)

0046c9d0: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0046c9d4: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046c9d8: sltu v0,v1,s6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x58, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046c9dc: lw s7,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9e0: beq v0,zero,0x0046cfb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46cfb0, 4) , (unique, 0x1200, 1)

0046c9e4: _sltu v0,s6,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046c9e8: sw zero,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046c9ec: lw a0,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c9f0: addu v0,s5,s0
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (register, 0x40, 4)

0046c9f4: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0046c9f8: addiu s3,v0,-0x1
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046c9fc: bltz s3,0x0046ce08
	(unique, 0x1600, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46ce08, 4) , (unique, 0x1600, 1)

0046ca00: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046ca04: lw a0,-0x76b4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff894c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca08: addu s1,s1,v0
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

0046ca0c: lw v0,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca10: sw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046ca14: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046ca18: lw a0,-0x76b0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8950, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca1c: sw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ca20: srl v0,s6,0x10
	(register, 0x8, 4) INT_RIGHT (register, 0x58, 4) , (const, 0x10, 4)

0046ca24: sw a0,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046ca28: sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ca2c: addiu a0,s4,0x4
	(register, 0x10, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)

0046ca30: andi v0,s6,0xffff
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0xffff, 4)

0046ca34: sw a0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046ca38: b 0x0046caa4
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46caa4, 4)

0046ca3c: _sw v0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ca40: lw a2,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca44: lw a1,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca48: lw t9,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca4c: or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046ca50: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ca58, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ca54: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046ca58: lw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca5c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca60: beq v1,v0,0x0046ca88
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ca88, 4) , (unique, 0x1200, 1)

0046ca64: _or a1,s8,zero
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046ca68: lw a3,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca6c: lw a2,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca70: lw t9,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca74: nop

0046ca78: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ca80, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ca7c: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046ca80: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca84: addiu s5,s5,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046ca88: sw s5,-0x4(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046ca8c: addiu s3,s3,-0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffff, 4)

0046ca90: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046ca94: lw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ca98: beq s3,v0,0x0046ce08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46ce08, 4) , (unique, 0x1200, 1)

0046ca9c: _addiu s1,s1,-0x4
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffffc, 4)

0046caa0: addu s2,s8,s4
	(register, 0x48, 4) INT_ADD (register, 0x78, 4) , (register, 0x50, 4)

0046caa4: slt v0,s3,s0
	(unique, 0x5080, 1) INT_SLESS (register, 0x4c, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0046caa8: bne v0,zero,0x0046d114
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x78, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46d114, 4) , (unique, 0x1700, 1)

0046caac: _addiu t1,s8,-0x4
	(register, 0x24, 4) INT_ADD (register, 0x78, 4) , (const, 0xfffffffc, 4)

0046cab0: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cab4: nop

0046cab8: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046cabc: addu s2,t1,s4
	(register, 0x48, 4) INT_ADD (register, 0x24, 4) , (register, 0x50, 4)

0046cac0: or s8,t1,zero
	(register, 0x78, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046cac4: beq s6,v1,0x0046ca40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0xc, 4)
	(register, 0x54, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46ca40, 4) , (unique, 0x1200, 1)

0046cac8: _li s5,-0x1
	(register, 0x54, 4) COPY (const, 0xffffffff, 4)

0046cacc: lw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cad0: lw a1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cad4: bne v0,zero,0x0046cae0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46cae0, 4) , (unique, 0x1700, 1)

0046cad8: _divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0046cadc: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046cae0: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cae4: nop

0046cae8: srl v1,v0,0x10
	(register, 0xc, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)

0046caec: mflo t4
	(register, 0x30, 4) COPY (register, 0x3004, 4)

0046caf0: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

0046caf4: sll a0,a0,0x10
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x10, 4)

0046caf8: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

0046cafc: mult a1,t4
	(unique, 0xda80, 8) INT_SEXT (register, 0x14, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x30, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046cb00: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046cb04: sltu a0,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb08: beq a0,zero,0x0046cb34
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cb34, 4) , (unique, 0x1200, 1)

0046cb0c: _nop

0046cb10: addu v1,v1,s6
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x58, 4)

0046cb14: sltu a0,v1,s6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x58, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb18: bne a0,zero,0x0046d164
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d164, 4) , (unique, 0x1700, 1)

0046cb1c: _addiu a2,t4,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4)

0046cb20: sltu a0,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb24: beq a0,zero,0x0046d164
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d164, 4) , (unique, 0x1200, 1)

0046cb28: _nop

0046cb2c: addiu t4,t4,-0x2
	(register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xfffffffe, 4)

0046cb30: addu v1,v1,s6
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x58, 4)

0046cb34: lw a0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cb38: subu v1,v1,a1
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)

0046cb3c: bne a0,zero,0x0046cb48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46cb48, 4) , (unique, 0x1700, 1)

0046cb40: _divu v1,a0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x10, 4)

0046cb44: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046cb48: lw a0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cb4c: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

0046cb50: mflo s5
	(register, 0x54, 4) COPY (register, 0x3004, 4)

0046cb54: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

0046cb58: sll v1,v1,0x10
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

0046cb5c: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0046cb60: mult a0,s5
	(unique, 0xda80, 8) INT_SEXT (register, 0x10, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x54, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046cb64: mflo a2
	(register, 0x18, 4) COPY (register, 0x3004, 4)

0046cb68: sltu v1,v0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb6c: beq v1,zero,0x0046cb98
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cb98, 4) , (unique, 0x1200, 1)

0046cb70: _nop

0046cb74: addu v0,v0,s6
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x58, 4)

0046cb78: sltu v1,v0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb7c: bne v1,zero,0x0046d174
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d174, 4) , (unique, 0x1700, 1)

0046cb80: _addiu a1,s5,-0x1
	(register, 0x14, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046cb84: sltu v1,v0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cb88: beq v1,zero,0x0046d174
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d174, 4) , (unique, 0x1200, 1)

0046cb8c: _nop

0046cb90: addiu s5,s5,-0x2
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffe, 4)

0046cb94: addu v0,v0,s6
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x58, 4)

0046cb98: sll t4,t4,0x10
	(register, 0x30, 4) INT_LEFT (register, 0x30, 4) , (const, 0x10, 4)

0046cb9c: or s5,t4,s5
	(register, 0x54, 4) INT_OR (register, 0x30, 4) , (register, 0x54, 4)

0046cba0: multu s7,s5
	(unique, 0xe000, 8) INT_ZEXT (register, 0x5c, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x54, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046cba4: lw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cba8: subu v0,v0,a2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)

0046cbac: addu a2,s8,v1
	(register, 0x18, 4) INT_ADD (register, 0x78, 4) , (register, 0xc, 4)

0046cbb0: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046cbb4: or a3,a1,zero
	(register, 0x1c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046cbb8: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

0046cbbc: b 0x0046cbd0
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cbd0, 4)

0046cbc0: _or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046cbc4: sltu a0,a3,s7
	(unique, 0x5380, 1) INT_LESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cbc8: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

0046cbcc: subu a3,a3,s7
	(register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x5c, 4)

0046cbd0: sltu a0,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cbd4: bne a0,zero,0x0046cbf8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cbf8, 4) , (unique, 0x1700, 1)

0046cbd8: _nop

0046cbdc: bne v1,v0,0x0046ca40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46ca40, 4) , (unique, 0x1700, 1)

0046cbe0: _nop

0046cbe4: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cbe8: nop

0046cbec: sltu a0,a0,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x1c, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cbf0: beq a0,zero,0x0046ca40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ca40, 4) , (unique, 0x1200, 1)

0046cbf4: _nop

0046cbf8: addu v0,v0,s6
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x58, 4)

0046cbfc: sltu a0,v0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc00: beq a0,zero,0x0046cbc4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46cbc4, 4) , (unique, 0x1200, 1)

0046cc04: _addiu s5,s5,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0046cc08: b 0x0046ca40
	 ---  BRANCH (ram, 0x46ca40, 4)

0046cc0c: _nop

0046cc10: break 0x0
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x0, 4)

0046cc14: addiu v0,v0,-0x8
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)

0046cc18: addu t3,a2,v0
	(register, 0x2c, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0046cc1c: lw v0,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc20: lw v1,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc24: lw t0,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc28: lw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc2c: lw a2,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc30: sltu a0,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc34: lw v1,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc38: beq a0,zero,0x0046cf74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46cf74, 4) , (unique, 0x1200, 1)

0046cc3c: _sltu a0,t0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc40: sw zero,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046cc44: addu s5,s5,s0
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (register, 0x40, 4)

0046cc48: addiu t4,s5,-0x3
	(register, 0x30, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffd, 4)

0046cc4c: bltz t4,0x0046ce00
	(unique, 0x1600, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46ce00, 4) , (unique, 0x1600, 1)

0046cc50: _sll s5,s5,0x2
	(register, 0x54, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

0046cc54: sltu t8,zero,a2
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x18, 4)
	(register, 0x60, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc58: subu t8,a2,t8
	(register, 0x60, 4) INT_SUB (register, 0x18, 4) , (register, 0x60, 4)

0046cc5c: addu t2,s1,s5
	(register, 0x28, 4) INT_ADD (register, 0x44, 4) , (register, 0x54, 4)

0046cc60: srl t5,t0,0x10
	(register, 0x34, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x10, 4)

0046cc64: andi t7,t0,0xffff
	(register, 0x3c, 4) INT_AND (register, 0x20, 4) , (const, 0xffff, 4)

0046cc68: subu t9,zero,a2
	(register, 0x64, 4) INT_SUB (const, 0x0, 4) , (register, 0x18, 4)

0046cc6c: b 0x0046ccb4
	(register, 0x38, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46ccb4, 4)

0046cc70: _li t6,-0x1
	(register, 0x38, 4) COPY (const, 0xffffffff, 4)

0046cc74: lw t1,-0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cc78: bne t0,v0,0x0046cccc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46cccc, 4) , (unique, 0x1700, 1)

0046cc7c: _addiu t3,t3,-0x4
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffffc, 4)

0046cc80: addu v0,t0,v1
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (register, 0xc, 4)

0046cc84: sltu v1,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc88: beq v1,zero,0x0046d150
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d150, 4) , (unique, 0x1200, 1)

0046cc8c: _or v1,t9,zero
	(register, 0xc, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)

0046cc90: addu v1,a2,t1
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (register, 0x24, 4)

0046cc94: subu v0,v0,a2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)

0046cc98: sltu t1,v1,t1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x24, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5380, 1)

0046cc9c: li a3,-0x1
	(register, 0x1c, 4) COPY (const, 0xffffffff, 4)

0046cca0: addiu t4,t4,-0x1
	(register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4)

0046cca4: sw a3,-0xc(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffff4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046cca8: addu v0,v0,t1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)

0046ccac: beq t4,t6,0x0046ce00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x30, 4) , (register, 0x38, 4)
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46ce00, 4) , (unique, 0x1200, 1)

0046ccb0: _addiu t2,t2,-0x4
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)

0046ccb4: slt a0,t4,s0
	(unique, 0x5080, 1) INT_SLESS (register, 0x30, 4) , (register, 0x40, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0046ccb8: beq a0,zero,0x0046cc74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cc74, 4) , (unique, 0x1200, 1)

0046ccbc: _nop

0046ccc0: sw zero,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046ccc4: beq t0,v0,0x0046cc80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x24, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cc80, 4) , (unique, 0x1200, 1)

0046ccc8: _or t1,zero,zero
	(register, 0x24, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046cccc: bne t5,zero,0x0046ccd8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x34, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x34, 4)
	 ---  CBRANCH (ram, 0x46ccd8, 4) , (unique, 0x1700, 1)

0046ccd0: _divu v0,t5
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x34, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x34, 4)

0046ccd4: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046ccd8: srl v0,v1,0x10
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x10, 4)

0046ccdc: mflo a3
	(register, 0x1c, 4) COPY (register, 0x3004, 4)

0046cce0: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

0046cce4: sll a0,a0,0x10
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x10, 4)

0046cce8: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0046ccec: mult t7,a3
	(unique, 0xda80, 8) INT_SEXT (register, 0x3c, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x1c, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046ccf0: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046ccf4: sltu a0,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046ccf8: beq a0,zero,0x0046cd24
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cd24, 4) , (unique, 0x1200, 1)

0046ccfc: _nop

0046cd00: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0046cd04: sltu a0,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cd08: bne a0,zero,0x0046d16c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d16c, 4) , (unique, 0x1700, 1)

0046cd0c: _addiu s1,a3,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046cd10: sltu a0,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cd14: beq a0,zero,0x0046d16c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d16c, 4) , (unique, 0x1200, 1)

0046cd18: _nop

0046cd1c: addiu a3,a3,-0x2
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffe, 4)

0046cd20: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0046cd24: subu v0,v0,a1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)

0046cd28: bne t5,zero,0x0046cd34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x34, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x34, 4)
	 ---  CBRANCH (ram, 0x46cd34, 4) , (unique, 0x1700, 1)

0046cd2c: _divu v0,t5
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x34, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x34, 4)

0046cd30: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046cd34: andi v1,v1,0xffff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xffff, 4)

0046cd38: mflo a0
	(register, 0x10, 4) COPY (register, 0x3004, 4)

0046cd3c: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0046cd40: sll v0,v0,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0046cd44: or v0,v1,v0
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0046cd48: mult t7,a0
	(unique, 0xda80, 8) INT_SEXT (register, 0x3c, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x10, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046cd4c: mflo s1
	(register, 0x44, 4) COPY (register, 0x3004, 4)

0046cd50: sltu v1,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cd54: beq v1,zero,0x0046cd80
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cd80, 4) , (unique, 0x1200, 1)

0046cd58: _nop

0046cd5c: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0046cd60: sltu v1,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cd64: bne v1,zero,0x0046d15c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d15c, 4) , (unique, 0x1700, 1)

0046cd68: _addiu a1,a0,-0x1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

0046cd6c: sltu v1,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cd70: beq v1,zero,0x0046d15c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d15c, 4) , (unique, 0x1200, 1)

0046cd74: _nop

0046cd78: addiu a0,a0,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffe, 4)

0046cd7c: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0046cd80: sll a3,a3,0x10
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x10, 4)

0046cd84: or a3,a3,a0
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0x10, 4)

0046cd88: multu a2,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x18, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046cd8c: subu v0,v0,s1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

0046cd90: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046cd94: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046cd98: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

0046cd9c: or s2,a0,zero
	(register, 0x48, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046cda0: sltu a1,v0,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x48, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0046cda4: bne a1,zero,0x0046cdc4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46cdc4, 4) , (unique, 0x1700, 1)

0046cda8: _subu a1,v1,a2
	(register, 0x14, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)

0046cdac: bne s2,v0,0x0046cde0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46cde0, 4) , (unique, 0x1700, 1)

0046cdb0: _nop

0046cdb4: sltu a1,t1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0046cdb8: beq a1,zero,0x0046cde0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cde0, 4) , (unique, 0x1200, 1)

0046cdbc: _nop

0046cdc0: subu a1,v1,a2
	(register, 0x14, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)

0046cdc4: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0046cdc8: sltu v1,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cdcc: sltu s1,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

0046cdd0: subu s2,s2,v1
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0xc, 4)

0046cdd4: addiu a3,a3,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046cdd8: beq s1,zero,0x0046cda0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cda0, 4) , (unique, 0x1200, 1)

0046cddc: _or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046cde0: subu v1,t1,v1
	(register, 0xc, 4) INT_SUB (register, 0x24, 4) , (register, 0xc, 4)

0046cde4: subu v0,v0,s2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x48, 4)

0046cde8: sltu t1,t1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5380, 1)

0046cdec: addiu t4,t4,-0x1
	(register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffff, 4)

0046cdf0: sw a3,-0xc(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffff4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046cdf4: subu v0,v0,t1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x24, 4)

0046cdf8: bne t4,t6,0x0046ccb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x38, 4)
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46ccb4, 4) , (unique, 0x1700, 1)

0046cdfc: _addiu t2,t2,-0x4
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)

0046ce00: sw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ce04: sw v1,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046ce08: lw ra,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce0c: lw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce10: lw s8,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce14: lw s7,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce18: lw s6,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce1c: lw s5,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce20: lw s4,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce24: lw s3,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce28: lw s2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce2c: lw s1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce30: lw s0,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce34: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	 ---  RETURN (register, 0x80, 4)

0046ce38: _addiu sp,sp,0x68
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)

0046ce3c: sll v1,a3,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x2, 4)

0046ce40: lw a0,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce44: addiu v1,v1,-0x4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)

0046ce48: addu v0,a2,v1
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

0046ce4c: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce50: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ce54: nop

0046ce58: sltu a1,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0046ce5c: beq a1,zero,0x0046cfa4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46cfa4, 4) , (unique, 0x1200, 1)

0046ce60: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0046ce64: sw zero,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046ce68: slti a1,s5,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x54, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5180, 1)

0046ce6c: bne a1,zero,0x0046d030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46d030, 4) , (unique, 0x1700, 1)

0046ce70: _addiu v1,v1,0x4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)

0046ce74: addiu t1,s0,-0x2
	(register, 0x24, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffe, 4)

0046ce78: addu t1,t1,s5
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (register, 0x54, 4)

0046ce7c: sll t1,t1,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x24, 4) , (const, 0x2, 4)

0046ce80: srl t0,a0,0x10
	(register, 0x20, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)

0046ce84: andi t3,a0,0xffff
	(register, 0x2c, 4) INT_AND (register, 0x10, 4) , (const, 0xffff, 4)

0046ce88: addu a1,v1,a2
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0046ce8c: addu t1,s1,t1
	(register, 0x24, 4) INT_ADD (register, 0x44, 4) , (register, 0x24, 4)

0046ce90: b 0x0046cf20
	(register, 0x30, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x46cf20, 4)

0046ce94: _addiu t4,a2,0x4
	(register, 0x30, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)

0046ce98: sltu a3,v1,t2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046ce9c: beq a3,zero,0x0046cf6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cf6c, 4) , (unique, 0x1200, 1)

0046cea0: _nop

0046cea4: addiu t5,t5,-0x2
	(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0xfffffffe, 4)

0046cea8: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046ceac: subu v1,v1,t2
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x28, 4)

0046ceb0: bne t0,zero,0x0046cebc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46cebc, 4) , (unique, 0x1700, 1)

0046ceb4: _divu v1,t0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x20, 4)

0046ceb8: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046cebc: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

0046cec0: mflo a3
	(register, 0x1c, 4) COPY (register, 0x3004, 4)

0046cec4: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

0046cec8: sll v1,v1,0x10
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

0046cecc: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0046ced0: mult a3,t3
	(unique, 0xda80, 8) INT_SEXT (register, 0x1c, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x2c, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046ced4: mflo t2
	(register, 0x28, 4) COPY (register, 0x3004, 4)

0046ced8: sltu v1,v0,t2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cedc: beq v1,zero,0x0046cf08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x34, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46cf08, 4) , (unique, 0x1200, 1)

0046cee0: _sll v1,t5,0x10
	(register, 0xc, 4) INT_LEFT (register, 0x34, 4) , (const, 0x10, 4)

0046cee4: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046cee8: sltu v1,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046ceec: bne v1,zero,0x0046d010
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d010, 4) , (unique, 0x1700, 1)

0046cef0: _addiu t6,a3,-0x1
	(register, 0x38, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046cef4: sltu v1,v0,t2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cef8: beq v1,zero,0x0046d010
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x46d010, 4) , (unique, 0x1200, 1)

0046cefc: _addiu a3,a3,-0x2
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffe, 4)

0046cf00: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046cf04: sll v1,t5,0x10
	(register, 0xc, 4) INT_LEFT (register, 0x34, 4) , (const, 0x10, 4)

0046cf08: or v1,v1,a3
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x1c, 4)

0046cf0c: addiu a1,a1,-0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0046cf10: sw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046cf14: subu v0,v0,t2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x28, 4)

0046cf18: beq t4,a1,0x0046d030
	(unique, 0x1200, 1) INT_EQUAL (register, 0x30, 4) , (register, 0x14, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46d030, 4) , (unique, 0x1200, 1)

0046cf1c: _addiu t1,t1,-0x4
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xfffffffc, 4)

0046cf20: bne t0,zero,0x0046cf2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46cf2c, 4) , (unique, 0x1700, 1)

0046cf24: _divu v0,t0
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x20, 4)

0046cf28: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046cf2c: lw v0,-0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cf30: nop

0046cf34: srl v1,v0,0x10
	(register, 0xc, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)

0046cf38: mflo t5
	(register, 0x34, 4) COPY (register, 0x3004, 4)

0046cf3c: mfhi a3
	(register, 0x1c, 4) COPY (register, 0x3000, 4)

0046cf40: sll a3,a3,0x10
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x10, 4)

0046cf44: or v1,v1,a3
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x1c, 4)

0046cf48: mult t5,t3
	(unique, 0xda80, 8) INT_SEXT (register, 0x34, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x2c, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046cf4c: mflo t2
	(register, 0x28, 4) COPY (register, 0x3004, 4)

0046cf50: sltu a3,v1,t2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046cf54: beq a3,zero,0x0046ceac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ceac, 4) , (unique, 0x1200, 1)

0046cf58: _nop

0046cf5c: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0046cf60: sltu a3,v1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046cf64: beq a3,zero,0x0046ce98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_ADD (register, 0x34, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46ce98, 4) , (unique, 0x1200, 1)

0046cf68: _addiu t6,t5,-0x1
	(register, 0x38, 4) INT_ADD (register, 0x34, 4) , (const, 0xffffffff, 4)

0046cf6c: b 0x0046ceac
	(register, 0x34, 4) INT_OR (register, 0x38, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46ceac, 4)

0046cf70: _or t5,t6,zero
	(register, 0x34, 4) INT_OR (register, 0x38, 4) , (const, 0x0, 4)

0046cf74: bne a0,zero,0x0046cf88
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46cf88, 4) , (unique, 0x1700, 1)

0046cf78: _subu a0,v1,a2
	(register, 0x10, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)

0046cf7c: sltu a0,v1,a2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046cf80: bne a0,zero,0x0046cc40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46cc40, 4) , (unique, 0x1700, 1)

0046cf84: _subu a0,v1,a2
	(register, 0x10, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)

0046cf88: sltu v1,v1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046cf8c: subu v0,v0,t0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x20, 4)

0046cf90: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0046cf94: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046cf98: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0046cf9c: b 0x0046cc44
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x46cc44, 4)

0046cfa0: _sw a0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046cfa4: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0046cfa8: b 0x0046ce68
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x46ce68, 4)

0046cfac: _sw a1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046cfb0: bne v0,zero,0x0046cfe4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46cfe4, 4) , (unique, 0x1700, 1)

0046cfb4: _nop

0046cfb8: lw v0,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfbc: lw t9,-0x77bc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8844, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfc0: lw a1,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfc4: sw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046cfc8: addiu a2,v0,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046cfcc: bal 0x0046c8d0
	(register, 0x7c, 4) COPY (const, 0x46cfd4, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46c8d0, 4)

0046cfd0: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046cfd4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfd8: lw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfdc: bltz v0,0x0046c9e8
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c9e8, 4) , (unique, 0x1600, 1)

0046cfe0: _nop

0046cfe4: lw t9,-0x76ac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8954, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfe8: lw a3,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cfec: lw a2,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046cff0: or a1,s8,zero
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046cff4: bal 0x0046e570
	(register, 0x7c, 4) COPY (const, 0x46cffc, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e570, 4)

0046cff8: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046cffc: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046d000: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d004: lw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d008: b 0x0046c9ec
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46c9ec, 4)

0046d00c: _sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046d010: or a3,t6,zero
	(register, 0x1c, 4) INT_OR (register, 0x38, 4) , (const, 0x0, 4)

0046d014: sll v1,t5,0x10
	(register, 0xc, 4) INT_LEFT (register, 0x34, 4) , (const, 0x10, 4)

0046d018: or v1,v1,a3
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x1c, 4)

0046d01c: addiu a1,a1,-0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0046d020: sw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046d024: subu v0,v0,t2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x28, 4)

0046d028: bne t4,a1,0x0046cf20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x14, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46cf20, 4) , (unique, 0x1700, 1)

0046d02c: _addiu t1,t1,-0x4
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xfffffffc, 4)

0046d030: blez s0,0x0046d198
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d198, 4) , (unique, 0x1500, 1)

0046d034: _nop

0046d038: sll t2,s0,0x2
	(register, 0x28, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)

0046d03c: srl t3,a0,0x10
	(register, 0x2c, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)

0046d040: andi t4,a0,0xffff
	(register, 0x30, 4) INT_AND (register, 0x10, 4) , (const, 0xffff, 4)

0046d044: b 0x0046d0cc
	(register, 0x28, 4) INT_ADD (register, 0x44, 4) , (register, 0x28, 4)
	 ---  BRANCH (ram, 0x46d0cc, 4)

0046d048: _addu t2,s1,t2
	(register, 0x28, 4) INT_ADD (register, 0x44, 4) , (register, 0x28, 4)

0046d04c: sltu a3,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046d050: beq a3,zero,0x0046d10c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d10c, 4) , (unique, 0x1200, 1)

0046d054: _nop

0046d058: addiu v1,v1,-0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffe, 4)

0046d05c: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046d060: subu v0,v0,a1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)

0046d064: bne t3,zero,0x0046d070
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x2c, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x2c, 4)
	 ---  CBRANCH (ram, 0x46d070, 4) , (unique, 0x1700, 1)

0046d068: _divu v0,t3
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x2c, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x2c, 4)

0046d06c: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046d070: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046d074: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0046d078: sll v0,v0,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0046d07c: nop

0046d080: mult a1,t4
	(unique, 0xda80, 8) INT_SEXT (register, 0x14, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x30, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046d084: mflo a3
	(register, 0x1c, 4) COPY (register, 0x3004, 4)

0046d088: sltu t0,v0,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046d08c: beq t0,zero,0x0046d0b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d0b4, 4) , (unique, 0x1200, 1)

0046d090: _nop

0046d094: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046d098: sltu t0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046d09c: bne t0,zero,0x0046d17c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d17c, 4) , (unique, 0x1700, 1)

0046d0a0: _addiu t1,a1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)

0046d0a4: sltu t0,v0,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046d0a8: beq t0,zero,0x0046d17c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x46d17c, 4) , (unique, 0x1200, 1)

0046d0ac: _addiu a1,a1,-0x2
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffe, 4)

0046d0b0: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046d0b4: sll v1,v1,0x10
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

0046d0b8: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

0046d0bc: sw v1,-0x4(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046d0c0: addiu t2,t2,-0x4
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)

0046d0c4: beq s1,t2,0x0046d198
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x46d198, 4) , (unique, 0x1200, 1)

0046d0c8: _subu v0,v0,a3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)

0046d0cc: bne t3,zero,0x0046d0d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x2c, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x2c, 4)
	 ---  CBRANCH (ram, 0x46d0d8, 4) , (unique, 0x1700, 1)

0046d0d0: _divu v0,t3
	(register, 0x3004, 4) INT_DIV (register, 0x8, 4) , (register, 0x2c, 4)
	(register, 0x3000, 4) INT_REM (register, 0x8, 4) , (register, 0x2c, 4)

0046d0d4: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046d0d8: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0046d0dc: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0046d0e0: sll v0,v0,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0046d0e4: nop

0046d0e8: mult v1,t4
	(unique, 0xda80, 8) INT_SEXT (register, 0xc, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x30, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0046d0ec: mflo a1
	(register, 0x14, 4) COPY (register, 0x3004, 4)

0046d0f0: sltu a3,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046d0f4: beq a3,zero,0x0046d060
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d060, 4) , (unique, 0x1200, 1)

0046d0f8: _nop

0046d0fc: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046d100: sltu a3,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046d104: beq a3,zero,0x0046d04c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46d04c, 4) , (unique, 0x1200, 1)

0046d108: _addiu t0,v1,-0x1
	(register, 0x20, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0046d10c: b 0x0046d060
	(register, 0xc, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46d060, 4)

0046d110: _or v1,t0,zero
	(register, 0xc, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0046d114: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d118: nop

0046d11c: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046d120: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d124: nop

0046d128: bltz v0,0x0046d148
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d148, 4) , (unique, 0x1600, 1)

0046d12c: _or a1,s8,zero
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046d130: lw t9,-0x7d44(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82bc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d134: lw a2,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d138: sw v1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046d13c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46d144, 4)
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)
	 ---  CALLIND (register, 0x80, 4)

0046d140: _addiu a0,s8,0x4
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)

0046d144: lw v1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d148: b 0x0046cac4
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cac4, 4)

0046d14c: _sw zero,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046d150: or s2,t8,zero
	(register, 0x48, 4) INT_OR (register, 0x60, 4) , (const, 0x0, 4)

0046d154: b 0x0046cda0
	(register, 0x1c, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46cda0, 4)

0046d158: _li a3,-0x1
	(register, 0x1c, 4) COPY (const, 0xffffffff, 4)

0046d15c: b 0x0046cd80
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cd80, 4)

0046d160: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046d164: b 0x0046cb34
	(register, 0x30, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cb34, 4)

0046d168: _or t4,a2,zero
	(register, 0x30, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046d16c: b 0x0046cd24
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cd24, 4)

0046d170: _or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046d174: b 0x0046cb98
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46cb98, 4)

0046d178: _or s5,a1,zero
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046d17c: or a1,t1,zero
	(register, 0x14, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046d180: sll v1,v1,0x10
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

0046d184: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

0046d188: sw v1,-0x4(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046d18c: addiu t2,t2,-0x4
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xfffffffc, 4)

0046d190: bne s1,t2,0x0046d0cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x46d0cc, 4) , (unique, 0x1700, 1)

0046d194: _subu v0,v0,a3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)

0046d198: b 0x0046ce08
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46ce08, 4)

0046d19c: _sw v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

