Label: 1069
Function: __pthread_mutex_cond_lock_full
Architecture: mips
Source File: Unknown
Entry Point: 00481fa0

P-code:

00481fa0: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00481fa4: addiu gp,gp,-0x7140
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8ec0, 4)

00481fa8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00481fac: addiu sp,sp,-0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffa8, 4)

00481fb0: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00481fb4: sw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00481fb8: sw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00481fbc: sw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00481fc0: sw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00481fc4: sw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00481fc8: sw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00481fcc: sw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00481fd0: sw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00481fd4: sw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00481fd8: sw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00481fdc: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00481fe0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00481fe4: lw s4,-0x7478(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481fe8: lw v1,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481fec: addiu s3,a0,0xc
	(register, 0x4c, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)

00481ff0: andi v0,v1,0x7f
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (const, 0x7f, 4)

00481ff4: sltiu a0,v0,0x34
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x34, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00481ff8: beq a0,zero,0x004820c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4820c8, 4) , (unique, 0x1200, 1)

00481ffc: _sltiu a0,v0,0x30
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00482000: beq a0,zero,0x0048226c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x48226c, 4) , (unique, 0x1200, 1)

00482004: _sltiu a0,v0,0x14
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00482008: beq a0,zero,0x0048225c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x70, 4)
	 ---  CBRANCH (ram, 0x48225c, 4) , (unique, 0x1200, 1)

0048200c: _andi v1,v1,0x70
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x70, 4)

00482010: beq v1,zero,0x00482098
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x482098, 4) , (unique, 0x1200, 1)

00482014: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00482018: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0048201c: addiu s2,s0,0x14
	(register, 0x48, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)

00482020: sw s2,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00482024: lui s1,0x8000
	(register, 0x44, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00482028: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048202c: or s1,s4,s1
	(register, 0x44, 4) INT_OR (register, 0x50, 4) , (register, 0x44, 4)

00482030: bne a2,zero,0x0048248c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x48248c, 4) , (unique, 0x1700, 1)

00482034: _lui v0,0x4000
	(register, 0x8, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

00482038: ll a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048203c: bne a2,zero,0x00482054
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482054, 4) , (unique, 0x1700, 1)

00482040: _or at,s1,zero
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00482044: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482048: beq at,zero,0x00482038
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482038, 4) , (unique, 0x1200, 1)

0048204c: _nop

00482050: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482054: bne a2,zero,0x00482488
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x482488, 4) , (unique, 0x1700, 1)

00482058: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0048205c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482060: ori v0,v0,0xfffe
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xfffe, 4)

00482064: beq v1,v0,0x00482668
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x482668, 4) , (unique, 0x1200, 1)

00482068: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0048206c: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482070: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482074: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482078: nop

0048207c: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482080: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482084: sw s2,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00482088: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0048208c: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00482090: sw s4,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00482094: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482098: lw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048209c: lw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820a0: lw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820a4: lw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820a8: lw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820ac: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820b0: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820b4: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820b8: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820bc: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820c0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	 ---  RETURN (register, 0x80, 4)

004820c4: _addiu sp,sp,0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)

004820c8: addiu v0,v0,-0x40
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffc0, 4)

004820cc: sltiu v0,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004820d0: beq v0,zero,0x00482098
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x482098, 4) , (unique, 0x1200, 1)

004820d4: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

004820d8: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820dc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820e0: lw s8,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820e4: beq v1,s4,0x00482400
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x50, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x482400, 4) , (unique, 0x1200, 1)

004820e8: _andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

004820ec: lw v0,-0x7abc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8544, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820f0: lw s5,-0x7ab8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8548, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004820f4: sw s4,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004820f8: li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

004820fc: sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482100: lui s2,0xfff8
	(register, 0x48, 4) INT_LEFT (const, 0xfff8, 4) , (const, 0x10, 4)

00482104: li s7,-0xb
	(register, 0x5c, 4) COPY (const, 0xfffffff5, 4)

00482108: or s4,s8,zero
	(register, 0x50, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0048210c: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00482110: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482118, 4)
	(register, 0x78, 4) INT_RIGHT (register, 0x50, 4) , (const, 0x13, 4)
	 ---  CALLIND (register, 0x80, 4)

00482114: _srl s8,s4,0x13
	(register, 0x78, 4) INT_RIGHT (register, 0x50, 4) , (const, 0x13, 4)

00482118: slt v0,s8,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0048211c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482120: bne v0,zero,0x00482430
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482430, 4) , (unique, 0x1700, 1)

00482124: _or a1,s8,zero
	(register, 0x14, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00482128: lw t9,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048212c: nop

00482130: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482138, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00482134: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00482138: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048213c: bne v0,zero,0x00482098
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_AND (register, 0x50, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x482098, 4) , (unique, 0x1700, 1)

00482140: _and s1,s4,s2
	(register, 0x44, 4) INT_AND (register, 0x50, 4) , (register, 0x48, 4)

00482144: ori a2,s1,0x2
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x2, 4)

00482148: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048214c: bne v0,s1,0x00482164
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482164, 4) , (unique, 0x1700, 1)

00482150: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00482154: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482158: beq at,zero,0x00482148
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482148, 4) , (unique, 0x1200, 1)

0048215c: _nop

00482160: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482164: beq s1,v0,0x00482510
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482510, 4) , (unique, 0x1200, 1)

00482168: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0048216c: b 0x00482198
	(register, 0x58, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x482198, 4)

00482170: _ori s6,s1,0x1
	(register, 0x58, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)

00482174: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482178: bne v0,s1,0x00482190
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482190, 4) , (unique, 0x1700, 1)

0048217c: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00482180: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482184: beq at,zero,0x00482174
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482174, 4) , (unique, 0x1200, 1)

00482188: _nop

0048218c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482190: beq s1,v0,0x0048222c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x48222c, 4) , (unique, 0x1200, 1)

00482194: _nop

00482198: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048219c: bne v0,s6,0x004821b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4821b4, 4) , (unique, 0x1700, 1)

004821a0: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004821a4: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004821a8: beq at,zero,0x00482198
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482198, 4) , (unique, 0x1200, 1)

004821ac: _nop

004821b0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004821b4: and v1,v0,s2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x48, 4)

004821b8: bne v1,s1,0x00482250
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x44, 4)
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482250, 4) , (unique, 0x1700, 1)

004821bc: _or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004821c0: beq s1,v0,0x00482174
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x482174, 4) , (unique, 0x1200, 1)

004821c4: _nop

004821c8: lw a1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004821cc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004821d0: nor a1,zero,a1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_NEGATE (unique, 0x4280, 4)

004821d4: andi a1,a1,0x80
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x80, 4)

004821d8: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

004821dc: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

004821e0: beq a3,zero,0x004821f0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4821f0, 4) , (unique, 0x1200, 1)

004821e4: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004821e8: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004821ec: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004821f0: bne v1,zero,0x00482174
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482174, 4) , (unique, 0x1700, 1)

004821f4: _nop

004821f8: beq v0,s7,0x00482174
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x5c, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x482174, 4) , (unique, 0x1200, 1)

004821fc: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00482200: bne v0,v1,0x00482654
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482654, 4) , (unique, 0x1700, 1)

00482204: _nop

00482208: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048220c: bne v0,s1,0x00482224
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482224, 4) , (unique, 0x1700, 1)

00482210: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00482214: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482218: beq at,zero,0x00482208
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482208, 4) , (unique, 0x1200, 1)

0048221c: _nop

00482220: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482224: bne s1,v0,0x00482198
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x482198, 4) , (unique, 0x1700, 1)

00482228: _nop

0048222c: lw s4,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482230: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00482234: lw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482238: nop

0048223c: bne v0,zero,0x004827a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4827a4, 4) , (unique, 0x1700, 1)

00482240: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482244: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482248: b 0x00482094
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)
	 ---  BRANCH (ram, 0x482094, 4)

0048224c: _sw s4,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00482250: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00482254: b 0x0048210c
	(register, 0x44, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x48210c, 4)

00482258: _or s1,s8,zero
	(register, 0x44, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0048225c: addiu v0,v0,-0x20
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffe0, 4)

00482260: sltiu v0,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00482264: beq v0,zero,0x00482098
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x482098, 4) , (unique, 0x1200, 1)

00482268: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

0048226c: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482270: nop

00482274: andi v1,v0,0x10
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x10, 4)

00482278: beq v1,zero,0x0048234c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x48234c, 4) , (unique, 0x1200, 1)

0048227c: _andi s2,v0,0x3
	(register, 0x48, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00482280: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482284: addiu s1,s0,0x14
	(register, 0x44, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)

00482288: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0048228c: ori v1,s1,0x1
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)

00482290: sw v1,-0x746c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00482294: lui v1,0x3fff
	(register, 0xc, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

00482298: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048229c: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

004822a0: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004822a4: beq v0,s4,0x00482614
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x482614, 4) , (unique, 0x1200, 1)

004822a8: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

004822ac: lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

004822b0: or v0,s4,v0
	(register, 0x8, 4) INT_OR (register, 0x50, 4) , (register, 0x8, 4)

004822b4: ll v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004822b8: bne v1,zero,0x004822d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4822d0, 4) , (unique, 0x1700, 1)

004822bc: _or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004822c0: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004822c4: beq at,zero,0x004822b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4822b4, 4) , (unique, 0x1200, 1)

004822c8: _nop

004822cc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004822d0: beq v1,zero,0x00482448
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x482448, 4) , (unique, 0x1200, 1)

004822d4: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004822d8: lw t9,-0x7ab4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff854c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004822dc: li a3,0x80
	(register, 0x1c, 4) COPY (const, 0x80, 4)

004822e0: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004822e4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004822e8: bal 0x0046557c
	(register, 0x7c, 4) COPY (const, 0x4822f0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46557c, 4)

004822ec: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004822f0: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

004822f4: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004822f8: beq v0,v1,0x004827c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x4827c8, 4) , (unique, 0x1200, 1)

004822fc: _li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

00482300: bne v0,v1,0x00482568
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x482568, 4) , (unique, 0x1700, 1)

00482304: _lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

00482308: li s1,0x80
	(register, 0x44, 4) COPY (const, 0x80, 4)

0048230c: addiu v0,s2,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

00482310: sltiu v0,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00482314: bne v0,zero,0x00482784
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1bd, 4)
	 ---  CBRANCH (ram, 0x482784, 4) , (unique, 0x1700, 1)

00482318: _li a2,0x1bd
	(register, 0x18, 4) COPY (const, 0x1bd, 4)

0048231c: lw s2,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482320: addiu s0,sp,0x20
	(register, 0x40, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

00482324: sw s1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00482328: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0048232c: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482330: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482334: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00482338: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0048233c: bal 0x004654f0
	(register, 0x7c, 4) COPY (const, 0x482344, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4654f0, 4)

00482340: _sw zero,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00482344: b 0x00482328
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  BRANCH (ram, 0x482328, 4)

00482348: _sw s1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0048234c: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482350: lui v1,0x3fff
	(register, 0xc, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

00482354: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

00482358: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0048235c: beq s4,v0,0x004826a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x4826a0, 4) , (unique, 0x1200, 1)

00482360: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00482364: lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00482368: or v0,s4,v0
	(register, 0x8, 4) INT_OR (register, 0x50, 4) , (register, 0x8, 4)

0048236c: ll v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482370: bne v1,zero,0x00482388
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482388, 4) , (unique, 0x1700, 1)

00482374: _or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00482378: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0048237c: beq at,zero,0x0048236c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48236c, 4) , (unique, 0x1200, 1)

00482380: _nop

00482384: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482388: beq v1,zero,0x00482244
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x482244, 4) , (unique, 0x1200, 1)

0048238c: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482390: lw s1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482394: lw t9,-0x7ab4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff854c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482398: andi s1,s1,0x80
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x80, 4)

0048239c: or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004823a0: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004823a4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004823a8: bal 0x0046557c
	(register, 0x7c, 4) COPY (const, 0x4823b0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46557c, 4)

004823ac: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004823b0: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

004823b4: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823b8: beq v0,v1,0x0048231c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x48231c, 4) , (unique, 0x1200, 1)

004823bc: _li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

004823c0: beq v0,v1,0x0048230c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x48230c, 4) , (unique, 0x1200, 1)

004823c4: _lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

004823c8: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823cc: nop

004823d0: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004823d4: beq v0,zero,0x00482244
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x482244, 4) , (unique, 0x1200, 1)

004823d8: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004823dc: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823e0: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823e4: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823e8: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004823ec: addiu a3,a3,-0x64a0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff9b60, 4)

004823f0: li a2,0x1cc
	(register, 0x18, 4) COPY (const, 0x1cc, 4)

004823f4: addiu a1,a1,-0x657c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a84, 4)

004823f8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482400, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5688, 4)
	 ---  CALLIND (register, 0x80, 4)

004823fc: _addiu a0,a0,0x5688
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5688, 4)

00482400: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00482404: beq v0,v1,0x004826c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4826c4, 4) , (unique, 0x1200, 1)

00482408: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0048240c: bne v0,v1,0x004820ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x4820ec, 4) , (unique, 0x1700, 1)

00482410: _li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00482414: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482418: nop

0048241c: beq v0,v1,0x0048263c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x48263c, 4) , (unique, 0x1200, 1)

00482420: _nop

00482424: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00482428: b 0x00482094
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x482094, 4)

0048242c: _sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482430: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00482434: bne s1,v0,0x00482550
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x482550, 4) , (unique, 0x1700, 1)

00482438: _li a1,-0x1
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)

0048243c: b 0x00482098
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  BRANCH (ram, 0x482098, 4)

00482440: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00482444: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00482448: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048244c: ori v0,v0,0xfffe
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xfffe, 4)

00482450: beq v1,v0,0x004826cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4826cc, 4) , (unique, 0x1200, 1)

00482454: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482458: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0048245c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482460: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482464: nop

00482468: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0048246c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482470: ori s1,s1,0x1
	(register, 0x44, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)

00482474: sw s1,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00482478: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0048247c: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00482480: b 0x00482094
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)
	 ---  BRANCH (ram, 0x482094, 4)

00482484: _sw s4,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00482488: lui v0,0x4000
	(register, 0x8, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

0048248c: and v1,a2,v0
	(register, 0xc, 4) INT_AND (register, 0x18, 4) , (register, 0x8, 4)

00482490: bne v1,zero,0x0048251c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x48251c, 4) , (unique, 0x1700, 1)

00482494: _addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

00482498: and v0,a2,v0
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x8, 4)

0048249c: beq v0,s4,0x00482740
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x482740, 4) , (unique, 0x1200, 1)

004824a0: _nop

004824a4: bltz a2,0x004824d8
	(unique, 0x1600, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x4824d8, 4) , (unique, 0x1600, 1)

004824a8: _lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

004824ac: or v0,a2,v0
	(register, 0x8, 4) INT_OR (register, 0x18, 4) , (register, 0x8, 4)

004824b0: ll v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004824b4: bne v1,a2,0x004824cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4824cc, 4) , (unique, 0x1700, 1)

004824b8: _or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004824bc: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004824c0: beq at,zero,0x004824b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4824b0, 4) , (unique, 0x1200, 1)

004824c4: _nop

004824c8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004824cc: bne a2,v1,0x00482030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482030, 4) , (unique, 0x1700, 1)

004824d0: _or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004824d4: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004824d8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004824dc: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004824e0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004824e4: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

004824e8: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

004824ec: beq a3,zero,0x004824fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4824fc, 4) , (unique, 0x1200, 1)

004824f0: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004824f4: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004824f8: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004824fc: beq v1,zero,0x00482644
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)
	 ---  CBRANCH (ram, 0x482644, 4) , (unique, 0x1200, 1)

00482500: _li v1,-0xb
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)

00482504: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482508: b 0x00482030
	 ---  BRANCH (ram, 0x482030, 4)

0048250c: _nop

00482510: lw s4,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482514: b 0x00482234
	 ---  BRANCH (ram, 0x482234, 4)

00482518: _nop

0048251c: lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00482520: or v0,s4,v0
	(register, 0x8, 4) INT_OR (register, 0x50, 4) , (register, 0x8, 4)

00482524: ll v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482528: bne v1,a2,0x00482540
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482540, 4) , (unique, 0x1700, 1)

0048252c: _or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00482530: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482534: beq at,zero,0x00482524
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482524, 4) , (unique, 0x1200, 1)

00482538: _nop

0048253c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482540: beq a2,v1,0x004825e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4825e8, 4) , (unique, 0x1200, 1)

00482544: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482548: b 0x00482030
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x482030, 4)

0048254c: _or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00482550: lw t9,-0x7abc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8544, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482554: nop

00482558: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482560, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0048255c: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00482560: b 0x00482098
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  BRANCH (ram, 0x482098, 4)

00482564: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00482568: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048256c: nop

00482570: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00482574: beq v0,zero,0x00482444
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0xbfff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x482444, 4) , (unique, 0x1200, 1)

00482578: _lui v0,0xbfff
	(register, 0x8, 4) INT_LEFT (const, 0xbfff, 4) , (const, 0x10, 4)

0048257c: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00482580: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482584: ll at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482588: and at,at,v0
	(register, 0x4, 4) INT_AND (register, 0x4, 4) , (register, 0x8, 4)

0048258c: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482590: beq at,zero,0x00482584
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482584, 4) , (unique, 0x1200, 1)

00482594: _nop

00482598: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0048259c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004825a0: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825a4: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004825a8: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

004825ac: sw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825b0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004825b4: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004825b8: nop

004825bc: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825c0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004825c4: ori s1,s1,0x1
	(register, 0x44, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)

004825c8: sw s1,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004825cc: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004825d0: lw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004825d4: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004825d8: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

004825dc: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825e0: b 0x00482098
	(register, 0x8, 4) COPY (const, 0xa5, 4)
	 ---  BRANCH (ram, 0x482098, 4)

004825e4: _li v0,0xa5
	(register, 0x8, 4) COPY (const, 0xa5, 4)

004825e8: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825ec: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004825f0: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

004825f4: sw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004825f8: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004825fc: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482600: nop

00482604: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482608: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0048260c: b 0x004825cc
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x4825cc, 4)

00482610: _sw s2,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00482614: beq s2,v0,0x004826bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4826bc, 4) , (unique, 0x1200, 1)

00482618: _nop

0048261c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482620: bne s2,v0,0x004822b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x4822b0, 4) , (unique, 0x1700, 1)

00482624: _lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00482628: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0048262c: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482630: li a0,-0x1
	(register, 0x10, 4) COPY (const, 0xffffffff, 4)

00482634: bne v0,a0,0x00482424
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482424, 4) , (unique, 0x1700, 1)

00482638: _sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0048263c: b 0x00482098
	(register, 0x8, 4) COPY (const, 0xb, 4)
	 ---  BRANCH (ram, 0x482098, 4)

00482640: _li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

00482644: beq v0,v1,0x00482504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x482504, 4) , (unique, 0x1200, 1)

00482648: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

0048264c: beq v0,v1,0x00482504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482504, 4) , (unique, 0x1200, 1)

00482650: _nop

00482654: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482658: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048265c: nop

00482660: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482668, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00482664: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00482668: sw zero,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0048266c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482670: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482674: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

00482678: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0048267c: beq at,zero,0x00482670
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482670, 4) , (unique, 0x1200, 1)

00482680: _nop

00482684: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00482688: beq v0,zero,0x00482728
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x80, 4)
	 ---  CBRANCH (ram, 0x482728, 4) , (unique, 0x1200, 1)

0048268c: _li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

00482690: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00482694: li v0,0xa6
	(register, 0x8, 4) COPY (const, 0xa6, 4)

00482698: b 0x00482098
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x482098, 4)

0048269c: _sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004826a0: beq s2,v0,0x004826bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4826bc, 4) , (unique, 0x1200, 1)

004826a4: _nop

004826a8: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004826ac: bne s2,v0,0x00482368
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x482368, 4) , (unique, 0x1700, 1)

004826b0: _lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

004826b4: b 0x00482628
	 ---  BRANCH (ram, 0x482628, 4)

004826b8: _nop

004826bc: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004826c0: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004826c4: b 0x00482098
	(register, 0x8, 4) COPY (const, 0x2d, 4)
	 ---  BRANCH (ram, 0x482098, 4)

004826c8: _li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

004826cc: sw zero,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004826d0: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004826d4: li a1,0x7
	(register, 0x14, 4) COPY (const, 0x7, 4)

004826d8: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004826dc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004826e0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

004826e4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

004826e8: beq a3,zero,0x004826f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4826f8, 4) , (unique, 0x1200, 1)

004826ec: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004826f0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004826f4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004826f8: bne v1,zero,0x00482690
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0xfffffff5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x482690, 4) , (unique, 0x1700, 1)

004826fc: _slti v1,v0,-0xb
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0xfffffff5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

00482700: beq v1,zero,0x00482764
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)
	 ---  CBRANCH (ram, 0x482764, 4) , (unique, 0x1200, 1)

00482704: _li v1,-0x59
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)

00482708: beq v0,v1,0x00482690
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffffd3, 4)
	 ---  CBRANCH (ram, 0x482690, 4) , (unique, 0x1200, 1)

0048270c: _li v1,-0x2d
	(register, 0xc, 4) COPY (const, 0xffffffd3, 4)

00482710: beq v0,v1,0x00482690
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffff6f, 4)
	 ---  CBRANCH (ram, 0x482690, 4) , (unique, 0x1200, 1)

00482714: _li v1,-0x91
	(register, 0xc, 4) COPY (const, 0xffffff6f, 4)

00482718: beq v0,v1,0x00482690
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482690, 4) , (unique, 0x1200, 1)

0048271c: _nop

00482720: b 0x00482654
	 ---  BRANCH (ram, 0x482654, 4)

00482724: _nop

00482728: lw t9,-0x7aac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8554, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048272c: nop

00482730: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x482738, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00482734: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00482738: b 0x00482690
	 ---  BRANCH (ram, 0x482690, 4)

0048273c: _nop

00482740: lw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482744: li v1,0x12
	(register, 0xc, 4) COPY (const, 0x12, 4)

00482748: andi v0,v0,0x7f
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4)

0048274c: beq v0,v1,0x004826bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x11, 4)
	 ---  CBRANCH (ram, 0x4826bc, 4) , (unique, 0x1200, 1)

00482750: _li v1,0x11
	(register, 0xc, 4) COPY (const, 0x11, 4)

00482754: bne v0,v1,0x004824a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x4824a4, 4) , (unique, 0x1700, 1)

00482758: _nop

0048275c: b 0x00482628
	 ---  BRANCH (ram, 0x482628, 4)

00482760: _nop

00482764: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

00482768: li v1,0x581
	(register, 0xc, 4) COPY (const, 0x581, 4)

0048276c: srlv v0,v1,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

00482770: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00482774: beq v0,zero,0x00482654
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482654, 4) , (unique, 0x1200, 1)

00482778: _nop

0048277c: b 0x00482690
	 ---  BRANCH (ram, 0x482690, 4)

00482780: _nop

00482784: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482788: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048278c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482790: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482794: addiu a3,a3,-0x64a0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff9b60, 4)

00482798: addiu a1,a1,-0x657c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a84, 4)

0048279c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4827a4, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5614, 4)
	 ---  CALLIND (register, 0x80, 4)

004827a0: _addiu a0,a0,0x5614
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5614, 4)

004827a4: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827a8: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827ac: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827b0: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827b4: addiu a3,a3,-0x64a0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff9b60, 4)

004827b8: li a2,0x25f
	(register, 0x18, 4) COPY (const, 0x25f, 4)

004827bc: addiu a1,a1,-0x657c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a84, 4)

004827c0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4827c8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x56b4, 4)
	 ---  CALLIND (register, 0x80, 4)

004827c4: _addiu a0,a0,0x56b4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x56b4, 4)

004827c8: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827cc: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827d0: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827d4: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004827d8: addiu a3,a3,-0x64a0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff9b60, 4)

004827dc: li a2,0x1c2
	(register, 0x18, 4) COPY (const, 0x1c2, 4)

004827e0: addiu a1,a1,-0x657c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a84, 4)

004827e4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4827ec, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5670, 4)
	 ---  CALLIND (register, 0x80, 4)

004827e8: _addiu a0,a0,0x5670
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5670, 4)

