Label: 493
Function: _IO_str_seekoff
Architecture: mips
Source File: Unknown
Entry Point: 00434d08

P-code:

00434d08: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

00434d0c: addiu gp,gp,0x6158
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x6158, 4)

00434d10: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00434d14: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

00434d18: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00434d1c: lw s6,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d20: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00434d24: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d28: lw v1,0x14(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d2c: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00434d30: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00434d34: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00434d38: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00434d3c: lw s8,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d40: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00434d44: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00434d48: lw a0,0x10(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d4c: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00434d50: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00434d54: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00434d58: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00434d5c: or s7,a2,zero
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00434d60: bne s6,zero,0x00434eb0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434eb0, 4) , (unique, 0x1700, 1)

00434d64: _or s5,a3,zero
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00434d68: andi s6,v0,0x400
	(register, 0x58, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

00434d6c: beq s6,zero,0x00434f9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x434f9c, 4) , (unique, 0x1200, 1)

00434d70: _andi a1,v0,0x800
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

00434d74: bne a1,zero,0x00434ff0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x434ff0, 4) , (unique, 0x1700, 1)

00434d78: _sltu a0,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00434d7c: bne a0,zero,0x004350bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4350bc, 4) , (unique, 0x1700, 1)

00434d80: _nop

00434d84: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d88: lw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434d8c: sltu v0,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00434d90: bne v0,zero,0x004350b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x4350b0, 4) , (unique, 0x1700, 1)

00434d94: _subu s4,v1,a1
	(register, 0x50, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)

00434d98: subu s4,a0,a1
	(register, 0x50, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)

00434d9c: li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

00434da0: beq s8,zero,0x00435004
	(unique, 0x1200, 1) INT_EQUAL (register, 0x78, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435004, 4) , (unique, 0x1200, 1)

00434da4: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00434da8: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00434dac: bne s8,v0,0x00435018
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435018, 4) , (unique, 0x1700, 1)

00434db0: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00434db4: lw a2,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434db8: nop

00434dbc: subu s2,a2,a1
	(register, 0x48, 4) INT_SUB (register, 0x18, 4) , (register, 0x14, 4)

00434dc0: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00434dc4: subu a2,a1,a2
	(register, 0x18, 4) INT_SUB (register, 0x14, 4) , (register, 0x18, 4)

00434dc8: sra v1,a2,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x1f, 4)

00434dcc: subu v0,v0,s2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x48, 4)

00434dd0: slt a3,s7,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0xc, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

00434dd4: bne a3,zero,0x00434fd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fd0, 4) , (unique, 0x1700, 1)

00434dd8: _nop

00434ddc: beq v1,s7,0x004350c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x5c, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x18, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4350c4, 4) , (unique, 0x1200, 1)

00434de0: _sltu a2,s5,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x18, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)

00434de4: sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00434de8: slt a2,v1,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x5c, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5080, 1)

00434dec: bne a2,zero,0x00434fd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fd0, 4) , (unique, 0x1700, 1)

00434df0: _nop

00434df4: beq s7,v1,0x004350d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (register, 0xc, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4350d4, 4) , (unique, 0x1200, 1)

00434df8: _sltu v0,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00434dfc: addu s2,s2,s5
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x54, 4)

00434e00: slt v0,s4,s2
	(unique, 0x5080, 1) INT_SLESS (register, 0x50, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00434e04: or s1,s2,zero
	(register, 0x44, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00434e08: bne v0,zero,0x00435048
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x435048, 4) , (unique, 0x1700, 1)

00434e0c: _sra s3,s2,0x1f
	(register, 0x4c, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)

00434e10: addu s2,a1,s2
	(register, 0x48, 4) INT_ADD (register, 0x14, 4) , (register, 0x48, 4)

00434e14: andi s6,s6,0x2
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (const, 0x2, 4)

00434e18: sw s2,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00434e1c: beq s6,zero,0x00434f00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x434f00, 4) , (unique, 0x1200, 1)

00434e20: _sw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00434e24: beq s8,zero,0x00434fc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fc8, 4) , (unique, 0x1200, 1)

00434e28: _nop

00434e2c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00434e30: bne s8,v0,0x00435030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435030, 4) , (unique, 0x1700, 1)

00434e34: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00434e38: lw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434e3c: lw v1,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434e40: nop

00434e44: subu s8,v0,v1
	(register, 0x78, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00434e48: subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

00434e4c: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00434e50: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00434e54: sra a0,v1,0x1f
	(register, 0x10, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)

00434e58: subu v0,v0,s8
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x78, 4)

00434e5c: slt a1,s7,a0
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

00434e60: bne a1,zero,0x00434fd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fd0, 4) , (unique, 0x1700, 1)

00434e64: _nop

00434e68: beq a0,s7,0x004350f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x5c, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4350f4, 4) , (unique, 0x1200, 1)

00434e6c: _sltu v1,s5,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00434e70: sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00434e74: slt a0,v1,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x5c, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

00434e78: bne a0,zero,0x00434fd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fd0, 4) , (unique, 0x1700, 1)

00434e7c: _nop

00434e80: beq s7,v1,0x004350e4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (register, 0xc, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4350e4, 4) , (unique, 0x1200, 1)

00434e84: _sltu v0,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00434e88: addu s5,s8,s5
	(register, 0x54, 4) INT_ADD (register, 0x78, 4) , (register, 0x54, 4)

00434e8c: slt s4,s4,s5
	(unique, 0x5080, 1) INT_SLESS (register, 0x50, 4) , (register, 0x54, 4)
	(register, 0x50, 4) INT_ZEXT (unique, 0x5080, 1)

00434e90: or s1,s5,zero
	(register, 0x44, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00434e94: bne s4,zero,0x00435080
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_SRIGHT (register, 0x54, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x435080, 4) , (unique, 0x1700, 1)

00434e98: _sra s3,s5,0x1f
	(register, 0x4c, 4) INT_SRIGHT (register, 0x54, 4) , (const, 0x1f, 4)

00434e9c: lw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434ea0: nop

00434ea4: addu v0,v0,s5
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x54, 4)

00434ea8: b 0x00434f00
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x434f00, 4)

00434eac: _sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00434eb0: sltu a0,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00434eb4: bne a0,zero,0x00434ec4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x434ec4, 4) , (unique, 0x1700, 1)

00434eb8: _andi a0,v0,0x800
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

00434ebc: beq a0,zero,0x00434fbc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fbc, 4) , (unique, 0x1200, 1)

00434ec0: _nop

00434ec4: andi a0,v0,0x100
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)

00434ec8: bne a0,zero,0x00434f38
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434f38, 4) , (unique, 0x1700, 1)

00434ecc: _nop

00434ed0: lw a1,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434ed4: li a0,-0x801
	(register, 0x10, 4) COPY (const, 0xfffff7ff, 4)

00434ed8: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00434edc: sw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00434ee0: sw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00434ee4: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00434ee8: bne s6,zero,0x00434f58
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x434f58, 4) , (unique, 0x1700, 1)

00434eec: _sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00434ef0: lw s1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434ef4: nop

00434ef8: subu s1,s1,a1
	(register, 0x44, 4) INT_SUB (register, 0x44, 4) , (register, 0x14, 4)

00434efc: sra s3,s1,0x1f
	(register, 0x4c, 4) INT_SRIGHT (register, 0x44, 4) , (const, 0x1f, 4)

00434f00: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f04: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f08: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f0c: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f10: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f14: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f18: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f1c: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f20: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00434f24: or v1,s1,zero
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00434f28: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f2c: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f30: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

00434f34: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

00434f38: lw a1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f3c: li a0,-0x801
	(register, 0x10, 4) COPY (const, 0xfffff7ff, 4)

00434f40: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00434f44: sw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00434f48: sw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00434f4c: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00434f50: beq s6,zero,0x00434ef0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x434ef0, 4) , (unique, 0x1200, 1)

00434f54: _sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00434f58: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434f5c: nop

00434f60: sltu v0,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00434f64: beq v0,zero,0x00434f70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x434f70, 4) , (unique, 0x1200, 1)

00434f68: _andi v0,s6,0x1
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)

00434f6c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00434f70: bne v0,zero,0x00434da0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x434da0, 4) , (unique, 0x1700, 1)

00434f74: _subu s4,a0,a1
	(register, 0x50, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)

00434f78: andi s6,s6,0x2
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (const, 0x2, 4)

00434f7c: beq s6,zero,0x00434fe8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x434fe8, 4) , (unique, 0x1200, 1)

00434f80: _li s3,-0x1
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)

00434f84: bne s8,zero,0x00434e2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x434e2c, 4) , (unique, 0x1700, 1)

00434f88: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00434f8c: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00434f90: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00434f94: b 0x00434e5c
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x434e5c, 4)

00434f98: _or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00434f9c: sltu a0,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00434fa0: bne a0,zero,0x00434ec4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x434ec4, 4) , (unique, 0x1700, 1)

00434fa4: _andi a0,v0,0x800
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

00434fa8: bne a0,zero,0x00434ec8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)
	 ---  CBRANCH (ram, 0x434ec8, 4) , (unique, 0x1700, 1)

00434fac: _andi a0,v0,0x100
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)

00434fb0: lw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434fb4: b 0x00434ef0
	 ---  BRANCH (ram, 0x434ef0, 4)

00434fb8: _nop

00434fbc: lw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434fc0: b 0x00434f58
	 ---  BRANCH (ram, 0x434f58, 4)

00434fc4: _nop

00434fc8: bgez s7,0x00434e8c
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x5c, 4)
	(register, 0x54, 4) INT_ADD (register, 0x78, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x434e8c, 4) , (unique, 0x1300, 1)

00434fcc: _addu s5,s8,s5
	(register, 0x54, 4) INT_ADD (register, 0x78, 4) , (register, 0x54, 4)

00434fd0: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00434fd4: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00434fd8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00434fdc: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

00434fe0: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00434fe4: li s3,-0x1
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)

00434fe8: b 0x00434f00
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x434f00, 4)

00434fec: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

00434ff0: andi a0,v0,0x100
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)

00434ff4: beq a0,zero,0x00434ed0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x58, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x434ed0, 4) , (unique, 0x1200, 1)

00434ff8: _li s6,0x2
	(register, 0x58, 4) COPY (const, 0x2, 4)

00434ffc: b 0x00434f38
	 ---  BRANCH (ram, 0x434f38, 4)

00435000: _nop

00435004: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435008: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0043500c: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435010: b 0x00434dd0
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x434dd0, 4)

00435014: _or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435018: subu a2,zero,s4
	(register, 0x18, 4) INT_SUB (const, 0x0, 4) , (register, 0x50, 4)

0043501c: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00435020: sra v1,a2,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x1f, 4)

00435024: subu v0,v0,s4
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x50, 4)

00435028: b 0x00434dd0
	(register, 0x48, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x434dd0, 4)

0043502c: _or s2,s4,zero
	(register, 0x48, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00435030: subu v1,zero,s4
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x50, 4)

00435034: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00435038: sra a0,v1,0x1f
	(register, 0x10, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)

0043503c: subu v0,v0,s4
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x50, 4)

00435040: b 0x00434e5c
	(register, 0x78, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x434e5c, 4)

00435044: _or s8,s4,zero
	(register, 0x78, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00435048: lw t9,-0x7b24(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043504c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435050: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435054: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00435058: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0043505c: addiu t9,t9,0x45c0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x45c0, 4)

00435060: bal 0x004345c0
	(register, 0x7c, 4) COPY (const, 0x435068, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4345c0, 4)

00435064: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00435068: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043506c: bne v0,zero,0x00434fe4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434fe4, 4) , (unique, 0x1700, 1)

00435070: _nop

00435074: lw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435078: b 0x00434e10
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x50, 4)
	 ---  BRANCH (ram, 0x434e10, 4)

0043507c: _addu a0,a1,s4
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x50, 4)

00435080: lw t9,-0x7b24(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435084: sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435088: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0043508c: or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00435090: addiu t9,t9,0x45c0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x45c0, 4)

00435094: bal 0x004345c0
	(register, 0x7c, 4) COPY (const, 0x43509c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4345c0, 4)

00435098: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043509c: beq v0,zero,0x00434e9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x434e9c, 4) , (unique, 0x1200, 1)

004350a0: _nop

004350a4: li s3,-0x1
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)

004350a8: b 0x00434f00
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x434f00, 4)

004350ac: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

004350b0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004350b4: b 0x00434da0
	(register, 0x58, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x434da0, 4)

004350b8: _li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

004350bc: b 0x00434ec4
	(register, 0x58, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x434ec4, 4)

004350c0: _li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

004350c4: beq a2,zero,0x00434de8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x434de8, 4) , (unique, 0x1200, 1)

004350c8: _sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

004350cc: b 0x00434fd0
	 ---  BRANCH (ram, 0x434fd0, 4)

004350d0: _nop

004350d4: beq v0,zero,0x00434e00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x434e00, 4) , (unique, 0x1200, 1)

004350d8: _addu s2,s2,s5
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x54, 4)

004350dc: b 0x00434fd0
	 ---  BRANCH (ram, 0x434fd0, 4)

004350e0: _nop

004350e4: beq v0,zero,0x00434e8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x78, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x434e8c, 4) , (unique, 0x1200, 1)

004350e8: _addu s5,s8,s5
	(register, 0x54, 4) INT_ADD (register, 0x78, 4) , (register, 0x54, 4)

004350ec: b 0x00434fd0
	 ---  BRANCH (ram, 0x434fd0, 4)

004350f0: _nop

004350f4: beq v1,zero,0x00434e74
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x434e74, 4) , (unique, 0x1200, 1)

004350f8: _sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

004350fc: b 0x00434fd0
	 ---  BRANCH (ram, 0x434fd0, 4)

00435100: _nop

