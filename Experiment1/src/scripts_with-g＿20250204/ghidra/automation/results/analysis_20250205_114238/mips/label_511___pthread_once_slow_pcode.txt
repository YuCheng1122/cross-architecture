Label: 511
Function: __pthread_once_slow
Architecture: mips
Source File: Unknown
Entry Point: 00436b40

P-code:

00436b40: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

00436b44: addiu gp,gp,0x4320
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x4320, 4)

00436b48: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00436b4c: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

00436b50: sw s1,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00436b54: sw s0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00436b58: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00436b5c: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00436b60: sw s2,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00436b64: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00436b68: or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00436b6c: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b70: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00436b74: andi v0,a2,0x2
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x2, 4)

00436b78: beq v0,zero,0x00436b98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x436b98, 4) , (unique, 0x1200, 1)

00436b7c: _nop

00436b80: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b84: lw s2,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b88: lw s1,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b8c: lw s0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b90: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

00436b94: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

00436b98: lw v0,-0x7dc0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8240, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436b9c: nop

00436ba0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436ba4: nop

00436ba8: ori v0,v0,0x1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

00436bac: ll a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436bb0: bne a0,a2,0x00436bcc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x18, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x436bcc, 4) , (unique, 0x1700, 1)

00436bb4: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00436bb8: or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00436bbc: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00436bc0: beq at,zero,0x00436bac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x436bac, 4) , (unique, 0x1200, 1)

00436bc4: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00436bc8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00436bcc: beq v1,zero,0x00436b74
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x436b74, 4) , (unique, 0x1200, 1)

00436bd0: _or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00436bd4: andi v1,a0,0x1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)

00436bd8: beq v1,zero,0x00436c34
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x436c34, 4) , (unique, 0x1200, 1)

00436bdc: _nop

00436be0: bne v0,a0,0x00436c34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x436c34, 4) , (unique, 0x1700, 1)

00436be4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00436be8: li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

00436bec: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00436bf0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00436bf4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00436bf8: beq a3,zero,0x00436c08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x436c08, 4) , (unique, 0x1200, 1)

00436bfc: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00436c00: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00436c04: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00436c08: bne v1,zero,0x00436b6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)
	 ---  CBRANCH (ram, 0x436b6c, 4) , (unique, 0x1700, 1)

00436c0c: _li v1,-0xb
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)

00436c10: beq v0,v1,0x00436b6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x436b6c, 4) , (unique, 0x1200, 1)

00436c14: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00436c18: beq v0,v1,0x00436b6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x436b6c, 4) , (unique, 0x1200, 1)

00436c1c: _nop

00436c20: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c24: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c28: nop

00436c2c: bal 0x0042de90
	(register, 0x7c, 4) COPY (const, 0x436c34, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALL (ram, 0x42de90, 4)

00436c30: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00436c34: lw v0,-0x7b24(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c38: lw a1,-0x7b24(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c3c: addiu v0,v0,0x6a80
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x6a80, 4)

00436c40: addiu s2,sp,0x24
	(register, 0x48, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)

00436c44: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00436c48: lw t9,-0x7aa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8560, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c4c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00436c50: addiu a2,sp,0x18
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

00436c54: addiu a1,a1,0x6af4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6af4, 4)

00436c58: or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00436c5c: sw zero,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00436c60: sw zero,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00436c64: sw zero,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00436c68: sw zero,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00436c6c: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00436c70: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x436c78, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

00436c74: _sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00436c78: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00436c7c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x436c84, 4)
	 ---  CALLIND (register, 0x80, 4)

00436c80: _nop

00436c84: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c88: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00436c8c: lw t9,-0x7a9c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8564, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436c90: nop

00436c94: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x436c9c, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00436c98: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00436c9c: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00436ca0: lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00436ca4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00436ca8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00436cac: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00436cb0: li a1,0x81
	(register, 0x14, 4) COPY (const, 0x81, 4)

00436cb4: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00436cb8: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

00436cbc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00436cc0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00436cc4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00436cc8: beq a3,zero,0x00436cd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x436cd8, 4) , (unique, 0x1200, 1)

00436ccc: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00436cd0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00436cd4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00436cd8: bne v1,zero,0x00436b80
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x436b80, 4) , (unique, 0x1700, 1)

00436cdc: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00436ce0: beq v0,v1,0x00436b80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x436b80, 4) , (unique, 0x1200, 1)

00436ce4: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00436ce8: beq v0,v1,0x00436b80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x436b80, 4) , (unique, 0x1200, 1)

00436cec: _nop

00436cf0: b 0x00436c20
	 ---  BRANCH (ram, 0x436c20, 4)

00436cf4: _nop

