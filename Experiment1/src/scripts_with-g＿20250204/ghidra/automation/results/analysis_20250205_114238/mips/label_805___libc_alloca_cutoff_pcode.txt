Label: 805
Function: __libc_alloca_cutoff
Architecture: mips
Source File: Unknown
Entry Point: 004652a0

P-code:

004652a0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004652a4: lw v1,-0x727c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8d84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004652a8: lui v0,0x1
	(register, 0x8, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

004652ac: srl v1,v1,0x2
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x2, 4)

004652b0: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

004652b4: sltu v1,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

004652b8: beq v1,zero,0x004652e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4652e8, 4) , (unique, 0x1200, 1)

004652bc: _sltu v0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004652c0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004652c4: lw v0,-0x727c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8d84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004652c8: nop

004652cc: sltiu v1,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004652d0: bne v1,zero,0x004652f0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4652f0, 4) , (unique, 0x1700, 1)

004652d4: _nop

004652d8: srl v0,v0,0x2
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4)

004652dc: sltu v0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004652e0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  RETURN (register, 0x80, 4)

004652e4: _xori v0,v0,0x1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

004652e8: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  RETURN (register, 0x80, 4)

004652ec: _xori v0,v0,0x1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

004652f0: lui v0,0x4
	(register, 0x8, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

004652f4: sltu v0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004652f8: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  RETURN (register, 0x80, 4)

004652fc: _xori v0,v0,0x1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

