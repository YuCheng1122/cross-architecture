Label: 521
Function: __memchr
Architecture: mips
Source File: Unknown
Entry Point: 00437900

P-code:

00437900: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

00437904: addiu gp,gp,0x3560
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x3560, 4)

00437908: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0043790c: beq a2,zero,0x00437afc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)
	 ---  CBRANCH (ram, 0x437afc, 4) , (unique, 0x1200, 1)

00437910: _andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

00437914: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

00437918: sll v0,a1,0x8
	(register, 0x8, 4) INT_LEFT (register, 0x14, 4) , (const, 0x8, 4)

0043791c: addu a1,v0,a1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

00437920: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00437924: nor v0,zero,a0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00437928: li s2,-0x4
	(register, 0x48, 4) COPY (const, 0xfffffffc, 4)

0043792c: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

00437930: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00437934: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00437938: and a3,a0,s2
	(register, 0x1c, 4) INT_AND (register, 0x10, 4) , (register, 0x48, 4)

0043793c: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00437940: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00437944: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00437948: sltu v0,v0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0043794c: sll a0,a1,0x10
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (const, 0x10, 4)

00437950: lw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437954: beq v0,zero,0x00437a18
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x437a18, 4) , (unique, 0x1200, 1)

00437958: _addu a1,a1,a0
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0043795c: lui v0,0x7f7f
	(register, 0x8, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437960: addiu v0,v0,0x7f7f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7f7f, 4)

00437964: xor v1,v1,a1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

00437968: and a0,v1,v0
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

0043796c: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00437970: or a0,a0,v1
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

00437974: nor a0,a0,v0
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

00437978: sll v0,s0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x40, 4) , (const, 0x3, 4)

0043797c: sllv a0,a0,v0
	(unique, 0x4f80, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00437980: bne a0,zero,0x00437a48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x437a48, 4) , (unique, 0x1700, 1)

00437984: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

00437988: beq a3,s2,0x00437a6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x48, 4)
	(register, 0x40, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x437a6c, 4) , (unique, 0x1200, 1)

0043798c: _addiu s0,a3,0x4
	(register, 0x40, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)

00437990: lw v0,0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437994: beq s0,s2,0x00437a88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (register, 0x48, 4)
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x437a88, 4) , (unique, 0x1200, 1)

00437998: _lui a3,0xfefe
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

0043799c: lui a2,0x8080
	(register, 0x18, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

004379a0: ori a3,a3,0xfeff
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (const, 0xfeff, 4)

004379a4: b 0x004379b8
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x8080, 4)
	 ---  BRANCH (ram, 0x4379b8, 4)

004379a8: _ori a2,a2,0x8080
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x8080, 4)

004379ac: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004379b0: beq s0,s2,0x00437a8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (register, 0x48, 4)
	(register, 0xc, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x437a8c, 4) , (unique, 0x1200, 1)

004379b4: _lui v1,0xfefe
	(register, 0xc, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

004379b8: xor v0,v0,a1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x14, 4)

004379bc: addu v1,v0,a3
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

004379c0: nor a0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

004379c4: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

004379c8: and v1,v1,a2
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)

004379cc: beq v1,zero,0x004379ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x4379ac, 4) , (unique, 0x1200, 1)

004379d0: _addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

004379d4: addiu s0,s0,-0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)

004379d8: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

004379dc: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

004379e0: and a0,v0,v1
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004379e4: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

004379e8: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004379ec: or a0,a0,v0
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

004379f0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4379f8, 4)
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CALLIND (register, 0x80, 4)

004379f4: _nor a0,a0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

004379f8: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

004379fc: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

00437a00: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a04: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a08: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a0c: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a10: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00437a14: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00437a18: lui v0,0x7f7f
	(register, 0x8, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437a1c: addiu v0,v0,0x7f7f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7f7f, 4)

00437a20: xor v1,v1,a1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

00437a24: and a0,v1,v0
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

00437a28: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00437a2c: or a0,a0,v1
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

00437a30: nor a0,a0,v0
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

00437a34: sll v0,s0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x40, 4) , (const, 0x3, 4)

00437a38: addu s1,s0,a2
	(register, 0x44, 4) INT_ADD (register, 0x40, 4) , (register, 0x18, 4)

00437a3c: sllv a0,a0,v0
	(unique, 0x4f80, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00437a40: beq a0,zero,0x00437988
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_AND (register, 0x44, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x437988, 4) , (unique, 0x1200, 1)

00437a44: _and s2,s1,s2
	(register, 0x48, 4) INT_AND (register, 0x44, 4) , (register, 0x48, 4)

00437a48: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a4c: nop

00437a50: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x437a58, 4)
	 ---  CALLIND (register, 0x80, 4)

00437a54: _nop

00437a58: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00437a5c: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

00437a60: sltu s1,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00437a64: beq s1,zero,0x00437a00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x437a00, 4) , (unique, 0x1200, 1)

00437a68: _nop

00437a6c: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a70: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a74: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a78: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437a7c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00437a80: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00437a84: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00437a88: lui v1,0xfefe
	(register, 0xc, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00437a8c: xor v0,v0,a1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x14, 4)

00437a90: ori v1,v1,0xfeff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xfeff, 4)

00437a94: nor a0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

00437a98: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00437a9c: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

00437aa0: lui a0,0x8080
	(register, 0x10, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00437aa4: ori a0,a0,0x8080
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x8080, 4)

00437aa8: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

00437aac: beq v1,zero,0x00437a6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x437a6c, 4) , (unique, 0x1200, 1)

00437ab0: _lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00437ab4: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

00437ab8: and a0,v0,v1
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00437abc: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00437ac0: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437ac4: or a0,a0,v0
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

00437ac8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x437ad0, 4)
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CALLIND (register, 0x80, 4)

00437acc: _nor a0,a0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

00437ad0: sra s0,v0,0x3
	(register, 0x40, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00437ad4: addu v0,s2,s0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x40, 4)

00437ad8: sltu s1,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00437adc: bne s1,zero,0x00437a6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x437a6c, 4) , (unique, 0x1700, 1)

00437ae0: _nop

00437ae4: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437ae8: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437aec: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437af0: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00437af4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00437af8: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00437afc: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  RETURN (register, 0x80, 4)

00437b00: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

