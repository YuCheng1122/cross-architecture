Label: 188
Function: _mid_memalign
Architecture: mips
Source File: Unknown
Entry Point: 00419da0

P-code:

00419da0: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

00419da4: addiu gp,gp,0x10c0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x10c0, 4)

00419da8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00419dac: addiu sp,sp,-0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc8, 4)

00419db0: sltiu v0,a0,0x9
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x9, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00419db4: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00419db8: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00419dbc: sw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00419dc0: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00419dc4: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00419dc8: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00419dcc: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00419dd0: bne v0,zero,0x00419fbc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419fbc, 4) , (unique, 0x1700, 1)

00419dd4: _or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00419dd8: sltiu v0,a0,0x10
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00419ddc: beq v0,zero,0x00419f74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x419f74, 4) , (unique, 0x1200, 1)

00419de0: _lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00419de4: li s0,0x10
	(register, 0x40, 4) COPY (const, 0x10, 4)

00419de8: bltz s1,0x0041a10c
	(unique, 0x1600, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0xb, 4)
	 ---  CBRANCH (ram, 0x41a10c, 4) , (unique, 0x1600, 1)

00419dec: _addiu v0,s1,0xb
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0xb, 4)

00419df0: sltiu v1,v0,0x10
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00419df4: bne v1,zero,0x00419fb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x419fb4, 4) , (unique, 0x1700, 1)

00419df8: _li v1,-0x8
	(register, 0xc, 4) COPY (const, 0xfffffff8, 4)

00419dfc: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00419e00: addiu v0,v0,-0x9
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff7, 4)

00419e04: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

00419e08: lw s3,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e0c: nop

00419e10: addiu s3,s3,0x1f18
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1f18, 4)

00419e14: lw v1,0x3c(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e18: nop

00419e1c: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00419e20: beq v1,zero,0x00419e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419e60, 4) , (unique, 0x1200, 1)

00419e24: _nop

00419e28: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00419e2c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00419e30: lui v1,0x0
	(register, 0xc, 4) INT_LEFT (const, 0x0, 4) , (const, 0x10, 4)

00419e34: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

00419e38: lw v1,-0x6ff4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff900c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e3c: nop

00419e40: beq v1,zero,0x00419e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419e60, 4) , (unique, 0x1200, 1)

00419e44: _nop

00419e48: sll t0,v0,0x1
	(register, 0x20, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00419e4c: addu t0,v1,t0
	(register, 0x20, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)

00419e50: lhu t1,0x0(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x3300, 2)

00419e54: nop

00419e58: bne t1,zero,0x00419fe4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x20, 4)
	 ---  CBRANCH (ram, 0x419fe4, 4) , (unique, 0x1700, 1)

00419e5c: _addiu v0,v0,0x20
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x20, 4)

00419e60: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00419e64: lw v0,-0x74e0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e68: nop

00419e6c: beq v0,zero,0x0041a07c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a07c, 4) , (unique, 0x1200, 1)

00419e70: _or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00419e74: lw v0,-0x74ec(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e78: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00419e7c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00419e80: lw s2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e84: nop

00419e88: beq s2,zero,0x0041a160
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41a160, 4) , (unique, 0x1200, 1)

00419e8c: _addiu a0,s1,0x10
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)

00419e90: ll v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419e94: bne v1,zero,0x00419eb0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419eb0, 4) , (unique, 0x1700, 1)

00419e98: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00419e9c: li at,0x1
	(register, 0x4, 4) COPY (const, 0x1, 4)

00419ea0: sc at,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00419ea4: beq at,zero,0x00419e90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x419e90, 4) , (unique, 0x1200, 1)

00419ea8: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00419eac: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00419eb0: beq v0,zero,0x0041a1d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a1d8, 4) , (unique, 0x1200, 1)

00419eb4: _or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00419eb8: lw s4,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419ebc: nop

00419ec0: addiu s4,s4,-0x6ca4
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xffff935c, 4)

00419ec4: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00419ec8: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00419ecc: bal 0x0041935c
	(register, 0x7c, 4) COPY (const, 0x419ed4, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41935c, 4)

00419ed0: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00419ed4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419ed8: beq v0,zero,0x0041a214
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a214, 4) , (unique, 0x1200, 1)

00419edc: _nop

00419ee0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00419ee4: ll v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419ee8: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

00419eec: sc at,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00419ef0: beq at,zero,0x00419ee4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419ee4, 4) , (unique, 0x1200, 1)

00419ef4: _nop

00419ef8: slti v1,v1,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

00419efc: beq v1,zero,0x0041a2c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a2c8, 4) , (unique, 0x1200, 1)

00419f00: _nop

00419f04: lw v1,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f08: nop

00419f0c: andi a0,v1,0x2
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x2, 4)

00419f10: bne a0,zero,0x0041a05c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1700, 1)

00419f14: _andi v1,v1,0x4
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)

00419f18: beq v1,zero,0x0041a29c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a29c, 4) , (unique, 0x1200, 1)

00419f1c: _nop

00419f20: lw v1,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f24: nop

00419f28: beq v1,zero,0x0041a2a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a2a8, 4) , (unique, 0x1200, 1)

00419f2c: _nop

00419f30: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00419f34: subu v1,zero,v1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

00419f38: addiu a0,v0,-0x8
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)

00419f3c: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00419f40: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f44: nop

00419f48: beq s2,v1,0x0041a05c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1200, 1)

00419f4c: _nop

00419f50: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f54: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f58: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f5c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419f60: addiu a3,a3,0x4ba8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4ba8, 4)

00419f64: li a2,0xe4b
	(register, 0x18, 4) COPY (const, 0xe4b, 4)

00419f68: addiu a1,a1,0x397c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x397c, 4)

00419f6c: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x419f74, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4894, 4)
	 ---  CALL (ram, 0x425590, 4)

00419f70: _addiu a0,a0,0x4894
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4894, 4)

00419f74: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00419f78: sltu v0,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00419f7c: beq v0,zero,0x0041a144
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a144, 4) , (unique, 0x1200, 1)

00419f80: _nop

00419f84: addiu v0,a0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

00419f88: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00419f8c: beq v0,zero,0x0041a1d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41a1d0, 4) , (unique, 0x1200, 1)

00419f90: _li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

00419f94: beq a0,v0,0x00419de8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x40, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x419de8, 4) , (unique, 0x1200, 1)

00419f98: _li s0,0x10
	(register, 0x40, 4) COPY (const, 0x10, 4)

00419f9c: sll s0,s0,0x1
	(register, 0x40, 4) INT_LEFT (register, 0x40, 4) , (const, 0x1, 4)

00419fa0: sltu v0,s0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x40, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00419fa4: bne v0,zero,0x00419f9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419f9c, 4) , (unique, 0x1700, 1)

00419fa8: _nop

00419fac: b 0x00419de8
	 ---  BRANCH (ram, 0x419de8, 4)

00419fb0: _nop

00419fb4: b 0x00419e08
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x419e08, 4)

00419fb8: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00419fbc: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fc0: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fc4: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fc8: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fcc: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fd0: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fd4: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419fd8: or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00419fdc: b 0x004198a0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  BRANCH (ram, 0x4198a0, 4)

00419fe0: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

00419fe4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00419fe8: addu a1,v1,v0
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00419fec: lw v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00419ff0: nop

00419ff4: beq v0,zero,0x00419e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x419e60, 4) , (unique, 0x1200, 1)

00419ff8: _addiu a3,s0,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00419ffc: b 0x0041a014
	(register, 0x18, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a014, 4)

0041a000: _or a2,a1,zero
	(register, 0x18, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041a004: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a008: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a00c: beq a0,v1,0x00419e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_XOR (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x419e60, 4) , (unique, 0x1200, 1)

0041a010: _xor v0,a0,v1
	(register, 0x8, 4) INT_XOR (register, 0x10, 4) , (register, 0xc, 4)

0041a014: and v1,v0,a3
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x1c, 4)

0041a018: bne v1,zero,0x0041a004
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a004, 4) , (unique, 0x1700, 1)

0041a01c: _srl a0,v0,0xc
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)

0041a020: lw v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a024: beq a1,a2,0x0041a2e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x18, 4)
	(register, 0x14, 4) INT_RIGHT (register, 0x18, 4) , (const, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a2e8, 4) , (unique, 0x1200, 1)

0041a028: _srl a1,a2,0xc
	(register, 0x14, 4) INT_RIGHT (register, 0x18, 4) , (const, 0xc, 4)

0041a02c: xor v0,v0,a1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x14, 4)

0041a030: andi v1,v0,0x7
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0041a034: bne v1,zero,0x0041a300
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a300, 4) , (unique, 0x1700, 1)

0041a038: _srl a0,v0,0xc
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)

0041a03c: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a040: nop

0041a044: xor v1,v1,a1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

0041a048: xor v1,v1,a0
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x10, 4)

0041a04c: addiu t1,t1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffff, 4)

0041a050: sw v1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041a054: sh t1,0x0(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x26, 2)

0041a058: sw zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041a05c: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a060: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a064: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a068: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a06c: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a070: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a074: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  RETURN (register, 0x80, 4)

0041a078: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

0041a07c: lw s2,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a080: lw t9,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a084: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a088: addiu t9,t9,-0x6ca4
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff935c, 4)

0041a08c: bal 0x0041935c
	(register, 0x7c, 4) COPY (const, 0x41a094, 4)
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (const, 0x1f70, 4)
	 ---  CALL (ram, 0x41935c, 4)

0041a090: _addiu a0,s2,0x1f70
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (const, 0x1f70, 4)

0041a094: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a098: beq v0,zero,0x0041a120
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a120, 4) , (unique, 0x1200, 1)

0041a09c: _nop

0041a0a0: lw v1,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0a4: nop

0041a0a8: andi a0,v1,0x2
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x2, 4)

0041a0ac: bne a0,zero,0x0041a05c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1700, 1)

0041a0b0: _andi v1,v1,0x4
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)

0041a0b4: beq v1,zero,0x0041a05c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1200, 1)

0041a0b8: _nop

0041a0bc: lw v1,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0c0: nop

0041a0c4: beq v1,zero,0x0041a2c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a2c0, 4) , (unique, 0x1200, 1)

0041a0c8: _nop

0041a0cc: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0041a0d0: subu v1,zero,v1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0041a0d4: addiu a0,v0,-0x8
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)

0041a0d8: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

0041a0dc: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0e0: addiu s2,s2,0x1f70
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1f70, 4)

0041a0e4: beq v1,s2,0x0041a05c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x48, 4)
	(register, 0x18, 4) COPY (const, 0xe39, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1200, 1)

0041a0e8: _li a2,0xe39
	(register, 0x18, 4) COPY (const, 0xe39, 4)

0041a0ec: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0f0: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0f4: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0f8: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a0fc: addiu a3,a3,0x4ba8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4ba8, 4)

0041a100: addiu a1,a1,0x397c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x397c, 4)

0041a104: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x41a10c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4838, 4)
	 ---  CALL (ram, 0x425590, 4)

0041a108: _addiu a0,a0,0x4838
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4838, 4)

0041a10c: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a110: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041a114: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041a118: li v1,0xc
	(register, 0xc, 4) COPY (const, 0xc, 4)

0041a11c: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041a120: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a124: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a128: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a12c: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a130: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a134: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a138: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a13c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  RETURN (register, 0x80, 4)

0041a140: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

0041a144: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a148: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041a14c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041a150: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0041a154: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041a158: b 0x0041a124
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a124, 4)

0041a15c: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a160: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a164: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a168: addiu t9,t9,0x57e0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x57e0, 4)

0041a16c: bal 0x004157e0
	(register, 0x7c, 4) COPY (const, 0x41a174, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x40, 4)
	 ---  CALL (ram, 0x4157e0, 4)

0041a170: _addu a0,a0,s0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x40, 4)

0041a174: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a178: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041a17c: lw s4,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a180: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a184: addiu s4,s4,-0x6ca4
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xffff935c, 4)

0041a188: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a18c: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041a190: bal 0x0041935c
	(register, 0x7c, 4) COPY (const, 0x41a198, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41935c, 4)

0041a194: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a198: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a19c: beq v0,zero,0x0041a2b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a2b0, 4) , (unique, 0x1200, 1)

0041a1a0: _nop

0041a1a4: bne s2,zero,0x00419ee0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419ee0, 4) , (unique, 0x1700, 1)

0041a1a8: _nop

0041a1ac: lw v1,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a1b0: nop

0041a1b4: andi a0,v1,0x2
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x2, 4)

0041a1b8: bne a0,zero,0x0041a05c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41a05c, 4) , (unique, 0x1700, 1)

0041a1bc: _andi v1,v1,0x4
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)

0041a1c0: bne v1,zero,0x00419f20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419f20, 4) , (unique, 0x1700, 1)

0041a1c4: _nop

0041a1c8: b 0x00419f50
	 ---  BRANCH (ram, 0x419f50, 4)

0041a1cc: _nop

0041a1d0: b 0x00419de8
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x419de8, 4)

0041a1d4: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041a1d8: lw t9,-0x7fc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff803c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a1dc: nop

0041a1e0: bal 0x00413af0
	(register, 0x7c, 4) COPY (const, 0x41a1e8, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413af0, 4)

0041a1e4: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a1e8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a1ec: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041a1f0: lw s4,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a1f4: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a1f8: addiu s4,s4,-0x6ca4
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0xffff935c, 4)

0041a1fc: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041a200: bal 0x0041935c
	(register, 0x7c, 4) COPY (const, 0x41a208, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41935c, 4)

0041a204: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a208: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a20c: bne v0,zero,0x00419ee0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419ee0, 4) , (unique, 0x1700, 1)

0041a210: _nop

0041a214: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a218: or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a21c: addiu t9,t9,0x5f8c
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x5f8c, 4)

0041a220: bal 0x00415f8c
	(register, 0x7c, 4) COPY (const, 0x41a228, 4)
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x415f8c, 4)

0041a224: _or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041a228: or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a22c: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041a230: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a234: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041a238: bal 0x0041935c
	(register, 0x7c, 4) COPY (const, 0x41a240, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41935c, 4)

0041a23c: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a240: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a244: beq s2,zero,0x0041a28c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a28c, 4) , (unique, 0x1200, 1)

0041a248: _nop

0041a24c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041a250: ll v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a254: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

0041a258: sc at,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041a25c: beq at,zero,0x0041a250
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a250, 4) , (unique, 0x1200, 1)

0041a260: _nop

0041a264: slti v1,v1,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

0041a268: bne v1,zero,0x0041a28c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a28c, 4) , (unique, 0x1700, 1)

0041a26c: _nop

0041a270: lw t9,-0x7fc0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8040, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a274: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041a278: bal 0x00413c34
	(register, 0x7c, 4) COPY (const, 0x41a280, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413c34, 4)

0041a27c: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a280: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a284: lw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a288: nop

0041a28c: bne v0,zero,0x00419f04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x419f04, 4) , (unique, 0x1700, 1)

0041a290: _nop

0041a294: b 0x0041a124
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a124, 4)

0041a298: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a29c: lw v1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a2a0: b 0x00419f48
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1f70, 4)
	 ---  BRANCH (ram, 0x419f48, 4)

0041a2a4: _addiu v1,v1,0x1f70
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1f70, 4)

0041a2a8: b 0x00419f38
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x419f38, 4)

0041a2ac: _lui v1,0xfff0
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)

0041a2b0: bne s2,zero,0x0041a214
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a214, 4) , (unique, 0x1700, 1)

0041a2b4: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a2b8: b 0x0041a124
	 ---  BRANCH (ram, 0x41a124, 4)

0041a2bc: _nop

0041a2c0: b 0x0041a0d4
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41a0d4, 4)

0041a2c4: _lui v1,0xfff0
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)

0041a2c8: lw t9,-0x7fc0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8040, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a2cc: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041a2d0: bal 0x00413c34
	(register, 0x7c, 4) COPY (const, 0x41a2d8, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413c34, 4)

0041a2d4: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a2d8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a2dc: lw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a2e0: b 0x00419f04
	 ---  BRANCH (ram, 0x419f04, 4)

0041a2e4: _nop

0041a2e8: andi v1,v0,0x7
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0041a2ec: bne v1,zero,0x0041a300
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a300, 4) , (unique, 0x1700, 1)

0041a2f0: _srl a0,v0,0xc
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)

0041a2f4: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a2f8: b 0x0041a04c
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x41a04c, 4)

0041a2fc: _xor v1,v1,a0
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x10, 4)

0041a300: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a304: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a308: nop

0041a30c: addiu t9,t9,0x4344
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4344, 4)

0041a310: bal 0x00414344
	(register, 0x7c, 4) COPY (const, 0x41a318, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x45c4, 4)
	 ---  CALL (ram, 0x414344, 4)

0041a314: _addiu a0,a0,0x45c4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x45c4, 4)

