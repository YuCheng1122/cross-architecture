Label: 57
Function: killer_init
Architecture: mips
Source File: Unknown
Entry Point: 0040ca80

P-code:

0040ca80: addiu sp,sp,-0x10e8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffef18, 4)

0040ca84: sw ra,0x10e4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040ca88: sw s8,0x10e0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040ca8c: sw s0,0x10dc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0040ca90: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040ca94: li v0,0x190
	(register, 0x8, 4) COPY (const, 0x190, 4)

0040ca98: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ca9c: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040caa0: jal 0x00400400
	(register, 0x7c, 4) COPY (const, 0x40caa8, 4)
	 ---  CALL (ram, 0x400400, 4)

0040caa4: _nop

0040caa8: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040caac: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040cab0: jal 0x0041dc48
	(register, 0x7c, 4) COPY (const, 0x40cab8, 4)
	 ---  CALL (ram, 0x41dc48, 4)

0040cab4: _nop

0040cab8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cabc: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cac0: sw v1,0x39c4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040cac4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cac8: lw v0,0x39c4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cacc: nop

0040cad0: bgtz v0,0x0040d0c0
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d0c0, 4) , (unique, 0x1400, 1)

0040cad4: _nop

0040cad8: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cadc: lw v1,0x39c4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cae0: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040cae4: beq v1,v0,0x0040d0c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d0c0, 4) , (unique, 0x1200, 1)

0040cae8: _nop

0040caec: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0040caf0: sh v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040caf4: sw zero,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040caf8: li a0,0x17
	(register, 0x10, 4) COPY (const, 0x17, 4)

0040cafc: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40cb04, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040cb00: _nop

0040cb04: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cb08: jal 0x0040d13c
	(register, 0x7c, 4) COPY (const, 0x40cb10, 4)
	 ---  CALL (ram, 0x40d13c, 4)

0040cb0c: _nop

0040cb10: li a0,0x17
	(register, 0x10, 4) COPY (const, 0x17, 4)

0040cb14: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40cb1c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040cb18: _nop

0040cb1c: sh v0,0x46(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x46, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040cb20: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cb24: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0040cb28: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040cb2c: jal 0x00400350
	(register, 0x7c, 4) COPY (const, 0x40cb34, 4)
	 ---  CALL (ram, 0x400350, 4)

0040cb30: _nop

0040cb34: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cb38: lw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cb3c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040cb40: beq v1,v0,0x0040cb70
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40cb70, 4) , (unique, 0x1200, 1)

0040cb44: _nop

0040cb48: addiu v0,s8,0x44
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)

0040cb4c: li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

0040cb50: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cb54: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cb58: jal 0x004003a0
	(register, 0x7c, 4) COPY (const, 0x40cb60, 4)
	 ---  CALL (ram, 0x4003a0, 4)

0040cb5c: _nop

0040cb60: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040cb64: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cb68: jal 0x004003f0
	(register, 0x7c, 4) COPY (const, 0x40cb70, 4)
	 ---  CALL (ram, 0x4003f0, 4)

0040cb6c: _nop

0040cb70: li a0,0x5
	(register, 0x10, 4) COPY (const, 0x5, 4)

0040cb74: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40cb7c, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040cb78: _nop

0040cb7c: li a0,0x1000
	(register, 0x10, 4) COPY (const, 0x1000, 4)

0040cb80: jal 0x00400340
	(register, 0x7c, 4) COPY (const, 0x40cb88, 4)
	 ---  CALL (ram, 0x400340, 4)

0040cb84: _nop

0040cb88: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cb8c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cb90: sw v1,0x39c0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040cb94: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cb98: lw v0,0x39c0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cb9c: nop

0040cba0: sb zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040cba4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cba8: sw zero,0x3a20(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3a20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040cbac: jal 0x0040dac8
	(register, 0x7c, 4) COPY (const, 0x40cbb4, 4)
	 ---  CALL (ram, 0x40dac8, 4)

0040cbb0: _nop

0040cbb4: beq v0,zero,0x0040d0cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d0cc, 4) , (unique, 0x1200, 1)

0040cbb8: _nop

0040cbbc: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040cbc0: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40cbc8, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040cbc4: _nop

0040cbc8: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cbcc: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040cbd0: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40cbd8, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040cbd4: _nop

0040cbd8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cbdc: jal 0x00400410
	(register, 0x7c, 4) COPY (const, 0x40cbe4, 4)
	 ---  CALL (ram, 0x400410, 4)

0040cbe0: _nop

0040cbe4: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cbe8: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cbec: nop

0040cbf0: beq v0,zero,0x0040d0d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d0d8, 4) , (unique, 0x1200, 1)

0040cbf4: _nop

0040cbf8: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040cbfc: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40cc04, 4)
	 ---  CALL (ram, 0x410940, 4)

0040cc00: _nop

0040cc04: b 0x0040d08c
	 ---  BRANCH (ram, 0x40d08c, 4)

0040cc08: _nop

0040cc0c: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc10: nop

0040cc14: lb v0,0xb(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040cc18: nop

0040cc1c: slti v0,v0,0x30
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040cc20: bne v0,zero,0x0040d070
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d070, 4) , (unique, 0x1700, 1)

0040cc24: _nop

0040cc28: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc2c: nop

0040cc30: lb v0,0xb(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040cc34: nop

0040cc38: slti v0,v0,0x3a
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3a, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040cc3c: beq v0,zero,0x0040d070
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d070, 4) , (unique, 0x1200, 1)

0040cc40: _nop

0040cc44: addiu v0,s8,0x1094
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1094, 4)

0040cc48: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cc4c: addiu v0,s8,0x1054
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1054, 4)

0040cc50: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cc54: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc58: nop

0040cc5c: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

0040cc60: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cc64: jal 0x004128b8
	(register, 0x7c, 4) COPY (const, 0x40cc6c, 4)
	 ---  CALL (ram, 0x4128b8, 4)

0040cc68: _nop

0040cc6c: sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cc70: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc74: nop

0040cc78: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040cc7c: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cc80: lw v1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc84: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cc88: nop

0040cc8c: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0040cc90: bne v0,zero,0x0040cd1c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40cd1c, 4) , (unique, 0x1700, 1)

0040cc94: _nop

0040cc98: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cc9c: jal 0x00400400
	(register, 0x7c, 4) COPY (const, 0x40cca4, 4)
	 ---  CALL (ram, 0x400400, 4)

0040cca0: _nop

0040cca4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cca8: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ccac: nop

0040ccb0: subu v0,v1,v0
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0040ccb4: slti v0,v0,0x259
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x259, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040ccb8: bne v0,zero,0x0040ccd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40ccd0, 4) , (unique, 0x1700, 1)

0040ccbc: _nop

0040ccc0: li v0,0x190
	(register, 0x8, 4) COPY (const, 0x190, 4)

0040ccc4: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ccc8: b 0x0040d07c
	 ---  BRANCH (ram, 0x40d07c, 4)

0040cccc: _nop

0040ccd0: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ccd4: nop

0040ccd8: slti v0,v0,0x191
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x191, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040ccdc: bne v0,zero,0x0040d07c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d07c, 4) , (unique, 0x1700, 1)

0040cce0: _nop

0040cce4: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cce8: li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

0040ccec: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0040ccf0: bne v0,zero,0x0040ccfc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40ccfc, 4) , (unique, 0x1700, 1)

0040ccf4: _nop

0040ccf8: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040ccfc: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040cd00: bne v0,zero,0x0040d07c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d07c, 4) , (unique, 0x1700, 1)

0040cd04: _nop

0040cd08: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040cd0c: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40cd14, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040cd10: _nop

0040cd14: b 0x0040d07c
	 ---  BRANCH (ram, 0x40d07c, 4)

0040cd18: _nop

0040cd1c: lw v1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cd20: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cd24: nop

0040cd28: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0040cd2c: beq v0,zero,0x0040cd40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40cd40, 4) , (unique, 0x1200, 1)

0040cd30: _nop

0040cd34: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cd38: nop

0040cd3c: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cd40: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cd44: jal 0x00400400
	(register, 0x7c, 4) COPY (const, 0x40cd4c, 4)
	 ---  CALL (ram, 0x400400, 4)

0040cd48: _nop

0040cd4c: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cd50: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040cd54: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40cd5c, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040cd58: _nop

0040cd5c: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040cd60: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40cd68, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040cd64: _nop

0040cd68: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cd6c: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040cd70: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40cd78, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040cd74: _nop

0040cd78: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cd7c: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cd80: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40cd88, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040cd84: _nop

0040cd88: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cd8c: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cd90: nop

0040cd94: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040cd98: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cd9c: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cda0: nop

0040cda4: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

0040cda8: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cdac: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cdb0: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40cdb8, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040cdb4: _nop

0040cdb8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cdbc: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cdc0: nop

0040cdc4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040cdc8: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cdcc: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cdd0: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040cdd4: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40cddc, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040cdd8: _nop

0040cddc: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cde0: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cde4: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40cdec, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040cde8: _nop

0040cdec: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cdf0: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cdf4: nop

0040cdf8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040cdfc: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ce00: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040ce04: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040ce08: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40ce10, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040ce0c: _nop

0040ce10: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce14: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce18: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40ce20, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040ce1c: _nop

0040ce20: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce24: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce28: nop

0040ce2c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040ce30: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ce34: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce38: nop

0040ce3c: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

0040ce40: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce44: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce48: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40ce50, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040ce4c: _nop

0040ce50: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce54: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce58: nop

0040ce5c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040ce60: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ce64: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040ce68: li a0,0xb
	(register, 0x10, 4) COPY (const, 0xb, 4)

0040ce6c: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40ce74, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040ce70: _nop

0040ce74: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce78: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce7c: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40ce84, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040ce80: _nop

0040ce84: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ce88: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ce8c: nop

0040ce90: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040ce94: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ce98: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040ce9c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40cea4, 4)
	 ---  CALL (ram, 0x410940, 4)

0040cea0: _nop

0040cea4: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040cea8: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40ceb0, 4)
	 ---  CALL (ram, 0x410940, 4)

0040ceac: _nop

0040ceb0: addiu v1,s8,0x54
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)

0040ceb4: addiu v0,s8,0x1094
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1094, 4)

0040ceb8: li a2,0xfff
	(register, 0x18, 4) COPY (const, 0xfff, 4)

0040cebc: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040cec0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cec4: jal 0x0041fb48
	(register, 0x7c, 4) COPY (const, 0x40cecc, 4)
	 ---  CALL (ram, 0x41fb48, 4)

0040cec8: _nop

0040cecc: sw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ced0: lw v1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ced4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040ced8: beq v1,v0,0x0040d00c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d00c, 4) , (unique, 0x1200, 1)

0040cedc: _nop

0040cee0: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cee4: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040cee8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040ceec: sb zero,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040cef0: li a0,0xa
	(register, 0x10, 4) COPY (const, 0xa, 4)

0040cef4: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40cefc, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040cef8: _nop

0040cefc: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cf00: nop

0040cf04: addiu s0,v0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0040cf08: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cf0c: li a0,0xa
	(register, 0x10, 4) COPY (const, 0xa, 4)

0040cf10: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40cf18, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040cf14: _nop

0040cf18: addiu v1,s8,0x54
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)

0040cf1c: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cf20: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040cf24: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040cf28: jal 0x004116b0
	(register, 0x7c, 4) COPY (const, 0x40cf30, 4)
	 ---  CALL (ram, 0x4116b0, 4)

0040cf2c: _nop

0040cf30: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cf34: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040cf38: beq v1,v0,0x0040cf60
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40cf60, 4) , (unique, 0x1200, 1)

0040cf3c: _nop

0040cf40: addiu v0,s8,0x54
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)

0040cf44: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cf48: jal 0x0041fbb8
	(register, 0x7c, 4) COPY (const, 0x40cf50, 4)
	 ---  CALL (ram, 0x41fbb8, 4)

0040cf4c: _nop

0040cf50: li a1,0x9
	(register, 0x14, 4) COPY (const, 0x9, 4)

0040cf54: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cf58: jal 0x00400390
	(register, 0x7c, 4) COPY (const, 0x40cf60, 4)
	 ---  CALL (ram, 0x400390, 4)

0040cf5c: _nop

0040cf60: li a0,0xa
	(register, 0x10, 4) COPY (const, 0xa, 4)

0040cf64: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40cf6c, 4)
	 ---  CALL (ram, 0x410940, 4)

0040cf68: _nop

0040cf6c: jal 0x0041e238
	(register, 0x7c, 4) COPY (const, 0x40cf74, 4)
	 ---  CALL (ram, 0x41e238, 4)

0040cf70: _nop

0040cf74: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cf78: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cf7c: nop

0040cf80: beq v0,v1,0x0040d088
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x40d088, 4) , (unique, 0x1200, 1)

0040cf84: _nop

0040cf88: jal 0x0041e258
	(register, 0x7c, 4) COPY (const, 0x40cf90, 4)
	 ---  CALL (ram, 0x41e258, 4)

0040cf8c: _nop

0040cf90: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cf94: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cf98: nop

0040cf9c: beq v0,v1,0x0040d088
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x40d088, 4) , (unique, 0x1200, 1)

0040cfa0: _nop

0040cfa4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040cfa8: lw v0,0x39c0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cfac: addiu v1,s8,0x54
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)

0040cfb0: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cfb4: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040cfb8: jal 0x00410e20
	(register, 0x7c, 4) COPY (const, 0x40cfc0, 4)
	 ---  CALL (ram, 0x410e20, 4)

0040cfbc: _nop

0040cfc0: bne v0,zero,0x0040d088
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d088, 4) , (unique, 0x1700, 1)

0040cfc4: _nop

0040cfc8: addiu v0,s8,0x54
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)

0040cfcc: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040cfd0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040cfd4: jal 0x0041f878
	(register, 0x7c, 4) COPY (const, 0x40cfdc, 4)
	 ---  CALL (ram, 0x41f878, 4)

0040cfd8: _nop

0040cfdc: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040cfe0: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cfe4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040cfe8: bne v1,v0,0x0040d000
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d000, 4) , (unique, 0x1700, 1)

0040cfec: _nop

0040cff0: li a1,0x9
	(register, 0x14, 4) COPY (const, 0x9, 4)

0040cff4: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040cff8: jal 0x00400390
	(register, 0x7c, 4) COPY (const, 0x40d000, 4)
	 ---  CALL (ram, 0x400390, 4)

0040cffc: _nop

0040d000: lw a0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d004: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40d00c, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040d008: _nop

0040d00c: addiu v0,s8,0x1094
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1094, 4)

0040d010: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d014: jal 0x0040dc88
	(register, 0x7c, 4) COPY (const, 0x40d01c, 4)
	 ---  CALL (ram, 0x40dc88, 4)

0040d018: _nop

0040d01c: beq v0,zero,0x0040d034
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d034, 4) , (unique, 0x1200, 1)

0040d020: _nop

0040d024: li a1,0x9
	(register, 0x14, 4) COPY (const, 0x9, 4)

0040d028: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d02c: jal 0x00400390
	(register, 0x7c, 4) COPY (const, 0x40d034, 4)
	 ---  CALL (ram, 0x400390, 4)

0040d030: _nop

0040d034: addiu v0,s8,0x1094
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1094, 4)

0040d038: li a1,0x40
	(register, 0x14, 4) COPY (const, 0x40, 4)

0040d03c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d040: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40d048, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040d044: _nop

0040d048: addiu v0,s8,0x1054
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1054, 4)

0040d04c: li a1,0x40
	(register, 0x14, 4) COPY (const, 0x40, 4)

0040d050: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d054: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40d05c, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040d058: _nop

0040d05c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040d060: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40d068, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040d064: _nop

0040d068: b 0x0040d08c
	 ---  BRANCH (ram, 0x40d08c, 4)

0040d06c: _nop

0040d070: nop

0040d074: b 0x0040d08c
	 ---  BRANCH (ram, 0x40d08c, 4)

0040d078: _nop

0040d07c: nop

0040d080: b 0x0040d08c
	 ---  BRANCH (ram, 0x40d08c, 4)

0040d084: _nop

0040d088: nop

0040d08c: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d090: jal 0x00400370
	(register, 0x7c, 4) COPY (const, 0x40d098, 4)
	 ---  CALL (ram, 0x400370, 4)

0040d094: _nop

0040d098: sw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d09c: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d0a0: nop

0040d0a4: bne v0,zero,0x0040cc0c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40cc0c, 4) , (unique, 0x1700, 1)

0040d0a8: _nop

0040d0ac: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d0b0: jal 0x0041d578
	(register, 0x7c, 4) COPY (const, 0x40d0b8, 4)
	 ---  CALL (ram, 0x41d578, 4)

0040d0b4: _nop

0040d0b8: b 0x0040cbbc
	 ---  BRANCH (ram, 0x40cbbc, 4)

0040d0bc: _nop

0040d0c0: nop

0040d0c4: b 0x0040d0dc
	 ---  BRANCH (ram, 0x40d0dc, 4)

0040d0c8: _nop

0040d0cc: nop

0040d0d0: b 0x0040d0dc
	 ---  BRANCH (ram, 0x40d0dc, 4)

0040d0d4: _nop

0040d0d8: nop

0040d0dc: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040d0e0: lw ra,0x10e4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d0e4: lw s8,0x10e0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d0e8: lw s0,0x10dc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d0ec: addiu sp,sp,0x10e8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10e8, 4)

0040d0f0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0040d0f4: _nop

