Label: 220
Function: __clock_gettime64
Architecture: mips
Source File: Unknown
Entry Point: 0041d3a0

P-code:

0041d3a0: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041d3a4: addiu gp,gp,-0x2540
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffdac0, 4)

0041d3a8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041d3ac: lw v0,-0x7de0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8220, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3b0: addiu sp,sp,-0x30
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd0, 4)

0041d3b4: lw t9,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3b8: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041d3bc: sw ra,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0041d3c0: sw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041d3c4: sw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041d3c8: beq t9,zero,0x0041d3fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d3fc, 4) , (unique, 0x1200, 1)

0041d3cc: _or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041d3d0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x41d3d8, 4)
	 ---  CALLIND (register, 0x80, 4)

0041d3d4: _nop

0041d3d8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3dc: bne v0,zero,0x0041d4b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d4b8, 4) , (unique, 0x1700, 1)

0041d3e0: _nop

0041d3e4: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041d3e8: lw ra,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3ec: lw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3f0: lw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d3f4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  RETURN (register, 0x80, 4)

0041d3f8: _addiu sp,sp,0x30
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0041d3fc: lw v0,-0x7ddc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8224, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d400: nop

0041d404: lw t9,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d408: nop

0041d40c: beq t9,zero,0x0041d438
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d438, 4) , (unique, 0x1200, 1)

0041d410: _or s0,a1,zero
	(register, 0x40, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041d414: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x41d41c, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	 ---  CALLIND (register, 0x80, 4)

0041d418: _addiu a1,sp,0x18
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0041d41c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d420: bne v0,zero,0x0041d480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d480, 4) , (unique, 0x1700, 1)

0041d424: _nop

0041d428: lw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d42c: nop

0041d430: bgez v1,0x0041d4a0
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x41d4a0, 4) , (unique, 0x1300, 1)

0041d434: _sra a0,v1,0x1f
	(register, 0x10, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)

0041d438: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041d43c: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041d440: li v0,0x1133
	(register, 0x8, 4) COPY (const, 0x1133, 4)

0041d444: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

0041d448: beq a3,zero,0x0041d454
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d454, 4) , (unique, 0x1200, 1)

0041d44c: _nop

0041d450: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041d454: beq v0,zero,0x0041d3e4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)
	 ---  CBRANCH (ram, 0x41d3e4, 4) , (unique, 0x1200, 1)

0041d458: _li v1,-0x59
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)

0041d45c: bne v0,v1,0x0041d4b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41d4b8, 4) , (unique, 0x1700, 1)

0041d460: _nop

0041d464: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d468: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041d46c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041d470: li v1,0x59
	(register, 0xc, 4) COPY (const, 0x59, 4)

0041d474: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d478: b 0x0041d3e8
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x41d3e8, 4)

0041d47c: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0041d480: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041d484: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041d488: lw v1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d48c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041d490: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041d494: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041d498: b 0x0041d3e8
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x41d3e8, 4)

0041d49c: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0041d4a0: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d4a4: lw v1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d4a8: sw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0041d4ac: sw zero,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d4b0: b 0x0041d3e8
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x41d3e8, 4)

0041d4b4: _sw v1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d4b8: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041d4bc: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041d4c0: lw v1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d4c4: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041d4c8: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041d4cc: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041d4d0: b 0x0041d3e8
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x41d3e8, 4)

0041d4d4: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

