Label: 789
Function: _IO_wfile_seekoff
Architecture: mips
Source File: Unknown
Entry Point: 00463aec

P-code:

00463aec: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

00463af0: addiu gp,gp,0x7374
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x7374, 4)

00463af4: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00463af8: addiu sp,sp,-0xd0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff30, 4)

00463afc: lw a1,0xe4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b00: sw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00463b04: sw s0,0xa8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00463b08: lw v1,0x5c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b0c: sw ra,0xcc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xcc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00463b10: sw s8,0xc8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00463b14: sw s7,0xc4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00463b18: sw s6,0xc0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00463b1c: sw s5,0xbc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xbc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00463b20: sw s4,0xb8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00463b24: sw s3,0xb4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00463b28: sw s2,0xb0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00463b2c: sw s1,0xac(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00463b30: beq a1,zero,0x00464150
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464150, 4) , (unique, 0x1200, 1)

00463b34: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00463b38: or s2,a2,zero
	(register, 0x48, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00463b3c: lw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b40: lw a2,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b44: lw v0,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b48: lw a0,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b4c: beq a2,a1,0x00464144
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x14, 4)
	(register, 0x44, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464144, 4) , (unique, 0x1200, 1)

00463b50: _or s1,a3,zero
	(register, 0x44, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00463b54: or s6,zero,zero
	(register, 0x58, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00463b58: sltu v0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00463b5c: bne v0,zero,0x00463b78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463b78, 4) , (unique, 0x1700, 1)

00463b60: _nop

00463b64: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b68: nop

00463b6c: andi v0,v0,0x800
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

00463b70: beq v0,zero,0x00463b9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463b9c, 4) , (unique, 0x1200, 1)

00463b74: _nop

00463b78: lw t9,-0x7748(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88b8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b7c: nop

00463b80: bal 0x00461b34
	(register, 0x7c, 4) COPY (const, 0x463b88, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x461b34, 4)

00463b84: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463b88: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b8c: bne v0,zero,0x0046423c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46423c, 4) , (unique, 0x1700, 1)

00463b90: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00463b94: lw v1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463b98: nop

00463b9c: lw v0,0x18(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ba0: nop

00463ba4: beq v0,zero,0x00463e18
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x463e18, 4) , (unique, 0x1200, 1)

00463ba8: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00463bac: lw v1,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463bb0: nop

00463bb4: beq v1,v0,0x00463d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x463d74, 4) , (unique, 0x1200, 1)

00463bb8: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00463bbc: bne v1,v0,0x00463c30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x463c30, 4) , (unique, 0x1700, 1)

00463bc0: _nop

00463bc4: lw s3,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463bc8: lw s4,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463bcc: nop

00463bd0: subu v0,s3,s4
	(register, 0x8, 4) INT_SUB (register, 0x4c, 4) , (register, 0x50, 4)

00463bd4: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00463bd8: beq v0,zero,0x004644e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4644e0, 4) , (unique, 0x1200, 1)

00463bdc: _nop

00463be0: lw t9,0x48(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463be4: addiu a1,sp,0x28
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00463be8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463bf0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00463bec: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463bf0: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463bf4: bne v0,zero,0x00463ec0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x8000, 4)
	 ---  CBRANCH (ram, 0x463ec0, 4) , (unique, 0x1700, 1)

00463bf8: _ori v1,zero,0x8000
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x8000, 4)

00463bfc: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c00: nop

00463c04: andi v0,v0,0xf000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)

00463c08: bne v0,v1,0x00463ec0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x463ec0, 4) , (unique, 0x1700, 1)

00463c0c: _nop

00463c10: lw v0,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c14: lw v1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c18: addu v0,s1,v0
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00463c1c: sltu s1,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00463c20: addu v1,s2,v1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

00463c24: addu s2,s1,v1
	(register, 0x48, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00463c28: sw zero,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00463c2c: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00463c30: lw t9,-0x7b1c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c34: nop

00463c38: bal 0x00461bec
	(register, 0x7c, 4) COPY (const, 0x463c40, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x461bec, 4)

00463c3c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463c40: lw v0,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c44: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00463c48: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c4c: lw a0,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c50: lw s3,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c54: beq v0,v1,0x00463f9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x463f9c, 4) , (unique, 0x1200, 1)

00463c58: _nop

00463c5c: lw v1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c60: nop

00463c64: beq v1,zero,0x00463fa4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x4c, 4) , (const, 0x100, 4)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1200, 1)

00463c68: _andi v1,s3,0x100
	(register, 0xc, 4) INT_AND (register, 0x4c, 4) , (const, 0x100, 4)

00463c6c: bne v1,zero,0x00463fa4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1700, 1)

00463c70: _nop

00463c74: lw a2,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c78: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463c7c: nop

00463c80: subu v1,v1,a2
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x18, 4)

00463c84: sra a1,v1,0x1f
	(register, 0x14, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)

00463c88: subu v1,a0,v1
	(register, 0xc, 4) INT_SUB (register, 0x10, 4) , (register, 0xc, 4)

00463c8c: sltu a3,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

00463c90: subu a1,v0,a1
	(register, 0x14, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)

00463c94: subu a1,a1,a3
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x1c, 4)

00463c98: slt a3,s2,a1
	(unique, 0x5080, 1) INT_SLESS (register, 0x48, 4) , (register, 0x14, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

00463c9c: bne a3,zero,0x00463fa4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1700, 1)

00463ca0: _nop

00463ca4: beq a1,s2,0x0046449c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x48, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46449c, 4) , (unique, 0x1200, 1)

00463ca8: _sltu a1,s1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00463cac: slt a1,s2,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

00463cb0: bne a1,zero,0x00463cc8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463cc8, 4) , (unique, 0x1700, 1)

00463cb4: _nop

00463cb8: bne v0,s2,0x00463fa4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x48, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1700, 1)

00463cbc: _sltu a0,s1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00463cc0: beq a0,zero,0x00463fa4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1200, 1)

00463cc4: _nop

00463cc8: lw v0,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ccc: lw t9,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463cd0: lw a0,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463cd4: subu v1,s1,v1
	(register, 0xc, 4) INT_SUB (register, 0x44, 4) , (register, 0xc, 4)

00463cd8: addu v1,a2,v1
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

00463cdc: sw a2,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00463ce0: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463ce4: sw a2,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00463ce8: sw a2,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00463cec: sw a2,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00463cf0: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00463cf4: sw a0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463cf8: sw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463cfc: sw a0,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463d00: sw a0,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463d04: sw a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463d08: sw a0,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463d0c: addiu t9,t9,0x26c0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x26c0, 4)

00463d10: bal 0x004626c0
	(register, 0x7c, 4) COPY (const, 0x463d18, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4626c0, 4)

00463d14: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463d18: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d1c: bne v0,zero,0x00463ebc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffef, 4)
	 ---  CBRANCH (ram, 0x463ebc, 4) , (unique, 0x1700, 1)

00463d20: _li v1,-0x11
	(register, 0xc, 4) COPY (const, 0xffffffef, 4)

00463d24: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d28: lw a2,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d2c: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00463d30: lw a3,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d34: bltz a2,0x00463d6c
	(unique, 0x1600, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x463d6c, 4) , (unique, 0x1600, 1)

00463d38: _sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00463d3c: lw s3,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d40: lw v0,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d44: nop

00463d48: subu v0,s3,v0
	(register, 0x8, 4) INT_SUB (register, 0x4c, 4) , (register, 0x8, 4)

00463d4c: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00463d50: beq v0,zero,0x0046462c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46462c, 4) , (unique, 0x1200, 1)

00463d54: _nop

00463d58: sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00463d5c: lw t9,0x40(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d60: nop

00463d64: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463d6c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00463d68: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463d6c: b 0x00463f68
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

00463d70: _or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00463d74: lw s3,0x58(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d78: lw t9,-0x7740(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d7c: nop

00463d80: bal 0x00464b74
	(register, 0x7c, 4) COPY (const, 0x463d88, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x464b74, 4)

00463d84: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00463d88: lw a1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d8c: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d90: lw a0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d94: lw a3,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463d98: blez v0,0x00464294
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464294, 4) , (unique, 0x1500, 1)

00463d9c: _nop

00463da0: lw v1,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463da4: lw a1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463da8: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

00463dac: sra v1,v1,0x2
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x2, 4)

00463db0: mult v1,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0xc, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

00463db4: subu a3,a3,a1
	(register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0x14, 4)

00463db8: sra a0,a3,0x1f
	(register, 0x10, 4) INT_SRIGHT (register, 0x1c, 4) , (const, 0x1f, 4)

00463dbc: mflo v0
	(register, 0x8, 4) COPY (register, 0x3004, 4)

00463dc0: subu v1,s1,v0
	(register, 0xc, 4) INT_SUB (register, 0x44, 4) , (register, 0x8, 4)

00463dc4: sra v0,v0,0x1f
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00463dc8: sltu s1,s1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0xc, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00463dcc: subu v0,s2,v0
	(register, 0x8, 4) INT_SUB (register, 0x48, 4) , (register, 0x8, 4)

00463dd0: subu a3,v1,a3
	(register, 0x1c, 4) INT_SUB (register, 0xc, 4) , (register, 0x1c, 4)

00463dd4: subu v0,v0,s1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

00463dd8: sltu v1,v1,a3
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00463ddc: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

00463de0: subu s2,v0,v1
	(register, 0x48, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00463de4: or s1,a3,zero
	(register, 0x44, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00463de8: lw v0,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463dec: li a0,-0x1
	(register, 0x10, 4) COPY (const, 0xffffffff, 4)

00463df0: lw v1,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463df4: beq v0,a0,0x00463eb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x463eb4, 4) , (unique, 0x1200, 1)

00463df8: _nop

00463dfc: addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00463e00: sltu s1,v1,s1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00463e04: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

00463e08: addu s2,s1,v0
	(register, 0x48, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

00463e0c: sw zero,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00463e10: b 0x00463c30
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x463c30, 4)

00463e14: _or s1,v1,zero
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00463e18: lw a0,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e1c: nop

00463e20: beq a0,zero,0x00463e4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463e4c, 4) , (unique, 0x1200, 1)

00463e24: _nop

00463e28: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e2c: nop

00463e30: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463e38, 4)
	 ---  CALLIND (register, 0x80, 4)

00463e34: _nop

00463e38: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e3c: li v1,-0x101
	(register, 0xc, 4) COPY (const, 0xfffffeff, 4)

00463e40: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00463e44: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e48: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00463e4c: lw t9,-0x7af0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8510, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e50: nop

00463e54: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463e5c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00463e58: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463e5c: lw v0,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e60: lw a0,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e64: lw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e68: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463e6c: sw a0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e70: sw a0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e74: sw a0,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e78: sw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e7c: sw a0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e80: sw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463e84: sw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e88: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e8c: sw v1,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e90: sw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e94: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e98: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00463e9c: lw v1,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ea0: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00463ea4: bne v1,v0,0x00463bbc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x463bbc, 4) , (unique, 0x1700, 1)

00463ea8: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00463eac: b 0x00463d74
	 ---  BRANCH (ram, 0x463d74, 4)

00463eb0: _nop

00463eb4: bne v1,v0,0x00463e00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x463e00, 4) , (unique, 0x1700, 1)

00463eb8: _addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

00463ebc: lw s4,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ec0: lw t9,-0x7b20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ec4: nop

00463ec8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463ed0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00463ecc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463ed0: lw s3,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ed4: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ed8: subu s4,s3,s4
	(register, 0x50, 4) INT_SUB (register, 0x4c, 4) , (register, 0x50, 4)

00463edc: sltiu s4,s4,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x50, 4) , (const, 0x498, 4)
	(register, 0x50, 4) INT_ZEXT (unique, 0x5280, 1)

00463ee0: beq s4,zero,0x00464418
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464418, 4) , (unique, 0x1200, 1)

00463ee4: _nop

00463ee8: lw v0,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463eec: or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00463ef0: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00463ef4: lw t9,0x40(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463ef8: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00463efc: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x463f04, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00463f00: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00463f04: or s1,v1,zero
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00463f08: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00463f0c: beq v0,v1,0x0046430c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46430c, 4) , (unique, 0x1200, 1)

00463f10: _nop

00463f14: lw v1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f18: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f1c: lw a0,0x18(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f20: lw a1,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f24: li a3,-0x11
	(register, 0x1c, 4) COPY (const, 0xffffffef, 4)

00463f28: and a2,a2,a3
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x1c, 4)

00463f2c: sw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00463f30: sw v0,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00463f34: sw s1,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00463f38: sw a1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f3c: sw a1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f40: sw a1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f44: sw a1,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f48: sw a1,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f4c: sw a1,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00463f50: sw a0,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f54: sw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f58: sw a0,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f5c: sw a0,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f60: sw a0,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f64: sw a0,0x14(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00463f68: lw ra,0xcc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xcc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f6c: lw s8,0xc8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f70: lw s7,0xc4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f74: lw s6,0xc0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f78: lw s5,0xbc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xbc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f7c: lw s4,0xb8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f80: lw s3,0xb4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f84: lw s2,0xb0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f88: lw s0,0xa8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f8c: or v1,s1,zero
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00463f90: lw s1,0xac(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463f94: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xd0, 4)
	 ---  RETURN (register, 0x80, 4)

00463f98: _addiu sp,sp,0xd0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xd0, 4)

00463f9c: bne a0,v0,0x00463c5c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x463c5c, 4) , (unique, 0x1700, 1)

00463fa0: _nop

00463fa4: andi s3,s3,0x4
	(register, 0x4c, 4) INT_AND (register, 0x4c, 4) , (const, 0x4, 4)

00463fa8: lw s4,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463fac: bne s3,zero,0x00463ec0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x463ec0, 4) , (unique, 0x1700, 1)

00463fb0: _nop

00463fb4: lw v1,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463fb8: lw v0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00463fbc: nop

00463fc0: subu a3,v1,v0
	(register, 0x1c, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

00463fc4: sra a2,a3,0x1f
	(register, 0x18, 4) INT_SRIGHT (register, 0x1c, 4) , (const, 0x1f, 4)

00463fc8: and a3,a3,s1
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (register, 0x44, 4)

00463fcc: subu t0,s1,a3
	(register, 0x20, 4) INT_SUB (register, 0x44, 4) , (register, 0x1c, 4)

00463fd0: and a2,a2,s2
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x48, 4)

00463fd4: sltu a0,s1,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x20, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00463fd8: subu t1,s2,a2
	(register, 0x24, 4) INT_SUB (register, 0x48, 4) , (register, 0x18, 4)

00463fdc: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00463fe0: subu s5,t1,a0
	(register, 0x54, 4) INT_SUB (register, 0x24, 4) , (register, 0x10, 4)

00463fe4: sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00463fe8: slt a0,v1,s5
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x54, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

00463fec: beq a0,zero,0x00464218
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464218, 4) , (unique, 0x1200, 1)

00463ff0: _or s8,t0,zero
	(register, 0x78, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

00463ff4: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00463ff8: or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00463ffc: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00464000: or s8,zero,zero
	(register, 0x78, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00464004: lw s7,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464008: nop

0046400c: subu v0,s7,s4
	(register, 0x8, 4) INT_SUB (register, 0x5c, 4) , (register, 0x50, 4)

00464010: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00464014: beq v0,zero,0x004644c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4644c0, 4) , (unique, 0x1200, 1)

00464018: _nop

0046401c: sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00464020: lw t9,0x40(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464024: nop

00464028: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464030, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046402c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00464030: or s7,v1,zero
	(register, 0x5c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00464034: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464038: bltz v0,0x00464288
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x464288, 4) , (unique, 0x1600, 1)

0046403c: _sw v0,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00464040: or v0,s5,s8
	(register, 0x8, 4) INT_OR (register, 0x54, 4) , (register, 0x78, 4)

00464044: beq v0,zero,0x004640ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4640ac, 4) , (unique, 0x1200, 1)

00464048: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046404c: lw s3,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464050: nop

00464054: subu v0,s3,s4
	(register, 0x8, 4) INT_SUB (register, 0x4c, 4) , (register, 0x50, 4)

00464058: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046405c: beq v0,zero,0x004644f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4644f8, 4) , (unique, 0x1200, 1)

00464060: _nop

00464064: lw t9,0x38(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464068: lw a1,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046406c: bne s6,zero,0x00464080
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464080, 4) , (unique, 0x1700, 1)

00464070: _or a2,s8,zero
	(register, 0x18, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00464074: lw a2,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464078: nop

0046407c: subu a2,a2,a1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x14, 4)

00464080: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464088, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00464084: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00464088: or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046408c: sra v0,v0,0x1f
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00464090: slt v1,v0,s5
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

00464094: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464098: bne v1,zero,0x0046438c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46438c, 4) , (unique, 0x1700, 1)

0046409c: _li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

004640a0: beq s5,v0,0x00464380
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (register, 0x8, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x4c, 4) , (register, 0x78, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x464380, 4) , (unique, 0x1200, 1)

004640a4: _sltu v1,s3,s8
	(unique, 0x5380, 1) INT_LESS (register, 0x4c, 4) , (register, 0x78, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

004640a8: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004640ac: lw v0,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004640b0: lw a0,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004640b4: lw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004640b8: lw t9,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004640bc: addu t0,a0,s8
	(register, 0x20, 4) INT_ADD (register, 0x10, 4) , (register, 0x78, 4)

004640c0: addu a1,a0,a1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

004640c4: sw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004640c8: sw a1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004640cc: sw a0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004640d0: sw a0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004640d4: sw a0,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004640d8: sw t0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

004640dc: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

004640e0: sw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640e4: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640e8: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640ec: sw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640f0: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640f4: sw v1,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004640f8: addiu t9,t9,0x26c0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x26c0, 4)

004640fc: bal 0x004626c0
	(register, 0x7c, 4) COPY (const, 0x464104, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4626c0, 4)

00464100: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00464104: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464108: bne v0,zero,0x00463ec0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x5c, 4)
	 ---  CBRANCH (ram, 0x463ec0, 4) , (unique, 0x1700, 1)

0046410c: _addu s7,s3,s7
	(register, 0x5c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x5c, 4)

00464110: lw a0,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464114: sra v1,s3,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x4c, 4) , (const, 0x1f, 4)

00464118: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046411c: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

00464120: sltu s3,s7,s3
	(unique, 0x5380, 1) INT_LESS (register, 0x5c, 4) , (register, 0x4c, 4)
	(register, 0x4c, 4) INT_ZEXT (unique, 0x5380, 1)

00464124: addu s3,s3,v1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0xc, 4)

00464128: li v1,-0x11
	(register, 0xc, 4) COPY (const, 0xffffffef, 4)

0046412c: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00464130: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00464134: sw s3,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00464138: sw s7,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046413c: b 0x00463f68
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

00464140: _or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00464144: xor s6,v0,a0
	(register, 0x58, 4) INT_XOR (register, 0x8, 4) , (register, 0x10, 4)

00464148: b 0x00463b58
	(unique, 0x5280, 1) INT_LESS (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x463b58, 4)

0046414c: _sltiu s6,s6,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x5280, 1)

00464150: lw v0,0x18(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464154: nop

00464158: beq v0,zero,0x00464244
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464244, 4) , (unique, 0x1200, 1)

0046415c: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00464160: lw s6,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464164: lw v0,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464168: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046416c: sltu s6,v0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x5380, 1)

00464170: beq s6,zero,0x00464180
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_AND (register, 0x10, 4) , (const, 0x1000, 4)
	 ---  CBRANCH (ram, 0x464180, 4) , (unique, 0x1200, 1)

00464174: _andi s1,a0,0x1000
	(register, 0x44, 4) INT_AND (register, 0x10, 4) , (const, 0x1000, 4)

00464178: bne s1,zero,0x00464430
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464430, 4) , (unique, 0x1700, 1)

0046417c: _nop

00464180: andi a0,a0,0x100
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x100, 4)

00464184: lw s2,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464188: lw s5,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046418c: beq a0,zero,0x0046431c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46431c, 4) , (unique, 0x1200, 1)

00464190: _nop

00464194: sltu s2,s2,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x54, 4)
	(register, 0x48, 4) INT_ZEXT (unique, 0x5380, 1)

00464198: bne s2,zero,0x00464274
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464274, 4) , (unique, 0x1700, 1)

0046419c: _nop

004641a0: lw s4,0x20(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641a4: lw s5,0x28(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641a8: or s2,s4,zero
	(register, 0x48, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

004641ac: lw s3,0x58(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641b0: lw t9,-0x7740(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641b4: nop

004641b8: bal 0x00464b74
	(register, 0x7c, 4) COPY (const, 0x4641c0, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x464b74, 4)

004641bc: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004641c0: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641c4: bne s6,zero,0x00464328
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464328, 4) , (unique, 0x1700, 1)

004641c8: _nop

004641cc: lw a3,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641d0: blez v0,0x00464510
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_SUB (register, 0x54, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x464510, 4) , (unique, 0x1500, 1)

004641d4: _subu s5,s5,s2
	(register, 0x54, 4) INT_SUB (register, 0x54, 4) , (register, 0x48, 4)

004641d8: sra s5,s5,0x2
	(register, 0x54, 4) INT_SRIGHT (register, 0x54, 4) , (const, 0x2, 4)

004641dc: mult s5,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x54, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

004641e0: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004641e4: nop

004641e8: subu s2,a3,v1
	(register, 0x48, 4) INT_SUB (register, 0x1c, 4) , (register, 0xc, 4)

004641ec: sra a0,s2,0x1f
	(register, 0x10, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)

004641f0: mflo v0
	(register, 0x8, 4) COPY (register, 0x3004, 4)

004641f4: subu v1,zero,v0
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004641f8: sltu a1,zero,v0
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

004641fc: srl v0,v0,0x1f
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1f, 4)

00464200: subu s2,v1,s2
	(register, 0x48, 4) INT_SUB (register, 0xc, 4) , (register, 0x48, 4)

00464204: subu v0,v0,a1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)

00464208: sltu v1,v1,s2
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x48, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046420c: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

00464210: b 0x00464248
	(register, 0x4c, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x464248, 4)

00464214: _subu s3,v0,v1
	(register, 0x4c, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00464218: bne s5,v1,0x00464004
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0xc, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x464004, 4) , (unique, 0x1700, 1)

0046421c: _sltu v0,v0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00464220: beq v0,zero,0x00464004
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464004, 4) , (unique, 0x1200, 1)

00464224: _nop

00464228: b 0x00463ff8
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x463ff8, 4)

0046422c: _or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00464230: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464238, 4)
	(register, 0x10, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00464234: _or a0,s7,zero
	(register, 0x10, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00464238: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046423c: b 0x00463f68
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

00464240: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

00464244: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00464248: lw v0,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046424c: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00464250: lw s1,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464254: beq v0,v1,0x004643b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x4643b0, 4) , (unique, 0x1200, 1)

00464258: _nop

0046425c: addu s1,s2,s1
	(register, 0x44, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)

00464260: sltu s2,s1,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x48, 4)
	(register, 0x48, 4) INT_ZEXT (unique, 0x5380, 1)

00464264: addu v0,s3,v0
	(register, 0x8, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)

00464268: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0046426c: bgez v0,0x00463f68
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x463f68, 4) , (unique, 0x1300, 1)

00464270: _nop

00464274: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464278: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0046427c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00464280: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

00464284: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00464288: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046428c: b 0x00463f68
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

00464290: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

00464294: lw a2,0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464298: lw v1,0x34(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046429c: lw v0,0x38(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642a0: subu a0,a0,a2
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4)

004642a4: lw t9,-0x7728(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642a8: lw a2,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642ac: sra a0,a0,0x2
	(register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x2, 4)

004642b0: sw v1,0x2c(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004642b4: sw v0,0x30(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004642b8: sw a0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004642bc: addiu a1,a1,0x2c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x2c, 4)

004642c0: bal 0x00464bb8
	(register, 0x7c, 4) COPY (const, 0x4642c8, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x464bb8, 4)

004642c4: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004642c8: lw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642cc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642d0: lw a2,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642d4: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

004642d8: subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

004642dc: subu a1,s1,v1
	(register, 0x14, 4) INT_SUB (register, 0x44, 4) , (register, 0xc, 4)

004642e0: lw a3,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642e4: sra v1,v1,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x1f, 4)

004642e8: sltu s1,s1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x14, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

004642ec: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

004642f0: subu v1,s2,v1
	(register, 0xc, 4) INT_SUB (register, 0x48, 4) , (register, 0xc, 4)

004642f4: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004642f8: subu s2,v1,s1
	(register, 0x48, 4) INT_SUB (register, 0xc, 4) , (register, 0x44, 4)

004642fc: sw a0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00464300: or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00464304: b 0x00463de8
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)
	 ---  BRANCH (ram, 0x463de8, 4)

00464308: _sw a3,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046430c: bne s1,v0,0x00463f14
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x463f14, 4) , (unique, 0x1700, 1)

00464310: _nop

00464314: b 0x00463f68
	 ---  BRANCH (ram, 0x463f68, 4)

00464318: _nop

0046431c: lw s4,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464320: b 0x004641ac
	 ---  BRANCH (ram, 0x4641ac, 4)

00464324: _nop

00464328: lw s4,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046432c: nop

00464330: lw s6,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464334: lw s5,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464338: blez v0,0x0046456c
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_SUB (register, 0x58, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46456c, 4) , (unique, 0x1500, 1)

0046433c: _subu s2,s6,s5
	(register, 0x48, 4) INT_SUB (register, 0x58, 4) , (register, 0x54, 4)

00464340: sra s2,s2,0x2
	(register, 0x48, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x2, 4)

00464344: mult s2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

00464348: mflo s2
	(register, 0x48, 4) COPY (register, 0x3004, 4)

0046434c: sra s3,s2,0x1f
	(register, 0x4c, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)

00464350: lw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464354: bne s1,zero,0x00464490
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464490, 4) , (unique, 0x1700, 1)

00464358: _nop

0046435c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464360: nop

00464364: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00464368: sra v1,v0,0x1f
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x1f, 4)

0046436c: addu s2,v0,s2
	(register, 0x48, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)

00464370: sltu v0,s2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00464374: addu v1,v1,s3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x4c, 4)

00464378: b 0x00464248
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x464248, 4)

0046437c: _addu s3,v0,v1
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00464380: beq v1,zero,0x004640ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4640ac, 4) , (unique, 0x1200, 1)

00464384: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00464388: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

0046438c: beq s3,v1,0x004644ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0xc, 4)
	(register, 0x4c, 4) INT_SUB (register, 0x78, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x4644ac, 4) , (unique, 0x1200, 1)

00464390: _subu s3,s8,s3
	(register, 0x4c, 4) INT_SUB (register, 0x78, 4) , (register, 0x4c, 4)

00464394: subu v0,s5,v0
	(register, 0x8, 4) INT_SUB (register, 0x54, 4) , (register, 0x8, 4)

00464398: sltu t0,s8,s3
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0x4c, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0046439c: subu s2,v0,t0
	(register, 0x48, 4) INT_SUB (register, 0x8, 4) , (register, 0x20, 4)

004643a0: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004643a4: or s1,s3,zero
	(register, 0x44, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004643a8: b 0x00463ec0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x463ec0, 4)

004643ac: _sw v0,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004643b0: bne s1,v0,0x00464260
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x464260, 4) , (unique, 0x1700, 1)

004643b4: _addu s1,s2,s1
	(register, 0x44, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)

004643b8: lw s1,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004643bc: lw v0,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004643c0: nop

004643c4: subu v0,s1,v0
	(register, 0x8, 4) INT_SUB (register, 0x44, 4) , (register, 0x8, 4)

004643c8: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004643cc: beq v0,zero,0x004645fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4645fc, 4) , (unique, 0x1200, 1)

004643d0: _nop

004643d4: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004643d8: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004643dc: lw t9,0x40(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004643e0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004643e4: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004643e8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4643f0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

004643ec: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004643f0: or s1,v1,zero
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004643f4: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

004643f8: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004643fc: bne v0,v1,0x0046425c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46425c, 4) , (unique, 0x1700, 1)

00464400: _nop

00464404: bne s1,v0,0x0046425c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46425c, 4) , (unique, 0x1700, 1)

00464408: _nop

0046440c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00464410: b 0x00463f68
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

00464414: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

00464418: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046441c: nop

00464420: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464428, 4)
	 ---  CALLIND (register, 0x80, 4)

00464424: _nop

00464428: b 0x00463ee8
	 ---  BRANCH (ram, 0x463ee8, 4)

0046442c: _nop

00464430: lw s2,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464434: lw v0,-0x7b54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464438: nop

0046443c: subu v0,s2,v0
	(register, 0x8, 4) INT_SUB (register, 0x48, 4) , (register, 0x8, 4)

00464440: sltiu v0,v0,0x498
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x498, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00464444: beq v0,zero,0x00464614
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464614, 4) , (unique, 0x1200, 1)

00464448: _nop

0046444c: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00464450: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00464454: lw t9,0x40(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464458: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046445c: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00464460: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464468, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00464464: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00464468: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046446c: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00464470: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464474: beq v0,v1,0x0046464c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46464c, 4) , (unique, 0x1200, 1)

00464478: _nop

0046447c: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464480: lw v1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464484: sw v0,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00464488: b 0x00464180
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x464180, 4)

0046448c: _sw a1,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00464490: lw v1,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464494: b 0x00464368
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x464368, 4)

00464498: _subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0046449c: bne a1,zero,0x00463fa4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x463fa4, 4) , (unique, 0x1700, 1)

004644a0: _slt a1,s2,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

004644a4: b 0x00463cb0
	 ---  BRANCH (ram, 0x463cb0, 4)

004644a8: _nop

004644ac: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004644b0: or s2,s5,zero
	(register, 0x48, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

004644b4: or s1,s8,zero
	(register, 0x44, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

004644b8: b 0x00463ec0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x463ec0, 4)

004644bc: _sw v0,0xe0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xe0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004644c0: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004644c4: sw a3,0xa4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

004644c8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4644d0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  CALLIND (register, 0x80, 4)

004644cc: _sw a2,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

004644d0: lw a3,0xa4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004644d4: lw a2,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004644d8: b 0x00464020
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x464020, 4)

004644dc: _sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004644e0: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004644e4: nop

004644e8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4644f0, 4)
	 ---  CALLIND (register, 0x80, 4)

004644ec: _nop

004644f0: b 0x00463be0
	 ---  BRANCH (ram, 0x463be0, 4)

004644f4: _nop

004644f8: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004644fc: nop

00464500: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464508, 4)
	 ---  CALLIND (register, 0x80, 4)

00464504: _nop

00464508: b 0x00464064
	 ---  BRANCH (ram, 0x464064, 4)

0046450c: _nop

00464510: lw v0,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464514: subu s2,s2,s4
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x50, 4)

00464518: lw v1,0x34(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046451c: lw v0,0x38(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464520: lw a2,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464524: lw t9,-0x7728(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464528: sra s2,s2,0x2
	(register, 0x48, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x2, 4)

0046452c: or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00464530: sw s2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00464534: sw v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00464538: addiu a1,sp,0x28
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0046453c: bal 0x00464bb8
	(register, 0x7c, 4) COPY (const, 0x464544, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x464bb8, 4)

00464540: _sw v0,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00464544: lw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464548: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046454c: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464550: subu v1,v1,a0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x10, 4)

00464554: subu s3,v1,v0
	(register, 0x4c, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

00464558: sltu a0,zero,s3
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x4c, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046455c: srl s3,s3,0x1f
	(register, 0x4c, 4) INT_RIGHT (register, 0x4c, 4) , (const, 0x1f, 4)

00464560: subu s3,s3,a0
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x10, 4)

00464564: b 0x00464248
	(register, 0x48, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x464248, 4)

00464568: _subu s2,v0,v1
	(register, 0x48, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0046456c: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464570: nop

00464574: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46457c, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00464578: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046457c: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464580: lw v1,0x34(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464584: or s7,v0,zero
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00464588: addiu a0,sp,0x9c
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x9c, 4)

0046458c: lw v0,0x38(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464590: lw t9,-0x7738(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff88c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464594: sw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00464598: addu s2,s7,s2
	(register, 0x48, 4) INT_ADD (register, 0x5c, 4) , (register, 0x48, 4)

0046459c: addiu a0,sp,0x98
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)

004645a0: sw a0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004645a4: sw s2,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004645a8: sw s7,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004645ac: or a3,s6,zero
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

004645b0: or a2,s5,zero
	(register, 0x18, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

004645b4: addiu a1,sp,0x28
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

004645b8: or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004645bc: sw s7,0x9c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x9c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004645c0: sw s5,0x98(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004645c4: sw v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004645c8: bal 0x004649e4
	(register, 0x7c, 4) COPY (const, 0x4645d0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x4649e4, 4)

004645cc: _sw v0,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004645d0: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004645d4: nop

004645d8: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004645dc: bne v0,zero,0x00464230
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x464230, 4) , (unique, 0x1700, 1)

004645e0: _or a0,s7,zero
	(register, 0x10, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

004645e4: lw s2,0x9c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x9c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004645e8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4645f0, 4)
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x5c, 4)
	 ---  CALLIND (register, 0x80, 4)

004645ec: _subu s2,s2,s7
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x5c, 4)

004645f0: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004645f4: b 0x00464350
	(register, 0x4c, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)
	 ---  BRANCH (ram, 0x464350, 4)

004645f8: _sra s3,s2,0x1f
	(register, 0x4c, 4) INT_SRIGHT (register, 0x48, 4) , (const, 0x1f, 4)

004645fc: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464600: nop

00464604: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46460c, 4)
	 ---  CALLIND (register, 0x80, 4)

00464608: _nop

0046460c: b 0x004643d8
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4643d8, 4)

00464610: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00464614: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464618: nop

0046461c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x464624, 4)
	 ---  CALLIND (register, 0x80, 4)

00464620: _nop

00464624: b 0x00464450
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  BRANCH (ram, 0x464450, 4)

00464628: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0046462c: lw t9,-0x7b50(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84b0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464630: nop

00464634: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46463c, 4)
	 ---  CALLIND (register, 0x80, 4)

00464638: _nop

0046463c: lw a2,0x50(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464640: lw a3,0x54(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00464644: b 0x00463d5c
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x463d5c, 4)

00464648: _sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046464c: bne a1,v0,0x0046447c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46447c, 4) , (unique, 0x1700, 1)

00464650: _nop

00464654: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00464658: b 0x00463f68
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x463f68, 4)

0046465c: _li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

