Label: 47
Function: attack_tcp_syn
Architecture: mips
Source File: Unknown
Entry Point: 004083e0

P-code:

004083e0: addiu sp,sp,-0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff88, 4)

004083e4: sw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004083e8: sw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004083ec: sw s0,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004083f0: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

004083f4: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004083f8: sw a1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004083fc: or v1,a2,zero
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00408400: sw a3,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

00408404: sb v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408408: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040840c: sb v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408410: lbu v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408414: li a1,0x4
	(register, 0x14, 4) COPY (const, 0x4, 4)

00408418: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040841c: jal 0x00400380
	(register, 0x7c, 4) COPY (const, 0x408424, 4)
	 ---  CALL (ram, 0x400380, 4)

00408420: _nop

00408424: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408428: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040842c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408430: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

00408434: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408438: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040843c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408444, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408440: _nop

00408444: sb v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408448: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040844c: ori a3,zero,0xffff
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408450: li a2,0x3
	(register, 0x18, 4) COPY (const, 0x3, 4)

00408454: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408458: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040845c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408464, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408460: _nop

00408464: sh v0,0x26(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x26, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

00408468: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040846c: li a3,0x40
	(register, 0x1c, 4) COPY (const, 0x40, 4)

00408470: li a2,0x4
	(register, 0x18, 4) COPY (const, 0x4, 4)

00408474: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408478: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040847c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408484, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408480: _nop

00408484: sb v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408488: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040848c: li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

00408490: li a2,0x5
	(register, 0x18, 4) COPY (const, 0x5, 4)

00408494: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408498: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040849c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4084a4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004084a0: _nop

004084a4: sb v0,0x29(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x29, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004084a8: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004084ac: ori a3,zero,0xffff
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

004084b0: li a2,0x6
	(register, 0x18, 4) COPY (const, 0x6, 4)

004084b4: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004084b8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004084bc: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4084c4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004084c0: _nop

004084c4: sh v0,0x2a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

004084c8: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004084cc: ori a3,zero,0xffff
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

004084d0: li a2,0x7
	(register, 0x18, 4) COPY (const, 0x7, 4)

004084d4: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004084d8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004084dc: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4084e4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004084e0: _nop

004084e4: sh v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

004084e8: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004084ec: ori a3,zero,0xffff
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

004084f0: li a2,0x11
	(register, 0x18, 4) COPY (const, 0x11, 4)

004084f4: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004084f8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004084fc: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408504, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408500: _nop

00408504: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408508: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040850c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408510: li a2,0x12
	(register, 0x18, 4) COPY (const, 0x12, 4)

00408514: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408518: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040851c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408524, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408520: _nop

00408524: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408528: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040852c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408530: li a2,0xb
	(register, 0x18, 4) COPY (const, 0xb, 4)

00408534: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408538: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040853c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408544, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408540: _nop

00408544: sb v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408548: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040854c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408550: li a2,0xc
	(register, 0x18, 4) COPY (const, 0xc, 4)

00408554: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408558: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040855c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408564, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408560: _nop

00408564: sb v0,0x39(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x39, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408568: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040856c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408570: li a2,0xd
	(register, 0x18, 4) COPY (const, 0xd, 4)

00408574: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408578: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040857c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x408584, 4)
	 ---  CALL (ram, 0x4080fc, 4)

00408580: _nop

00408584: sb v0,0x3a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00408588: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040858c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408590: li a2,0xe
	(register, 0x18, 4) COPY (const, 0xe, 4)

00408594: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408598: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040859c: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4085a4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004085a0: _nop

004085a4: sb v0,0x3b(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004085a8: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004085ac: li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

004085b0: li a2,0xf
	(register, 0x18, 4) COPY (const, 0xf, 4)

004085b4: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004085b8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004085bc: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4085c4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004085c0: _nop

004085c4: sb v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004085c8: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004085cc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004085d0: li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

004085d4: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004085d8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004085dc: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x4085e4, 4)
	 ---  CALL (ram, 0x4080fc, 4)

004085e0: _nop

004085e4: sb v0,0x3d(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004085e8: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

004085ec: lw v1,0x39bc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39bc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004085f0: lbu v0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004085f4: or a3,v1,zero
	(register, 0x1c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004085f8: li a2,0x19
	(register, 0x18, 4) COPY (const, 0x19, 4)

004085fc: lw a1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408600: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408604: jal 0x00408190
	(register, 0x7c, 4) COPY (const, 0x40860c, 4)
	 ---  CALL (ram, 0x408190, 4)

00408608: _nop

0040860c: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408610: li a2,0x6
	(register, 0x18, 4) COPY (const, 0x6, 4)

00408614: li a1,0x3
	(register, 0x14, 4) COPY (const, 0x3, 4)

00408618: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040861c: jal 0x00400350
	(register, 0x7c, 4) COPY (const, 0x408624, 4)
	 ---  CALL (ram, 0x400350, 4)

00408620: _nop

00408624: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408628: lw v1,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040862c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00408630: beq v1,v0,0x00408f20
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408f20, 4) , (unique, 0x1200, 1)

00408634: _nop

00408638: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040863c: sw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408640: addiu v1,s8,0x60
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)

00408644: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00408648: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040864c: or a3,v1,zero
	(register, 0x1c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408650: li a2,0x3
	(register, 0x18, 4) COPY (const, 0x3, 4)

00408654: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00408658: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040865c: jal 0x004221a8
	(register, 0x7c, 4) COPY (const, 0x408664, 4)
	 ---  CALL (ram, 0x4221a8, 4)

00408660: _nop

00408664: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408668: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040866c: bne v1,v0,0x00408688
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408688, 4) , (unique, 0x1700, 1)

00408670: _nop

00408674: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408678: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x408680, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040867c: _nop

00408680: b 0x00408f24
	 ---  BRANCH (ram, 0x408f24, 4)

00408684: _nop

00408688: sw zero,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040868c: b 0x00408b8c
	 ---  BRANCH (ram, 0x408b8c, 4)

00408690: _nop

00408694: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408698: nop

0040869c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004086a0: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086a4: nop

004086a8: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004086ac: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

004086b0: li a0,0x80
	(register, 0x10, 4) COPY (const, 0x80, 4)

004086b4: jal 0x00400380
	(register, 0x7c, 4) COPY (const, 0x4086bc, 4)
	 ---  CALL (ram, 0x400380, 4)

004086b8: _nop

004086bc: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004086c0: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086c4: nop

004086c8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004086cc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086d0: nop

004086d4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004086d8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086dc: nop

004086e0: sw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004086e4: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086e8: nop

004086ec: addiu v0,v0,0x14
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

004086f0: sw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004086f4: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004086f8: nop

004086fc: addiu v0,v0,0x14
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00408700: sw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408704: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408708: nop

0040870c: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00408710: nop

00408714: andi v1,v1,0xf
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xf, 4)

00408718: ori v1,v1,0x40
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x40, 4)

0040871c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408720: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408724: nop

00408728: lbu a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0040872c: li v1,-0x10
	(register, 0xc, 4) COPY (const, 0xfffffff0, 4)

00408730: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00408734: ori v1,v1,0x5
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x5, 4)

00408738: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0040873c: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408740: lbu v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00408744: nop

00408748: sb v1,0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0040874c: li a0,0x3c
	(register, 0x10, 4) COPY (const, 0x3c, 4)

00408750: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408758, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408754: _nop

00408758: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040875c: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408760: nop

00408764: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408768: lhu v0,0x26(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x26, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040876c: nop

00408770: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408774: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40877c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408778: _nop

0040877c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408780: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408784: nop

00408788: sh v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040878c: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408790: lbu v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00408794: nop

00408798: sb v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0040879c: lb v0,0x29(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x29, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

004087a0: nop

004087a4: beq v0,zero,0x004087c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4087c8, 4) , (unique, 0x1200, 1)

004087a8: _nop

004087ac: li a0,0x4000
	(register, 0x10, 4) COPY (const, 0x4000, 4)

004087b0: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x4087b8, 4)
	 ---  CALL (ram, 0x4222a8, 4)

004087b4: _nop

004087b8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004087bc: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004087c0: nop

004087c4: sh v1,0x6(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

004087c8: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004087cc: li v1,0x6
	(register, 0xc, 4) COPY (const, 0x6, 4)

004087d0: sb v1,0x9(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

004087d4: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004087d8: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004087dc: nop

004087e0: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004087e4: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004087e8: nop

004087ec: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004087f0: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004087f4: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

004087f8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004087fc: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408800: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408804: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408808: nop

0040880c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408810: lw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408814: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408818: nop

0040881c: sw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408820: lhu v0,0x2a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

00408824: nop

00408828: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040882c: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408834, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408830: _nop

00408834: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408838: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040883c: nop

00408840: sh v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408844: lhu v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

00408848: nop

0040884c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408850: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408858, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408854: _nop

00408858: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040885c: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408860: nop

00408864: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408868: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040886c: nop

00408870: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408874: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408878: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408880, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040887c: _nop

00408880: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408884: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408888: nop

0040888c: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408890: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408894: nop

00408898: lhu v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

0040889c: nop

004088a0: andi v1,v1,0xfff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xfff, 4)

004088a4: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004088a8: li v1,-0x6000
	(register, 0xc, 4) COPY (const, 0xffffa000, 4)

004088ac: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

004088b0: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

004088b4: lbu v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004088b8: nop

004088bc: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

004088c0: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

004088c4: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004088c8: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

004088cc: sll a1,v1,0x5
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x5, 4)

004088d0: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

004088d4: li v1,-0x21
	(register, 0xc, 4) COPY (const, 0xffffffdf, 4)

004088d8: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

004088dc: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004088e0: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004088e4: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

004088e8: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

004088ec: lbu v0,0x39(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x39, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004088f0: nop

004088f4: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

004088f8: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

004088fc: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408900: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00408904: sll a1,v1,0x4
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x4, 4)

00408908: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

0040890c: li v1,-0x11
	(register, 0xc, 4) COPY (const, 0xffffffef, 4)

00408910: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00408914: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408918: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0040891c: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

00408920: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408924: lbu v0,0x3a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408928: nop

0040892c: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00408930: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

00408934: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408938: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0040893c: sll a1,v1,0x3
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

00408940: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

00408944: li v1,-0x9
	(register, 0xc, 4) COPY (const, 0xfffffff7, 4)

00408948: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

0040894c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408950: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00408954: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

00408958: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040895c: lbu v0,0x3b(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408960: nop

00408964: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00408968: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0040896c: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408970: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00408974: sll a1,v1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00408978: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

0040897c: li v1,-0x5
	(register, 0xc, 4) COPY (const, 0xfffffffb, 4)

00408980: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00408984: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408988: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0040898c: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

00408990: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408994: lbu v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408998: nop

0040899c: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

004089a0: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

004089a4: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004089a8: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

004089ac: sll a1,v1,0x1
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

004089b0: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

004089b4: li v1,-0x3
	(register, 0xc, 4) COPY (const, 0xfffffffd, 4)

004089b8: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

004089bc: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004089c0: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004089c4: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

004089c8: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

004089cc: lbu v0,0x3d(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004089d0: nop

004089d4: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

004089d8: andi v1,v0,0xff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

004089dc: lw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004089e0: andi a1,v1,0x1
	(register, 0x14, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

004089e4: lhu a0,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

004089e8: li v1,-0x2
	(register, 0xc, 4) COPY (const, 0xfffffffe, 4)

004089ec: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

004089f0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004089f4: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004089f8: or v1,a0,v1
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)

004089fc: sh v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408a00: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a04: nop

00408a08: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408a0c: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408a10: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00408a14: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408a18: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a1c: nop

00408a20: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408a24: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408a28: li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

00408a2c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408a30: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408a38, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408a34: _nop

00408a38: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408a3c: andi v0,v0,0xf
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4)

00408a40: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408a44: addiu v0,v0,0x578
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x578, 4)

00408a48: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408a4c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408a50: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408a58, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408a54: _nop

00408a58: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408a5c: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a60: nop

00408a64: sh v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408a68: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a6c: nop

00408a70: addiu v0,v0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)

00408a74: sw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408a78: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a7c: nop

00408a80: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408a84: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408a88: li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

00408a8c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408a90: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408a94: nop

00408a98: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408a9c: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408aa0: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00408aa4: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408aa8: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408aac: nop

00408ab0: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408ab4: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408ab8: li v1,0x8
	(register, 0xc, 4) COPY (const, 0x8, 4)

00408abc: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408ac0: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ac4: nop

00408ac8: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408acc: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408ad0: li v1,0xa
	(register, 0xc, 4) COPY (const, 0xa, 4)

00408ad4: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408ad8: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408ae0, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408adc: _nop

00408ae0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ae4: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ae8: nop

00408aec: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408af0: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408af4: nop

00408af8: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

00408afc: sw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408b00: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b04: nop

00408b08: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00408b0c: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b10: nop

00408b14: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

00408b18: sw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408b1c: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b20: nop

00408b24: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408b28: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408b2c: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00408b30: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408b34: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b38: nop

00408b3c: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408b40: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408b44: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00408b48: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408b4c: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b50: nop

00408b54: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408b58: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408b5c: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00408b60: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408b64: lw v0,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b68: nop

00408b6c: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408b70: sw v1,0x5c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408b74: li v1,0x6
	(register, 0xc, 4) COPY (const, 0x6, 4)

00408b78: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00408b7c: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b80: nop

00408b84: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408b88: sw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408b8c: lbu v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00408b90: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408b94: nop

00408b98: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00408b9c: bne v0,zero,0x00408694
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x408694, 4) , (unique, 0x1700, 1)

00408ba0: _nop

00408ba4: sw zero,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00408ba8: b 0x00408f00
	 ---  BRANCH (ram, 0x408f00, 4)

00408bac: _nop

00408bb0: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408bb4: nop

00408bb8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00408bbc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408bc0: nop

00408bc4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00408bc8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408bcc: nop

00408bd0: sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408bd4: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408bd8: nop

00408bdc: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408be0: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408be4: nop

00408be8: addiu v0,v0,0x14
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00408bec: sw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408bf0: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408bf4: nop

00408bf8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408bfc: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408c00: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00408c04: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408c08: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408c0c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c10: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408c14: nop

00408c18: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408c1c: lbu v0,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408c20: nop

00408c24: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00408c28: beq v0,zero,0x00408cd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x408cd8, 4) , (unique, 0x1200, 1)

00408c2c: _nop

00408c30: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408c34: nop

00408c38: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c3c: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408c40: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00408c44: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408c48: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408c4c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c50: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408c54: nop

00408c58: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408c5c: lw v0,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408c60: nop

00408c64: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c68: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x408c70, 4)
	 ---  CALL (ram, 0x422288, 4)

00408c6c: _nop

00408c70: or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c74: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408c7c, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408c78: _nop

00408c7c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c80: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408c84: nop

00408c88: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408c8c: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00408c90: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00408c94: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00408c98: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408c9c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ca0: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ca4: nop

00408ca8: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00408cac: lbu v0,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00408cb0: nop

00408cb4: srlv v0,v1,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

00408cb8: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

00408cbc: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408cc0: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x408cc8, 4)
	 ---  CALL (ram, 0x422288, 4)

00408cc4: _nop

00408cc8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ccc: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408cd0: nop

00408cd4: sw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408cd8: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408cdc: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00408ce0: bne v1,v0,0x00408d00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408d00, 4) , (unique, 0x1700, 1)

00408ce4: _nop

00408ce8: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408cf0, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408cec: _nop

00408cf0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408cf4: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408cf8: nop

00408cfc: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408d00: lhu v1,0x26(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x26, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00408d04: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408d08: bne v1,v0,0x00408d28
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408d28, 4) , (unique, 0x1700, 1)

00408d0c: _nop

00408d10: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408d18, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408d14: _nop

00408d18: andi v1,v0,0xffff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408d1c: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408d20: nop

00408d24: sh v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408d28: lhu v1,0x2a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00408d2c: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408d30: bne v1,v0,0x00408d50
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408d50, 4) , (unique, 0x1700, 1)

00408d34: _nop

00408d38: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408d40, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408d3c: _nop

00408d40: andi v1,v0,0xffff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408d44: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408d48: nop

00408d4c: sh v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408d50: lhu v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00408d54: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408d58: bne v1,v0,0x00408d78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408d78, 4) , (unique, 0x1700, 1)

00408d5c: _nop

00408d60: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408d68, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408d64: _nop

00408d68: andi v1,v0,0xffff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408d6c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408d70: nop

00408d74: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408d78: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408d7c: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408d80: bne v1,v0,0x00408da0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408da0, 4) , (unique, 0x1700, 1)

00408d84: _nop

00408d88: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408d90, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408d8c: _nop

00408d90: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408d94: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408d98: nop

00408d9c: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408da0: lw v1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408da4: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00408da8: bne v1,v0,0x00408dc8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x408dc8, 4) , (unique, 0x1700, 1)

00408dac: _nop

00408db0: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408db8, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408db4: _nop

00408db8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408dbc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408dc0: nop

00408dc4: sw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408dc8: lb v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00408dcc: nop

00408dd0: beq v0,zero,0x00408df0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x408df0, 4) , (unique, 0x1200, 1)

00408dd4: _nop

00408dd8: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x408de0, 4)
	 ---  CALL (ram, 0x40f524, 4)

00408ddc: _nop

00408de0: andi v1,v0,0xffff
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00408de4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408de8: nop

00408dec: sh v1,0x12(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x12, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408df0: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408df4: nop

00408df8: sh zero,0xa(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 2)

00408dfc: li a1,0x14
	(register, 0x14, 4) COPY (const, 0x14, 4)

00408e00: lw a0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e04: jal 0x0040c7a0
	(register, 0x7c, 4) COPY (const, 0x408e0c, 4)
	 ---  CALL (ram, 0x40c7a0, 4)

00408e08: _nop

00408e0c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408e10: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e14: nop

00408e18: sh v1,0xa(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408e1c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e20: nop

00408e24: sh zero,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 2)

00408e28: li a0,0x28
	(register, 0x10, 4) COPY (const, 0x28, 4)

00408e2c: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x408e34, 4)
	 ---  CALL (ram, 0x4222a8, 4)

00408e30: _nop

00408e34: li a3,0x28
	(register, 0x1c, 4) COPY (const, 0x28, 4)

00408e38: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408e3c: lw a1,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e40: lw a0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e44: jal 0x0040c868
	(register, 0x7c, 4) COPY (const, 0x408e4c, 4)
	 ---  CALL (ram, 0x40c868, 4)

00408e48: _nop

00408e4c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408e50: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e54: nop

00408e58: sh v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408e5c: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e60: nop

00408e64: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408e68: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408e6c: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00408e70: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408e74: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408e78: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408e7c: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e80: nop

00408e84: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408e88: lw v1,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408e8c: nop

00408e90: lhu v1,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00408e94: nop

00408e98: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

00408e9c: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ea0: nop

00408ea4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ea8: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00408eac: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00408eb0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408eb4: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00408eb8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ebc: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ec0: nop

00408ec4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00408ec8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00408ecc: li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

00408ed0: sw v0,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408ed4: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00408ed8: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00408edc: li a2,0x3c
	(register, 0x18, 4) COPY (const, 0x3c, 4)

00408ee0: lw a1,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ee4: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ee8: jal 0x00422028
	(register, 0x7c, 4) COPY (const, 0x408ef0, 4)
	 ---  CALL (ram, 0x422028, 4)

00408eec: _nop

00408ef0: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408ef4: nop

00408ef8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00408efc: sw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00408f00: lbu v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00408f04: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408f08: nop

00408f0c: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00408f10: bne v0,zero,0x00408bb0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x408bb0, 4) , (unique, 0x1700, 1)

00408f14: _nop

00408f18: b 0x00408ba4
	 ---  BRANCH (ram, 0x408ba4, 4)

00408f1c: _nop

00408f20: nop

00408f24: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00408f28: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408f2c: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408f30: lw s0,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00408f34: addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

00408f38: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00408f3c: _nop

