Label: 191
Function: __libc_realloc
Architecture: mips
Source File: Unknown
Entry Point: 0041a6d8

P-code:

0041a6d8: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041a6dc: addiu gp,gp,0x788
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x788, 4)

0041a6e0: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041a6e4: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a6e8: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

0041a6ec: lbu v0,0x6140(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0041a6f0: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041a6f4: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041a6f8: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041a6fc: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0041a700: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0041a704: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0041a708: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0041a70c: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0041a710: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0041a714: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0041a718: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0041a71c: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041a720: beq v0,zero,0x0041a940
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a940, 4) , (unique, 0x1200, 1)

0041a724: _or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041a728: bne s1,zero,0x0041a770
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a770, 4) , (unique, 0x1700, 1)

0041a72c: _nop

0041a730: bne s0,zero,0x0041a960
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a960, 4) , (unique, 0x1700, 1)

0041a734: _nop

0041a738: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a73c: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a740: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a744: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a748: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a74c: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a750: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a754: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a758: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a75c: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041a760: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a764: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a768: b 0x004198a0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  BRANCH (ram, 0x4198a0, 4)

0041a76c: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0041a770: beq s0,zero,0x0041a738
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x48, 4) COPY (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x41a738, 4) , (unique, 0x1200, 1)

0041a774: _li s2,-0x8
	(register, 0x48, 4) COPY (const, 0xfffffff8, 4)

0041a778: lw v0,-0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a77c: nop

0041a780: and s2,v0,s2
	(register, 0x48, 4) INT_AND (register, 0x8, 4) , (register, 0x48, 4)

0041a784: andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

0041a788: addiu s4,s0,-0x8
	(register, 0x50, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffff8, 4)

0041a78c: bne v1,zero,0x0041a9c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x41a9c8, 4) , (unique, 0x1700, 1)

0041a790: _addiu s5,s2,-0x8
	(register, 0x54, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffff8, 4)

0041a794: addu v1,s0,s5
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (register, 0x54, 4)

0041a798: lw v1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a79c: nop

0041a7a0: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0041a7a4: bne v1,zero,0x0041a9a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x41a9a8, 4) , (unique, 0x1700, 1)

0041a7a8: _addiu v1,s2,-0x4
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)

0041a7ac: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041a7b0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041a7b4: lui v1,0x0
	(register, 0xc, 4) INT_LEFT (const, 0x0, 4) , (const, 0x10, 4)

0041a7b8: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041a7bc: lw v1,-0x6ff4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff900c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a7c0: nop

0041a7c4: beq v1,zero,0x0041ad30
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x0, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41ad30, 4) , (unique, 0x1200, 1)

0041a7c8: _lui v1,0x0
	(register, 0xc, 4) INT_LEFT (const, 0x0, 4) , (const, 0x10, 4)

0041a7cc: andi v1,v0,0x4
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)

0041a7d0: beq v1,zero,0x0041aa0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41aa0c, 4) , (unique, 0x1200, 1)

0041a7d4: _nop

0041a7d8: lw v1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a7dc: nop

0041a7e0: lw v1,0x1f30(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1f30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a7e4: nop

0041a7e8: beq v1,zero,0x0041ac90
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ac90, 4) , (unique, 0x1200, 1)

0041a7ec: _nop

0041a7f0: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0041a7f4: subu v1,zero,v1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0041a7f8: and v1,s4,v1
	(register, 0xc, 4) INT_AND (register, 0x50, 4) , (register, 0xc, 4)

0041a7fc: lw s3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a800: subu v1,zero,s2
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x48, 4)

0041a804: sltu v1,v1,s4
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x50, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0041a808: bne v1,zero,0x0041ab90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x50, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x41ab90, 4) , (unique, 0x1700, 1)

0041a80c: _andi v1,s4,0x7
	(register, 0xc, 4) INT_AND (register, 0x50, 4) , (const, 0x7, 4)

0041a810: bne v1,zero,0x0041ab90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ab90, 4) , (unique, 0x1700, 1)

0041a814: _nop

0041a818: bltz s1,0x0041ac98
	(unique, 0x1600, 1) INT_SLESS (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (const, 0xb, 4)
	 ---  CBRANCH (ram, 0x41ac98, 4) , (unique, 0x1600, 1)

0041a81c: _addiu v1,s1,0xb
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (const, 0xb, 4)

0041a820: sltiu a0,v1,0x10
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0041a824: bne a0,zero,0x0041aa04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x41aa04, 4) , (unique, 0x1700, 1)

0041a828: _li a0,-0x8
	(register, 0x10, 4) COPY (const, 0xfffffff8, 4)

0041a82c: and s7,v1,a0
	(register, 0x5c, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

0041a830: andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

0041a834: bne v1,zero,0x0041aa18
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x41aa18, 4) , (unique, 0x1700, 1)

0041a838: _li a0,-0x8
	(register, 0x10, 4) COPY (const, 0xfffffff8, 4)

0041a83c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041a840: lw v0,-0x74e0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a844: nop

0041a848: beq v0,zero,0x0041aba8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41aba8, 4) , (unique, 0x1200, 1)

0041a84c: _or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a850: ll v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a854: bne v1,zero,0x0041a870
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a870, 4) , (unique, 0x1700, 1)

0041a858: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

0041a85c: li at,0x1
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041a860: sc at,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041a864: beq at,zero,0x0041a850
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x41a850, 4) , (unique, 0x1200, 1)

0041a868: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0041a86c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041a870: beq v0,zero,0x0041ada8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ada8, 4) , (unique, 0x1200, 1)

0041a874: _nop

0041a878: lw t9,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a87c: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a880: or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0041a884: or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041a888: addiu t9,t9,-0x6fb8
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9048, 4)

0041a88c: bal 0x00419048
	(register, 0x7c, 4) COPY (const, 0x41a894, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x419048, 4)

0041a890: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041a894: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a898: or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041a89c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041a8a0: ll v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a8a4: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

0041a8a8: sc at,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041a8ac: beq at,zero,0x0041a8a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a8a0, 4) , (unique, 0x1200, 1)

0041a8b0: _nop

0041a8b4: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0041a8b8: beq v0,zero,0x0041ad8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ad8c, 4) , (unique, 0x1200, 1)

0041a8bc: _nop

0041a8c0: beq s2,zero,0x0041acbc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41acbc, 4) , (unique, 0x1200, 1)

0041a8c4: _nop

0041a8c8: lw v0,-0x4(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a8cc: nop

0041a8d0: andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

0041a8d4: bne v1,zero,0x0041a974
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1700, 1)

0041a8d8: _andi v0,v0,0x4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)

0041a8dc: beq v0,zero,0x0041acb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41acb0, 4) , (unique, 0x1200, 1)

0041a8e0: _nop

0041a8e4: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a8e8: nop

0041a8ec: lw v0,0x1f30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a8f0: nop

0041a8f4: beq v0,zero,0x0041adc4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41adc4, 4) , (unique, 0x1200, 1)

0041a8f8: _nop

0041a8fc: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0041a900: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041a904: addiu v1,s2,-0x8
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffff8, 4)

0041a908: and v0,v1,v0
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

0041a90c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a910: nop

0041a914: beq s3,v0,0x0041a974
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0xdc0, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1200, 1)

0041a918: _li a2,0xdc0
	(register, 0x18, 4) COPY (const, 0xdc0, 4)

0041a91c: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a920: nop

0041a924: addiu a3,a3,0x4bd8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4bd8, 4)

0041a928: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a92c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a930: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a934: addiu a1,a1,0x397c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x397c, 4)

0041a938: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x41a940, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x49ac, 4)
	 ---  CALL (ram, 0x425590, 4)

0041a93c: _addiu a0,a0,0x49ac
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x49ac, 4)

0041a940: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a944: nop

0041a948: addiu t9,t9,0x51d4
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x51d4, 4)

0041a94c: bal 0x004151d4
	(register, 0x7c, 4) COPY (const, 0x41a954, 4)
	 ---  CALL (ram, 0x4151d4, 4)

0041a950: _nop

0041a954: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a958: b 0x0041a728
	 ---  BRANCH (ram, 0x41a728, 4)

0041a95c: _nop

0041a960: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a964: nop

0041a968: bal 0x0041a318
	(register, 0x7c, 4) COPY (const, 0x41a970, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41a318, 4)

0041a96c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a970: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041a974: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a978: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a97c: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a980: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a984: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a988: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a98c: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a990: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a994: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a998: or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041a99c: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a9a0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

0041a9a4: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0041a9a8: sltu a0,v1,s1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x44, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0041a9ac: bne a0,zero,0x0041a7ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x41a7ac, 4) , (unique, 0x1700, 1)

0041a9b0: _subu v1,v1,s1
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x44, 4)

0041a9b4: sltiu v1,v1,0x8
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041a9b8: beq v1,zero,0x0041a7ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a7ac, 4) , (unique, 0x1200, 1)

0041a9bc: _nop

0041a9c0: b 0x0041a974
	(register, 0x48, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a974, 4)

0041a9c4: _or s2,s0,zero
	(register, 0x48, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041a9c8: sltu v1,s5,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0041a9cc: bne v1,zero,0x0041a9fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SUB (register, 0x54, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x41a9fc, 4) , (unique, 0x1700, 1)

0041a9d0: _subu v1,s5,s1
	(register, 0xc, 4) INT_SUB (register, 0x54, 4) , (register, 0x44, 4)

0041a9d4: sltiu a0,v1,0x8
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0041a9d8: bne a0,zero,0x0041a9c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a9c0, 4) , (unique, 0x1700, 1)

0041a9dc: _nop

0041a9e0: lw a0,-0x7e58(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81a8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a9e4: nop

0041a9e8: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041a9ec: nop

0041a9f0: sltu v1,a0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0041a9f4: beq v1,zero,0x0041a9c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a9c0, 4) , (unique, 0x1200, 1)

0041a9f8: _nop

0041a9fc: b 0x0041a800
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a800, 4)

0041aa00: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041aa04: b 0x0041a830
	(register, 0x5c, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41a830, 4)

0041aa08: _li s7,0x10
	(register, 0x5c, 4) COPY (const, 0x10, 4)

0041aa0c: lw s3,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa10: b 0x0041a800
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1f70, 4)
	 ---  BRANCH (ram, 0x41a800, 4)

0041aa14: _addiu s3,s3,0x1f70
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1f70, 4)

0041aa18: lw v1,-0x7e58(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81a8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa1c: lw s8,-0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa20: lw a1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa24: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

0041aa28: addiu t0,a1,-0x1
	(register, 0x20, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)

0041aa2c: and a3,s0,t0
	(register, 0x1c, 4) INT_AND (register, 0x40, 4) , (register, 0x20, 4)

0041aa30: subu a0,s4,s8
	(register, 0x10, 4) INT_SUB (register, 0x50, 4) , (register, 0x78, 4)

0041aa34: addu s3,v0,s8
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (register, 0x78, 4)

0041aa38: or v0,a0,s3
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x4c, 4)

0041aa3c: addiu a2,a3,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0041aa40: and v0,v0,t0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x20, 4)

0041aa44: and a2,a2,a3
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x1c, 4)

0041aa48: or v0,v0,a2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x18, 4)

0041aa4c: bne v0,zero,0x0041ad68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x14, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x41ad68, 4) , (unique, 0x1700, 1)

0041aa50: _addiu s6,a1,0x3
	(register, 0x58, 4) INT_ADD (register, 0x14, 4) , (const, 0x3, 4)

0041aa54: addu s6,s6,s8
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x78, 4)

0041aa58: addu s6,s6,s7
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x5c, 4)

0041aa5c: subu a1,zero,a1
	(register, 0x14, 4) INT_SUB (const, 0x0, 4) , (register, 0x14, 4)

0041aa60: and s6,s6,a1
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (register, 0x14, 4)

0041aa64: beq s3,s6,0x0041a9c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x58, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41a9c0, 4) , (unique, 0x1200, 1)

0041aa68: _sw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041aa6c: lw t9,-0x7e04(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81fc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa70: li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

0041aa74: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0041aa78: bal 0x00421080
	(register, 0x7c, 4) COPY (const, 0x41aa80, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x421080, 4)

0041aa7c: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041aa80: or a3,v0,zero
	(register, 0x1c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041aa84: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0041aa88: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa8c: beq a3,v0,0x0041ac2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41ac2c, 4) , (unique, 0x1200, 1)

0041aa90: _nop

0041aa94: lw s1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aa98: nop

0041aa9c: addiu s1,s1,0x1f18
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1f18, 4)

0041aaa0: lw v0,0x14(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aaa4: nop

0041aaa8: beq v0,zero,0x0041aafc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x41aafc, 4) , (unique, 0x1200, 1)

0041aaac: _sltu v0,s6,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0041aab0: bne v0,zero,0x0041ab00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x41ab00, 4) , (unique, 0x1700, 1)

0041aab4: _addu v0,a3,s8
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (register, 0x78, 4)

0041aab8: lw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aabc: nop

0041aac0: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aac4: nop

0041aac8: addiu v0,v1,-0x1
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0041aacc: and v0,v0,a3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x1c, 4)

0041aad0: bne v0,zero,0x0041add4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x41add4, 4) , (unique, 0x1700, 1)

0041aad4: _subu v1,zero,v1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0041aad8: or a1,s6,zero
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0041aadc: or a0,a3,zero
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0041aae0: lw t9,-0x7e24(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aae4: sw a3,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0041aae8: bal 0x00420b00
	(register, 0x7c, 4) COPY (const, 0x41aaf0, 4)
	(register, 0x18, 4) COPY (const, 0xe, 4)
	 ---  CALL (ram, 0x420b00, 4)

0041aaec: _li a2,0xe
	(register, 0x18, 4) COPY (const, 0xe, 4)

0041aaf0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aaf4: lw a3,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041aaf8: nop

0041aafc: addu v0,a3,s8
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (register, 0x78, 4)

0041ab00: andi v1,v0,0x7
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0041ab04: bne v1,zero,0x0041ae04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x41ae04, 4) , (unique, 0x1700, 1)

0041ab08: _addiu s0,v0,0x8
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)

0041ab0c: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab10: nop

0041ab14: bne s8,v1,0x0041ade0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_SUB (register, 0x58, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x41ade0, 4) , (unique, 0x1700, 1)

0041ab18: _subu v1,s6,s8
	(register, 0xc, 4) INT_SUB (register, 0x58, 4) , (register, 0x78, 4)

0041ab1c: lw a0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab20: ori v1,v1,0x2
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0x2, 4)

0041ab24: subu s6,s6,s3
	(register, 0x58, 4) INT_SUB (register, 0x58, 4) , (register, 0x4c, 4)

0041ab28: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041ab2c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041ab30: ll a1,0x1f48(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1f48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab34: addu at,a1,s6
	(register, 0x4, 4) INT_ADD (register, 0x14, 4) , (register, 0x58, 4)

0041ab38: sc at,0x1f48(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1f48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041ab3c: beq at,zero,0x0041ab30
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x41ab30, 4) , (unique, 0x1200, 1)

0041ab40: _addu a1,a1,s6
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x58, 4)

0041ab44: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041ab48: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab4c: lw v1,0x34(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab50: nop

0041ab54: sltu a0,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0041ab58: beq a0,zero,0x0041a9c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a9c0, 4) , (unique, 0x1200, 1)

0041ab5c: _nop

0041ab60: ll a2,0x1f4c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab64: bne a2,v1,0x0041ab80
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x10, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ab80, 4) , (unique, 0x1700, 1)

0041ab68: _li a0,0x0
	(register, 0x10, 4) COPY (const, 0x0, 4)

0041ab6c: or at,a1,zero
	(register, 0x4, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041ab70: sc at,0x1f4c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041ab74: beq at,zero,0x0041ab60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x41ab60, 4) , (unique, 0x1200, 1)

0041ab78: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0041ab7c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041ab80: beq a0,zero,0x0041ab4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ab4c, 4) , (unique, 0x1200, 1)

0041ab84: _nop

0041ab88: b 0x0041a974
	(register, 0x48, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41a974, 4)

0041ab8c: _or s2,s0,zero
	(register, 0x48, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041ab90: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab94: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ab98: nop

0041ab9c: addiu t9,t9,0x4344
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4344, 4)

0041aba0: bal 0x00414344
	(register, 0x7c, 4) COPY (const, 0x41aba8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x493c, 4)
	 ---  CALL (ram, 0x414344, 4)

0041aba4: _addiu a0,a0,0x493c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x493c, 4)

0041aba8: lw t9,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041abac: or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0041abb0: or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041abb4: addiu t9,t9,-0x6fb8
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9048, 4)

0041abb8: bal 0x00419048
	(register, 0x7c, 4) COPY (const, 0x41abc0, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x419048, 4)

0041abbc: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041abc0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041abc4: beq v0,zero,0x0041a970
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a970, 4) , (unique, 0x1200, 1)

0041abc8: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041abcc: lw v0,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041abd0: nop

0041abd4: andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

0041abd8: bne v1,zero,0x0041a974
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1700, 1)

0041abdc: _andi v0,v0,0x4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)

0041abe0: beq v0,zero,0x0041ad80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41ad80, 4) , (unique, 0x1200, 1)

0041abe4: _nop

0041abe8: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041abec: nop

0041abf0: lw v0,0x1f30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041abf4: nop

0041abf8: beq v0,zero,0x0041adcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41adcc, 4) , (unique, 0x1200, 1)

0041abfc: _nop

0041ac00: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0041ac04: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041ac08: addiu v1,s2,-0x8
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffff8, 4)

0041ac0c: and v0,v1,v0
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

0041ac10: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac14: nop

0041ac18: beq s3,v0,0x0041a974
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0xdb5, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1200, 1)

0041ac1c: _li a2,0xdb5
	(register, 0x18, 4) COPY (const, 0xdb5, 4)

0041ac20: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac24: b 0x0041a928
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4bd8, 4)
	 ---  BRANCH (ram, 0x41a928, 4)

0041ac28: _addiu a3,a3,0x4bd8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4bd8, 4)

0041ac2c: addiu s2,s2,-0x4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffc, 4)

0041ac30: sltu s2,s2,s7
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x5c, 4)
	(register, 0x48, 4) INT_ZEXT (unique, 0x5380, 1)

0041ac34: beq s2,zero,0x0041a9c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a9c0, 4) , (unique, 0x1200, 1)

0041ac38: _nop

0041ac3c: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac40: nop

0041ac44: bal 0x004198a0
	(register, 0x7c, 4) COPY (const, 0x41ac4c, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4198a0, 4)

0041ac48: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041ac4c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac50: beq v0,zero,0x0041a974
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1200, 1)

0041ac54: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041ac58: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac5c: or a2,s5,zero
	(register, 0x18, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0041ac60: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041ac64: bal 0x0041c5a0
	(register, 0x7c, 4) COPY (const, 0x41ac6c, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41c5a0, 4)

0041ac68: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041ac6c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac70: nop

0041ac74: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac78: nop

0041ac7c: addiu t9,t9,0x4524
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4524, 4)

0041ac80: bal 0x00414524
	(register, 0x7c, 4) COPY (const, 0x41ac88, 4)
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x414524, 4)

0041ac84: _or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041ac88: b 0x0041a974
	 ---  BRANCH (ram, 0x41a974, 4)

0041ac8c: _nop

0041ac90: b 0x0041a7f8
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41a7f8, 4)

0041ac94: _lui v1,0xfff0
	(register, 0xc, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)

0041ac98: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ac9c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041aca0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041aca4: li v1,0xc
	(register, 0xc, 4) COPY (const, 0xc, 4)

0041aca8: b 0x0041a970
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x41a970, 4)

0041acac: _sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041acb0: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041acb4: b 0x0041a914
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f70, 4)
	 ---  BRANCH (ram, 0x41a914, 4)

0041acb8: _addiu v0,v0,0x1f70
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f70, 4)

0041acbc: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041acc0: nop

0041acc4: bal 0x004198a0
	(register, 0x7c, 4) COPY (const, 0x41accc, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4198a0, 4)

0041acc8: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0041accc: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041acd0: beq v0,zero,0x0041a974
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a974, 4) , (unique, 0x1200, 1)

0041acd4: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041acd8: lw v1,-0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041acdc: li a0,-0x8
	(register, 0x10, 4) COPY (const, 0xfffffff8, 4)

0041ace0: srl v0,v1,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

0041ace4: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0041ace8: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

0041acec: xori v0,v0,0x1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

0041acf0: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041acf4: addiu a2,v1,-0x8
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff8, 4)

0041acf8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0041acfc: addu a2,v0,a2
	(register, 0x18, 4) INT_ADD (register, 0x8, 4) , (register, 0x18, 4)

0041ad00: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041ad04: bal 0x0041c5a0
	(register, 0x7c, 4) COPY (const, 0x41ad0c, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41c5a0, 4)

0041ad08: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0041ad0c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad10: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041ad14: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad18: or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0041ad1c: addiu t9,t9,0x6dc8
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x6dc8, 4)

0041ad20: bal 0x00416dc8
	(register, 0x7c, 4) COPY (const, 0x41ad28, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x416dc8, 4)

0041ad24: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041ad28: b 0x0041a974
	 ---  BRANCH (ram, 0x41a974, 4)

0041ad2c: _nop

0041ad30: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0041ad34: lbu v1,-0x6ff0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff9010, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0041ad38: nop

0041ad3c: bne v1,zero,0x0041a7cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41a7cc, 4) , (unique, 0x1700, 1)

0041ad40: _nop

0041ad44: lw t9,-0x7e08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad48: nop

0041ad4c: addiu t9,t9,-0x71e8
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff8e18, 4)

0041ad50: bal 0x00418e18
	(register, 0x7c, 4) COPY (const, 0x41ad58, 4)
	 ---  CALL (ram, 0x418e18, 4)

0041ad54: _nop

0041ad58: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad5c: lw v0,-0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad60: b 0x0041a7d0
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x41a7d0, 4)

0041ad64: _andi v1,v0,0x4
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)

0041ad68: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad6c: lw t9,-0x7f20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff80e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad70: nop

0041ad74: addiu t9,t9,0x4344
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4344, 4)

0041ad78: bal 0x00414344
	(register, 0x7c, 4) COPY (const, 0x41ad80, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4958, 4)
	 ---  CALL (ram, 0x414344, 4)

0041ad7c: _addiu a0,a0,0x4958
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4958, 4)

0041ad80: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad84: b 0x0041ac18
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f70, 4)
	 ---  BRANCH (ram, 0x41ac18, 4)

0041ad88: _addiu v0,v0,0x1f70
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f70, 4)

0041ad8c: lw t9,-0x7fc0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8040, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ad90: nop

0041ad94: bal 0x00413c34
	(register, 0x7c, 4) COPY (const, 0x41ad9c, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413c34, 4)

0041ad98: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041ad9c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ada0: b 0x0041a8c0
	 ---  BRANCH (ram, 0x41a8c0, 4)

0041ada4: _nop

0041ada8: lw t9,-0x7fc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff803c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041adac: nop

0041adb0: bal 0x00413af0
	(register, 0x7c, 4) COPY (const, 0x41adb8, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413af0, 4)

0041adb4: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0041adb8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041adbc: b 0x0041a878
	 ---  BRANCH (ram, 0x41a878, 4)

0041adc0: _nop

0041adc4: b 0x0041a904
	(register, 0x8, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41a904, 4)

0041adc8: _lui v0,0xfff0
	(register, 0x8, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)

0041adcc: b 0x0041ac08
	(register, 0x8, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41ac08, 4)

0041add0: _lui v0,0xfff0
	(register, 0x8, 4) INT_LEFT (const, 0xfff0, 4) , (const, 0x10, 4)

0041add4: and a0,v1,a3
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (register, 0x1c, 4)

0041add8: b 0x0041aae0
	(register, 0x14, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x41aae0, 4)

0041addc: _addu a1,s6,v0
	(register, 0x14, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)

0041ade0: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ade4: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ade8: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041adec: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041adf0: addiu a3,a3,0x4bc8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4bc8, 4)

0041adf4: li a2,0xc11
	(register, 0x18, 4) COPY (const, 0xc11, 4)

0041adf8: addiu a1,a1,0x397c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x397c, 4)

0041adfc: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x41ae04, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4994, 4)
	 ---  CALL (ram, 0x425590, 4)

0041ae00: _addiu a0,a0,0x4994
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4994, 4)

0041ae04: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ae08: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ae0c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ae10: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ae14: addiu a3,a3,0x4bc8
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4bc8, 4)

0041ae18: li a2,0xc0f
	(register, 0x18, 4) COPY (const, 0xc0f, 4)

0041ae1c: addiu a1,a1,0x397c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x397c, 4)

0041ae20: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x41ae28, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4978, 4)
	 ---  CALL (ram, 0x425590, 4)

0041ae24: _addiu a0,a0,0x4978
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4978, 4)

