Label: 820
Function: ___pthread_rwlock_wrlock
Architecture: mips
Source File: Unknown
Entry Point: 00466070

P-code:

00466070: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

00466074: addiu gp,gp,0x4df0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x4df0, 4)

00466078: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046607c: addiu sp,sp,-0x50
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb0, 4)

00466080: sw s0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00466084: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00466088: sw ra,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046608c: sw s8,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00466090: sw s7,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00466094: sw s6,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00466098: sw s5,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046609c: sw s4,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004660a0: sw s3,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004660a4: sw s2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004660a8: sw s1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004660ac: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004660b0: lw a0,0x1c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004660b4: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004660b8: lw v0,-0x7478(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004660bc: nop

004660c0: beq a0,v0,0x00466180
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x466180, 4) , (unique, 0x1200, 1)

004660c4: _nop

004660c8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004660cc: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004660d0: ori at,v0,0x2
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

004660d4: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004660d8: beq at,zero,0x004660cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4660cc, 4) , (unique, 0x1200, 1)

004660dc: _nop

004660e0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004660e4: andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

004660e8: bne v1,zero,0x00466188
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	 ---  CBRANCH (ram, 0x466188, 4) , (unique, 0x1700, 1)

004660ec: _addiu s2,s0,0xc
	(register, 0x48, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)

004660f0: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

004660f4: andi v1,v0,0x1
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

004660f8: bne v1,zero,0x0046613c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46613c, 4) , (unique, 0x1700, 1)

004660fc: _sw a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00466100: srl v1,v0,0x3
	(register, 0xc, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

00466104: bne v1,zero,0x004662d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4662d0, 4) , (unique, 0x1700, 1)

00466108: _ori a0,v0,0x1
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

0046610c: ll a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466110: bne a1,v0,0x0046612c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46612c, 4) , (unique, 0x1700, 1)

00466114: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00466118: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046611c: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466120: beq at,zero,0x0046610c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46610c, 4) , (unique, 0x1200, 1)

00466124: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00466128: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0046612c: beq v1,zero,0x004662c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4662c8, 4) , (unique, 0x1200, 1)

00466130: _andi v1,a1,0x1
	(register, 0xc, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

00466134: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00466138: sw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046613c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00466140: lw v0,-0x7478(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466144: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466148: sw v0,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046614c: lw ra,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466150: lw s8,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466154: lw s7,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466158: lw s6,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046615c: lw s5,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466160: lw s4,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466164: lw s3,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466168: lw s2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046616c: lw s0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466170: or v0,s1,zero
	(register, 0x8, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00466174: lw s1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466178: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	 ---  RETURN (register, 0x80, 4)

0046617c: _addiu sp,sp,0x50
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)

00466180: b 0x0046614c
	(register, 0x44, 4) COPY (const, 0x2d, 4)
	 ---  BRANCH (ram, 0x46614c, 4)

00466184: _li s1,0x2d
	(register, 0x44, 4) COPY (const, 0x2d, 4)

00466188: lbu s4,0x1b(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x50, 4) INT_ZEXT (unique, 0x2f00, 1)

0046618c: nop

00466190: bne s4,zero,0x00466298
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466298, 4) , (unique, 0x1700, 1)

00466194: _nop

00466198: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046619c: addiu s3,s0,0xc
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)

004661a0: bne v1,zero,0x004661ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x4661ec, 4) , (unique, 0x1700, 1)

004661a4: _ori a2,v0,0x2
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

004661a8: ll a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004661ac: bne a0,v0,0x004661c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4661c8, 4) , (unique, 0x1700, 1)

004661b0: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

004661b4: or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004661b8: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004661bc: beq at,zero,0x004661a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4661a8, 4) , (unique, 0x1200, 1)

004661c0: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

004661c4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004661c8: beq v1,zero,0x00466288
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466288, 4) , (unique, 0x1200, 1)

004661cc: _or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004661d0: bne s4,zero,0x00466520
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466520, 4) , (unique, 0x1700, 1)

004661d4: _nop

004661d8: ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

004661dc: beq a1,zero,0x00466290
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466290, 4) , (unique, 0x1200, 1)

004661e0: _or s2,s3,zero
	(register, 0x48, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004661e4: b 0x004660f4
	(register, 0x10, 4) COPY (const, 0x3, 4)
	 ---  BRANCH (ram, 0x4660f4, 4)

004661e8: _li a0,0x3
	(register, 0x10, 4) COPY (const, 0x3, 4)

004661ec: bne s4,zero,0x004664d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4664d0, 4) , (unique, 0x1700, 1)

004661f0: _nop

004661f4: lbu v0,0x1a(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004661f8: lw a0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004661fc: li v1,-0x3
	(register, 0xc, 4) COPY (const, 0xfffffffd, 4)

00466200: and v1,a0,v1
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

00466204: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00466208: bne v1,a2,0x004662bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x48, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4662bc, 4) , (unique, 0x1700, 1)

0046620c: _or s2,s3,zero
	(register, 0x48, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00466210: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00466214: beq a0,v1,0x00466240
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x466240, 4) , (unique, 0x1200, 1)

00466218: _nop

0046621c: ll a2,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466220: bne a2,a0,0x00466238
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x10, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466238, 4) , (unique, 0x1700, 1)

00466224: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00466228: li at,0x3
	(register, 0x4, 4) COPY (const, 0x3, 4)

0046622c: sc at,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466230: beq at,zero,0x0046621c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46621c, 4) , (unique, 0x1200, 1)

00466234: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00466238: beq v1,zero,0x004662bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4662bc, 4) , (unique, 0x1200, 1)

0046623c: _nop

00466240: sltu v0,zero,v0
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00466244: lw t9,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466248: sll v0,v0,0x7
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x7, 4)

0046624c: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00466250: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466254: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466258: li a1,0x3
	(register, 0x14, 4) COPY (const, 0x3, 4)

0046625c: bal 0x004654f0
	(register, 0x7c, 4) COPY (const, 0x466264, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4654f0, 4)

00466260: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00466264: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00466268: li v0,0x91
	(register, 0x8, 4) COPY (const, 0x91, 4)

0046626c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466270: beq s1,v0,0x004665d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x4f, 4)
	 ---  CBRANCH (ram, 0x4665d8, 4) , (unique, 0x1200, 1)

00466274: _li v0,0x4f
	(register, 0x8, 4) COPY (const, 0x4f, 4)

00466278: beq s1,v0,0x004665d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4665d8, 4) , (unique, 0x1200, 1)

0046627c: _nop

00466280: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466284: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00466288: b 0x004661a0
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4661a0, 4)

0046628c: _andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

00466290: b 0x004660f4
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4660f4, 4)

00466294: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00466298: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0046629c: ll at,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004662a0: addiu at,at,0x1
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x1, 4)

004662a4: sc at,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004662a8: beq at,zero,0x0046629c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46629c, 4) , (unique, 0x1200, 1)

004662ac: _nop

004662b0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004662b4: b 0x0046619c
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46619c, 4)

004662b8: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004662bc: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004662c0: b 0x004661a0
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4661a0, 4)

004662c4: _andi v1,v0,0x2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

004662c8: beq v1,zero,0x00466100
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466100, 4) , (unique, 0x1200, 1)

004662cc: _or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004662d0: lw v0,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004662d4: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004662d8: sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004662dc: addiu s3,s0,0x8
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

004662e0: li s7,-0x3
	(register, 0x5c, 4) COPY (const, 0xfffffffd, 4)

004662e4: li s6,0x91
	(register, 0x58, 4) COPY (const, 0x91, 4)

004662e8: li s8,0x4f
	(register, 0x78, 4) COPY (const, 0x4f, 4)

004662ec: lw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004662f0: nop

004662f4: and v1,v0,s7
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x5c, 4)

004662f8: bne v1,zero,0x00466484
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466484, 4) , (unique, 0x1700, 1)

004662fc: _nop

00466300: lbu s4,0x1a(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x50, 4) INT_ZEXT (unique, 0x2f00, 1)

00466304: nop

00466308: sltu s4,zero,s4
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x50, 4)
	(register, 0x50, 4) INT_ZEXT (unique, 0x5380, 1)

0046630c: bne v0,zero,0x00466338
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_LEFT (register, 0x50, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x466338, 4) , (unique, 0x1700, 1)

00466310: _sll s4,s4,0x7
	(register, 0x50, 4) INT_LEFT (register, 0x50, 4) , (const, 0x7, 4)

00466314: ll v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466318: bne v1,zero,0x00466330
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466330, 4) , (unique, 0x1700, 1)

0046631c: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00466320: li at,0x2
	(register, 0x4, 4) COPY (const, 0x2, 4)

00466324: sc at,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466328: beq at,zero,0x00466314
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x466314, 4) , (unique, 0x1200, 1)

0046632c: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00466330: beq v0,zero,0x004662ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4662ec, 4) , (unique, 0x1200, 1)

00466334: _nop

00466338: lw t9,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046633c: sw s4,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00466340: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466344: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466348: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0046634c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x466354, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00466350: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00466354: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466358: beq v0,s6,0x00466368
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466368, 4) , (unique, 0x1200, 1)

0046635c: _or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00466360: bne v0,s8,0x004662ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x4662ec, 4) , (unique, 0x1700, 1)

00466364: _nop

00466368: lbu v0,0x1b(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046636c: nop

00466370: beq v0,zero,0x00466388
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466388, 4) , (unique, 0x1200, 1)

00466374: _nop

00466378: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046637c: nop

00466380: bne v0,zero,0x00466544
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x466544, 4) , (unique, 0x1700, 1)

00466384: _addiu v1,s0,0x4
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

00466388: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046638c: nop

00466390: andi v1,v0,0x1
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00466394: bne v1,zero,0x004664ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4664ac, 4) , (unique, 0x1700, 1)

00466398: _nop

0046639c: ll v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004663a0: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

004663a4: sc at,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004663a8: beq at,zero,0x0046639c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46639c, 4) , (unique, 0x1200, 1)

004663ac: _nop

004663b0: li a1,-0x5
	(register, 0x14, 4) COPY (const, 0xfffffffb, 4)

004663b4: xori a0,v0,0x2
	(register, 0x10, 4) INT_XOR (register, 0x8, 4) , (const, 0x2, 4)

004663b8: and a0,a0,a1
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x14, 4)

004663bc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004663c0: ll s1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004663c4: bne s1,v0,0x004663dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4663dc, 4) , (unique, 0x1700, 1)

004663c8: _li a2,0x0
	(register, 0x18, 4) COPY (const, 0x0, 4)

004663cc: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004663d0: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004663d4: beq at,zero,0x004663c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4663c0, 4) , (unique, 0x1200, 1)

004663d8: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

004663dc: beq a2,zero,0x0046649c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46649c, 4) , (unique, 0x1200, 1)

004663e0: _or v0,s1,zero
	(register, 0x8, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004663e4: andi v1,v1,0x2
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x2, 4)

004663e8: beq v1,zero,0x0046641c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46641c, 4) , (unique, 0x1200, 1)

004663ec: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

004663f0: xori a1,s4,0x81
	(register, 0x14, 4) INT_XOR (register, 0x50, 4) , (const, 0x81, 4)

004663f4: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

004663f8: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004663fc: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00466400: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00466404: beq a3,zero,0x00466414
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x466414, 4) , (unique, 0x1200, 1)

00466408: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046640c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00466410: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00466414: beq v1,zero,0x00466640
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x466640, 4) , (unique, 0x1200, 1)

00466418: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

0046641c: andi s1,s1,0x4
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x4, 4)

00466420: beq s1,zero,0x00466458
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x466458, 4) , (unique, 0x1200, 1)

00466424: _lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00466428: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046642c: xori a1,s4,0x81
	(register, 0x14, 4) INT_XOR (register, 0x50, 4) , (const, 0x81, 4)

00466430: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

00466434: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466438: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

0046643c: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00466440: beq a3,zero,0x00466450
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x466450, 4) , (unique, 0x1200, 1)

00466444: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00466448: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0046644c: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00466450: beq v1,zero,0x00466460
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x466460, 4) , (unique, 0x1200, 1)

00466454: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00466458: b 0x0046614c
	(register, 0x44, 4) COPY (const, 0x91, 4)
	 ---  BRANCH (ram, 0x46614c, 4)

0046645c: _li s1,0x91
	(register, 0x44, 4) COPY (const, 0x91, 4)

00466460: beq v0,v1,0x00466458
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x466458, 4) , (unique, 0x1200, 1)

00466464: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00466468: beq v0,v1,0x0046614c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x44, 4) COPY (const, 0x91, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1200, 1)

0046646c: _li s1,0x91
	(register, 0x44, 4) COPY (const, 0x91, 4)

00466470: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466474: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466478: nop

0046647c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x466484, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00466480: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00466484: bne s5,zero,0x0046613c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46613c, 4) , (unique, 0x1700, 1)

00466488: _nop

0046648c: lw s5,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466490: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00466494: b 0x004662ec
	(register, 0x54, 4) INT_AND (register, 0x54, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4662ec, 4)

00466498: _andi s5,s5,0x1
	(register, 0x54, 4) INT_AND (register, 0x54, 4) , (const, 0x1, 4)

0046649c: andi a0,s1,0x1
	(register, 0x10, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)

004664a0: beq a0,zero,0x004663b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_XOR (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x4663b8, 4) , (unique, 0x1200, 1)

004664a4: _xori a0,v0,0x2
	(register, 0x10, 4) INT_XOR (register, 0x8, 4) , (const, 0x2, 4)

004664a8: sw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004664ac: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004664b0: li v1,-0x3
	(register, 0xc, 4) COPY (const, 0xfffffffd, 4)

004664b4: lw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004664b8: nop

004664bc: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004664c0: beq v0,zero,0x004664b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4664b4, 4) , (unique, 0x1200, 1)

004664c4: _nop

004664c8: b 0x0046613c
	 ---  BRANCH (ram, 0x46613c, 4)

004664cc: _nop

004664d0: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004664d4: nop

004664d8: bgez v0,0x004661f4
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x4661f4, 4) , (unique, 0x1300, 1)

004664dc: _addiu v1,s0,0x4
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

004664e0: lui a0,0x7fff
	(register, 0x10, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004664e4: ori a0,a0,0xffff
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0xffff, 4)

004664e8: addu a0,v0,a0
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

004664ec: ll a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004664f0: bne a3,v0,0x0046650c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46650c, 4) , (unique, 0x1700, 1)

004664f4: _li a2,0x0
	(register, 0x18, 4) COPY (const, 0x0, 4)

004664f8: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004664fc: sc at,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466500: beq at,zero,0x004664ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4664ec, 4) , (unique, 0x1200, 1)

00466504: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00466508: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0046650c: beq a2,zero,0x004661ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4661ec, 4) , (unique, 0x1200, 1)

00466510: _nop

00466514: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466518: b 0x004661dc
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4661dc, 4)

0046651c: _ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00466520: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00466524: ll at,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466528: addiu at,at,-0x1
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0xffffffff, 4)

0046652c: sc at,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466530: beq at,zero,0x00466524
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466524, 4) , (unique, 0x1200, 1)

00466534: _nop

00466538: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0046653c: b 0x004661dc
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4661dc, 4)

00466540: _ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00466544: ll a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466548: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

0046654c: sc at,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466550: beq at,zero,0x00466544
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466544, 4) , (unique, 0x1200, 1)

00466554: _nop

00466558: lui a1,0x8000
	(register, 0x14, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

0046655c: or a3,v0,a1
	(register, 0x1c, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)

00466560: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00466564: ll t0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466568: bne t0,v0,0x00466580
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466580, 4) , (unique, 0x1700, 1)

0046656c: _li a2,0x0
	(register, 0x18, 4) COPY (const, 0x0, 4)

00466570: or at,a3,zero
	(register, 0x4, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00466574: sc at,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00466578: beq at,zero,0x00466564
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x466564, 4) , (unique, 0x1200, 1)

0046657c: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00466580: beq a2,zero,0x00466658
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466658, 4) , (unique, 0x1200, 1)

00466584: _nop

00466588: andi a0,a0,0x2
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x2, 4)

0046658c: beq a0,zero,0x0046614c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1200, 1)

00466590: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00466594: xori a1,s4,0x81
	(register, 0x14, 4) INT_XOR (register, 0x50, 4) , (const, 0x81, 4)

00466598: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0046659c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004665a0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

004665a4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

004665a8: beq a3,zero,0x004665b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4665b8, 4) , (unique, 0x1200, 1)

004665ac: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004665b0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004665b4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004665b8: bne v1,zero,0x0046614c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1700, 1)

004665bc: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

004665c0: beq v0,v1,0x0046614c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1200, 1)

004665c4: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

004665c8: beq v0,v1,0x0046614c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1200, 1)

004665cc: _nop

004665d0: b 0x00466470
	 ---  BRANCH (ram, 0x466470, 4)

004665d4: _nop

004665d8: beq s4,zero,0x0046614c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1200, 1)

004665dc: _lui a0,0x8000
	(register, 0x10, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

004665e0: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004665e4: addiu v1,s0,0x4
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

004665e8: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

004665ec: beq v0,a0,0x004665f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4665f8, 4) , (unique, 0x1200, 1)

004665f0: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004665f4: addiu a1,v0,-0x1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

004665f8: ll a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004665fc: bne a3,v0,0x00466618
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x466618, 4) , (unique, 0x1700, 1)

00466600: _li a2,0x0
	(register, 0x18, 4) COPY (const, 0x0, 4)

00466604: or at,a1,zero
	(register, 0x4, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00466608: sc at,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0046660c: beq at,zero,0x004665f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4665f8, 4) , (unique, 0x1200, 1)

00466610: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00466614: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00466618: beq a2,zero,0x004665ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4665ec, 4) , (unique, 0x1200, 1)

0046661c: _or v0,a3,zero
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00466620: lui v1,0x8000
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00466624: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00466628: bne a3,v1,0x0046614c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46614c, 4) , (unique, 0x1700, 1)

0046662c: _nop

00466630: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466634: li a0,0x3
	(register, 0x10, 4) COPY (const, 0x3, 4)

00466638: b 0x004660f4
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4660f4, 4)

0046663c: _ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00466640: beq v0,v1,0x0046641c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x46641c, 4) , (unique, 0x1200, 1)

00466644: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00466648: beq v0,v1,0x0046641c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46641c, 4) , (unique, 0x1200, 1)

0046664c: _nop

00466650: b 0x00466470
	 ---  BRANCH (ram, 0x466470, 4)

00466654: _nop

00466658: bne t0,zero,0x0046655c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46655c, 4) , (unique, 0x1700, 1)

0046665c: _or v0,t0,zero
	(register, 0x8, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

00466660: sw a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00466664: b 0x00466388
	 ---  BRANCH (ram, 0x466388, 4)

00466668: _nop

