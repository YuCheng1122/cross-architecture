Label: 823
Function: __memrchr
Architecture: mips
Source File: Unknown
Entry Point: 004668b0

P-code:

004668b0: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

004668b4: addiu gp,gp,0x45b0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x45b0, 4)

004668b8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

004668bc: beq a2,zero,0x00466a78
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x466a78, 4) , (unique, 0x1200, 1)

004668c0: _addu a2,a0,a2
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)

004668c4: andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

004668c8: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

004668cc: addiu a3,a2,0x3
	(register, 0x1c, 4) INT_ADD (register, 0x18, 4) , (const, 0x3, 4)

004668d0: sll v1,a1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0x14, 4) , (const, 0x8, 4)

004668d4: li v0,-0x4
	(register, 0x8, 4) COPY (const, 0xfffffffc, 4)

004668d8: and a3,a3,v0
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (register, 0x8, 4)

004668dc: addu v1,v1,a1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

004668e0: sw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004668e4: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004668e8: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004668ec: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004668f0: sll v0,v1,0x10
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

004668f4: lw a1,-0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004668f8: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004668fc: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00466900: lui a0,0x7f7f
	(register, 0x10, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

00466904: addiu a0,a0,0x7f7f
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7f7f, 4)

00466908: xor a1,v1,a1
	(register, 0x14, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

0046690c: and v0,a1,a0
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (register, 0x10, 4)

00466910: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00466914: or v0,v0,a1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)

00466918: andi a2,a2,0x3
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

0046691c: addiu s0,a3,-0x4
	(register, 0x40, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)

00466920: bne a2,zero,0x004669b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x4669b4, 4) , (unique, 0x1700, 1)

00466924: _or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00466928: nor a0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

0046692c: bne a0,zero,0x004669d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x4669d0, 4) , (unique, 0x1700, 1)

00466930: _li a1,-0x4
	(register, 0x14, 4) COPY (const, 0xfffffffc, 4)

00466934: and a1,s1,a1
	(register, 0x14, 4) INT_AND (register, 0x44, 4) , (register, 0x14, 4)

00466938: beq s0,a1,0x004669f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (register, 0x14, 4)
	(register, 0x40, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x4669f8, 4) , (unique, 0x1200, 1)

0046693c: _addiu s0,a3,-0x8
	(register, 0x40, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffff8, 4)

00466940: lw v0,-0x8(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466944: beq a1,s0,0x00466a10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x40, 4)
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x466a10, 4) , (unique, 0x1200, 1)

00466948: _lui a3,0xfefe
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

0046694c: lui a2,0x8080
	(register, 0x18, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00466950: ori a3,a3,0xfeff
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (const, 0xfeff, 4)

00466954: b 0x00466968
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x8080, 4)
	 ---  BRANCH (ram, 0x466968, 4)

00466958: _ori a2,a2,0x8080
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x8080, 4)

0046695c: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466960: beq a1,s0,0x00466a14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x40, 4)
	(register, 0x10, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x466a14, 4) , (unique, 0x1200, 1)

00466964: _lui a0,0xfefe
	(register, 0x10, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00466968: xor v0,v0,v1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0xc, 4)

0046696c: addu a0,v0,a3
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

00466970: nor v0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00466974: and a0,a0,v0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x8, 4)

00466978: and a0,a0,a2
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x18, 4)

0046697c: beq a0,zero,0x0046695c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x46695c, 4) , (unique, 0x1200, 1)

00466980: _addiu s0,s0,-0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffc, 4)

00466984: lw t9,-0x7d14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466988: nop

0046698c: bal 0x00478f30
	(register, 0x7c, 4) COPY (const, 0x466994, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CALL (ram, 0x478f30, 4)

00466990: _addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

00466994: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00466998: subu v0,s0,v0
	(register, 0x8, 4) INT_SUB (register, 0x40, 4) , (register, 0x8, 4)

0046699c: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

004669a0: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004669a4: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004669a8: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004669ac: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

004669b0: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

004669b4: sll a2,a2,0x3
	(register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (const, 0x3, 4)

004669b8: li a0,-0x1
	(register, 0x10, 4) COPY (const, 0xffffffff, 4)

004669bc: srlv a0,a0,a2
	(unique, 0x5780, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

004669c0: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

004669c4: nor a0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

004669c8: beq a0,zero,0x00466934
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x466934, 4) , (unique, 0x1200, 1)

004669cc: _li a1,-0x4
	(register, 0x14, 4) COPY (const, 0xfffffffc, 4)

004669d0: lw t9,-0x7d14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004669d4: nop

004669d8: bal 0x00478f30
	(register, 0x7c, 4) COPY (const, 0x4669e0, 4)
	 ---  CALL (ram, 0x478f30, 4)

004669dc: _nop

004669e0: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

004669e4: subu v0,s0,v0
	(register, 0x8, 4) INT_SUB (register, 0x40, 4) , (register, 0x8, 4)

004669e8: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

004669ec: sltu s1,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

004669f0: beq s1,zero,0x004669a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4669a0, 4) , (unique, 0x1200, 1)

004669f4: _nop

004669f8: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004669fc: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a00: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a04: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00466a08: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00466a0c: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00466a10: lui a0,0xfefe
	(register, 0x10, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

00466a14: xor v0,v0,v1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0xc, 4)

00466a18: ori a0,a0,0xfeff
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0xfeff, 4)

00466a1c: addu a0,v0,a0
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00466a20: nor v0,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00466a24: and a0,a0,v0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x8, 4)

00466a28: lui v0,0x8080
	(register, 0x8, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

00466a2c: ori v0,v0,0x8080
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x8080, 4)

00466a30: and a0,a0,v0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x8, 4)

00466a34: beq a0,zero,0x004669f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4669f8, 4) , (unique, 0x1200, 1)

00466a38: _nop

00466a3c: lw t9,-0x7d14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a40: nop

00466a44: bal 0x00478f30
	(register, 0x7c, 4) COPY (const, 0x466a4c, 4)
	 ---  CALL (ram, 0x478f30, 4)

00466a48: _nop

00466a4c: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

00466a50: subu s0,s0,v0
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x8, 4)

00466a54: addiu v0,s0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x3, 4)

00466a58: sltu s1,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00466a5c: bne s1,zero,0x004669f8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4669f8, 4) , (unique, 0x1700, 1)

00466a60: _nop

00466a64: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a68: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a6c: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00466a70: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00466a74: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00466a78: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  RETURN (register, 0x80, 4)

00466a7c: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

