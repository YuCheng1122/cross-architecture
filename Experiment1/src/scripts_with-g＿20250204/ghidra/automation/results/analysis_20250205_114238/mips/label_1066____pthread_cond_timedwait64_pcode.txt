Label: 1066
Function: ___pthread_cond_timedwait64
Architecture: mips
Source File: Unknown
Entry Point: 004819b0

P-code:

004819b0: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

004819b4: addiu gp,gp,-0x6b50
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff94b0, 4)

004819b8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

004819bc: lw v0,0xc(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004819c0: lui v1,0x3b9a
	(register, 0xc, 4) INT_LEFT (const, 0x3b9a, 4) , (const, 0x10, 4)

004819c4: addiu sp,sp,-0x80
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff80, 4)

004819c8: ori v1,v1,0xca00
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xca00, 4)

004819cc: sltu v0,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004819d0: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004819d4: sw ra,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004819d8: sw s8,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004819dc: sw s7,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004819e0: sw s6,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004819e4: sw s5,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004819e8: sw s4,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004819ec: sw s3,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004819f0: sw s2,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004819f4: sw s1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004819f8: sw s0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004819fc: beq v0,zero,0x00481da0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x481da0, 4) , (unique, 0x1200, 1)

00481a00: _sw a1,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00481a04: lw v0,0x24(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a08: lw t9,-0x7614(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a0c: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00481a10: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00481a14: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

00481a18: sw v0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481a1c: or s7,a2,zero
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00481a20: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00481a24: bal 0x00476bc0
	(register, 0x7c, 4) COPY (const, 0x481a2c, 4)
	(register, 0x44, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
	 ---  CALL (ram, 0x476bc0, 4)

00481a28: _addiu s1,a0,0x24
	(register, 0x44, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)

00481a2c: or s5,v0,zero
	(register, 0x54, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00481a30: sll v0,s5,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x54, 4) , (const, 0x1f, 4)

00481a34: srl s8,v1,0x1
	(register, 0x78, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00481a38: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a3c: or s8,v0,s8
	(register, 0x78, 4) INT_OR (register, 0x8, 4) , (register, 0x78, 4)

00481a40: andi v0,v1,0x1
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00481a44: sw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481a48: or s6,v1,zero
	(register, 0x58, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00481a4c: srl s4,s5,0x1
	(register, 0x50, 4) INT_RIGHT (register, 0x54, 4) , (const, 0x1, 4)

00481a50: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481a54: ll s2,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a58: addiu at,s2,0x8
	(register, 0x4, 4) INT_ADD (register, 0x48, 4) , (const, 0x8, 4)

00481a5c: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00481a60: beq at,zero,0x00481a54
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481a54, 4) , (unique, 0x1200, 1)

00481a64: _nop

00481a68: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00481a6c: lw t9,-0x7aa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff855c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a70: lw a0,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a74: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x481a7c, 4)
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)
	 ---  CALLIND (register, 0x80, 4)

00481a78: _sll s2,s2,0x7
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)

00481a7c: andi s2,s2,0xff
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0xff, 4)

00481a80: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481a84: bne v0,zero,0x00481da8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481da8, 4) , (unique, 0x1700, 1)

00481a88: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00481a8c: andi v0,s6,0x1
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)

00481a90: sll t0,v0,0x2
	(register, 0x20, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00481a94: addiu s1,s0,0x28
	(register, 0x44, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00481a98: addu s1,s1,t0
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x20, 4)

00481a9c: lw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481aa0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481aa4: andi v1,v0,0x1
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00481aa8: bne v1,zero,0x00481b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1700, 1)

00481aac: _nop

00481ab0: beq v0,zero,0x00481bb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x481bb0, 4) , (unique, 0x1200, 1)

00481ab4: _addiu a0,v0,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)

00481ab8: ll a1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481abc: bne a1,v0,0x00481ad8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481ad8, 4) , (unique, 0x1700, 1)

00481ac0: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00481ac4: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00481ac8: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00481acc: beq at,zero,0x00481ab8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x481ab8, 4) , (unique, 0x1200, 1)

00481ad0: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00481ad4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481ad8: beq v1,zero,0x00481e70
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481e70, 4) , (unique, 0x1200, 1)

00481adc: _nop

00481ae0: lw s5,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481ae4: addiu s6,s0,0x8
	(register, 0x58, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00481ae8: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00481aec: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x481af4, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x476c24, 4)

00481af0: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00481af4: or s7,v0,zero
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00481af8: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00481afc: srl v1,s7,0x1
	(register, 0xc, 4) INT_RIGHT (register, 0x5c, 4) , (const, 0x1, 4)

00481b00: sll a2,s7,0x1f
	(register, 0x18, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x1f, 4)

00481b04: srl v0,a1,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x1, 4)

00481b08: sltu a0,s4,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00481b0c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b10: beq a0,zero,0x00481b98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x18, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x481b98, 4) , (unique, 0x1200, 1)

00481b14: _or v0,a2,v0
	(register, 0x8, 4) INT_OR (register, 0x18, 4) , (register, 0x8, 4)

00481b18: nor v0,zero,a1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00481b1c: lw v1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b20: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00481b24: beq v0,v1,0x00481cf0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x481cf0, 4) , (unique, 0x1200, 1)

00481b28: _nop

00481b2c: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b30: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00481b34: addiu t9,t9,0xaf0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xaf0, 4)

00481b38: bal 0x00480af0
	(register, 0x7c, 4) COPY (const, 0x481b40, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480af0, 4)

00481b3c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481b40: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b44: lw a0,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b48: lw t9,-0x75c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b4c: nop

00481b50: bal 0x004827ec
	(register, 0x7c, 4) COPY (const, 0x481b58, 4)
	 ---  CALL (ram, 0x4827ec, 4)

00481b54: _nop

00481b58: beq v0,zero,0x00481b64
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481b64, 4) , (unique, 0x1200, 1)

00481b5c: _nop

00481b60: or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00481b64: lw ra,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b68: lw s8,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b6c: lw s7,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b70: lw s6,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b74: lw s5,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b78: lw s4,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b7c: lw s2,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b80: lw s1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b84: lw s0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b88: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

00481b8c: lw s3,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481b90: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)
	 ---  RETURN (register, 0x80, 4)

00481b94: _addiu sp,sp,0x80
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)

00481b98: bne v1,s4,0x00481b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x50, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1700, 1)

00481b9c: _sltu v0,s8,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00481ba0: beq v0,zero,0x00481b2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1200, 1)

00481ba4: _nor v0,zero,a1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

00481ba8: b 0x00481b1c
	 ---  BRANCH (ram, 0x481b1c, 4)

00481bac: _nop

00481bb0: addu v0,s0,t0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x20, 4)

00481bb4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481bb8: ll at,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481bbc: addiu at,at,0x2
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x2, 4)

00481bc0: sc at,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00481bc4: beq at,zero,0x00481bb8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481bb8, 4) , (unique, 0x1200, 1)

00481bc8: _nop

00481bcc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481bd0: lw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481bd4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481bd8: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00481bdc: bne v0,zero,0x00481e4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x481e4c, 4) , (unique, 0x1700, 1)

00481be0: _addiu a0,s0,0x8
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00481be4: lw t9,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481be8: nop

00481bec: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x481bf4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)
	 ---  CALL (ram, 0x476c24, 4)

00481bf0: _sw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00481bf4: srl a0,v0,0x1
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00481bf8: srl v1,v1,0x1
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00481bfc: sll v0,v0,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00481c00: sltu a1,s4,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00481c04: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c08: bne a1,zero,0x00481e4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x481e4c, 4) , (unique, 0x1700, 1)

00481c0c: _or v1,v0,v1
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00481c10: lw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c14: beq a0,s4,0x00481e44
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x50, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x481e44, 4) , (unique, 0x1200, 1)

00481c18: _sltu v1,s8,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00481c1c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c20: lw v0,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c24: addiu v1,sp,0x38
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

00481c28: lw t9,-0x7aa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8560, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c2c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00481c30: sw t0,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00481c34: sw v1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00481c38: addiu a2,sp,0x20
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

00481c3c: addiu a1,a1,0xf4c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xf4c, 4)

00481c40: sw v0,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481c44: sw s5,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00481c48: sw s6,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00481c4c: sw s0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00481c50: bal 0x00465300
	(register, 0x7c, 4) COPY (const, 0x481c58, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CALL (ram, 0x465300, 4)

00481c54: _sw s2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00481c58: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c5c: lw a2,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c60: lw t9,-0x75c0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c64: or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00481c68: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00481c6c: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00481c70: bal 0x00465534
	(register, 0x7c, 4) COPY (const, 0x481c78, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CALL (ram, 0x465534, 4)

00481c74: _sw s2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00481c78: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c7c: lw v1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c80: lw t9,-0x7a9c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8564, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c84: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00481c88: sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481c8c: bal 0x00465320
	(register, 0x7c, 4) COPY (const, 0x481c94, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x465320, 4)

00481c90: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00481c94: lw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481c98: li v1,0x91
	(register, 0xc, 4) COPY (const, 0x91, 4)

00481c9c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481ca0: beq v0,v1,0x00481df0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x4f, 4)
	 ---  CBRANCH (ram, 0x481df0, 4) , (unique, 0x1200, 1)

00481ca4: _li v1,0x4f
	(register, 0xc, 4) COPY (const, 0x4f, 4)

00481ca8: lw t0,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cac: beq v0,v1,0x00481df0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481df0, 4) , (unique, 0x1200, 1)

00481cb0: _or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00481cb4: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cb8: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cbc: sw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00481cc0: addiu t9,t9,0xc24
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xc24, 4)

00481cc4: bal 0x00480c24
	(register, 0x7c, 4) COPY (const, 0x481ccc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480c24, 4)

00481cc8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481ccc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cd0: lw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cd4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00481cd8: lw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cdc: andi v1,v0,0x1
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00481ce0: beq v1,zero,0x00481ab0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481ab0, 4) , (unique, 0x1200, 1)

00481ce4: _nop

00481ce8: b 0x00481b2c
	 ---  BRANCH (ram, 0x481b2c, 4)

00481cec: _nop

00481cf0: lw s8,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481cf4: sw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00481cf8: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00481cfc: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x481d04, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x476c24, 4)

00481d00: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00481d04: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481d08: bne s7,v0,0x00481b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1700, 1)

00481d0c: _nop

00481d10: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481d14: nop

00481d18: bne a1,v1,0x00481b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_AND (register, 0x78, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1700, 1)

00481d1c: _andi v0,s8,0x1
	(register, 0x8, 4) INT_AND (register, 0x78, 4) , (const, 0x1, 4)

00481d20: bne v0,zero,0x00481d4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x481d4c, 4) , (unique, 0x1700, 1)

00481d24: _addiu a0,s8,0x2
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x2, 4)

00481d28: ll v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481d2c: bne v1,s8,0x00481d44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x78, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481d44, 4) , (unique, 0x1700, 1)

00481d30: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00481d34: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00481d38: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00481d3c: beq at,zero,0x00481d28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x481d28, 4) , (unique, 0x1200, 1)

00481d40: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00481d44: beq v0,zero,0x00481cf4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481cf4, 4) , (unique, 0x1200, 1)

00481d48: _or s8,v1,zero
	(register, 0x78, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00481d4c: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00481d50: xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

00481d54: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00481d58: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00481d5c: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00481d60: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00481d64: beq a3,zero,0x00481d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x481d74, 4) , (unique, 0x1200, 1)

00481d68: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00481d6c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00481d70: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00481d74: bne v1,zero,0x00481b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1700, 1)

00481d78: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00481d7c: beq v0,v1,0x00481b2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1200, 1)

00481d80: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00481d84: beq v0,v1,0x00481b2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x481b2c, 4) , (unique, 0x1200, 1)

00481d88: _nop

00481d8c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481d90: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481d94: nop

00481d98: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x481da0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00481d9c: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00481da0: b 0x00481b64
	(register, 0x4c, 4) COPY (const, 0x16, 4)
	 ---  BRANCH (ram, 0x481b64, 4)

00481da4: _li s3,0x16
	(register, 0x4c, 4) COPY (const, 0x16, 4)

00481da8: lw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481dac: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481db0: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481db4: or a2,s4,zero
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00481db8: or a3,s8,zero
	(register, 0x1c, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00481dbc: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481dc0: addiu t9,t9,0xce0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xce0, 4)

00481dc4: bal 0x00480ce0
	(register, 0x7c, 4) COPY (const, 0x481dcc, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CALL (ram, 0x480ce0, 4)

00481dc8: _sw s2,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00481dcc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481dd0: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00481dd4: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481dd8: nop

00481ddc: addiu t9,t9,0xaf0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xaf0, 4)

00481de0: bal 0x00480af0
	(register, 0x7c, 4) COPY (const, 0x481de8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480af0, 4)

00481de4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481de8: b 0x00481b64
	 ---  BRANCH (ram, 0x481b64, 4)

00481dec: _nop

00481df0: lw s1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481df4: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481df8: sw v0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00481dfc: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00481e00: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00481e04: addiu t9,t9,0xc24
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xc24, 4)

00481e08: bal 0x00480c24
	(register, 0x7c, 4) COPY (const, 0x481e10, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480c24, 4)

00481e0c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481e10: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e14: sw s2,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00481e18: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e1c: sw s1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00481e20: or a2,s4,zero
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00481e24: or a3,s8,zero
	(register, 0x1c, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00481e28: addiu t9,t9,0xce0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xce0, 4)

00481e2c: bal 0x00480ce0
	(register, 0x7c, 4) COPY (const, 0x481e34, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480ce0, 4)

00481e30: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481e34: lw v0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e38: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e3c: b 0x00481b2c
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x481b2c, 4)

00481e40: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00481e44: beq v1,zero,0x00481c1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x481c1c, 4) , (unique, 0x1200, 1)

00481e48: _nop

00481e4c: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e50: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e54: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00481e58: addiu t9,t9,0xc24
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xc24, 4)

00481e5c: bal 0x00480c24
	(register, 0x7c, 4) COPY (const, 0x481e64, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x480c24, 4)

00481e60: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00481e64: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00481e68: b 0x00481b2c
	 ---  BRANCH (ram, 0x481b2c, 4)

00481e6c: _nop

00481e70: b 0x00481cdc
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x481cdc, 4)

00481e74: _or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

