Label: 1072
Function: ___pthread_cond_signal
Architecture: mips
Source File: Unknown
Entry Point: 00482c10

P-code:

00482c10: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00482c14: addiu gp,gp,-0x7db0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8250, 4)

00482c18: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00482c1c: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

00482c20: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00482c24: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00482c28: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00482c2c: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00482c30: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00482c34: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00482c38: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00482c3c: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00482c40: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00482c44: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00482c48: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00482c4c: lw s2,0x24(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482c50: nop

00482c54: srl v0,s2,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x48, 4) , (const, 0x3, 4)

00482c58: beq v0,zero,0x00482d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x482d74, 4) , (unique, 0x1200, 1)

00482c5c: _sll s2,s2,0x7
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)

00482c60: lw a2,0x20(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482c64: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00482c68: andi s2,s2,0xff
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0xff, 4)

00482c6c: addiu s1,a0,0x20
	(register, 0x44, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)

00482c70: andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

00482c74: bne v0,zero,0x004830a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4830a0, 4) , (unique, 0x1700, 1)

00482c78: _ori a0,a2,0x1
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

00482c7c: ll v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482c80: bne v1,a2,0x00482c9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482c9c, 4) , (unique, 0x1700, 1)

00482c84: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00482c88: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00482c8c: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482c90: beq at,zero,0x00482c7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x482c7c, 4) , (unique, 0x1200, 1)

00482c94: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00482c98: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482c9c: beq v0,zero,0x00482c70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482c70, 4) , (unique, 0x1200, 1)

00482ca0: _or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00482ca4: lw s8,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482ca8: nop

00482cac: or t9,s8,zero
	(register, 0x64, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00482cb0: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x482cb8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x476c24, 4)

00482cb4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00482cb8: nor s5,zero,v1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0x54, 4) INT_NEGATE (unique, 0x4280, 4)

00482cbc: andi s5,s5,0x1
	(register, 0x54, 4) INT_AND (register, 0x54, 4) , (const, 0x1, 4)

00482cc0: or s7,v1,zero
	(register, 0x5c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00482cc4: sll v1,s5,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00482cc8: addu v1,s0,v1
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (register, 0xc, 4)

00482ccc: lw v1,0x18(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482cd0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482cd4: or s4,s0,zero
	(register, 0x50, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00482cd8: beq v1,zero,0x00482da8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x482da8, 4) , (unique, 0x1200, 1)

00482cdc: _sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482ce0: sll a0,s5,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00482ce4: addu v0,s0,a0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x10, 4)

00482ce8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482cec: ll at,0x28(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482cf0: addiu at,at,0x2
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (const, 0x2, 4)

00482cf4: sc at,0x28(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482cf8: beq at,zero,0x00482cec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482cec, 4) , (unique, 0x1200, 1)

00482cfc: _nop

00482d00: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482d04: lw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d08: nop

00482d0c: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

00482d10: sw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00482d14: li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00482d18: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482d1c: ll v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d20: and at,v0,v1
	(register, 0x4, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00482d24: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482d28: beq at,zero,0x00482d1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482d1c, 4) , (unique, 0x1200, 1)

00482d2c: _nop

00482d30: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482d34: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00482d38: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00482d3c: beq v0,v1,0x00482f44
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)
	 ---  CBRANCH (ram, 0x482f44, 4) , (unique, 0x1200, 1)

00482d40: _xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

00482d44: addiu s0,s0,0x28
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00482d48: addu a0,s0,a0
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x10, 4)

00482d4c: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00482d50: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482d54: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00482d58: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00482d5c: beq a3,zero,0x00482d6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x482d6c, 4) , (unique, 0x1200, 1)

00482d60: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482d64: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00482d68: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482d6c: beq v1,zero,0x0048307c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x48307c, 4) , (unique, 0x1200, 1)

00482d70: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00482d74: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d78: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d7c: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d80: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d84: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d88: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d8c: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d90: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d94: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d98: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482d9c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482da0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

00482da4: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

00482da8: addiu v0,s0,0x8
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00482dac: lw s3,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482db0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00482db4: or t9,s8,zero
	(register, 0x64, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00482db8: andi s6,s7,0x1
	(register, 0x58, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)

00482dbc: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x482dc4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x476c24, 4)

00482dc0: _sw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00482dc4: sll s8,s6,0x2
	(register, 0x78, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

00482dc8: lw a1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482dcc: addu s8,s0,s8
	(register, 0x78, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)

00482dd0: srl a0,s7,0x1
	(register, 0x10, 4) INT_RIGHT (register, 0x5c, 4) , (const, 0x1, 4)

00482dd4: lw a2,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482dd8: sll a1,a1,0x1f
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x1f, 4)

00482ddc: or a0,a1,a0
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (register, 0x10, 4)

00482de0: srl s3,s3,0x2
	(register, 0x4c, 4) INT_RIGHT (register, 0x4c, 4) , (const, 0x2, 4)

00482de4: sll v0,v0,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00482de8: srl v1,v1,0x1
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00482dec: addu a2,a2,a0
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)

00482df0: or s7,v0,v1
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

00482df4: subu a2,a2,s3
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x4c, 4)

00482df8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482dfc: bne s7,a2,0x00482e70
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (register, 0x18, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x482e70, 4) , (unique, 0x1700, 1)

00482e00: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00482e04: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482e08: ll v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482e0c: and at,v0,v1
	(register, 0x4, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00482e10: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482e14: beq at,zero,0x00482e08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482e08, 4) , (unique, 0x1200, 1)

00482e18: _nop

00482e1c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482e20: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00482e24: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00482e28: bne v0,v1,0x00482d74
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482d74, 4) , (unique, 0x1700, 1)

00482e2c: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482e30: xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

00482e34: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00482e38: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00482e3c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482e40: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00482e44: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00482e48: beq a3,zero,0x00482e58
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x482e58, 4) , (unique, 0x1200, 1)

00482e4c: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482e50: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00482e54: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482e58: beq v1,zero,0x00483148
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x483148, 4) , (unique, 0x1200, 1)

00482e5c: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00482e60: beq s3,zero,0x00482d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x482d74, 4) , (unique, 0x1200, 1)

00482e64: _sll a0,s5,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00482e68: b 0x00482d48
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	 ---  BRANCH (ram, 0x482d48, 4)

00482e6c: _addiu s0,s0,0x28
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00482e70: sll v1,s5,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00482e74: addiu s5,s0,0x28
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00482e78: addu s5,s5,v1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (register, 0xc, 4)

00482e7c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482e80: ll at,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482e84: ori at,at,0x1
	(register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0x1, 4)

00482e88: sc at,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482e8c: beq at,zero,0x00482e80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482e80, 4) , (unique, 0x1200, 1)

00482e90: _nop

00482e94: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482e98: addiu v0,s0,0x10
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)

00482e9c: addu a0,v0,v1
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00482ea0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482ea4: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482ea8: ori at,v0,0x0
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00482eac: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482eb0: beq at,zero,0x00482ea4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482ea4, 4) , (unique, 0x1200, 1)

00482eb4: _nop

00482eb8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482ebc: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00482ec0: beq v0,zero,0x00482f4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x80, 4)
	 ---  CBRANCH (ram, 0x482f4c, 4) , (unique, 0x1200, 1)

00482ec4: _xori a1,s2,0x80
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x80, 4)

00482ec8: b 0x00482ee4
	(register, 0x7c, 4) COPY (const, 0xfffffff5, 4)
	 ---  BRANCH (ram, 0x482ee4, 4)

00482ecc: _li ra,-0xb
	(register, 0x7c, 4) COPY (const, 0xfffffff5, 4)

00482ed0: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482ed4: nop

00482ed8: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00482edc: beq v0,zero,0x00482f4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482f4c, 4) , (unique, 0x1200, 1)

00482ee0: _nop

00482ee4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482ee8: ll a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482eec: ori at,a2,0x1
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

00482ef0: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482ef4: beq at,zero,0x00482ee8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x482ee8, 4) , (unique, 0x1200, 1)

00482ef8: _ori a2,a2,0x1
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

00482efc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482f00: srl v0,a2,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x1, 4)

00482f04: beq v0,zero,0x00482ed0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482ed0, 4) , (unique, 0x1200, 1)

00482f08: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00482f0c: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00482f10: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00482f14: beq a3,zero,0x00482f24
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x482f24, 4) , (unique, 0x1200, 1)

00482f18: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482f1c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00482f20: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00482f24: bne v1,zero,0x00482ed0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482ed0, 4) , (unique, 0x1700, 1)

00482f28: _nop

00482f2c: beq v0,ra,0x00482ed0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x7c, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x482ed0, 4) , (unique, 0x1200, 1)

00482f30: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00482f34: beq v0,v1,0x00482ed0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482ed0, 4) , (unique, 0x1200, 1)

00482f38: _nop

00482f3c: b 0x0048308c
	 ---  BRANCH (ram, 0x48308c, 4)

00482f40: _nop

00482f44: b 0x00482e30
	(register, 0x4c, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x482e30, 4)

00482f48: _li s3,0x1
	(register, 0x4c, 4) COPY (const, 0x1, 4)

00482f4c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482f50: beq s6,zero,0x00483068
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x483068, 4) , (unique, 0x1200, 1)

00482f54: _sll v0,s3,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x1, 4)

00482f58: li a1,-0x1
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)

00482f5c: lw t9,-0x7614(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f60: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f64: bal 0x00476bc0
	(register, 0x7c, 4) COPY (const, 0x482f6c, 4)
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CALL (ram, 0x476bc0, 4)

00482f68: _addu a1,v0,a1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

00482f6c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f70: addiu v1,s0,0x4
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

00482f74: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482f78: sw zero,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00482f7c: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f80: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482f84: lw a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f88: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482f8c: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482f90: nop

00482f94: bne v0,a0,0x00482f7c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x482f7c, 4) , (unique, 0x1700, 1)

00482f98: _nop

00482f9c: bltz a1,0x00483058
	(unique, 0x1600, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x483058, 4) , (unique, 0x1600, 1)

00482fa0: _lui a0,0x7fff
	(register, 0x10, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00482fa4: ori a0,a0,0xffff
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0xffff, 4)

00482fa8: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00482fac: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482fb0: ll v1,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00482fb4: xori at,v1,0x1
	(register, 0x4, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)

00482fb8: sc at,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00482fbc: beq at,zero,0x00482fb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482fb0, 4) , (unique, 0x1200, 1)

00482fc0: _nop

00482fc4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00482fc8: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

00482fcc: and a1,a1,a0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x10, 4)

00482fd0: sltu a1,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00482fd4: beq a1,zero,0x00482fe4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x482fe4, 4) , (unique, 0x1200, 1)

00482fd8: _sll a0,v0,0x1f
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00482fdc: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00482fe0: sll a0,v0,0x1f
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00482fe4: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00482fe8: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00482fec: sltu a0,v1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00482ff0: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00482ff4: sll a0,a0,0x1f
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x1f, 4)

00482ff8: srl v0,v1,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00482ffc: or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

00483000: lw v1,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483004: addu s3,s3,s7
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x5c, 4)

00483008: subu v0,v0,s3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)

0048300c: sll a0,v0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00483010: andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

00483014: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

00483018: ll a1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048301c: or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00483020: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00483024: beq at,zero,0x00483018
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x483018, 4) , (unique, 0x1200, 1)

00483028: _nop

0048302c: xor v1,v1,a1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

00483030: andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

00483034: bne v1,zero,0x00483070
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x483070, 4) , (unique, 0x1700, 1)

00483038: _nop

0048303c: lw v1,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483040: or s5,s6,zero
	(register, 0x54, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00483044: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00483048: bne v0,zero,0x00482ce0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x482ce0, 4) , (unique, 0x1700, 1)

0048304c: _sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00483050: b 0x00482e04
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  BRANCH (ram, 0x482e04, 4)

00483054: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00483058: bltz v0,0x00482fa4
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482fa4, 4) , (unique, 0x1600, 1)

0048305c: _nop

00483060: b 0x00482fa4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x482fa4, 4)

00483064: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00483068: b 0x00482f5c
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x482f5c, 4)

0048306c: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00483070: ori a0,a0,0x2
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x2, 4)

00483074: b 0x0048303c
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x48303c, 4)

00483078: _sw a0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0048307c: beq v0,v1,0x00482d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x482d74, 4) , (unique, 0x1200, 1)

00483080: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00483084: beq v0,v1,0x00482d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482d74, 4) , (unique, 0x1200, 1)

00483088: _nop

0048308c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483090: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483094: nop

00483098: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4830a0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

0048309c: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

004830a0: li s3,0x2
	(register, 0x4c, 4) COPY (const, 0x2, 4)

004830a4: xori a1,s2,0x80
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x80, 4)

004830a8: li ra,-0x4
	(register, 0x7c, 4) COPY (const, 0xfffffffc, 4)

004830ac: li s4,-0xb
	(register, 0x50, 4) COPY (const, 0xfffffff5, 4)

004830b0: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004830b4: beq v0,s3,0x004830f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x7c, 4)
	 ---  CBRANCH (ram, 0x4830f4, 4) , (unique, 0x1200, 1)

004830b8: _and v0,a2,ra
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x7c, 4)

004830bc: ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

004830c0: ll a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004830c4: bne a3,a2,0x004830e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x18, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4830e0, 4) , (unique, 0x1700, 1)

004830c8: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

004830cc: or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004830d0: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004830d4: beq at,zero,0x004830c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4830c0, 4) , (unique, 0x1200, 1)

004830d8: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

004830dc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004830e0: or a2,a3,zero
	(register, 0x18, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

004830e4: beq v1,zero,0x00483124
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x483124, 4) , (unique, 0x1200, 1)

004830e8: _andi v0,a3,0x3
	(register, 0x8, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

004830ec: beq v0,zero,0x00482ca4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x482ca4, 4) , (unique, 0x1200, 1)

004830f0: _or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004830f4: and a2,a2,ra
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x7c, 4)

004830f8: ori a2,a2,0x2
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x2, 4)

004830fc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00483100: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00483104: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00483108: beq a3,zero,0x00483118
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x483118, 4) , (unique, 0x1200, 1)

0048310c: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00483110: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00483114: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00483118: beq v1,zero,0x0048312c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48312c, 4) , (unique, 0x1200, 1)

0048311c: _nop

00483120: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483124: b 0x004830b4
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x4830b4, 4)

00483128: _andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

0048312c: beq v0,s4,0x00483120
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x483120, 4) , (unique, 0x1200, 1)

00483130: _nop

00483134: bne v0,ra,0x0048308c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x7c, 4)
	 ---  CBRANCH (ram, 0x48308c, 4) , (unique, 0x1700, 1)

00483138: _nop

0048313c: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00483140: b 0x004830b4
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x4830b4, 4)

00483144: _andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

00483148: beq v0,v1,0x00482e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x482e60, 4) , (unique, 0x1200, 1)

0048314c: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00483150: beq v0,v1,0x00482e60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x482e60, 4) , (unique, 0x1200, 1)

00483154: _nop

00483158: b 0x0048308c
	 ---  BRANCH (ram, 0x48308c, 4)

0048315c: _nop

