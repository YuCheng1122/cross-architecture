Label: 238
Function: __unregister_atfork
Architecture: mips
Source File: Unknown
Entry Point: 0041e4f8

P-code:

0041e4f8: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041e4fc: addiu gp,gp,-0x3698
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffc968, 4)

0041e500: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041e504: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

0041e508: sw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041e50c: lw s1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e510: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041e514: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041e518: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041e51c: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0041e520: ll v1,0x6160(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e524: bne v1,zero,0x0041e540
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e540, 4) , (unique, 0x1700, 1)

0041e528: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

0041e52c: li at,0x1
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041e530: sc at,0x6160(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041e534: beq at,zero,0x0041e520
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x41e520, 4) , (unique, 0x1200, 1)

0041e538: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0041e53c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041e540: beq v0,zero,0x0041e6f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e6f8, 4) , (unique, 0x1200, 1)

0041e544: _nop

0041e548: lw t1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e54c: nop

0041e550: lw a3,0x6170(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x6170, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e554: nop

0041e558: beq a3,zero,0x0041e6a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (const, 0x6170, 4)
	 ---  CBRANCH (ram, 0x41e6a8, 4) , (unique, 0x1200, 1)

0041e55c: _addiu v0,t1,0x6170
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (const, 0x6170, 4)

0041e560: lw t0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e564: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041e568: b 0x0041e578
	(register, 0x8, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41e578, 4)

0041e56c: _or v0,t0,zero
	(register, 0x8, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0041e570: beq v1,a3,0x0041e6a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x41e6a8, 4) , (unique, 0x1200, 1)

0041e574: _addiu v0,v0,0x18
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)

0041e578: lw a1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e57c: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0041e580: bne s0,a1,0x0041e570
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e570, 4) , (unique, 0x1700, 1)

0041e584: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041e588: sll v1,a3,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x1, 4)

0041e58c: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0041e590: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

0041e594: addiu t5,v0,0x18
	(register, 0x34, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)

0041e598: addu t0,t0,v1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0xc, 4)

0041e59c: or a1,t5,zero
	(register, 0x14, 4) INT_OR (register, 0x34, 4) , (const, 0x0, 4)

0041e5a0: beq t0,t5,0x0041e674
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x34, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x41e674, 4) , (unique, 0x1200, 1)

0041e5a4: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0041e5a8: lw v1,0xc(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5ac: nop

0041e5b0: beq v1,s0,0x0041e600
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e600, 4) , (unique, 0x1200, 1)

0041e5b4: _or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0041e5b8: or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041e5bc: addiu t2,a1,0x10
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)

0041e5c0: lw t7,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5c4: lw t6,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5c8: lw t4,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5cc: lw t3,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5d0: addiu v1,v1,0x10
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)

0041e5d4: sw t7,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x3c, 4)

0041e5d8: sw t6,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x38, 4)

0041e5dc: sw t4,0x8(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0041e5e0: sw t3,0xc(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0041e5e4: bne v1,t2,0x0041e5c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41e5c0, 4) , (unique, 0x1700, 1)

0041e5e8: _addiu a2,a2,0x10
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x10, 4)

0041e5ec: lw t2,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5f0: lw v1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e5f4: addiu a0,a0,0x18
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)

0041e5f8: sw t2,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0041e5fc: sw v1,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041e600: addiu a1,a1,0x18
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)

0041e604: bne t0,a1,0x0041e5a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x41e5a8, 4) , (unique, 0x1700, 1)

0041e608: _nop

0041e60c: addiu t0,t0,-0x30
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

0041e610: subu t0,t0,v0
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x8, 4)

0041e614: lui v0,0xaaa
	(register, 0x8, 4) INT_LEFT (const, 0xaaa, 4) , (const, 0x10, 4)

0041e618: ori v0,v0,0xaaab
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xaaab, 4)

0041e61c: srl t0,t0,0x3
	(register, 0x20, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x3, 4)

0041e620: mult t0,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x20, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0041e624: lui v0,0x1fff
	(register, 0x8, 4) INT_LEFT (const, 0x1fff, 4) , (const, 0x10, 4)

0041e628: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0041e62c: addiu t5,t5,0x18
	(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x18, 4)

0041e630: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0041e634: and v1,v1,v0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

0041e638: sll v0,v1,0x1
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0041e63c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041e640: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0041e644: addu t5,v0,t5
	(register, 0x34, 4) INT_ADD (register, 0x8, 4) , (register, 0x34, 4)

0041e648: subu v0,t5,a0
	(register, 0x8, 4) INT_SUB (register, 0x34, 4) , (register, 0x10, 4)

0041e64c: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

0041e650: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0041e654: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0041e658: sll v0,v1,0x4
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x4, 4)

0041e65c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0041e660: sll v0,v1,0x8
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

0041e664: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0041e668: sll v0,v1,0x10
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

0041e66c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0041e670: subu v1,zero,v1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0041e674: beq t5,a0,0x0041e6a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x34, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e6a8, 4) , (unique, 0x1200, 1)

0041e678: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041e67c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041e680: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0041e684: beq a3,zero,0x0041e694
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x41e694, 4) , (unique, 0x1200, 1)

0041e688: _sltu a0,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0041e68c: addiu a3,a3,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0041e690: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0041e694: bne a0,zero,0x0041e684
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x41e684, 4) , (unique, 0x1700, 1)

0041e698: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0041e69c: beq a1,zero,0x0041e6a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e6a8, 4) , (unique, 0x1200, 1)

0041e6a0: _nop

0041e6a4: sw a3,0x6170(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x6170, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0041e6a8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0041e6ac: ll v0,0x6160(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6b0: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

0041e6b4: sc at,0x6160(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0041e6b8: beq at,zero,0x0041e6ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41e6ac, 4) , (unique, 0x1200, 1)

0041e6bc: _nop

0041e6c0: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0041e6c4: beq v0,zero,0x0041e6e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	 ---  CBRANCH (ram, 0x41e6e0, 4) , (unique, 0x1200, 1)

0041e6c8: _addiu a0,s1,0x6160
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)

0041e6cc: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6d0: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6d4: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6d8: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0041e6dc: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0041e6e0: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6e4: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6e8: lw t9,-0x7fc0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8040, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6ec: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6f0: b 0x00413c34
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  BRANCH (ram, 0x413c34, 4)

0041e6f4: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0041e6f8: lw t9,-0x7fc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff803c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e6fc: nop

0041e700: bal 0x00413af0
	(register, 0x7c, 4) COPY (const, 0x41e708, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)
	 ---  CALL (ram, 0x413af0, 4)

0041e704: _addiu a0,s1,0x6160
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x6160, 4)

0041e708: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041e70c: b 0x0041e548
	 ---  BRANCH (ram, 0x41e548, 4)

0041e710: _nop

