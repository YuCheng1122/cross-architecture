Label: 377
Function: ____strtoul_l_internal
Architecture: mips
Source File: Unknown
Entry Point: 00426180

P-code:

00426180: lui gp,0x9
	(register, 0x70, 4) INT_LEFT (const, 0x9, 4) , (const, 0x10, 4)

00426184: addiu gp,gp,0x4ce0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x4ce0, 4)

00426188: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0042618c: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

00426190: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00426194: sw s5,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00426198: sw s4,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0042619c: sw s3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004261a0: lbu s5,0x5b(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x54, 4) INT_ZEXT (unique, 0x2f00, 1)

004261a4: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004261a8: sw s7,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004261ac: sw s6,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004261b0: sw s2,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004261b4: sw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004261b8: sw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004261bc: or s3,a0,zero
	(register, 0x4c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004261c0: bne a3,zero,0x00426394
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426394, 4) , (unique, 0x1700, 1)

004261c4: _or s4,a1,zero
	(register, 0x50, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004261c8: or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004261cc: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004261d0: sltiu v0,a2,0x25
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x25, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004261d4: beq v0,zero,0x00426350
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426350, 4) , (unique, 0x1200, 1)

004261d8: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004261dc: beq a2,v0,0x00426350
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x426350, 4) , (unique, 0x1200, 1)

004261e0: _nop

004261e4: lw v0,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004261e8: lb v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

004261ec: lw a0,0x34(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004261f0: sll v0,v1,0x1
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

004261f4: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

004261f8: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

004261fc: nop

00426200: andi v0,v0,0x20
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x20, 4)

00426204: beq v0,zero,0x00426230
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426230, 4) , (unique, 0x1200, 1)

00426208: _or s0,s3,zero
	(register, 0x40, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042620c: lb v1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426210: nop

00426214: sll v0,v1,0x1
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

00426218: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0042621c: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

00426220: nop

00426224: andi v0,v0,0x20
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x20, 4)

00426228: bne v0,zero,0x0042620c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42620c, 4) , (unique, 0x1700, 1)

0042622c: _addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

00426230: beq v1,zero,0x0042662c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x42662c, 4) , (unique, 0x1200, 1)

00426234: _li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

00426238: beq v1,v0,0x00426504
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2b, 4)
	 ---  CBRANCH (ram, 0x426504, 4) , (unique, 0x1200, 1)

0042623c: _li v0,0x2b
	(register, 0x8, 4) COPY (const, 0x2b, 4)

00426240: beq v1,v0,0x004263e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4263e8, 4) , (unique, 0x1200, 1)

00426244: _nop

00426248: or s6,zero,zero
	(register, 0x58, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042624c: lb t0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_SEXT (unique, 0x2d00, 1)

00426250: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

00426254: beq t0,v0,0x00426490
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0xffffffef, 4)
	 ---  CBRANCH (ram, 0x426490, 4) , (unique, 0x1200, 1)

00426258: _li v0,-0x11
	(register, 0x8, 4) COPY (const, 0xffffffef, 4)

0042625c: beq a2,zero,0x0042647c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xa, 4)
	 ---  CBRANCH (ram, 0x42647c, 4) , (unique, 0x1200, 1)

00426260: _li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

00426264: beq a2,v0,0x0042647c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x42647c, 4) , (unique, 0x1200, 1)

00426268: _addiu a0,a2,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)

0042626c: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426270: or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426274: lw v1,-0x7e7c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8184, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426278: sll v0,a0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0042627c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00426280: lw v0,-0x7e80(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8180, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426284: andi t0,t0,0xff
	(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xff, 4)

00426288: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0042628c: lbu t4,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

00426290: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426294: beq t0,zero,0x0042655c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42655c, 4) , (unique, 0x1200, 1)

00426298: _nop

0042629c: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004262a0: nop

004262a4: lw a3,0x34(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004262a8: lw t3,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004262ac: or t2,s0,zero
	(register, 0x28, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004262b0: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004262b4: b 0x004262e4
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x4262e4, 4)

004262b8: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004262bc: beq a0,v0,0x004263f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x30, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x4263f4, 4) , (unique, 0x1200, 1)

004262c0: _sltu t0,t4,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x30, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

004262c4: mult a2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x18, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

004262c8: or t1,t2,zero
	(register, 0x24, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

004262cc: mflo v0
	(register, 0x8, 4) COPY (register, 0x3004, 4)

004262d0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004262d4: lbu t0,0x1(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x2f00, 1)

004262d8: nop

004262dc: beq t0,zero,0x00426450
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x28, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426450, 4) , (unique, 0x1200, 1)

004262e0: _addiu t2,t1,0x1
	(register, 0x28, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

004262e4: beq s7,t2,0x00426450
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x426450, 4) , (unique, 0x1200, 1)

004262e8: _addiu v1,t0,-0x30
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

004262ec: andi v1,v1,0xff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)

004262f0: sltiu t1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5280, 1)

004262f4: bne t1,zero,0x00426334
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426334, 4) , (unique, 0x1700, 1)

004262f8: _nop

004262fc: bne s1,zero,0x00426408
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426408, 4) , (unique, 0x1700, 1)

00426300: _or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426304: sll v1,t0,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x20, 4) , (const, 0x1, 4)

00426308: addu v1,a3,v1
	(register, 0xc, 4) INT_ADD (register, 0x1c, 4) , (register, 0xc, 4)

0042630c: lhu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00426310: nop

00426314: andi v1,v1,0x4
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x4, 4)

00426318: beq v1,zero,0x00426450
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x426450, 4) , (unique, 0x1200, 1)

0042631c: _sll t0,t0,0x2
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

00426320: addu t0,t3,t0
	(register, 0x20, 4) INT_ADD (register, 0x2c, 4) , (register, 0x20, 4)

00426324: lw v1,0x0(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426328: nop

0042632c: addiu v1,v1,-0x37
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffc9, 4)

00426330: andi v1,v1,0xff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)

00426334: slt t0,v1,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5080, 1)

00426338: beq t0,zero,0x00426450
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x426450, 4) , (unique, 0x1200, 1)

0042633c: _sltu t0,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

00426340: beq t0,zero,0x004262bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4262bc, 4) , (unique, 0x1200, 1)

00426344: _or t1,t2,zero
	(register, 0x24, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

00426348: b 0x004262d4
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4262d4, 4)

0042634c: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00426350: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426354: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00426358: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042635c: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

00426360: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00426364: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426368: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042636c: lw s7,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426370: lw s6,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426374: lw s5,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426378: lw s4,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042637c: lw s3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426380: lw s2,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426384: lw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426388: lw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042638c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

00426390: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

00426394: lw v0,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426398: nop

0042639c: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004263a0: nop

004263a4: lw s7,0x28(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004263a8: nop

004263ac: lbu v0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004263b0: nop

004263b4: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

004263b8: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

004263bc: sltiu v0,v0,0x7e
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x7e, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004263c0: beq v0,zero,0x004261c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4261c8, 4) , (unique, 0x1200, 1)

004263c4: _nop

004263c8: lw s2,0x24(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004263cc: nop

004263d0: lb v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

004263d4: nop

004263d8: beq v0,zero,0x004261c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x25, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4261c8, 4) , (unique, 0x1200, 1)

004263dc: _sltiu v0,a2,0x25
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x25, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004263e0: b 0x004261d4
	 ---  BRANCH (ram, 0x4261d4, 4)

004263e4: _nop

004263e8: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

004263ec: b 0x0042624c
	(register, 0x58, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42624c, 4)

004263f0: _or s6,zero,zero
	(register, 0x58, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004263f4: beq t0,zero,0x004262c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0xda80, 8) INT_SEXT (register, 0x18, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4262c8, 4) , (unique, 0x1200, 1)

004263f8: _mult a2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x18, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

004263fc: or t1,t2,zero
	(register, 0x24, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

00426400: b 0x004262d4
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4262d4, 4)

00426404: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00426408: addu t5,s2,v1
	(register, 0x34, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

0042640c: addu t1,t2,v1
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0xc, 4)

00426410: lb t5,0x0(t5)
	(unique, 0x100, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x34, 4) INT_SEXT (unique, 0x2d00, 1)

00426414: lb t1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x24, 4) INT_SEXT (unique, 0x2d00, 1)

00426418: nop

0042641c: bne t5,t1,0x0042643c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x42643c, 4) , (unique, 0x1700, 1)

00426420: _nop

00426424: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00426428: bne v1,s1,0x0042640c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x44, 4)
	(register, 0x34, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42640c, 4) , (unique, 0x1700, 1)

0042642c: _addu t5,s2,v1
	(register, 0x34, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

00426430: addiu t1,s1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

00426434: b 0x004262d4
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)
	 ---  BRANCH (ram, 0x4262d4, 4)

00426438: _addu t1,t2,t1
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)

0042643c: bne s1,v1,0x00426308
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426308, 4) , (unique, 0x1700, 1)

00426440: _sll v1,t0,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x20, 4) , (const, 0x1, 4)

00426444: addiu t1,s1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

00426448: b 0x004262d4
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)
	 ---  BRANCH (ram, 0x4262d4, 4)

0042644c: _addu t1,t2,t1
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)

00426450: beq s0,t2,0x0042655c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x42655c, 4) , (unique, 0x1200, 1)

00426454: _nop

00426458: beq s4,zero,0x00426464
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426464, 4) , (unique, 0x1200, 1)

0042645c: _nop

00426460: sw t2,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

00426464: bne a1,zero,0x0042663c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42663c, 4) , (unique, 0x1700, 1)

00426468: _nop

0042646c: beq s6,zero,0x00426368
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426368, 4) , (unique, 0x1200, 1)

00426470: _nop

00426474: b 0x00426368
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x426368, 4)

00426478: _subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0042647c: bne s7,zero,0x00426670
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x426670, 4) , (unique, 0x1700, 1)

00426480: _li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

00426484: li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

00426488: b 0x00426274
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426274, 4)

0042648c: _or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426490: and v0,a2,v0
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x8, 4)

00426494: beq v0,zero,0x00426510
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426510, 4) , (unique, 0x1200, 1)

00426498: _nop

0042649c: beq s5,zero,0x004265c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xa, 4)
	 ---  CBRANCH (ram, 0x4265c0, 4) , (unique, 0x1200, 1)

004264a0: _li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

004264a4: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

004264a8: bne a2,v0,0x004265c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0xa, 4)
	 ---  CBRANCH (ram, 0x4265c0, 4) , (unique, 0x1700, 1)

004264ac: _li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

004264b0: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264b4: lb a0,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

004264b8: lw v1,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264bc: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

004264c0: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

004264c4: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264c8: li v1,0x42
	(register, 0xc, 4) COPY (const, 0x42, 4)

004264cc: beq a0,v1,0x004265f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x4265f8, 4) , (unique, 0x1200, 1)

004264d0: _nop

004264d4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004264d8: lw a0,-0x7e7c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8184, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264dc: sll v1,a1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)

004264e0: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

004264e4: lw v1,-0x7e80(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8180, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264e8: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004264ec: addu v1,v1,a1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

004264f0: lbu t4,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

004264f4: or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004264f8: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004264fc: b 0x004262a4
	(register, 0x20, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x4262a4, 4)

00426500: _li t0,0x30
	(register, 0x20, 4) COPY (const, 0x30, 4)

00426504: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

00426508: b 0x0042624c
	(register, 0x58, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42624c, 4)

0042650c: _li s6,0x1
	(register, 0x58, 4) COPY (const, 0x1, 4)

00426510: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426514: lb a0,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

00426518: lw v1,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042651c: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

00426520: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

00426524: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426528: li a0,0x58
	(register, 0x10, 4) COPY (const, 0x58, 4)

0042652c: beq v1,a0,0x00426658
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426658, 4) , (unique, 0x1200, 1)

00426530: _or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426534: beq s5,zero,0x004265ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4265ac, 4) , (unique, 0x1200, 1)

00426538: _nop

0042653c: bne a2,zero,0x004265b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xe, 4)
	 ---  CBRANCH (ram, 0x4265b8, 4) , (unique, 0x1700, 1)

00426540: _li a1,0xe
	(register, 0x14, 4) COPY (const, 0xe, 4)

00426544: li a0,0x42
	(register, 0x10, 4) COPY (const, 0x42, 4)

00426548: beq v1,a0,0x004265f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x4265f8, 4) , (unique, 0x1200, 1)

0042654c: _nop

00426550: li a1,0x6
	(register, 0x14, 4) COPY (const, 0x6, 4)

00426554: b 0x004264d8
	(register, 0x18, 4) COPY (const, 0x8, 4)
	 ---  BRANCH (ram, 0x4264d8, 4)

00426558: _li a2,0x8
	(register, 0x18, 4) COPY (const, 0x8, 4)

0042655c: beq s4,zero,0x00426364
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x40, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x426364, 4) , (unique, 0x1200, 1)

00426560: _subu v0,s0,s3
	(register, 0x8, 4) INT_SUB (register, 0x40, 4) , (register, 0x4c, 4)

00426564: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00426568: bne v0,zero,0x004265a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4265a4, 4) , (unique, 0x1700, 1)

0042656c: _nop

00426570: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426574: lb v1,-0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426578: lw v0,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042657c: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00426580: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00426584: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426588: li v1,0x58
	(register, 0xc, 4) COPY (const, 0x58, 4)

0042658c: beq v0,v1,0x00426614
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x426614, 4) , (unique, 0x1200, 1)

00426590: _nop

00426594: beq s5,zero,0x004265a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x42, 4)
	 ---  CBRANCH (ram, 0x4265a4, 4) , (unique, 0x1200, 1)

00426598: _li v1,0x42
	(register, 0xc, 4) COPY (const, 0x42, 4)

0042659c: beq v0,v1,0x00426614
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x426614, 4) , (unique, 0x1200, 1)

004265a0: _nop

004265a4: b 0x00426364
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)
	 ---  BRANCH (ram, 0x426364, 4)

004265a8: _sw s3,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004265ac: beq a2,zero,0x00426550
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426550, 4) , (unique, 0x1200, 1)

004265b0: _nop

004265b4: li a1,0xe
	(register, 0x14, 4) COPY (const, 0xe, 4)

004265b8: b 0x004264d8
	(register, 0x18, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x4264d8, 4)

004265bc: _li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

004265c0: beq a2,v0,0x004267a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x4267a4, 4) , (unique, 0x1200, 1)

004265c4: _addiu a0,a2,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)

004265c8: lw v1,-0x7e7c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8184, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004265cc: sll v0,a0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

004265d0: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004265d4: lw v0,-0x7e80(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8180, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004265d8: or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004265dc: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

004265e0: lbu t4,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

004265e4: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004265e8: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004265ec: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004265f0: b 0x004262a4
	(register, 0x20, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x4262a4, 4)

004265f4: _li t0,0x30
	(register, 0x20, 4) COPY (const, 0x30, 4)

004265f8: lb t0,0x2(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_SEXT (unique, 0x2d00, 1)

004265fc: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426600: addiu s0,s0,0x2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)

00426604: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

00426608: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042660c: b 0x00426274
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426274, 4)

00426610: _or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426614: lb v1,-0x2(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426618: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0042661c: bne v1,v0,0x004265a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x4265a4, 4) , (unique, 0x1700, 1)

00426620: _addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

00426624: b 0x00426364
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x426364, 4)

00426628: _sw s0,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0042662c: beq s4,zero,0x00426368
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426368, 4) , (unique, 0x1200, 1)

00426630: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426634: b 0x00426368
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)
	 ---  BRANCH (ram, 0x426368, 4)

00426638: _sw s3,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0042663c: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426640: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00426644: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00426648: li v1,0x22
	(register, 0xc, 4) COPY (const, 0x22, 4)

0042664c: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00426650: b 0x00426368
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x426368, 4)

00426654: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00426658: lb t0,0x2(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_SEXT (unique, 0x2d00, 1)

0042665c: li a0,0xe
	(register, 0x10, 4) COPY (const, 0xe, 4)

00426660: addiu s0,s0,0x2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)

00426664: li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

00426668: b 0x00426274
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426274, 4)

0042666c: _or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426670: lw t9,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426674: sw t0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00426678: bal 0x0041cc50
	(register, 0x7c, 4) COPY (const, 0x426680, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41cc50, 4)

0042667c: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00426680: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426684: lw t0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426688: beq v0,zero,0x004267d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4267d0, 4) , (unique, 0x1200, 1)

0042668c: _or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00426690: b 0x004266a0
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x4266a0, 4)

00426694: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00426698: beq s1,v0,0x004267d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4267d0, 4) , (unique, 0x1200, 1)

0042669c: _nop

004266a0: addu a0,s2,v0
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

004266a4: addu v1,s0,v0
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

004266a8: lb a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

004266ac: lb v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

004266b0: nop

004266b4: beq a0,v1,0x00426698
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426698, 4) , (unique, 0x1200, 1)

004266b8: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004266bc: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

004266c0: sltu v0,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

004266c4: beq v0,zero,0x004267d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4267d0, 4) , (unique, 0x1200, 1)

004266c8: _nop

004266cc: beq t0,zero,0x004267e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4267e0, 4) , (unique, 0x1200, 1)

004266d0: _nop

004266d4: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004266d8: andi t0,t0,0xff
	(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xff, 4)

004266dc: lw a2,0x34(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004266e0: lw a3,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004266e4: b 0x004266fc
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x4266fc, 4)

004266e8: _or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004266ec: lbu t0,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x2f00, 1)

004266f0: nop

004266f4: beq t0,zero,0x00426778
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426778, 4) , (unique, 0x1200, 1)

004266f8: _addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

004266fc: addiu v0,t0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

00426700: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00426704: bne v0,zero,0x004266ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4266ec, 4) , (unique, 0x1700, 1)

00426708: _addu a0,s2,v0
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0042670c: b 0x00426720
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x426720, 4)

00426710: _addu v1,a1,v0
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

00426714: beq v0,s1,0x004266ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4266ec, 4) , (unique, 0x1200, 1)

00426718: _addu a0,s2,v0
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0042671c: addu v1,a1,v0
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

00426720: lb a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

00426724: lb v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

00426728: nop

0042672c: beq a0,v1,0x00426714
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x426714, 4) , (unique, 0x1200, 1)

00426730: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00426734: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

00426738: sltu v0,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0042673c: beq v0,zero,0x004266ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4266ec, 4) , (unique, 0x1200, 1)

00426740: _sll v0,t0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x20, 4) , (const, 0x1, 4)

00426744: addu v0,a2,v0
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

00426748: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042674c: nop

00426750: andi v0,v0,0x4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x4, 4)

00426754: beq v0,zero,0x00426778
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426778, 4) , (unique, 0x1200, 1)

00426758: _nop

0042675c: sll t0,t0,0x2
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

00426760: addu v0,a3,t0
	(register, 0x8, 4) INT_ADD (register, 0x1c, 4) , (register, 0x20, 4)

00426764: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426768: nop

0042676c: slti v0,v0,0x41
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x41, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00426770: bne v0,zero,0x004266ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4266ec, 4) , (unique, 0x1700, 1)

00426774: _nop

00426778: lw t9,-0x7e74(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff818c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042677c: or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00426780: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00426784: bal 0x00413840
	(register, 0x7c, 4) COPY (const, 0x42678c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x413840, 4)

00426788: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042678c: or s7,v0,zero
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00426790: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00426794: lb t0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_SEXT (unique, 0x2d00, 1)

00426798: li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

0042679c: b 0x00426274
	(register, 0x18, 4) COPY (const, 0xa, 4)
	 ---  BRANCH (ram, 0x426274, 4)

004267a0: _li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

004267a4: bne s7,zero,0x00426670
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x426670, 4) , (unique, 0x1700, 1)

004267a8: _nop

004267ac: lw v0,-0x7e7c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8184, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004267b0: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004267b4: lw a0,0x20(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004267b8: lw v0,-0x7e80(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8180, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004267bc: nop

004267c0: lbu t4,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

004267c4: lw v0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004267c8: b 0x004262a4
	(register, 0x20, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x4262a4, 4)

004267cc: _li t0,0x30
	(register, 0x20, 4) COPY (const, 0x30, 4)

004267d0: or s7,s0,zero
	(register, 0x5c, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004267d4: li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

004267d8: b 0x00426274
	(register, 0x18, 4) COPY (const, 0xa, 4)
	 ---  BRANCH (ram, 0x426274, 4)

004267dc: _li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

004267e0: b 0x00426778
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x426778, 4)

004267e4: _or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

