Label: 884
Function: __mpn_mul_1
Architecture: mips
Source File: Unknown
Entry Point: 0046d660

P-code:

0046d660: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046d664: addiu gp,gp,-0x2800
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffd800, 4)

0046d668: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046d66c: lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d670: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046d674: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046d678: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046d67c: beq a2,zero,0x0046d6e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d6e0, 4) , (unique, 0x1200, 1)

0046d680: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046d684: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046d688: beq a2,zero,0x0046d6c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	 ---  CBRANCH (ram, 0x46d6c0, 4) , (unique, 0x1200, 1)

0046d68c: _lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d690: mflo t2
	(register, 0x28, 4) COPY (register, 0x3004, 4)

0046d694: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046d698: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046d69c: addu t2,t2,v0
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x8, 4)

0046d6a0: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046d6a4: lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d6a8: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046d6ac: sltu v0,t2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046d6b0: sw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046d6b4: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046d6b8: bne a2,zero,0x0046d690
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46d690, 4) , (unique, 0x1700, 1)

0046d6bc: _addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

0046d6c0: mflo t2
	(register, 0x28, 4) COPY (register, 0x3004, 4)

0046d6c4: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046d6c8: addu t2,t2,v0
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x8, 4)

0046d6cc: sltu v0,t2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046d6d0: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046d6d4: sw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046d6d8: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046d6dc: addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

0046d6e0: mflo t2
	(register, 0x28, 4) COPY (register, 0x3004, 4)

0046d6e4: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046d6e8: addu t2,t2,v0
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x8, 4)

0046d6ec: sltu v0,t2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046d6f0: sw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046d6f4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)
	 ---  RETURN (register, 0x80, 4)

0046d6f8: _addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

