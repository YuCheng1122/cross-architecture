Label: 851
Function: _dl_fixup
Architecture: mips
Source File: Unknown
Entry Point: 00468974

P-code:

00468974: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

00468978: addiu gp,gp,0x24ec
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x24ec, 4)

0046897c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00468980: lw v1,0x7c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468984: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468988: lw a2,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046898c: addu v1,v0,a1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

00468990: addu v1,v1,a2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

00468994: lw a2,0x38(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468998: lw t0,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046899c: lw a1,0x34(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004689a0: lw a2,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004689a4: addiu sp,sp,-0x40
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc0, 4)

004689a8: srl a3,t0,0x8
	(register, 0x1c, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x8, 4)

004689ac: lw a1,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004689b0: sw s0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004689b4: addu a2,v0,a2
	(register, 0x18, 4) INT_ADD (register, 0x8, 4) , (register, 0x18, 4)

004689b8: lw s0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004689bc: sll v1,a3,0x4
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x4, 4)

004689c0: addu a2,a2,v1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

004689c4: sw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004689c8: andi t0,t0,0xff
	(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xff, 4)

004689cc: li v1,0x7f
	(register, 0xc, 4) COPY (const, 0x7f, 4)

004689d0: sw ra,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004689d4: sw s1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004689d8: addu t1,v0,a1
	(register, 0x24, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

004689dc: sw a2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

004689e0: bne t0,v1,0x00468bc8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0xc, 4)
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x468bc8, 4) , (unique, 0x1700, 1)

004689e4: _addu s0,v0,s0
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0x40, 4)

004689e8: lbu v1,0xd(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xd, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004689ec: nop

004689f0: andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

004689f4: bne v1,zero,0x00468b9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0xfff1, 4)
	 ---  CBRANCH (ram, 0x468b9c, 4) , (unique, 0x1700, 1)

004689f8: _ori v1,zero,0xfff1
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0xfff1, 4)

004689fc: lw v1,0x1d0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a00: nop

00468a04: beq v1,zero,0x00468a3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x468a3c, 4) , (unique, 0x1200, 1)

00468a08: _sll a3,a3,0x1
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x1, 4)

00468a0c: lw v1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a10: addu a3,a3,v0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x8, 4)

00468a14: addu a3,a3,v1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0xc, 4)

00468a18: lhu v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00468a1c: lw v0,0x25c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x25c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a20: andi v1,v1,0x7fff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x7fff, 4)

00468a24: sll v1,v1,0x4
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x4, 4)

00468a28: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00468a2c: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a30: nop

00468a34: bne v1,zero,0x00468a40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468a40, 4) , (unique, 0x1700, 1)

00468a38: _nop

00468a3c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468a40: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00468a44: lw v1,-0x74e0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a48: nop

00468a4c: bne v1,zero,0x00468b20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468b20, 4) , (unique, 0x1700, 1)

00468a50: _nop

00468a54: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00468a58: lw v1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a5c: lw a3,0x2bc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2bc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a60: lw t9,-0x7c70(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8390, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a64: sw a1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00468a68: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00468a6c: sw a1,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00468a70: sw zero,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00468a74: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00468a78: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00468a7c: addiu a2,sp,0x28
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00468a80: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x468a88, 4)
	(register, 0x10, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)
	 ---  CALLIND (register, 0x80, 4)

00468a84: _addu a0,t1,v1
	(register, 0x10, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

00468a88: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00468a8c: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a90: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00468a94: lw v0,-0x74e0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468a98: nop

00468a9c: bne v0,zero,0x00468b3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468b3c, 4) , (unique, 0x1700, 1)

00468aa0: _nop

00468aa4: lw a2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468aa8: nop

00468aac: beq a2,zero,0x00468af0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468af0, 4) , (unique, 0x1200, 1)

00468ab0: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468ab4: lhu v1,0xe(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

00468ab8: ori v0,zero,0xfff1
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xfff1, 4)

00468abc: beq v1,v0,0x00468ad0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468ad0, 4) , (unique, 0x1200, 1)

00468ac0: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468ac4: beq s1,zero,0x00468ad0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468ad0, 4) , (unique, 0x1200, 1)

00468ac8: _nop

00468acc: lw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468ad0: lw v1,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468ad4: li a0,0xa
	(register, 0x10, 4) COPY (const, 0xa, 4)

00468ad8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00468adc: lbu v1,0xc(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00468ae0: nop

00468ae4: andi v1,v1,0xf
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xf, 4)

00468ae8: beq v1,a0,0x00468bb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x64, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468bb4, 4) , (unique, 0x1200, 1)

00468aec: _or t9,v0,zero
	(register, 0x64, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00468af0: lw v1,-0x7c48(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff83b8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468af4: nop

00468af8: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468afc: nop

00468b00: bne v1,zero,0x00468b0c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468b0c, 4) , (unique, 0x1700, 1)

00468b04: _nop

00468b08: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00468b0c: lw ra,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b10: lw s1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b14: lw s0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b18: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	 ---  RETURN (register, 0x80, 4)

00468b1c: _addiu sp,sp,0x40
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)

00468b20: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00468b24: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00468b28: sw a1,-0x74dc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00468b2c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00468b30: lw a2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b34: b 0x00468a58
	(register, 0x14, 4) COPY (const, 0x5, 4)
	 ---  BRANCH (ram, 0x468a58, 4)

00468b38: _li a1,0x5
	(register, 0x14, 4) COPY (const, 0x5, 4)

00468b3c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00468b40: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00468b44: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00468b48: ll v1,-0x74dc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b4c: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

00468b50: sc at,-0x74dc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00468b54: beq at,zero,0x00468b48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468b48, 4) , (unique, 0x1200, 1)

00468b58: _nop

00468b5c: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00468b60: bne v1,v0,0x00468aa4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x468aa4, 4) , (unique, 0x1700, 1)

00468b64: _nop

00468b68: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00468b6c: li a1,0x81
	(register, 0x14, 4) COPY (const, 0x81, 4)

00468b70: addiu a0,v1,-0x74dc
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b24, 4)

00468b74: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00468b78: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468b7c: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00468b80: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00468b84: lw a2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468b88: nop

00468b8c: bne a2,zero,0x00468ab4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x468ab4, 4) , (unique, 0x1700, 1)

00468b90: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468b94: b 0x00468af0
	 ---  BRANCH (ram, 0x468af0, 4)

00468b98: _nop

00468b9c: lhu a0,0xe(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

00468ba0: nop

00468ba4: bne a0,v1,0x00468ad0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x468ad0, 4) , (unique, 0x1700, 1)

00468ba8: _nop

00468bac: b 0x00468ad0
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x468ad0, 4)

00468bb0: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00468bb4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x468bbc, 4)
	 ---  CALLIND (register, 0x80, 4)

00468bb8: _nop

00468bbc: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468bc0: b 0x00468af0
	 ---  BRANCH (ram, 0x468af0, 4)

00468bc4: _nop

00468bc8: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468bcc: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468bd0: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468bd4: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00468bd8: addiu a3,a3,-0x760c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff89f4, 4)

00468bdc: li a2,0x3f
	(register, 0x18, 4) COPY (const, 0x3f, 4)

00468be0: addiu a1,a1,-0x7650
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff89b0, 4)

00468be4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x468bec, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff89c0, 4)
	 ---  CALLIND (register, 0x80, 4)

00468be8: _addiu a0,a0,-0x7640
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff89c0, 4)

00468bec: nop

