Label: 224
Function: opendir_tail
Architecture: mips
Source File: Unknown
Entry Point: 0041d600

P-code:

0041d600: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041d604: addiu gp,gp,-0x27a0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffd860, 4)

0041d608: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041d60c: bltz a0,0x0041d728
	(unique, 0x1600, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d728, 4) , (unique, 0x1600, 1)

0041d610: _nop

0041d614: addiu sp,sp,-0x98
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff68, 4)

0041d618: lw t9,-0x7dd8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8228, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d61c: addiu a1,sp,0x18
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0041d620: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041d624: sw s0,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041d628: sw ra,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0041d62c: sw s1,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041d630: bal 0x0041f470
	(register, 0x7c, 4) COPY (const, 0x41d638, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41f470, 4)

0041d634: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041d638: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d63c: bltz v0,0x0041d700
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x4000, 4)
	 ---  CBRANCH (ram, 0x41d700, 4) , (unique, 0x1600, 1)

0041d640: _li v1,0x4000
	(register, 0xc, 4) COPY (const, 0x4000, 4)

0041d644: lw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d648: nop

0041d64c: andi v0,v0,0xf000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)

0041d650: bne v0,v1,0x0041d6ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x8000, 4)
	 ---  CBRANCH (ram, 0x41d6ec, 4) , (unique, 0x1700, 1)

0041d654: _ori v0,zero,0x8000
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x8000, 4)

0041d658: lw s1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d65c: nop

0041d660: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0041d664: bne v0,zero,0x0041d6d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41d6d0, 4) , (unique, 0x1700, 1)

0041d668: _lui v0,0x10
	(register, 0x8, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)

0041d66c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0041d670: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0041d674: beq v0,zero,0x0041d6c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d6c8, 4) , (unique, 0x1200, 1)

0041d678: _nop

0041d67c: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d680: nop

0041d684: bal 0x004198a0
	(register, 0x7c, 4) COPY (const, 0x41d68c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x20, 4)
	 ---  CALL (ram, 0x4198a0, 4)

0041d688: _addiu a0,s1,0x20
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x20, 4)

0041d68c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d690: beq v0,zero,0x0041d700
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d700, 4) , (unique, 0x1200, 1)

0041d694: _nop

0041d698: lw ra,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d69c: sw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041d6a0: sw s1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041d6a4: lw s0,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d6a8: lw s1,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d6ac: sw zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d6b0: sw zero,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d6b4: sw zero,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d6b8: sw zero,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d6bc: sw zero,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0041d6c0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)
	 ---  RETURN (register, 0x80, 4)

0041d6c4: _addiu sp,sp,0x98
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)

0041d6c8: b 0x0041d67c
	(register, 0x44, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41d67c, 4)

0041d6cc: _lui s1,0x10
	(register, 0x44, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)

0041d6d0: ori s1,zero,0x8000
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x8000, 4)

0041d6d4: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0041d6d8: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0041d6dc: bne v0,zero,0x0041d67c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d67c, 4) , (unique, 0x1700, 1)

0041d6e0: _nop

0041d6e4: b 0x0041d67c
	(register, 0x44, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x41d67c, 4)

0041d6e8: _lui s1,0x10
	(register, 0x44, 4) INT_LEFT (const, 0x10, 4) , (const, 0x10, 4)

0041d6ec: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d6f0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0041d6f4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041d6f8: li v1,0x14
	(register, 0xc, 4) COPY (const, 0x14, 4)

0041d6fc: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d700: lw t9,-0x7e10(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d704: nop

0041d708: bal 0x0041fd60
	(register, 0x7c, 4) COPY (const, 0x41d710, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41fd60, 4)

0041d70c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0041d710: lw ra,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d714: lw s1,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d718: lw s0,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d71c: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0041d720: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)
	 ---  RETURN (register, 0x80, 4)

0041d724: _addiu sp,sp,0x98
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x98, 4)

0041d728: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  RETURN (register, 0x80, 4)

0041d72c: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

