Label: 724
Function: _IO_adjust_wcolumn
Architecture: arm
Source File: Unknown
Entry Point: 0005ca10

P-code:

0005ca10: str lr,[sp,#-0x4]!
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xfffffffc, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x54, 4) , (register, 0x58, 4)

0005ca14: add lr,r1,r2, lsl #0x2
	(unique, 0x3280, 4) INT_SUB (const, 0x20, 4) , (const, 0x2, 4)
	(unique, 0x3300, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x3280, 4)
	(unique, 0x3400, 4) INT_AND (unique, 0x3300, 4) , (const, 0x1, 4)
	(register, 0x68, 1) SUBPIECE (unique, 0x3400, 4) , (const, 0x0, 4)
	(unique, 0x3580, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)
	(register, 0x66, 1) INT_CARRY (register, 0x24, 4) , (unique, 0x3580, 4)
	(register, 0x67, 1) INT_SCARRY (register, 0x24, 4) , (unique, 0x3580, 4)
	(register, 0x58, 4) INT_ADD (register, 0x24, 4) , (unique, 0x3580, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)

0005ca18: cpy r3,lr
	(register, 0x2c, 4) COPY (register, 0x58, 4)

0005ca1c: b 0x0005ca2c
	 ---  BRANCH (ram, 0x5ca2c, 4)

0005ca20: ldr r12,[r3,#-0x4]!
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (const, 0xfffffffc, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (register, 0x2c, 4)

0005ca24: cmp r12,#0xa
	(unique, 0x2e80, 4) INT_RIGHT (const, 0xa, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x66, 1) INT_LESSEQUAL (const, 0xa, 4) , (register, 0x50, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x50, 4) , (const, 0xa, 4)
	(unique, 0x42900, 4) INT_SUB (register, 0x50, 4) , (const, 0xa, 4)
	(register, 0x64, 1) INT_SLESS (unique, 0x42900, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (unique, 0x42900, 4) , (const, 0x0, 4)
	(register, 0x62, 1) COPY (register, 0x66, 1)
	(register, 0x61, 1) COPY (register, 0x65, 1)
	(register, 0x60, 1) COPY (register, 0x64, 1)
	(register, 0x63, 1) COPY (register, 0x67, 1)

0005ca28: beq 0x0005ca3c
	 ---  CBRANCH (ram, 0x5ca3c, 4) , (register, 0x61, 1)

0005ca2c: cmp r3,r1
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x66, 1) INT_LESSEQUAL (register, 0x24, 4) , (register, 0x2c, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x2c, 4) , (register, 0x24, 4)
	(unique, 0x42a00, 4) INT_SUB (register, 0x2c, 4) , (register, 0x24, 4)
	(register, 0x64, 1) INT_SLESS (unique, 0x42a00, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (unique, 0x42a00, 4) , (const, 0x0, 4)
	(register, 0x62, 1) COPY (register, 0x66, 1)
	(register, 0x61, 1) COPY (register, 0x65, 1)
	(register, 0x60, 1) COPY (register, 0x64, 1)
	(register, 0x63, 1) COPY (register, 0x67, 1)

0005ca30: bhi 0x0005ca20
	(unique, 0x1e00, 1) BOOL_NEGATE (register, 0x61, 1)
	(unique, 0x1f00, 1) BOOL_AND (register, 0x62, 1) , (unique, 0x1e00, 1)
	 ---  CBRANCH (ram, 0x5ca20, 4) , (unique, 0x1f00, 1)

0005ca34: add r0,r2,r0
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x66, 1) INT_CARRY (register, 0x28, 4) , (register, 0x20, 4)
	(register, 0x67, 1) INT_SCARRY (register, 0x28, 4) , (register, 0x20, 4)
	(register, 0x20, 4) INT_ADD (register, 0x28, 4) , (register, 0x20, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)

0005ca38: ldr pc,[sp],#0x4
	(unique, 0x8800, 4) COPY (register, 0x54, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
	(unique, 0x43900, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
	(unique, 0x0, 4) INT_AND (unique, 0x43900, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (unique, 0x43900, 4) , (const, 0xfffffffe, 4)
	 ---  BRANCHIND (register, 0x5c, 4)

0005ca3c: sub lr,lr,r3
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x66, 1) INT_LESSEQUAL (register, 0x2c, 4) , (register, 0x58, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (register, 0x2c, 4)
	(register, 0x58, 4) INT_SUB (register, 0x58, 4) , (register, 0x2c, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)

0005ca40: mov lr,lr, asr #0x2
	(unique, 0x3e00, 4) INT_SUB (const, 0x2, 4) , (const, 0x1, 4)
	(unique, 0x3e80, 4) INT_RIGHT (register, 0x58, 4) , (unique, 0x3e00, 4)
	(unique, 0x3f80, 4) INT_AND (unique, 0x3e80, 4) , (const, 0x1, 4)
	(register, 0x68, 1) SUBPIECE (unique, 0x3f80, 4) , (const, 0x0, 4)
	(unique, 0x4100, 4) INT_SRIGHT (register, 0x58, 4) , (const, 0x2, 4)
	(register, 0x58, 4) COPY (unique, 0x4100, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)

0005ca44: sub r0,lr,#0x1
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x1, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x66, 1) INT_LESSEQUAL (const, 0x1, 4) , (register, 0x58, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x20, 4) INT_SUB (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)

0005ca48: ldr pc,[sp],#0x4
	(unique, 0x8800, 4) COPY (register, 0x54, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x4, 4)
	(unique, 0x43900, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8800, 4)
	(unique, 0x0, 4) INT_AND (unique, 0x43900, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (unique, 0x43900, 4) , (const, 0xfffffffe, 4)
	 ---  BRANCHIND (register, 0x5c, 4)

