Label: 679
Function: ___printf_fp
Architecture: arm
Source File: Unknown
Entry Point: 00059d18

P-code:

00059d18: stmdb sp!,{r4,r5,r6,lr}
	(register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)

00059d1c: cpy r4,r1
	(register, 0x30, 4) COPY (register, 0x24, 4)

00059d20: ldrb r3,[r4,#0xd]
	(unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0xd, 4)
	(unique, 0x43980, 1) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)
	(register, 0x2c, 4) INT_ZEXT (unique, 0x43980, 1)

00059d24: sub sp,sp,#0x228
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x228, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x66, 1) INT_LESSEQUAL (const, 0x228, 4) , (register, 0x54, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x54, 4) INT_SUB (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)

00059d28: tst r3,#0x4
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x4, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(unique, 0x74000, 4) INT_AND (register, 0x2c, 4) , (const, 0x4, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x62, 1) COPY (register, 0x66, 1)
	(register, 0x61, 1) COPY (register, 0x65, 1)
	(register, 0x60, 1) COPY (register, 0x64, 1)
	(register, 0x63, 1) COPY (register, 0x67, 1)

00059d2c: cpy r1,r0
	(register, 0x24, 4) COPY (register, 0x20, 4)

00059d30: cpy r5,r2
	(register, 0x34, 4) COPY (register, 0x28, 4)

00059d34: cpy r0,sp
	(register, 0x20, 4) COPY (register, 0x54, 4)

00059d38: beq 0x00059d74
	 ---  CBRANCH (ram, 0x59d74, 4) , (register, 0x61, 1)

00059d3c: bl 0x0005b254
	(register, 0x58, 4) COPY (const, 0x59d40, 4)
	 ---  CALL (ram, 0x5b254, 4)

00059d40: bl 0x0001f2a0
	(register, 0x58, 4) COPY (const, 0x59d44, 4)
	 ---  CALL (ram, 0x1f2a0, 4)

00059d44: cpy r12,r0
	(register, 0x50, 4) COPY (register, 0x20, 4)

00059d48: ldr r1,[0x59dac]
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x59dac, 4)

00059d4c: cpy r3,r5
	(register, 0x2c, 4) COPY (register, 0x34, 4)

00059d50: ldr r1,[pc,r1]
	(unique, 0x1780, 4) INT_ADD (const, 0x59d50, 4) , (const, 0x8, 4)
	(unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

00059d54: cpy r2,r4
	(register, 0x28, 4) COPY (register, 0x30, 4)

00059d58: cpy r0,sp
	(register, 0x20, 4) COPY (register, 0x54, 4)

00059d5c: ldr r1,[r12,r1]
	(unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x24, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

00059d60: bl 0x00059c38
	(register, 0x58, 4) COPY (const, 0x59d64, 4)
	 ---  CALL (ram, 0x59c38, 4)

00059d64: cpy r0,sp
	(register, 0x20, 4) COPY (register, 0x54, 4)

00059d68: bl 0x0005b290
	(register, 0x58, 4) COPY (const, 0x59d6c, 4)
	 ---  CALL (ram, 0x5b290, 4)

00059d6c: add sp,sp,#0x228
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x228, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)

00059d70: ldmia sp!,{r4,r5,r6,pc}
	(register, 0x80, 4) COPY (register, 0x54, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x54, 4) COPY (register, 0x80, 4)
	(unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
	 ---  RETURN (register, 0x5c, 4)

00059d74: bl 0x00057b44
	(register, 0x58, 4) COPY (const, 0x59d78, 4)
	 ---  CALL (ram, 0x57b44, 4)

00059d78: bl 0x0001f2a0
	(register, 0x58, 4) COPY (const, 0x59d7c, 4)
	 ---  CALL (ram, 0x1f2a0, 4)

00059d7c: cpy r12,r0
	(register, 0x50, 4) COPY (register, 0x20, 4)

00059d80: ldr r1,[0x59db0]
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (const, 0x59db0, 4)

00059d84: cpy r3,r5
	(register, 0x2c, 4) COPY (register, 0x34, 4)

00059d88: ldr r1,[pc,r1]
	(unique, 0x1780, 4) INT_ADD (const, 0x59d88, 4) , (const, 0x8, 4)
	(unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x24, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

00059d8c: cpy r2,r4
	(register, 0x28, 4) COPY (register, 0x30, 4)

00059d90: cpy r0,sp
	(register, 0x20, 4) COPY (register, 0x54, 4)

00059d94: ldr r1,[r12,r1]
	(unique, 0x8480, 4) INT_ADD (register, 0x50, 4) , (register, 0x24, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

00059d98: bl 0x00059a14
	(register, 0x58, 4) COPY (const, 0x59d9c, 4)
	 ---  CALL (ram, 0x59a14, 4)

00059d9c: cpy r0,sp
	(register, 0x20, 4) COPY (register, 0x54, 4)

00059da0: bl 0x00057b84
	(register, 0x58, 4) COPY (const, 0x59da4, 4)
	 ---  CALL (ram, 0x57b84, 4)

00059da4: add sp,sp,#0x228
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x228, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0xf, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x66, 1) INT_CARRY (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x67, 1) INT_SCARRY (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x228, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)

00059da8: ldmia sp!,{r4,r5,r6,pc}
	(register, 0x80, 4) COPY (register, 0x54, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x54, 4) COPY (register, 0x80, 4)
	(unique, 0x0, 4) INT_AND (register, 0x5c, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (register, 0x5c, 4) , (const, 0xfffffffe, 4)
	 ---  RETURN (register, 0x5c, 4)

