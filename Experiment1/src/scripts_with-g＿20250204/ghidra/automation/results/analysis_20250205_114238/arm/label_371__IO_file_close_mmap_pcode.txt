Label: 371
Function: _IO_file_close_mmap
Architecture: arm
Source File: Unknown
Entry Point: 00036bec

P-code:

00036bec: stmdb sp!,{r4,lr}
	(register, 0x80, 4) INT_SUB (register, 0x54, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x58, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
	(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x54, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)

00036bf0: cpy r4,r0
	(register, 0x30, 4) COPY (register, 0x20, 4)

00036bf4: ldr r0,[r0,#0x1c]
	(unique, 0x8280, 4) INT_ADD (register, 0x20, 4) , (const, 0x1c, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)

00036bf8: ldr r1,[r4,#0x20]
	(unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)

00036bfc: sub r1,r1,r0
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x66, 1) INT_LESSEQUAL (register, 0x20, 4) , (register, 0x24, 4)
	(register, 0x67, 1) INT_SBORROW (register, 0x24, 4) , (register, 0x20, 4)
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)

00036c00: bl 0x0002ad70
	(register, 0x58, 4) COPY (const, 0x36c04, 4)
	 ---  CALL (ram, 0x2ad70, 4)

00036c04: mov r3,#0x0
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x0, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(register, 0x2c, 4) COPY (const, 0x0, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)

00036c08: ldr r0,[r4,#0x38]
	(unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x38, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)

00036c0c: str r3,[r4,#0x20]
	(unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x20, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)

00036c10: str r3,[r4,#0x1c]
	(unique, 0x8280, 4) INT_ADD (register, 0x30, 4) , (const, 0x1c, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x8280, 4) , (register, 0x2c, 4)

00036c14: ldmia sp!,{r4,lr}
	(register, 0x80, 4) COPY (register, 0x54, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (register, 0x80, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x54, 4) COPY (register, 0x80, 4)

00036c18: b 0x0002a2b8
	 ---  BRANCH (ram, 0x2a2b8, 4)

