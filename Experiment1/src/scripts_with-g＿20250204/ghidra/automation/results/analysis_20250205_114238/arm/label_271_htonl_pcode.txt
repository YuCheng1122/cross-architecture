Label: 271
Function: htonl
Architecture: arm
Source File: Unknown
Entry Point: 0002bbe0

P-code:

0002bbe0: eor r3,r0,r0, ror #0x10
	(unique, 0x4580, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x10, 4)
	(unique, 0x4600, 4) INT_SUB (const, 0x20, 4) , (const, 0x10, 4)
	(unique, 0x4680, 4) INT_LEFT (register, 0x20, 4) , (unique, 0x4600, 4)
	(unique, 0x4780, 4) INT_OR (unique, 0x4580, 4) , (unique, 0x4680, 4)
	(unique, 0x4800, 4) INT_RIGHT (unique, 0x4780, 4) , (const, 0x1f, 4)
	(unique, 0x4900, 4) INT_AND (unique, 0x4800, 4) , (const, 0x1, 4)
	(register, 0x68, 1) SUBPIECE (unique, 0x4900, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_XOR (register, 0x20, 4) , (unique, 0x4780, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

0002bbe4: mov r3,r3, lsr #0x8
	(unique, 0x3800, 4) INT_SUB (const, 0x8, 4) , (const, 0x1, 4)
	(unique, 0x3880, 4) INT_RIGHT (register, 0x2c, 4) , (unique, 0x3800, 4)
	(unique, 0x3980, 4) INT_AND (unique, 0x3880, 4) , (const, 0x1, 4)
	(register, 0x68, 1) SUBPIECE (unique, 0x3980, 4) , (const, 0x0, 4)
	(unique, 0x3b00, 4) INT_RIGHT (register, 0x2c, 4) , (const, 0x8, 4)
	(register, 0x2c, 4) COPY (unique, 0x3b00, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)

0002bbe8: bic r3,r3,#0xff00
	(unique, 0x2e80, 4) INT_RIGHT (const, 0xff00, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(unique, 0x41780, 4) INT_NEGATE (const, 0xff00, 4)
	(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (unique, 0x41780, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

0002bbec: eor r0,r3,r0, ror #0x8
	(unique, 0x4580, 4) INT_RIGHT (register, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x4600, 4) INT_SUB (const, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x4680, 4) INT_LEFT (register, 0x20, 4) , (unique, 0x4600, 4)
	(unique, 0x4780, 4) INT_OR (unique, 0x4580, 4) , (unique, 0x4680, 4)
	(unique, 0x4800, 4) INT_RIGHT (unique, 0x4780, 4) , (const, 0x1f, 4)
	(unique, 0x4900, 4) INT_AND (unique, 0x4800, 4) , (const, 0x1, 4)
	(register, 0x68, 1) SUBPIECE (unique, 0x4900, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_XOR (register, 0x2c, 4) , (unique, 0x4780, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)

0002bbf0: bx lr
	(unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
	 ---  RETURN (register, 0x5c, 4)

