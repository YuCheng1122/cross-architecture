Label: 317
Function: __sigsetjmp
Architecture: arm
Source File: Unknown
Entry Point: 0002e6a0

P-code:

0002e6a0: ldr r12,[0x2e708]
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (const, 0x2e708, 4)

0002e6a4: ldr r2,[pc,r12]
	(unique, 0x1780, 4) INT_ADD (const, 0x2e6a4, 4) , (const, 0x8, 4)
	(unique, 0x8480, 4) INT_ADD (unique, 0x1780, 4) , (register, 0x50, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

0002e6a8: cpy r12,r0
	(register, 0x50, 4) COPY (register, 0x20, 4)

0002e6ac: cpy r3,sp
	(register, 0x2c, 4) COPY (register, 0x54, 4)

0002e6b0: eor r3,r3,r2
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x2c, 4) INT_XOR (register, 0x2c, 4) , (register, 0x28, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

0002e6b4: str r3,[r12],#0x4
	(unique, 0x8800, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x2c, 4)

0002e6b8: eor r3,lr,r2
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x2c, 4) INT_XOR (register, 0x58, 4) , (register, 0x28, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

0002e6bc: str r3,[r12],#0x4
	(unique, 0x8800, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x8800, 4) , (register, 0x2c, 4)

0002e6c0: stmia r12!,{r4,r5,r6,r7,r8,r9,r10,r11}
	(register, 0x80, 4) COPY (register, 0x50, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x30, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x34, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x38, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x3c, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x40, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x44, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x48, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x4c, 4)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x4, 4)
	(register, 0x50, 4) COPY (register, 0x80, 4)

0002e6c4: ldr r3,[0x2e70c]
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (const, 0x2e70c, 4)

0002e6c8: ldr r2,[0x2e710]
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (const, 0x2e710, 4)

0002e6cc: add r3,r3,pc
	(unique, 0x1880, 4) INT_ADD (const, 0x2e6cc, 4) , (const, 0x8, 4)
	(register, 0x68, 1) COPY (register, 0x62, 1)
	(register, 0x66, 1) INT_CARRY (register, 0x2c, 4) , (unique, 0x1880, 4)
	(register, 0x67, 1) INT_SCARRY (register, 0x2c, 4) , (unique, 0x1880, 4)
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (unique, 0x1880, 4)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

0002e6d0: ldr r3,[r3,r2]
	(unique, 0x8480, 4) INT_ADD (register, 0x2c, 4) , (register, 0x28, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8480, 4)

0002e6d4: ldr r2,[r3,#0x0]
	(unique, 0x8280, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x8280, 4)

0002e6d8: tst r2,#0x40
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x40, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0x0, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0x40, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x62, 1) COPY (register, 0x66, 1)
	(register, 0x61, 1) COPY (register, 0x65, 1)
	(register, 0x60, 1) COPY (register, 0x64, 1)
	(register, 0x63, 1) COPY (register, 0x67, 1)

0002e6dc: beq 0x0002e6e4
	 ---  CBRANCH (ram, 0x2e6e4, 4) , (register, 0x61, 1)

0002e6e0: vstmia r12!,{d8,d9,d10,d11,d12,d13,d14,d15}
	(register, 0x80, 4) COPY (register, 0x50, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x340, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x348, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x350, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x358, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x360, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x368, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x370, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (register, 0x80, 4) , (register, 0x378, 8)
	(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x8, 4)
	(unique, 0x20a00, 4) INT_LEFT (const, 0x10, 4) , (const, 0x2, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (unique, 0x20a00, 4)

0002e6e4: tst r2,#0x200
	(unique, 0x2e80, 4) INT_RIGHT (const, 0x200, 4) , (const, 0x1f, 4)
	(unique, 0x2f00, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x2f80, 1) BOOL_AND (unique, 0x2f00, 1) , (register, 0x62, 1)
	(unique, 0x3000, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x3080, 1) SUBPIECE (unique, 0x2e80, 4) , (const, 0x0, 4)
	(unique, 0x3100, 1) BOOL_AND (unique, 0x3000, 1) , (unique, 0x3080, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x2f80, 1) , (unique, 0x3100, 1)
	(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0x200, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
	(register, 0x62, 1) COPY (register, 0x66, 1)
	(register, 0x61, 1) COPY (register, 0x65, 1)
	(register, 0x60, 1) COPY (register, 0x64, 1)
	(register, 0x63, 1) COPY (register, 0x67, 1)

0002e6e8: beq 0x0002e704
	 ---  CBRANCH (ram, 0x2e704, 4) , (register, 0x61, 1)

0002e6ec: stcl p1,cr10,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x228, 4) , (unique, 0x10680, 4)

0002e6f0: stcl p1,cr11,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x22c, 4) , (unique, 0x10680, 4)

0002e6f4: stcl p1,cr12,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x230, 4) , (unique, 0x10680, 4)

0002e6f8: stcl p1,cr13,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x234, 4) , (unique, 0x10680, 4)

0002e6fc: stcl p1,cr14,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x238, 4) , (unique, 0x10680, 4)

0002e700: stcl p1,cr15,[r12],#0x8
	(unique, 0x10680, 4) COPY (register, 0x50, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	 ---  CALLOTHER (const, 0xd, 4) , (const, 0x1, 4) , (register, 0x23c, 4) , (unique, 0x10680, 4)

0002e704: b 0x0002e714
	 ---  BRANCH (ram, 0x2e714, 4)

