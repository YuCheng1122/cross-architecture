Function: execute_stack_op
Address: 0047b210
P-code:

0047b210: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

0047b214: addiu gp,gp,-0x3b0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xfffffc50, 4)

0047b218: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0047b21c: addiu sp,sp,-0x150
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffeb0, 4)

0047b220: sw s2,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0047b224: lw s2,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b228: sw s7,0x148(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x148, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0047b22c: sw s5,0x140(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0047b230: sw s4,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0047b234: sw s3,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0047b238: sw s1,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0047b23c: sw s0,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0047b240: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0047b244: sw ra,0x14c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0047b248: sw s6,0x144(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x144, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0047b24c: or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0047b250: or s0,a2,zero
	(register, 0x40, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0047b254: sw a3,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0047b258: li s7,0x1
	(register, 0x5c, 4) COPY (const, 0x1, 4)

0047b25c: addiu s3,sp,0x18
	(register, 0x4c, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0047b260: li s4,0x92
	(register, 0x50, 4) COPY (const, 0x92, 4)

0047b264: li s5,0x28
	(register, 0x54, 4) COPY (const, 0x28, 4)

0047b268: addiu s2,s2,-0x474c
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffb8b4, 4)

0047b26c: sltu v0,a0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0047b270: bne v0,zero,0x0047b2bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b2bc, 4) , (unique, 0x1700, 1)

0047b274: _nop

0047b278: beq s7,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b27c: _nop

0047b280: addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b284: lw ra,0x14c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b288: sll s7,s7,0x2
	(register, 0x5c, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)

0047b28c: addu s7,sp,s7
	(register, 0x5c, 4) INT_ADD (register, 0x74, 4) , (register, 0x5c, 4)

0047b290: lw v0,0x18(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b294: lw s6,0x144(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x144, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b298: lw s7,0x148(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x148, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b29c: lw s5,0x140(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2a0: lw s4,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2a4: lw s3,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2a8: lw s2,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2ac: lw s1,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2b0: lw s0,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2b4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x150, 4)
	 ---  RETURN (register, 0x80, 4)

0047b2b8: _addiu sp,sp,0x150
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x150, 4)

0047b2bc: lbu t0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b2c0: nop

0047b2c4: sltiu v0,t0,0x17
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x17, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b2c8: beq v0,zero,0x0047b380
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x47b380, 4) , (unique, 0x1200, 1)

0047b2cc: _addiu s6,a0,0x1
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0047b2d0: sltiu v0,t0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b2d4: beq v0,zero,0x0047b358
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (const, 0xfffffffd, 4)
	 ---  CBRANCH (ram, 0x47b358, 4) , (unique, 0x1200, 1)

0047b2d8: _addiu v0,t0,-0x3
	(register, 0x8, 4) INT_ADD (register, 0x20, 4) , (const, 0xfffffffd, 4)

0047b2dc: lw t9,-0x7fcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8034, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b2e0: nop

0047b2e4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x47b2ec, 4)
	 ---  CALLIND (register, 0x80, 4)

0047b2e8: _nop

0047b2ec: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0047b2f0: sllv v0,v0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0047b2f4: andi v1,v0,0xcf8
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xcf8, 4)

0047b2f8: bne v1,zero,0x0047b3ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1304, 4)
	 ---  CBRANCH (ram, 0x47b3ac, 4) , (unique, 0x1700, 1)

0047b2fc: _andi v1,v0,0x1304
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1304, 4)

0047b300: bne v1,zero,0x0047b4b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x47b4b0, 4) , (unique, 0x1700, 1)

0047b304: _andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0047b308: beq v0,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b30c: _slti v0,s7,0x3
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0047b310: bne v0,zero,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b314: _addiu a0,s7,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b318: addiu v1,s7,-0x2
	(register, 0xc, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)

0047b31c: addiu a1,s7,-0x3
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffd, 4)

0047b320: addiu v0,sp,0x18
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0047b324: sll a1,a1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)

0047b328: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0047b32c: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0047b330: addu a0,v0,a0
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0047b334: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0047b338: addu v0,v0,a1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

0047b33c: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b340: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b344: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b348: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0047b34c: sw a1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0047b350: b 0x0047b6b4
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  BRANCH (ram, 0x47b6b4, 4)

0047b354: _sw a2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0047b358: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0047b35c: sltiu v1,v0,0x14
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0047b360: beq v1,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b364: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0047b368: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0047b36c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b370: nop

0047b374: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

0047b378: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0047b37c: _nop

0047b380: sltiu v0,t0,0x70
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x70, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b384: beq v0,zero,0x0047b440
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x50, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b440, 4) , (unique, 0x1200, 1)

0047b388: _sltiu v0,t0,0x50
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x50, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b38c: beq v0,zero,0x0047b5ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffb0, 4)
	 ---  CBRANCH (ram, 0x47b5ec, 4) , (unique, 0x1200, 1)

0047b390: _addiu a1,t0,-0x50
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffb0, 4)

0047b394: beq t0,s5,0x0047b8cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x54, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x29, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b8cc, 4) , (unique, 0x1200, 1)

0047b398: _sltiu v0,t0,0x29
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x29, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b39c: beq v0,zero,0x0047b410
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x24, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b410, 4) , (unique, 0x1200, 1)

0047b3a0: _sltiu v0,t0,0x24
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x24, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b3a4: bne v0,zero,0x0047b2ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffe9, 4)
	 ---  CBRANCH (ram, 0x47b2ec, 4) , (unique, 0x1700, 1)

0047b3a8: _addiu v1,t0,-0x17
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffe9, 4)

0047b3ac: slti v0,s7,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0047b3b0: bne v0,zero,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b3b4: _addiu a0,s7,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)

0047b3b8: addiu t0,t0,-0x1a
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffe6, 4)

0047b3bc: addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b3c0: addiu v0,sp,0x18
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0047b3c4: sll v1,a0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0047b3c8: sll s7,s7,0x2
	(register, 0x5c, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)

0047b3cc: andi t0,t0,0xff
	(register, 0x20, 4) INT_AND (register, 0x20, 4) , (const, 0xff, 4)

0047b3d0: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0047b3d4: sltiu a1,t0,0x15
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x15, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0047b3d8: addu v0,v0,s7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x5c, 4)

0047b3dc: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b3e0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b3e4: beq a1,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b3e8: _sll t0,t0,0x2
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

0047b3ec: lw a1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b3f0: nop

0047b3f4: addiu a1,a1,-0x46fc
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffb904, 4)

0047b3f8: addu a1,a1,t0
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x20, 4)

0047b3fc: lw a1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b400: nop

0047b404: addu a1,a1,gp
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x70, 4)

0047b408: jr a1
	(unique, 0xc80, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x14, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0047b40c: _nop

0047b410: li v0,0x2f
	(register, 0x8, 4) COPY (const, 0x2f, 4)

0047b414: beq t0,v0,0x0047b8a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x30, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b8a8, 4) , (unique, 0x1200, 1)

0047b418: _sltiu v0,t0,0x30
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x30, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b41c: bne v0,zero,0x0047b3ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x47b3ac, 4) , (unique, 0x1700, 1)

0047b420: _addiu v1,t0,-0x30
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

0047b424: sltiu v0,s7,0x40
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b428: beq v0,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b42c: _sll v0,s7,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)

0047b430: addu v0,s3,v0
	(register, 0x8, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)

0047b434: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0047b438: b 0x0047b6b4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x47b6b4, 4)

0047b43c: _addiu s7,s7,0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0047b440: beq t0,s4,0x0047b644
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x50, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x93, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b644, 4) , (unique, 0x1200, 1)

0047b444: _sltiu v0,t0,0x93
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x93, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b448: beq v0,zero,0x0047b494
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x96, 4)
	 ---  CBRANCH (ram, 0x47b494, 4) , (unique, 0x1200, 1)

0047b44c: _li v0,0x96
	(register, 0x8, 4) COPY (const, 0x96, 4)

0047b450: sltiu v0,t0,0x90
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x90, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b454: lw t1,-0x75ec(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b458: bne v0,zero,0x0047b608
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b608, 4) , (unique, 0x1700, 1)

0047b45c: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b460: li v0,0x90
	(register, 0x8, 4) COPY (const, 0x90, 4)

0047b464: bne t0,v0,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b468: _nop

0047b46c: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b470: nop

0047b474: addiu t9,t9,-0x6ec0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9140, 4)

0047b478: bal 0x00479140
	(register, 0x7c, 4) COPY (const, 0x47b480, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	 ---  CALL (ram, 0x479140, 4)

0047b47c: _addiu a1,sp,0x124
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)

0047b480: or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b484: lw a1,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b488: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0047b48c: b 0x0047b5f4
	(register, 0x64, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b5f4, 4)

0047b490: _or t9,t1,zero
	(register, 0x64, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0047b494: beq t0,v0,0x0047b6b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0xf1, 4)
	 ---  CBRANCH (ram, 0x47b6b4, 4) , (unique, 0x1200, 1)

0047b498: _li v0,0xf1
	(register, 0x8, 4) COPY (const, 0xf1, 4)

0047b49c: beq t0,v0,0x0047b50c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x47b50c, 4) , (unique, 0x1200, 1)

0047b4a0: _addiu a2,a0,0x2
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0047b4a4: li v0,0x94
	(register, 0x8, 4) COPY (const, 0x94, 4)

0047b4a8: bne t0,v0,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b4ac: _nop

0047b4b0: beq s7,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b4b4: _nop

0047b4b8: addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b4bc: sll v0,s7,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)

0047b4c0: addu v0,sp,v0
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (register, 0x8, 4)

0047b4c4: lw t1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b4c8: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0047b4cc: beq t0,v0,0x0047b7c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x21, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b7c0, 4) , (unique, 0x1200, 1)

0047b4d0: _sltiu v0,t0,0x21
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0x21, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b4d4: beq v0,zero,0x0047b72c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x19, 4)
	 ---  CBRANCH (ram, 0x47b72c, 4) , (unique, 0x1200, 1)

0047b4d8: _li v0,0x19
	(register, 0x8, 4) COPY (const, 0x19, 4)

0047b4dc: beq t0,v0,0x0047b7b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1f, 4)
	 ---  CBRANCH (ram, 0x47b7b0, 4) , (unique, 0x1200, 1)

0047b4e0: _li v0,0x1f
	(register, 0x8, 4) COPY (const, 0x1f, 4)

0047b4e4: beq t0,v0,0x0047b424
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x47b424, 4) , (unique, 0x1200, 1)

0047b4e8: _subu v1,zero,t1
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x24, 4)

0047b4ec: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0047b4f0: bne t0,v0,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b4f4: _nop

0047b4f8: lwl v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b4fc: nop

0047b500: lwr v1,0x3(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

0047b504: b 0x0047b428
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x47b428, 4)

0047b508: _sltiu v0,s7,0x40
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b50c: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b510: lbu a1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b514: addiu a3,sp,0x118
	(register, 0x1c, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)

0047b518: addiu t9,t9,-0x6d64
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff929c, 4)

0047b51c: bal 0x0047929c
	(register, 0x7c, 4) COPY (const, 0x47b524, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x47929c, 4)

0047b520: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0047b524: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b528: lw v1,0x118(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b52c: b 0x0047b424
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b530: _or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b534: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b538: b 0x0047b424
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b53c: _addiu s6,a0,0x2
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0047b540: lb v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0047b544: b 0x0047b424
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b548: _addiu s6,a0,0x2
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0047b54c: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b550: lbu v0,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b554: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

0047b558: or v1,v0,v1
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0047b55c: b 0x0047b424
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b560: _addiu s6,a0,0x3
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)

0047b564: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b568: lbu v0,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b56c: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

0047b570: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0047b574: sll v1,v0,0x10
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0047b578: b 0x0047b55c
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x47b55c, 4)

0047b57c: _sra v1,v1,0x10
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x10, 4)

0047b580: lwl v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b584: addiu s6,a0,0x5
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x5, 4)

0047b588: lwr v0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

0047b58c: b 0x0047b424
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b590: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b594: lwl v0,0x5(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b598: addiu s6,a0,0x9
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x9, 4)

0047b59c: lwr v0,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

0047b5a0: b 0x0047b424
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b5a4: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b5a8: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5ac: or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b5b0: addiu t9,t9,-0x6ec0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9140, 4)

0047b5b4: bal 0x00479140
	(register, 0x7c, 4) COPY (const, 0x47b5bc, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	 ---  CALL (ram, 0x479140, 4)

0047b5b8: _addiu a1,sp,0x120
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)

0047b5bc: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5c0: lw v1,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5c4: b 0x0047b424
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b5c8: _or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b5cc: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5d0: addiu a1,sp,0x118
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)

0047b5d4: addiu t9,t9,-0x6e88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9178, 4)

0047b5d8: bal 0x00479178
	(register, 0x7c, 4) COPY (const, 0x47b5e0, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x479178, 4)

0047b5dc: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b5e0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5e4: b 0x0047b528
	 ---  BRANCH (ram, 0x47b528, 4)

0047b5e8: _nop

0047b5ec: lw t9,-0x75ec(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b5f0: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0047b5f4: bal 0x0047afc8
	(register, 0x7c, 4) COPY (const, 0x47b5fc, 4)
	 ---  CALL (ram, 0x47afc8, 4)

0047b5f8: _nop

0047b5fc: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b600: b 0x0047b424
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b604: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b608: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b60c: nop

0047b610: addiu t9,t9,-0x6e88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9178, 4)

0047b614: bal 0x00479178
	(register, 0x7c, 4) COPY (const, 0x47b61c, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	 ---  CALL (ram, 0x479178, 4)

0047b618: _addiu a1,sp,0x11c
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)

0047b61c: or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b620: addiu a1,t0,-0x70
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffff90, 4)

0047b624: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0047b628: or t9,t1,zero
	(register, 0x64, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0047b62c: bal 0x0047afc8
	(register, 0x7c, 4) COPY (const, 0x47b634, 4)
	 ---  CALL (ram, 0x47afc8, 4)

0047b630: _nop

0047b634: lw v1,0x11c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b638: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b63c: b 0x0047b424
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b640: _addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0047b644: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b648: or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b64c: addiu t9,t9,-0x6ec0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9140, 4)

0047b650: bal 0x00479140
	(register, 0x7c, 4) COPY (const, 0x47b658, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	 ---  CALL (ram, 0x479140, 4)

0047b654: _addiu a1,sp,0x124
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)

0047b658: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b65c: addiu a1,sp,0x11c
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)

0047b660: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b664: nop

0047b668: addiu t9,t9,-0x6e88
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9178, 4)

0047b66c: bal 0x00479178
	(register, 0x7c, 4) COPY (const, 0x47b674, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x479178, 4)

0047b670: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b674: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b678: lw a1,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b67c: lw t9,-0x75ec(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b680: or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b684: b 0x0047b62c
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b62c, 4)

0047b688: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0047b68c: beq s7,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b690: _addiu v0,s7,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b694: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0047b698: addu v0,sp,v0
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (register, 0x8, 4)

0047b69c: lw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b6a0: b 0x0047b428
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x47b428, 4)

0047b6a4: _sltiu v0,s7,0x40
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b6a8: beq s7,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b6ac: _nop

0047b6b0: addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b6b4: b 0x0047b26c
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b26c, 4)

0047b6b8: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b6bc: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b6c0: addiu v0,s7,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b6c4: addiu s6,a0,0x2
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0047b6c8: slt a0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0047b6cc: beq a0,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b6d0: _subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0047b6d4: b 0x0047b698
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x47b698, 4)

0047b6d8: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0047b6dc: slti v0,s7,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0047b6e0: bne v0,zero,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b6e4: _addiu v0,s7,-0x2
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)

0047b6e8: b 0x0047b698
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x47b698, 4)

0047b6ec: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0047b6f0: slti v0,s7,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0047b6f4: bne v0,zero,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b6f8: _addiu v0,s7,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b6fc: addiu a0,s7,-0x2
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffe, 4)

0047b700: addiu v1,sp,0x18
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0047b704: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0047b708: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0047b70c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0047b710: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0047b714: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b718: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b71c: nop

0047b720: sw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0047b724: b 0x0047b6b4
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x47b6b4, 4)

0047b728: _sw a1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0047b72c: li v0,0x23
	(register, 0x8, 4) COPY (const, 0x23, 4)

0047b730: beq t0,v0,0x0047b7c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x94, 4)
	 ---  CBRANCH (ram, 0x47b7c8, 4) , (unique, 0x1200, 1)

0047b734: _li v0,0x94
	(register, 0x8, 4) COPY (const, 0x94, 4)

0047b738: bne t0,v0,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b73c: _li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

0047b740: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b744: nop

0047b748: beq v0,v1,0x0047b4f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x47b4f8, 4) , (unique, 0x1200, 1)

0047b74c: _addiu s6,a0,0x2
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0047b750: sltiu v1,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0047b754: beq v1,zero,0x0047b784
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x47b784, 4) , (unique, 0x1200, 1)

0047b758: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0047b75c: beq v0,v1,0x0047b7a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x47b7a4, 4) , (unique, 0x1200, 1)

0047b760: _nop

0047b764: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0047b768: bne v0,v1,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b76c: _nop

0047b770: lbu v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b774: lbu v1,0x1(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b778: sll v0,v0,0x8
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4)

0047b77c: b 0x0047b424
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b780: _or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0047b784: li v1,0x8
	(register, 0xc, 4) COPY (const, 0x8, 4)

0047b788: bne v0,v1,0x0047b2dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1700, 1)

0047b78c: _sltiu v0,s7,0x40
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b790: lwl v1,0x4(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b794: nop

0047b798: lwr v1,0x7(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x7, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

0047b79c: b 0x0047b428
	 ---  BRANCH (ram, 0x47b428, 4)

0047b7a0: _nop

0047b7a4: lbu v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b7a8: b 0x0047b428
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x47b428, 4)

0047b7ac: _sltiu v0,s7,0x40
	(unique, 0x5280, 1) INT_LESS (register, 0x5c, 4) , (const, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0047b7b0: sra v0,t1,0x1f
	(register, 0x8, 4) INT_SRIGHT (register, 0x24, 4) , (const, 0x1f, 4)

0047b7b4: xor v1,t1,v0
	(register, 0xc, 4) INT_XOR (register, 0x24, 4) , (register, 0x8, 4)

0047b7b8: b 0x0047b424
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b7bc: _subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0047b7c0: b 0x0047b424
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x24, 4)
	(register, 0xc, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b7c4: _nor v1,zero,t1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x24, 4)
	(register, 0xc, 4) INT_NEGATE (unique, 0x4280, 4)

0047b7c8: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b7cc: or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0047b7d0: addiu t9,t9,-0x6ec0
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffff9140, 4)

0047b7d4: bal 0x00479140
	(register, 0x7c, 4) COPY (const, 0x47b7dc, 4)
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	 ---  CALL (ram, 0x479140, 4)

0047b7d8: _addiu a1,sp,0x120
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)

0047b7dc: lw v1,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b7e0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b7e4: or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0047b7e8: b 0x0047b424
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b7ec: _addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0047b7f0: and v1,v1,v0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x8, 4)

0047b7f4: b 0x0047b424
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b7f8: _or s7,a0,zero
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0047b7fc: bne v0,zero,0x0047b808
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47b808, 4) , (unique, 0x1700, 1)

0047b800: _div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

0047b804: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0047b808: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0047b80c: b 0x0047b424
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b810: _or s7,a0,zero
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0047b814: b 0x0047b7f4
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b818: _subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0047b81c: bne v0,zero,0x0047b828
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x47b828, 4) , (unique, 0x1700, 1)

0047b820: _divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0047b824: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0047b828: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

0047b82c: b 0x0047b424
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b424, 4)

0047b830: _or s7,a0,zero
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0047b834: b 0x0047b808
	(unique, 0xda80, 8) INT_SEXT (register, 0xc, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x47b808, 4)

0047b838: _mult v1,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0xc, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0047b83c: b 0x0047b7f4
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b840: _or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0047b844: b 0x0047b7f4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b848: _addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0047b84c: b 0x0047b7f4
	(unique, 0x4f80, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b850: _sllv v1,v1,v0
	(unique, 0x4f80, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0047b854: b 0x0047b7f4
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b858: _srlv v1,v1,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0047b85c: b 0x0047b7f4
	(unique, 0x5580, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (unique, 0x5580, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b860: _srav v1,v1,v0
	(unique, 0x5580, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (unique, 0x5580, 4)

0047b864: b 0x0047b7f4
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b868: _xor v1,v1,v0
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x8, 4)

0047b86c: slt v1,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0047b870: b 0x0047b7f4
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b874: _xori v1,v1,0x1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)

0047b878: b 0x0047b870
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  BRANCH (ram, 0x47b870, 4)

0047b87c: _slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0047b880: xor v1,v1,v0
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x8, 4)

0047b884: b 0x0047b7f4
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x1, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b888: _sltiu v1,v1,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x1, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0047b88c: b 0x0047b7f4
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b890: _slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0047b894: b 0x0047b7f4
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b898: _slt v1,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0047b89c: xor v1,v1,v0
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x8, 4)

0047b8a0: b 0x0047b7f4
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  BRANCH (ram, 0x47b7f4, 4)

0047b8a4: _sltu v1,zero,v1
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0047b8a8: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b8ac: lbu s6,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b8b0: sll v0,v0,0x8
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4)

0047b8b4: or s6,s6,v0
	(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x8, 4)

0047b8b8: sll s6,s6,0x10
	(register, 0x58, 4) INT_LEFT (register, 0x58, 4) , (const, 0x10, 4)

0047b8bc: sra s6,s6,0x10
	(register, 0x58, 4) INT_SRIGHT (register, 0x58, 4) , (const, 0x10, 4)

0047b8c0: addiu s6,s6,0x3
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x3, 4)

0047b8c4: b 0x0047b6b4
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (register, 0x58, 4)
	 ---  BRANCH (ram, 0x47b6b4, 4)

0047b8c8: _addu s6,a0,s6
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (register, 0x58, 4)

0047b8cc: beq s7,zero,0x0047b2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x47b2dc, 4) , (unique, 0x1200, 1)

0047b8d0: _nop

0047b8d4: addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0047b8d8: sll v0,s7,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x5c, 4) , (const, 0x2, 4)

0047b8dc: addu v0,sp,v0
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (register, 0x8, 4)

0047b8e0: lw v0,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047b8e4: nop

0047b8e8: beq v0,zero,0x0047b6b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x47b6b4, 4) , (unique, 0x1200, 1)

0047b8ec: _addiu s6,a0,0x3
	(register, 0x58, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)

0047b8f0: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b8f4: lbu v0,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0047b8f8: sll v1,v1,0x8
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x8, 4)

0047b8fc: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0047b900: sll v0,v0,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0047b904: sra v0,v0,0x10
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x10, 4)

0047b908: b 0x0047b6b4
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x47b6b4, 4)

0047b90c: _addu s6,s6,v0
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)

