Function: __tdelete
Address: 0043aae4
P-code:

0043aae4: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

0043aae8: addiu gp,gp,0x37c
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x37c, 4)

0043aaec: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0043aaf0: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

0043aaf4: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0043aaf8: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0043aafc: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0043ab00: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0043ab04: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0043ab08: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0043ab0c: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0043ab10: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0043ab14: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0043ab18: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0043ab1c: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0043ab20: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0043ab24: addiu sp,sp,-0xa0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff60, 4)

0043ab28: sw a0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0043ab2c: beq a1,zero,0x0043abcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x43abcc, 4) , (unique, 0x1200, 1)

0043ab30: _sw a2,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043ab34: lw s0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab38: li a0,-0x2
	(register, 0x10, 4) COPY (const, 0xfffffffe, 4)

0043ab3c: sltiu v0,s0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x40, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0043ab40: or s5,a1,zero
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0043ab44: bne v0,zero,0x0043abcc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_AND (register, 0x40, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x43abcc, 4) , (unique, 0x1700, 1)

0043ab48: _and s0,s0,a0
	(register, 0x40, 4) INT_AND (register, 0x40, 4) , (register, 0x10, 4)

0043ab4c: addiu s2,sp,0x10
	(register, 0x48, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0043ab50: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043ab54: or s6,zero,zero
	(register, 0x58, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0043ab58: li s3,0x28
	(register, 0x4c, 4) COPY (const, 0x28, 4)

0043ab5c: b 0x0043ab74
	(register, 0x50, 4) COPY (const, 0xfffffffe, 4)
	 ---  BRANCH (ram, 0x43ab74, 4)

0043ab60: _li s4,-0x2
	(register, 0x50, 4) COPY (const, 0xfffffffe, 4)

0043ab64: lw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab68: nop

0043ab6c: beq v0,zero,0x0043abcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x43abcc, 4) , (unique, 0x1200, 1)

0043ab70: _addiu s5,s0,0x8
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

0043ab74: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab78: lw a0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab7c: lw t9,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab80: nop

0043ab84: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x43ab8c, 4)
	 ---  CALLIND (register, 0x80, 4)

0043ab88: _nop

0043ab8c: lw gp,0x10(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ab90: beq v0,zero,0x0043ac3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43ac3c, 4) , (unique, 0x1200, 1)

0043ab94: _or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043ab98: beq s3,s6,0x0043ac08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x58, 4)
	(register, 0x5c, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x43ac08, 4) , (unique, 0x1200, 1)

0043ab9c: _sll s7,s6,0x2
	(register, 0x5c, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

0043aba0: lw s0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043aba4: addu s7,s2,s7
	(register, 0x5c, 4) INT_ADD (register, 0x48, 4) , (register, 0x5c, 4)

0043aba8: and s0,s0,s4
	(register, 0x40, 4) INT_AND (register, 0x40, 4) , (register, 0x50, 4)

0043abac: sw s5,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0043abb0: bgez s1,0x0043ab64
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43ab64, 4) , (unique, 0x1300, 1)

0043abb4: _addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0043abb8: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abbc: nop

0043abc0: and v0,v0,s4
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x50, 4)

0043abc4: bne v0,zero,0x0043ab74
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x43ab74, 4) , (unique, 0x1700, 1)

0043abc8: _addiu s5,s0,0x4
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0043abcc: or s0,zero,zero
	(register, 0x40, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0043abd0: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0043abd4: lw ra,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abd8: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abdc: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abe0: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abe4: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abe8: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abec: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abf0: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abf4: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043abf8: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043abfc: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac00: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

0043ac04: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0043ac08: addiu s3,s3,0x14
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x14, 4)

0043ac0c: sll v0,s3,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0043ac10: addiu v0,v0,0x7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4)

0043ac14: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0043ac18: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0043ac1c: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac20: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0043ac24: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0043ac28: or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0043ac2c: bal 0x0041c5a0
	(register, 0x7c, 4) COPY (const, 0x43ac34, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  CALL (ram, 0x41c5a0, 4)

0043ac30: _addiu a0,sp,0x10
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0043ac34: b 0x0043aba0
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x43aba0, 4)

0043ac38: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043ac3c: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac40: li a1,-0x2
	(register, 0x14, 4) COPY (const, 0xfffffffe, 4)

0043ac44: and a3,v0,a1
	(register, 0x1c, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

0043ac48: lw a0,0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac4c: lw a2,0x8(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac50: sltiu t0,a0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x2, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

0043ac54: bne t0,zero,0x0043ae94
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43ae94, 4) , (unique, 0x1700, 1)

0043ac58: _nop

0043ac5c: beq a2,zero,0x0043ae94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_AND (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x43ae94, 4) , (unique, 0x1200, 1)

0043ac60: _and a2,a0,a1
	(register, 0x18, 4) INT_AND (register, 0x10, 4) , (register, 0x14, 4)

0043ac64: addiu s4,a3,0x8
	(register, 0x50, 4) INT_ADD (register, 0x1c, 4) , (const, 0x8, 4)

0043ac68: b 0x0043ac98
	(register, 0x5c, 4) COPY (const, 0xfffffffe, 4)
	 ---  BRANCH (ram, 0x43ac98, 4)

0043ac6c: _li s7,-0x2
	(register, 0x5c, 4) COPY (const, 0xfffffffe, 4)

0043ac70: lw a0,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac74: addu s1,s2,s1
	(register, 0x44, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)

0043ac78: and a0,a0,s7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x5c, 4)

0043ac7c: lw v0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ac80: sw s5,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0043ac84: sltiu v0,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0043ac88: bne v0,zero,0x0043acfc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43acfc, 4) , (unique, 0x1700, 1)

0043ac8c: _addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0043ac90: or s5,s4,zero
	(register, 0x54, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0043ac94: addiu s4,a0,0x4
	(register, 0x50, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0043ac98: bne s3,s6,0x0043ac70
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x58, 4)
	(register, 0x44, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x43ac70, 4) , (unique, 0x1700, 1)

0043ac9c: _sll s1,s6,0x2
	(register, 0x44, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

0043aca0: addiu s3,s3,0x14
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x14, 4)

0043aca4: sll v0,s3,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0043aca8: addiu v0,v0,0x7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4)

0043acac: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0043acb0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0043acb4: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043acb8: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0043acbc: sw a3,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0043acc0: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0043acc4: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0043acc8: bal 0x0041c5a0
	(register, 0x7c, 4) COPY (const, 0x43acd0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  CALL (ram, 0x41c5a0, 4)

0043accc: _addiu a0,sp,0x10
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0043acd0: lw a0,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043acd4: or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043acd8: and a0,a0,s7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x5c, 4)

0043acdc: lw v0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ace0: addu s1,s2,s1
	(register, 0x44, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)

0043ace4: sltiu v0,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0043ace8: lw gp,0x10(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043acec: lw a3,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043acf0: sw s5,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0043acf4: beq v0,zero,0x0043ac90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43ac90, 4) , (unique, 0x1200, 1)

0043acf8: _addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0043acfc: lw a2,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad00: sll v0,s6,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

0043ad04: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0043ad08: lw v0,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad0c: li v1,-0x2
	(register, 0xc, 4) COPY (const, 0xfffffffe, 4)

0043ad10: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad14: nop

0043ad18: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0043ad1c: lw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad20: nop

0043ad24: beq a0,v1,0x0043b174
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x43b174, 4) , (unique, 0x1200, 1)

0043ad28: _nop

0043ad2c: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad30: nop

0043ad34: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0043ad38: or v1,v1,a2
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x18, 4)

0043ad3c: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043ad40: lw v0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad44: beq a3,a0,0x0043b184
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x43b184, 4) , (unique, 0x1200, 1)

0043ad48: _nop

0043ad4c: lw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad50: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043ad54: bne v0,zero,0x0043aed0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x43aed0, 4) , (unique, 0x1700, 1)

0043ad58: _sw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043ad5c: lui t4,0x3fff
	(register, 0x30, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

0043ad60: ori t4,t4,0xffff
	(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0xffff, 4)

0043ad64: li t2,-0x2
	(register, 0x28, 4) COPY (const, 0xfffffffe, 4)

0043ad68: beq a2,zero,0x0043ad84
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x58, 4) , (register, 0x30, 4)
	 ---  CBRANCH (ram, 0x43ad84, 4) , (unique, 0x1200, 1)

0043ad6c: _addu v1,s6,t4
	(register, 0xc, 4) INT_ADD (register, 0x58, 4) , (register, 0x30, 4)

0043ad70: lw v0,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad74: nop

0043ad78: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043ad7c: bne v0,zero,0x0043aeb8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43aeb8, 4) , (unique, 0x1700, 1)

0043ad80: _nop

0043ad84: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0043ad88: addu v1,s2,v1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

0043ad8c: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad90: nop

0043ad94: lw a1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ad98: nop

0043ad9c: and t0,a1,t2
	(register, 0x20, 4) INT_AND (register, 0x14, 4) , (register, 0x28, 4)

0043ada0: lw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ada4: nop

0043ada8: and v0,v0,t2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x28, 4)

0043adac: beq a2,v0,0x0043afa8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x43afa8, 4) , (unique, 0x1200, 1)

0043adb0: _nop

0043adb4: lw a2,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043adb8: nop

0043adbc: andi t3,a2,0x1
	(register, 0x2c, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)

0043adc0: beq t3,zero,0x0043adfc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43adfc, 4) , (unique, 0x1200, 1)

0043adc4: _andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043adc8: lw t3,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043adcc: and a2,a2,t2
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x28, 4)

0043add0: or a1,a1,v0
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x8, 4)

0043add4: ori t5,t3,0x1
	(register, 0x34, 4) INT_OR (register, 0x2c, 4) , (const, 0x1, 4)

0043add8: sw a2,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043addc: sw t5,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

0043ade0: sw t0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0043ade4: sw a1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043ade8: addiu t1,v0,0x8
	(register, 0x24, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)

0043adec: and v0,t3,t2
	(register, 0x8, 4) INT_AND (register, 0x2c, 4) , (register, 0x28, 4)

0043adf0: lw a2,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043adf4: addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0043adf8: sw t1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0043adfc: lw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae00: nop

0043ae04: beq v1,zero,0x0043aeec
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x43aeec, 4) , (unique, 0x1200, 1)

0043ae08: _sltiu a1,a2,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0043ae0c: lw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae10: nop

0043ae14: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043ae18: beq a1,zero,0x0043aee8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x43aee8, 4) , (unique, 0x1200, 1)

0043ae1c: _sltiu a3,a2,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5280, 1)

0043ae20: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae24: beq a3,zero,0x0043af14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43af14, 4) , (unique, 0x1200, 1)

0043ae28: _andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043ae2c: lw a2,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae30: beq a1,zero,0x0043b15c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x43b15c, 4) , (unique, 0x1200, 1)

0043ae34: _li a1,-0x2
	(register, 0x14, 4) COPY (const, 0xfffffffe, 4)

0043ae38: ori a1,a2,0x1
	(register, 0x14, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

0043ae3c: sw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043ae40: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae44: lw a2,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae48: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043ae4c: or a1,a1,a2
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x18, 4)

0043ae50: sw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043ae54: lw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae58: li a3,-0x2
	(register, 0x1c, 4) COPY (const, 0xfffffffe, 4)

0043ae5c: andi a2,a1,0x1
	(register, 0x18, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043ae60: or a2,v0,a2
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (register, 0x18, 4)

0043ae64: and a1,a1,a3
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x1c, 4)

0043ae68: sw a1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043ae6c: lw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae70: sw a2,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043ae74: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043ae78: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043ae7c: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0043ae80: and a1,a1,a3
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x1c, 4)

0043ae84: sw t0,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0043ae88: sw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043ae8c: b 0x0043aed0
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x43aed0, 4)

0043ae90: _sw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043ae94: bne s6,zero,0x0043b16c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43b16c, 4) , (unique, 0x1700, 1)

0043ae98: _andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043ae9c: or v0,v0,a2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x18, 4)

0043aea0: andi a0,a0,0x1
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)

0043aea4: bne a0,zero,0x0043aecc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x43aecc, 4) , (unique, 0x1700, 1)

0043aea8: _sw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043aeac: or a0,a3,zero
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0043aeb0: beq a2,zero,0x0043aed0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43aed0, 4) , (unique, 0x1200, 1)

0043aeb4: _nop

0043aeb8: lw v0,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043aebc: li v1,-0x2
	(register, 0xc, 4) COPY (const, 0xfffffffe, 4)

0043aec0: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0043aec4: b 0x0043aed0
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x43aed0, 4)

0043aec8: _sw v0,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043aecc: or a0,a3,zero
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0043aed0: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043aed4: nop

0043aed8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x43aee0, 4)
	 ---  CALLIND (register, 0x80, 4)

0043aedc: _nop

0043aee0: b 0x0043abd0
	 ---  BRANCH (ram, 0x43abd0, 4)

0043aee4: _nop

0043aee8: sltiu a1,a2,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0043aeec: bne a1,zero,0x0043af8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x43af8c, 4) , (unique, 0x1700, 1)

0043aef0: _and a1,a2,t2
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0x28, 4)

0043aef4: lw a1,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043aef8: nop

0043aefc: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043af00: beq a1,zero,0x0043af8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43af8c, 4) , (unique, 0x1200, 1)

0043af04: _nop

0043af08: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af0c: nop

0043af10: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043af14: li a3,-0x2
	(register, 0x1c, 4) COPY (const, 0xfffffffe, 4)

0043af18: and a3,a2,a3
	(register, 0x1c, 4) INT_AND (register, 0x18, 4) , (register, 0x1c, 4)

0043af1c: lw t2,0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af20: nop

0043af24: andi t2,t2,0x1
	(register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x1, 4)

0043af28: beq t2,zero,0x0043ae2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43ae2c, 4) , (unique, 0x1200, 1)

0043af2c: _nop

0043af30: beq a1,zero,0x0043af3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43af3c, 4) , (unique, 0x1200, 1)

0043af34: _nop

0043af38: ori a3,a2,0x1
	(register, 0x1c, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

0043af3c: sw a3,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0043af40: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af44: li t2,-0x2
	(register, 0x28, 4) COPY (const, 0xfffffffe, 4)

0043af48: and a1,a1,t2
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x28, 4)

0043af4c: sw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043af50: lw a2,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af54: lw a1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af58: and a2,a2,t2
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x28, 4)

0043af5c: lw a3,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af60: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043af64: and a3,a3,t2
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (register, 0x28, 4)

0043af68: sw a3,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0043af6c: lw a2,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043af70: or a1,v0,a1
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)

0043af74: andi a2,a2,0x1
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)

0043af78: or v1,a2,v1
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (register, 0xc, 4)

0043af7c: sw v1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043af80: sw t0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0043af84: b 0x0043aed0
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x43aed0, 4)

0043af88: _sw a1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043af8c: ori a2,a2,0x1
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

0043af90: sw a2,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043af94: addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0043af98: bne s6,zero,0x0043ad68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43ad68, 4) , (unique, 0x1700, 1)

0043af9c: _or a2,t0,zero
	(register, 0x18, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0043afa0: b 0x0043aeb0
	 ---  BRANCH (ram, 0x43aeb0, 4)

0043afa4: _nop

0043afa8: lw t3,0x8(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043afac: nop

0043afb0: lw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043afb4: nop

0043afb8: andi a2,v0,0x1
	(register, 0x18, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043afbc: beq a2,zero,0x0043b010
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43b010, 4) , (unique, 0x1200, 1)

0043afc0: _andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043afc4: and v0,v0,t2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x28, 4)

0043afc8: sw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043afcc: lw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043afd0: nop

0043afd4: ori v0,v0,0x1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

0043afd8: sw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043afdc: lw a2,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043afe0: or a1,a1,t3
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x2c, 4)

0043afe4: andi v0,a2,0x1
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)

0043afe8: or v0,v0,t0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x20, 4)

0043afec: and a2,a2,t2
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x28, 4)

0043aff0: sw a2,0x8(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043aff4: sw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043aff8: lw v0,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043affc: sw a1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b000: addiu t1,t3,0x4
	(register, 0x24, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)

0043b004: addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0043b008: sw t1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0043b00c: or t3,a2,zero
	(register, 0x2c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0043b010: sltiu v1,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0043b014: bne v1,zero,0x0043b0b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x43b0b4, 4) , (unique, 0x1700, 1)

0043b018: _and v1,v0,t2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x28, 4)

0043b01c: lw v1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b020: nop

0043b024: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0043b028: beq v1,zero,0x0043b0b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43b0b4, 4) , (unique, 0x1200, 1)

0043b02c: _nop

0043b030: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b034: lw v1,0x8(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b038: nop

0043b03c: bne v1,zero,0x0043b0e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43b0e4, 4) , (unique, 0x1700, 1)

0043b040: _andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043b044: li a2,-0x2
	(register, 0x18, 4) COPY (const, 0xfffffffe, 4)

0043b048: and v0,v0,a2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)

0043b04c: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b050: beq a1,zero,0x0043b164
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x43b164, 4) , (unique, 0x1200, 1)

0043b054: _and a3,v1,a2
	(register, 0x1c, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)

0043b058: ori a3,v1,0x1
	(register, 0x1c, 4) INT_OR (register, 0xc, 4) , (const, 0x1, 4)

0043b05c: and a1,v1,a2
	(register, 0x14, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)

0043b060: sw a3,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0043b064: lw v1,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b068: sw a1,0x8(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b06c: lw a1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b070: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0043b074: or v1,v1,a1
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x14, 4)

0043b078: sw v1,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043b07c: lw a1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b080: lw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b084: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043b088: or a1,a1,t0
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x20, 4)

0043b08c: sw a1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b090: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b094: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0043b098: li a2,-0x2
	(register, 0x18, 4) COPY (const, 0xfffffffe, 4)

0043b09c: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0043b0a0: and a1,a1,a2
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x18, 4)

0043b0a4: sw t3,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0043b0a8: sw v1,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043b0ac: b 0x0043aed0
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x43aed0, 4)

0043b0b0: _sw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b0b4: lw v1,0x8(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b0b8: nop

0043b0bc: beq v1,zero,0x0043b150
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43b150, 4) , (unique, 0x1200, 1)

0043b0c0: _nop

0043b0c4: lw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b0c8: nop

0043b0cc: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043b0d0: beq a1,zero,0x0043b150
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43b150, 4) , (unique, 0x1200, 1)

0043b0d4: _nop

0043b0d8: lw a1,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b0dc: nop

0043b0e0: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0043b0e4: lw a2,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b0e8: nop

0043b0ec: andi a2,a2,0x1
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)

0043b0f0: beq a2,zero,0x0043b048
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x43b048, 4) , (unique, 0x1200, 1)

0043b0f4: _li a2,-0x2
	(register, 0x18, 4) COPY (const, 0xfffffffe, 4)

0043b0f8: bne a1,zero,0x0043b17c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xfffffffe, 4)
	 ---  CBRANCH (ram, 0x43b17c, 4) , (unique, 0x1700, 1)

0043b0fc: _li a1,-0x2
	(register, 0x14, 4) COPY (const, 0xfffffffe, 4)

0043b100: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

0043b104: sw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043b108: lw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b10c: li a2,-0x2
	(register, 0x18, 4) COPY (const, 0xfffffffe, 4)

0043b110: and v0,v0,a2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)

0043b114: sw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043b118: lw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b11c: lw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b120: and a1,a1,a2
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x18, 4)

0043b124: sw a1,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b128: lw v1,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043b12c: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043b130: andi a1,v1,0x1
	(register, 0x14, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0043b134: or a1,a1,t0
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x20, 4)

0043b138: and v1,v1,a2
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)

0043b13c: or v0,t3,v0
	(register, 0x8, 4) INT_OR (register, 0x2c, 4) , (register, 0x8, 4)

0043b140: sw v1,0x8(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0043b144: sw a1,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0043b148: b 0x0043aed0
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x43aed0, 4)

0043b14c: _sw v0,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043b150: ori v0,v0,0x1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

0043b154: b 0x0043af94
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x43af94, 4)

0043b158: _sw v0,0x4(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043b15c: b 0x0043ae3c
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x43ae3c, 4)

0043b160: _and a1,a2,a1
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0x14, 4)

0043b164: b 0x0043b060
	(register, 0x14, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x43b060, 4)

0043b168: _or a1,a3,zero
	(register, 0x14, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0043b16c: b 0x0043ad00
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x43ad00, 4)

0043b170: _or a0,a3,zero
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0043b174: b 0x0043ad40
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  BRANCH (ram, 0x43ad40, 4)

0043b178: _sw a2,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0043b17c: b 0x0043b104
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x43b104, 4)

0043b180: _ori v0,v0,0x1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

0043b184: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0043b188: bne v0,zero,0x0043aed0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x30, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x43aed0, 4) , (unique, 0x1700, 1)

0043b18c: _lui t4,0x3fff
	(register, 0x30, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

0043b190: b 0x0043ad64
	(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0xffff, 4)
	 ---  BRANCH (ram, 0x43ad64, 4)

0043b194: _ori t4,t4,0xffff
	(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0xffff, 4)

