Function: __strlen
Address: 0041cc50
P-code:

0041cc50: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041cc54: addiu gp,gp,-0x1df0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffe210, 4)

0041cc58: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041cc5c: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

0041cc60: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0041cc64: li s0,-0x4
	(register, 0x40, 4) COPY (const, 0xfffffffc, 4)

0041cc68: sw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0041cc6c: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041cc70: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0041cc74: and s0,a0,s0
	(register, 0x40, 4) INT_AND (register, 0x10, 4) , (register, 0x40, 4)

0041cc78: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041cc7c: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

0041cc80: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cc84: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

0041cc88: and v0,a0,v1
	(register, 0x8, 4) INT_AND (register, 0x10, 4) , (register, 0xc, 4)

0041cc8c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0041cc90: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0041cc94: nor v0,v0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0041cc98: sll v1,s1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0x44, 4) , (const, 0x3, 4)

0041cc9c: sllv a0,v0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0041cca0: bne a0,zero,0x0041cd14
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41cd14, 4) , (unique, 0x1700, 1)

0041cca4: _lui a3,0xfefe
	(register, 0x1c, 4) INT_LEFT (const, 0xfefe, 4) , (const, 0x10, 4)

0041cca8: lui a2,0x8080
	(register, 0x18, 4) INT_LEFT (const, 0x8080, 4) , (const, 0x10, 4)

0041ccac: ori a3,a3,0xfeff
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (const, 0xfeff, 4)

0041ccb0: ori a2,a2,0x8080
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x8080, 4)

0041ccb4: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ccb8: nop

0041ccbc: addu v1,v0,a3
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

0041ccc0: nor a1,zero,v0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_NEGATE (unique, 0x4280, 4)

0041ccc4: and v1,v1,a1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x14, 4)

0041ccc8: and v1,v1,a2
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x18, 4)

0041cccc: beq v1,zero,0x0041ccb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x41ccb4, 4) , (unique, 0x1200, 1)

0041ccd0: _addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0041ccd4: lui v1,0x7f7f
	(register, 0xc, 4) INT_LEFT (const, 0x7f7f, 4) , (const, 0x10, 4)

0041ccd8: addiu v1,v1,0x7f7f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x7f7f, 4)

0041ccdc: and a0,v0,v1
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0041cce0: addu a0,a0,v1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0041cce4: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cce8: or a0,a0,v0
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

0041ccec: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x41ccf4, 4)
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)
	 ---  CALLIND (register, 0x80, 4)

0041ccf0: _nor a0,a0,v1
	(unique, 0x4280, 4) INT_OR (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_NEGATE (unique, 0x4280, 4)

0041ccf4: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

0041ccf8: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041ccfc: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

0041cd00: subu v0,v0,s1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

0041cd04: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd08: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd0c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0041cd10: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0041cd14: lw t9,-0x7de4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff821c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd18: nop

0041cd1c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x41cd24, 4)
	 ---  CALLIND (register, 0x80, 4)

0041cd20: _nop

0041cd24: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd28: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd2c: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041cd30: sra v0,v0,0x3
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x3, 4)

0041cd34: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0041cd38: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

