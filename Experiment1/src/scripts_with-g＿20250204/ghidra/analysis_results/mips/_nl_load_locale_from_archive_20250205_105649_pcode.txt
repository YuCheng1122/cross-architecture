Function: _nl_load_locale_from_archive
Address: 0046acc0
P-code:

0046acc0: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046acc4: addiu gp,gp,0x1a0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x1a0, 4)

0046acc8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046accc: addiu sp,sp,-0x218
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffde8, 4)

0046acd0: lw t9,-0x76c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff893c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046acd4: sw s8,0x210(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x210, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0046acd8: sw s1,0x1f4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046acdc: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0046ace0: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046ace4: sw s4,0x200(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x200, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046ace8: sw s0,0x1f0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046acec: sw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046acf0: sw ra,0x214(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x214, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046acf4: sw s7,0x20c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046acf8: sw s6,0x208(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x208, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046acfc: sw s5,0x204(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x204, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046ad00: sw s3,0x1fc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1fc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046ad04: sw s2,0x1f8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046ad08: sw a1,0x21c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x21c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046ad0c: sw s1,0x218(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x218, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046ad10: lw s0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad14: bal 0x0046ff30
	(register, 0x7c, 4) COPY (const, 0x46ad1c, 4)
	(register, 0x10, 4) COPY (const, 0x1e, 4)
	 ---  CALL (ram, 0x46ff30, 4)

0046ad18: _li a0,0x1e
	(register, 0x10, 4) COPY (const, 0x1e, 4)

0046ad1c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad20: sw v0,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ad24: lw v1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad28: nop

0046ad2c: lw s4,0x69c0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x69c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad30: nop

0046ad34: beq s4,zero,0x0046adcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1cc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46adcc, 4) , (unique, 0x1200, 1)

0046ad38: _sw v1,0x1cc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1cc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046ad3c: lw s7,-0x7d20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad40: b 0x0046ad70
	 ---  BRANCH (ram, 0x46ad70, 4)

0046ad44: _nop

0046ad48: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046ad4c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ad54, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ad50: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046ad54: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad58: beq v0,zero,0x0046ad80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ad80, 4) , (unique, 0x1200, 1)

0046ad5c: _nop

0046ad60: lw s4,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad64: nop

0046ad68: beq s4,zero,0x0046adcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46adcc, 4) , (unique, 0x1200, 1)

0046ad6c: _nop

0046ad70: lw s6,0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad74: nop

0046ad78: bne s6,s0,0x0046ad48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (register, 0x40, 4)
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ad48, 4) , (unique, 0x1700, 1)

0046ad7c: _or a1,s6,zero
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046ad80: lw v0,0x218(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x218, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad84: lw v1,0x21c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x21c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad88: sll s1,v0,0x2
	(register, 0x44, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046ad8c: addu s4,s4,s1
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (register, 0x44, 4)

0046ad90: lw v0,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ad94: sw s6,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046ad98: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046ad9c: lw ra,0x214(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x214, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ada0: lw s8,0x210(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x210, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ada4: lw s7,0x20c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ada8: lw s6,0x208(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x208, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adac: lw s5,0x204(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x204, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adb0: lw s4,0x200(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x200, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adb4: lw s3,0x1fc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1fc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adb8: lw s2,0x1f8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adbc: lw s1,0x1f4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adc0: lw s0,0x1f0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046adc4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x218, 4)
	 ---  RETURN (register, 0x80, 4)

0046adc8: _addiu sp,sp,0x218
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x218, 4)

0046adcc: lw t9,-0x7c00(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8400, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046add0: li a1,0x2e
	(register, 0x14, 4) COPY (const, 0x2e, 4)

0046add4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46addc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046add8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046addc: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ade0: beq v0,zero,0x0046af18
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46af18, 4) , (unique, 0x1200, 1)

0046ade4: _nop

0046ade8: lbu v1,0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046adec: nop

0046adf0: andi v1,v1,0xbf
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xbf, 4)

0046adf4: beq v1,zero,0x0046af18
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x40, 4)
	 ---  CBRANCH (ram, 0x46af18, 4) , (unique, 0x1200, 1)

0046adf8: _li a1,0x40
	(register, 0x14, 4) COPY (const, 0x40, 4)

0046adfc: addiu s3,v0,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046ae00: lw t9,-0x7b78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8488, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae04: nop

0046ae08: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ae10, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ae0c: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046ae10: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae14: subu s1,v0,s3
	(register, 0x44, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)

0046ae18: lw t9,-0x7808(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae1c: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046ae20: or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046ae24: bal 0x0045923c
	(register, 0x7c, 4) COPY (const, 0x46ae2c, 4)
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45923c, 4)

0046ae28: _or s7,v0,zero
	(register, 0x5c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046ae2c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae30: beq v0,zero,0x0046b160
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b160, 4) , (unique, 0x1200, 1)

0046ae34: _or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046ae38: lw t9,-0x7d18(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae3c: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046ae40: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046ae44: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ae4c, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ae48: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046ae4c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae50: bne v0,zero,0x0046ae68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x58, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x46ae68, 4) , (unique, 0x1700, 1)

0046ae54: _addu v0,s6,s1
	(register, 0x8, 4) INT_ADD (register, 0x58, 4) , (register, 0x44, 4)

0046ae58: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046ae5c: nop

0046ae60: beq v0,zero,0x0046af00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46af00, 4) , (unique, 0x1200, 1)

0046ae64: _nop

0046ae68: lw s1,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ae6c: nop

0046ae70: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046ae74: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ae7c, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ae78: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046ae7c: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046ae80: or a0,s7,zero
	(register, 0x10, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046ae84: or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046ae88: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ae90, 4)
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x40, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ae8c: _subu s3,s3,s0
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x40, 4)

0046ae90: addiu s4,v0,0x1
	(register, 0x50, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046ae94: addu v0,s3,s2
	(register, 0x8, 4) INT_ADD (register, 0x4c, 4) , (register, 0x48, 4)

0046ae98: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046ae9c: addiu v0,v0,0x7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7, 4)

0046aea0: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0046aea4: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aea8: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046aeac: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0046aeb0: addiu s1,sp,0x20
	(register, 0x44, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

0046aeb4: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aeb8: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046aebc: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046aec0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46aec8, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046aec4: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046aec8: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aecc: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046aed0: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aed4: or a1,s6,zero
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046aed8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46aee0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)
	 ---  CALLIND (register, 0x80, 4)

0046aedc: _addu a0,s1,s3
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)

0046aee0: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aee4: or a2,s4,zero
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046aee8: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aeec: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046aef0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46aef8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)
	 ---  CALLIND (register, 0x80, 4)

0046aef4: _addu a0,v0,s2
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)

0046aef8: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aefc: or s0,s1,zero
	(register, 0x40, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046af00: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af04: nop

0046af08: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46af10, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046af0c: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046af10: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af14: nop

0046af18: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af1c: nop

0046af20: sw v0,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046af24: lw v0,0x6a48(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6a48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af28: nop

0046af2c: beq v0,zero,0x0046b244
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46b244, 4) , (unique, 0x1200, 1)

0046af30: _lui a1,0x8
	(register, 0x14, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

0046af34: lw v0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af38: nop

0046af3c: lw s4,0x6a38(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af40: nop

0046af44: beq s4,zero,0x0046ad98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ad98, 4) , (unique, 0x1200, 1)

0046af48: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046af4c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046af50: sw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046af54: lw t9,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af58: nop

0046af5c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46af64, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046af60: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046af64: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046af68: beq v0,zero,0x0046b234
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b234, 4) , (unique, 0x1200, 1)

0046af6c: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046af70: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046af74: addu a1,s3,s0
	(register, 0x14, 4) INT_ADD (register, 0x4c, 4) , (register, 0x40, 4)

0046af78: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046af7c: srl a0,s3,0x17
	(register, 0x10, 4) INT_RIGHT (register, 0x4c, 4) , (const, 0x17, 4)

0046af80: sll a2,s3,0x9
	(register, 0x18, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x9, 4)

0046af84: or a2,a2,a0
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (register, 0x10, 4)

0046af88: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046af8c: bne v0,a1,0x0046af78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x4c, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46af78, 4) , (unique, 0x1700, 1)

0046af90: _addu s3,v1,a2
	(register, 0x4c, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0046af94: beq s3,zero,0x0046b234
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b234, 4) , (unique, 0x1200, 1)

0046af98: _nop

0046af9c: lw v0,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046afa0: lw s1,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046afa4: sw v0,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046afa8: sltiu v0,s1,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x44, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046afac: bne v0,zero,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046afb0: _nop

0046afb4: addiu t0,s1,-0x2
	(register, 0x20, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffffe, 4)

0046afb8: bne t0,zero,0x0046afc4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x4c, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0x4c, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46afc4, 4) , (unique, 0x1700, 1)

0046afbc: _divu s3,t0
	(register, 0x3004, 4) INT_DIV (register, 0x4c, 4) , (register, 0x20, 4)
	(register, 0x3000, 4) INT_REM (register, 0x4c, 4) , (register, 0x20, 4)

0046afc0: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046afc4: lw v0,-0x7d20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046afc8: nop

0046afcc: sw v0,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046afd0: mfhi t0
	(register, 0x20, 4) COPY (register, 0x3000, 4)

0046afd4: addiu s5,t0,0x1
	(register, 0x54, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0046afd8: sll t3,s5,0x1
	(register, 0x2c, 4) INT_LEFT (register, 0x54, 4) , (const, 0x1, 4)

0046afdc: bne s1,zero,0x0046afe8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x4c, 4) , (register, 0x44, 4)
	(register, 0x3000, 4) INT_REM (register, 0x4c, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x46afe8, 4) , (unique, 0x1700, 1)

0046afe0: _divu s3,s1
	(register, 0x3004, 4) INT_DIV (register, 0x4c, 4) , (register, 0x44, 4)
	(register, 0x3000, 4) INT_REM (register, 0x4c, 4) , (register, 0x44, 4)

0046afe4: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0046afe8: addu t3,t3,s5
	(register, 0x2c, 4) INT_ADD (register, 0x2c, 4) , (register, 0x54, 4)

0046afec: sll s7,t3,0x2
	(register, 0x5c, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)

0046aff0: mfhi s2
	(register, 0x48, 4) COPY (register, 0x3000, 4)

0046aff4: sll v1,s2,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x48, 4) , (const, 0x1, 4)

0046aff8: lw v0,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046affc: addu v1,v1,s2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x48, 4)

0046b000: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046b004: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046b008: b 0x0046b020
	(register, 0x58, 4) INT_ADD (register, 0x50, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x46b020, 4)

0046b00c: _addu s6,s4,v1
	(register, 0x58, 4) INT_ADD (register, 0x50, 4) , (register, 0xc, 4)

0046b010: addu s2,s2,s5
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (register, 0x54, 4)

0046b014: sltu v0,s2,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b018: beq v0,zero,0x0046b23c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x5c, 4)
	 ---  CBRANCH (ram, 0x46b23c, 4) , (unique, 0x1200, 1)

0046b01c: _addu s6,s6,s7
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x5c, 4)

0046b020: lw a1,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b024: nop

0046b028: beq a1,zero,0x0046b150
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1200, 1)

0046b02c: _nop

0046b030: lw v0,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b034: nop

0046b038: bne v0,s3,0x0046b010
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	(register, 0x14, 4) INT_ADD (register, 0x50, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x46b010, 4) , (unique, 0x1700, 1)

0046b03c: _addu a1,s4,a1
	(register, 0x14, 4) INT_ADD (register, 0x50, 4) , (register, 0x14, 4)

0046b040: lw t9,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b044: nop

0046b048: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b050, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b04c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046b050: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b054: bne v0,zero,0x0046b010
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x28, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b010, 4) , (unique, 0x1700, 1)

0046b058: _or t2,v0,zero
	(register, 0x28, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b05c: lw v0,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b060: nop

0046b064: beq v0,zero,0x0046b150
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1200, 1)

0046b068: _addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0046b06c: addu a0,s4,v0
	(register, 0x10, 4) INT_ADD (register, 0x50, 4) , (register, 0x8, 4)

0046b070: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b074: or t4,zero,zero
	(register, 0x30, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b078: addiu t5,s8,0x28
	(register, 0x34, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)

0046b07c: li t0,0x6
	(register, 0x20, 4) COPY (const, 0x6, 4)

0046b080: b 0x0046b0b8
	(register, 0x1c, 4) COPY (const, 0xd, 4)
	 ---  BRANCH (ram, 0x46b0b8, 4)

0046b084: _li a3,0xd
	(register, 0x1c, 4) COPY (const, 0xd, 4)

0046b088: lw a1,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b08c: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b090: addu v0,t5,v0
	(register, 0x8, 4) INT_ADD (register, 0x34, 4) , (register, 0x8, 4)

0046b094: sw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b098: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046b09c: sw a1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b0a0: sw a2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0046b0a4: sw zero,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046b0a8: addiu a1,t4,0x1
	(register, 0x14, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)

0046b0ac: beq v1,a3,0x0046b394
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b394, 4) , (unique, 0x1200, 1)

0046b0b0: _addiu a0,a0,0x8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)

0046b0b4: or t4,a1,zero
	(register, 0x30, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046b0b8: bne v1,t0,0x0046b088
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x30, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46b088, 4) , (unique, 0x1700, 1)

0046b0bc: _sll v0,t4,0x4
	(register, 0x8, 4) INT_LEFT (register, 0x30, 4) , (const, 0x4, 4)

0046b0c0: addiu a0,a0,0x8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)

0046b0c4: b 0x0046b088
	(register, 0xc, 4) COPY (const, 0x7, 4)
	 ---  BRANCH (ram, 0x46b088, 4)

0046b0c8: _li v1,0x7
	(register, 0xc, 4) COPY (const, 0x7, 4)

0046b0cc: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b0d0: bne s5,zero,0x0046b980
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_LEFT (register, 0x24, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46b980, 4) , (unique, 0x1700, 1)

0046b0d4: _sll a3,t1,0x4
	(register, 0x1c, 4) INT_LEFT (register, 0x24, 4) , (const, 0x4, 4)

0046b0d8: addu s4,t5,a3
	(register, 0x50, 4) INT_ADD (register, 0x34, 4) , (register, 0x1c, 4)

0046b0dc: lw a2,0x2c(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b0e0: or v0,s4,zero
	(register, 0x8, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046b0e4: b 0x0046b134
	(register, 0x20, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46b134, 4)

0046b0e8: _or t0,t1,zero
	(register, 0x20, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046b0ec: addu s0,t8,s0
	(register, 0x40, 4) INT_ADD (register, 0x60, 4) , (register, 0x40, 4)

0046b0f0: beq v1,zero,0x0046b10c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_AND (register, 0x58, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x46b10c, 4) , (unique, 0x1200, 1)

0046b0f4: _and s0,s6,s0
	(register, 0x40, 4) INT_AND (register, 0x58, 4) , (register, 0x40, 4)

0046b0f8: lw t3,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b0fc: nop

0046b100: sltu a0,a0,t3
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x2c, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046b104: beq a0,zero,0x0046b598
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b598, 4) , (unique, 0x1200, 1)

0046b108: _nop

0046b10c: slt a0,t0,t4
	(unique, 0x5080, 1) INT_SLESS (register, 0x20, 4) , (register, 0x30, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0046b110: beq a0,zero,0x0046b598
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46b598, 4) , (unique, 0x1200, 1)

0046b114: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0046b118: lw a0,0x10(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b11c: lw a1,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b120: nop

0046b124: addu a1,a1,s0
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x40, 4)

0046b128: sltu a0,a0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046b12c: beq a0,zero,0x0046b598
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46b598, 4) , (unique, 0x1200, 1)

0046b130: _addiu v0,v0,0x10
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)

0046b134: lw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b138: lw s0,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b13c: nop

0046b140: addu s0,a0,s0
	(register, 0x40, 4) INT_ADD (register, 0x10, 4) , (register, 0x40, 4)

0046b144: sltu t3,a2,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0x40, 4)
	(register, 0x2c, 4) INT_ZEXT (unique, 0x5380, 1)

0046b148: beq t3,zero,0x0046b0ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b0ec, 4) , (unique, 0x1200, 1)

0046b14c: _or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b150: lw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b154: nop

0046b158: bgez v0,0x0046b218
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b218, 4) , (unique, 0x1300, 1)

0046b15c: _nop

0046b160: b 0x0046ad98
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46ad98, 4)

0046b164: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b168: lw t9,-0x7e54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b16c: sw t0,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b170: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b178, 4)
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b174: _or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046b178: lw t0,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b17c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b180: lw v0,0x28(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b184: nop

0046b188: bltz v0,0x0046b218
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b218, 4) , (unique, 0x1600, 1)

0046b18c: _nop

0046b190: beq v0,zero,0x0046b8e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b8e8, 4) , (unique, 0x1200, 1)

0046b194: _nop

0046b198: lw v0,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b19c: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b1a0: addiu a1,v0,-0x1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046b1a4: addu a1,a1,s1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x44, 4)

0046b1a8: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0046b1ac: and s1,a1,v0
	(register, 0x44, 4) INT_AND (register, 0x14, 4) , (register, 0x8, 4)

0046b1b0: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b1b4: sw t0,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b1b8: sw v1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b1bc: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b1c0: lw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b1c4: li a3,0x2
	(register, 0x1c, 4) COPY (const, 0x2, 4)

0046b1c8: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b1cc: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0046b1d0: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046b1d4: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046b1d8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b1e0, 4)
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b1dc: _or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b1e0: or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b1e4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046b1e8: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b1ec: beq s4,v0,0x0046b218
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b218, 4) , (unique, 0x1200, 1)

0046b1f0: _nop

0046b1f4: lw t0,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b1f8: nop

0046b1fc: lw v0,0x28(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b200: nop

0046b204: blez v0,0x0046b8a4
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b8a4, 4) , (unique, 0x1500, 1)

0046b208: _nop

0046b20c: sw s4,0x6a38(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x6a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046b210: bne s4,zero,0x0046af54
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x46af54, 4) , (unique, 0x1700, 1)

0046b214: _sw s1,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046b218: lw a0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b21c: lw t9,-0x7e10(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b220: nop

0046b224: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b22c, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b228: _nop

0046b22c: b 0x0046ad98
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46ad98, 4)

0046b230: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b234: b 0x0046af9c
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46af9c, 4)

0046b238: _li s3,-0x1
	(register, 0x4c, 4) COPY (const, 0xffffffff, 4)

0046b23c: b 0x0046aff4
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x44, 4)
	 ---  BRANCH (ram, 0x46aff4, 4)

0046b240: _subu s2,s2,s1
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x44, 4)

0046b244: lw s6,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b248: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b24c: lw v1,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b250: addiu v0,s6,0x6a38
	(register, 0x8, 4) INT_ADD (register, 0x58, 4) , (const, 0x6a38, 4)

0046b254: lw t9,-0x7e18(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b258: addiu a0,a0,-0x7478
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b88, 4)

0046b25c: addiu a1,a1,0x2000
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x2000, 4)

0046b260: sw v0,0x6a48(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x6a48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b264: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b26c, 4)
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b268: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b26c: sw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b270: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b274: bltz v0,0x0046b160
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b160, 4) , (unique, 0x1600, 1)

0046b278: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b27c: lw s4,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b280: lw t9,-0x7dd8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8228, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b284: nop

0046b288: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b290, 4)
	(register, 0x14, 4) INT_ADD (register, 0x50, 4) , (const, 0x69c8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b28c: _addiu a1,s4,0x69c8
	(register, 0x14, 4) INT_ADD (register, 0x50, 4) , (const, 0x69c8, 4)

0046b290: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

0046b294: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b298: beq v0,v1,0x0046b218
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ADD (register, 0x50, 4) , (const, 0x69c8, 4)
	 ---  CBRANCH (ram, 0x46b218, 4) , (unique, 0x1200, 1)

0046b29c: _addiu t0,s4,0x69c8
	(register, 0x20, 4) INT_ADD (register, 0x50, 4) , (const, 0x69c8, 4)

0046b2a0: lw v0,0x28(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b2a4: lw a1,0x2c(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b2a8: blez v0,0x0046b6d4
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b6d4, 4) , (unique, 0x1500, 1)

0046b2ac: _or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b2b0: lui a1,0x20
	(register, 0x14, 4) INT_LEFT (const, 0x20, 4) , (const, 0x10, 4)

0046b2b4: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b2b8: sw t0,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b2bc: sw v1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b2c0: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b2c4: lw s2,-0x7b38(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b2c8: lw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b2cc: li a3,0x2
	(register, 0x1c, 4) COPY (const, 0x2, 4)

0046b2d0: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b2d4: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0046b2d8: sw a1,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b2dc: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046b2e0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b2e8, 4)
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b2e4: _or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b2e8: or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b2ec: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046b2f0: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b2f4: beq s4,v0,0x0046b218
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b218, 4) , (unique, 0x1200, 1)

0046b2f8: _nop

0046b2fc: lw a0,0x24(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b300: lw a2,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b304: sll v0,a0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x10, 4) , (const, 0x3, 4)

0046b308: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0046b30c: sll v1,a2,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x18, 4) , (const, 0x1, 4)

0046b310: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046b314: subu v0,v0,a0
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0046b318: lw a3,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b31c: lw t1,0x20(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b320: addu v1,v1,a2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0046b324: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046b328: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046b32c: addu v0,v0,t1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)

0046b330: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046b334: slt a0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0046b338: lw a1,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b33c: lw t0,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b340: beq a0,zero,0x0046b34c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b34c, 4) , (unique, 0x1200, 1)

0046b344: _nop

0046b348: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b34c: lw a0,0x18(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b350: lw v0,0x14(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b354: nop

0046b358: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0046b35c: slt a0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0046b360: beq a0,zero,0x0046b36c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b36c, 4) , (unique, 0x1200, 1)

0046b364: _or s1,v1,zero
	(register, 0x44, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046b368: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b36c: sltu v0,a1,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b370: bne v0,zero,0x0046b168
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b168, 4) , (unique, 0x1700, 1)

0046b374: _nop

0046b378: lw v0,0x28(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b37c: nop

0046b380: blez v0,0x0046b6f8
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b6f8, 4) , (unique, 0x1500, 1)

0046b384: _nop

0046b388: sw s4,0x6a38(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x6a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046b38c: b 0x0046af54
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x46af54, 4)

0046b390: _sw a1,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b394: lw a3,-0x76e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff891c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b398: lw t9,-0x7810(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b39c: or a0,t5,zero
	(register, 0x10, 4) INT_OR (register, 0x34, 4) , (const, 0x0, 4)

0046b3a0: sw t2,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b3a4: sw t4,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0046b3a8: sw t5,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

0046b3ac: addiu a3,a3,-0x5350
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffacb0, 4)

0046b3b0: bal 0x0045b050
	(register, 0x7c, 4) COPY (const, 0x46b3b8, 4)
	(register, 0x18, 4) COPY (const, 0x10, 4)
	 ---  CALL (ram, 0x45b050, 4)

0046b3b4: _li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

0046b3b8: lw v0,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3bc: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3c0: lw v1,0x6a48(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6a48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3c4: lw v0,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3c8: lw a0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3cc: addiu t8,v0,-0x1
	(register, 0x60, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046b3d0: and a1,t8,v0
	(register, 0x14, 4) INT_AND (register, 0x60, 4) , (register, 0x8, 4)

0046b3d4: lw t5,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3d8: lw t4,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3dc: lw t2,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b3e0: or s7,a0,zero
	(register, 0x5c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046b3e4: or t1,zero,zero
	(register, 0x24, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b3e8: or t6,v1,zero
	(register, 0x38, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046b3ec: or s5,a1,zero
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046b3f0: subu s6,zero,v0
	(register, 0x58, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0046b3f4: addiu s3,a0,0x69c8
	(register, 0x4c, 4) INT_ADD (register, 0x10, 4) , (const, 0x69c8, 4)

0046b3f8: beq v1,zero,0x0046b0d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b0d0, 4) , (unique, 0x1200, 1)

0046b3fc: _nop

0046b400: lw a0,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b404: lw a1,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b408: sll a3,t1,0x4
	(register, 0x1c, 4) INT_LEFT (register, 0x24, 4) , (const, 0x4, 4)

0046b40c: addu v0,t5,a3
	(register, 0x8, 4) INT_ADD (register, 0x34, 4) , (register, 0x1c, 4)

0046b410: lw t0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b414: lw t3,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b418: b 0x0046b43c
	(register, 0x18, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)
	 ---  BRANCH (ram, 0x46b43c, 4)

0046b41c: _addu a2,t0,t3
	(register, 0x18, 4) INT_ADD (register, 0x20, 4) , (register, 0x2c, 4)

0046b420: lw v0,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b424: nop

0046b428: beq v0,zero,0x0046b0cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b0cc, 4) , (unique, 0x1200, 1)

0046b42c: _or t6,v1,zero
	(register, 0x38, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046b430: lw a0,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b434: lw a1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b438: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b43c: addu v0,a0,a1
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0046b440: sltu t9,a2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x5380, 1)

0046b444: beq t9,zero,0x0046b420
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x10, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46b420, 4) , (unique, 0x1200, 1)

0046b448: _sltu t9,t0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x10, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x5380, 1)

0046b44c: bne t9,zero,0x0046b0d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46b0d0, 4) , (unique, 0x1700, 1)

0046b450: _sltu v0,v0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b454: bne v0,zero,0x0046b0d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x34, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x46b0d0, 4) , (unique, 0x1700, 1)

0046b458: _addu a3,t5,a3
	(register, 0x1c, 4) INT_ADD (register, 0x34, 4) , (register, 0x1c, 4)

0046b45c: lw v0,0x8(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b460: lw a2,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b464: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046b468: subu t0,t0,a0
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x10, 4)

0046b46c: addu v0,t5,v0
	(register, 0x8, 4) INT_ADD (register, 0x34, 4) , (register, 0x8, 4)

0046b470: addu a2,a2,t0
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x20, 4)

0046b474: slt a3,t1,t4
	(unique, 0x5080, 1) INT_SLESS (register, 0x24, 4) , (register, 0x30, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

0046b478: sw a2,0x130(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0046b47c: sw t3,0x134(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0046b480: bne a3,zero,0x0046b408
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46b408, 4) , (unique, 0x1700, 1)

0046b484: _addiu t1,t1,0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

0046b488: lw a0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b48c: nop

0046b490: bltz a0,0x0046b4b0
	(unique, 0x1600, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b4b0, 4) , (unique, 0x1600, 1)

0046b494: _nop

0046b498: lw t9,-0x7e10(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b49c: nop

0046b4a0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b4a8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b4a4: _sw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b4a8: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4ac: lw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4b0: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4b4: sw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b4b8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b4c0, 4)
	(register, 0x10, 4) COPY (const, 0x3c, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b4bc: _li a0,0x3c
	(register, 0x10, 4) COPY (const, 0x3c, 4)

0046b4c0: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4c4: beq v0,zero,0x0046b160
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b160, 4) , (unique, 0x1200, 1)

0046b4c8: _or s6,v0,zero
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b4cc: lw v0,0x21c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x21c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4d0: lw t9,-0x79e8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8618, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4d4: lw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4d8: bal 0x00466f00
	(register, 0x7c, 4) COPY (const, 0x46b4e0, 4)
	 ---  CALL (ram, 0x466f00, 4)

0046b4dc: _nop

0046b4e0: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4e4: lw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4e8: beq v0,zero,0x0046b968
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b968, 4) , (unique, 0x1200, 1)

0046b4ec: _sw v0,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b4f0: lw v1,0x1cc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1cc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4f4: lw s1,-0x76c0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8940, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4f8: lw v0,0x69c0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x69c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b4fc: addiu s7,s8,0x158
	(register, 0x5c, 4) INT_ADD (register, 0x78, 4) , (const, 0x158, 4)

0046b500: sw v0,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b504: sw s6,0x69c0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x69c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046b508: addiu s0,s6,0x8
	(register, 0x40, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)

0046b50c: li s5,0x6
	(register, 0x54, 4) COPY (const, 0x6, 4)

0046b510: li s4,0x2
	(register, 0x50, 4) COPY (const, 0x2, 4)

0046b514: li s2,-0x1
	(register, 0x48, 4) COPY (const, 0xffffffff, 4)

0046b518: li s3,0xd
	(register, 0x4c, 4) COPY (const, 0xd, 4)

0046b51c: bne t2,s5,0x0046b530
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46b530, 4) , (unique, 0x1700, 1)

0046b520: _nop

0046b524: addiu s7,s7,0x8
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)

0046b528: addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0046b52c: li t2,0x7
	(register, 0x28, 4) COPY (const, 0x7, 4)

0046b530: lw a2,0x4(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b534: lw a1,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b538: or a0,t2,zero
	(register, 0x10, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0046b53c: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046b540: bal 0x0046bb60
	(register, 0x7c, 4) COPY (const, 0x46b548, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)
	 ---  CALL (ram, 0x46bb60, 4)

0046b544: _sw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b548: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b54c: lw t2,0x1c0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b550: beq v0,zero,0x0046b568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b568, 4) , (unique, 0x1200, 1)

0046b554: _nop

0046b558: lw a0,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b55c: sw s4,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046b560: sw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046b564: sw s2,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046b568: addiu t2,t2,0x1
	(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)

0046b56c: addiu s7,s7,0x8
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)

0046b570: bne t2,s3,0x0046b51c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0x4c, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46b51c, 4) , (unique, 0x1700, 1)

0046b574: _addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0046b578: lw v0,0x218(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x218, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b57c: lw a0,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b580: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046b584: addu v1,s6,v0
	(register, 0xc, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)

0046b588: lw v0,0x8(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b58c: lw v1,0x21c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x21c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b590: b 0x0046ad98
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x46ad98, 4)

0046b594: _sw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046b598: lw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b59c: addu a3,t5,a3
	(register, 0x1c, 4) INT_ADD (register, 0x34, 4) , (register, 0x1c, 4)

0046b5a0: li s2,-0x1
	(register, 0x48, 4) COPY (const, 0xffffffff, 4)

0046b5a4: lw s1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b5a8: beq v0,s2,0x0046b740
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x48, 4)
	(register, 0x14, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46b740, 4) , (unique, 0x1200, 1)

0046b5ac: _lui a1,0x8
	(register, 0x14, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

0046b5b0: and s1,s1,s6
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (register, 0x58, 4)

0046b5b4: sw t8,0x1ec(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x60, 4)

0046b5b8: sw t5,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

0046b5bc: sw t1,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0046b5c0: sw t2,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b5c4: sw t0,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b5c8: sw t4,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0046b5cc: sw v1,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b5d0: sw t6,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x38, 4)

0046b5d4: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046b5d8: sw zero,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046b5dc: lw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b5e0: lw t9,-0x7b38(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b5e4: subu s0,s0,s1
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x44, 4)

0046b5e8: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0046b5ec: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b5f0: li a3,0x2
	(register, 0x1c, 4) COPY (const, 0x2, 4)

0046b5f4: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046b5f8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b600, 4)
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b5fc: _or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b600: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b604: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046b608: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b60c: beq a2,v0,0x0046b150
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1200, 1)

0046b610: _sw a2,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0046b614: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b618: nop

0046b61c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b624, 4)
	(register, 0x10, 4) COPY (const, 0x10, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b620: _li a0,0x10
	(register, 0x10, 4) COPY (const, 0x10, 4)

0046b624: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b628: lw a2,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b62c: lw t6,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b630: lw v1,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b634: lw t4,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b638: lw t0,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b63c: lw t2,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b640: lw t1,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b644: lw t5,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b648: lw t8,0x1ec(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x60, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b64c: beq v0,zero,0x0046b94c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b94c, 4) , (unique, 0x1200, 1)

0046b650: _or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046b654: lw a0,0xc(t6)
	(unique, 0x100, 4) INT_ADD (register, 0x38, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b658: sw a2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0046b65c: sw s1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046b660: bne a0,v1,0x0046b928
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x46b928, 4) , (unique, 0x1700, 1)

0046b664: _sw s0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046b668: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b66c: or t9,t1,zero
	(register, 0x64, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046b670: b 0x0046b67c
	(unique, 0x100, 4) INT_ADD (register, 0x38, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46b67c, 4)

0046b674: _sw v0,0xc(t6)
	(unique, 0x100, 4) INT_ADD (register, 0x38, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b678: or t9,t1,zero
	(register, 0x64, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0046b67c: lw a1,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b680: nop

0046b684: sltu a0,a1,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x44, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0046b688: bne a0,zero,0x0046b904
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b904, 4) , (unique, 0x1700, 1)

0046b68c: _nop

0046b690: lw a0,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b694: lw t6,0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b698: sll a0,a0,0x3
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x3, 4)

0046b69c: subu a1,a1,s1
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x44, 4)

0046b6a0: addiu t1,t1,0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

0046b6a4: addu a0,t5,a0
	(register, 0x10, 4) INT_ADD (register, 0x34, 4) , (register, 0x10, 4)

0046b6a8: addu a1,a2,a1
	(register, 0x14, 4) INT_ADD (register, 0x18, 4) , (register, 0x14, 4)

0046b6ac: slt a3,t1,t0
	(unique, 0x5080, 1) INT_SLESS (register, 0x24, 4) , (register, 0x20, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

0046b6b0: sw a1,0x130(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b6b4: sw t6,0x134(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x38, 4)

0046b6b8: bne a3,zero,0x0046b678
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46b678, 4) , (unique, 0x1700, 1)

0046b6bc: _addiu s4,s4,0x10
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)

0046b6c0: slt t9,t9,t4
	(unique, 0x5080, 1) INT_SLESS (register, 0x64, 4) , (register, 0x30, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x5080, 1)

0046b6c4: beq t9,zero,0x0046b488
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b488, 4) , (unique, 0x1200, 1)

0046b6c8: _or t6,v0,zero
	(register, 0x38, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046b6cc: b 0x0046b3f8
	 ---  BRANCH (ram, 0x46b3f8, 4)

0046b6d0: _nop

0046b6d4: bne v0,zero,0x0046b2b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b2b4, 4) , (unique, 0x1700, 1)

0046b6d8: _nop

0046b6dc: lui v0,0x20
	(register, 0x8, 4) INT_LEFT (const, 0x20, 4) , (const, 0x10, 4)

0046b6e0: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046b6e4: sltu v0,a1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b6e8: bne v0,zero,0x0046b2b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b2b8, 4) , (unique, 0x1700, 1)

0046b6ec: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b6f0: b 0x0046b2b4
	(register, 0x14, 4) INT_LEFT (const, 0x20, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x46b2b4, 4)

0046b6f4: _lui a1,0x20
	(register, 0x14, 4) INT_LEFT (const, 0x20, 4) , (const, 0x10, 4)

0046b6f8: bne v0,zero,0x0046b714
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b714, 4) , (unique, 0x1700, 1)

0046b6fc: _nop

0046b700: lw v0,0x2c(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b704: nop

0046b708: sltu v0,a1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b70c: bne v0,zero,0x0046b388
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b388, 4) , (unique, 0x1700, 1)

0046b710: _nop

0046b714: lw t9,-0x7e10(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b718: lw a0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b71c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b724, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b720: _sw a1,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b724: lw a1,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b728: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046b72c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b730: sw s4,0x6a38(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x6a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046b734: sw a1,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046b738: b 0x0046af54
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46af54, 4)

0046b73c: _sw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b740: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b744: lw t9,-0x7e18(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b748: sw t8,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x60, 4)

0046b74c: sw t5,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

0046b750: sw t1,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0046b754: sw t2,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b758: sw t0,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b75c: sw t4,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0046b760: sw v1,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b764: sw t6,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x38, 4)

0046b768: addiu a1,a1,0x2000
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x2000, 4)

0046b76c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b774, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b88, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b770: _addiu a0,a0,-0x7478
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b88, 4)

0046b774: sw v0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046b778: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b77c: lw t6,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b780: lw v1,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b784: lw t4,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b788: lw t0,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b78c: lw t2,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b790: lw t1,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b794: lw t5,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b798: lw t8,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x60, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b79c: beq v0,s2,0x0046ad98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x48, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ad98, 4) , (unique, 0x1200, 1)

0046b7a0: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b7a4: lw t9,-0x7dd8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8228, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7a8: lw a0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7ac: sw t8,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x60, 4)

0046b7b0: sw t5,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

0046b7b4: sw t1,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0046b7b8: sw t2,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0046b7bc: sw t0,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046b7c0: sw t4,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x30, 4)

0046b7c4: sw v1,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046b7c8: sw t6,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x38, 4)

0046b7cc: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b7d4, 4)
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0xe8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b7d0: _addiu a1,s8,0xe8
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0xe8, 4)

0046b7d4: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7d8: bltz v0,0x0046b150
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1600, 1)

0046b7dc: _nop

0046b7e0: lw a0,0x110(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x110, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7e4: lw v0,0x28(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7e8: nop

0046b7ec: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b7f0: _nop

0046b7f4: lw a0,0x114(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x114, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7f8: lw v0,0x2c(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b7fc: nop

0046b800: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b804: _nop

0046b808: lw a0,0x138(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b80c: lw v0,0x50(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b810: nop

0046b814: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b818: _nop

0046b81c: lw a0,0x13c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b820: lw v0,0x54(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b824: nop

0046b828: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b82c: _nop

0046b830: lw a0,0xe8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xe8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b834: lw v0,0x69c8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x69c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b838: nop

0046b83c: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b840: _nop

0046b844: lw a0,0xec(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b848: lw v0,0x69cc(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x69cc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b84c: nop

0046b850: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b854: _nop

0046b858: lw a0,0xf0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xf0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b85c: lw v0,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b860: nop

0046b864: bne a0,v0,0x0046b150
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46b150, 4) , (unique, 0x1700, 1)

0046b868: _nop

0046b86c: lw a0,0xf4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xf4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b870: lw v0,0xc(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b874: lw t6,0x1c4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b878: lw v1,0x1d0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b87c: lw t4,0x1d4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b880: lw t0,0x1d8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1d8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b884: lw t2,0x1dc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1dc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b888: lw t1,0x1e0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b88c: lw t5,0x1e4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x34, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b890: lw t8,0x1e8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x60, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b894: beq a0,v0,0x0046b5b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x46b5b4, 4) , (unique, 0x1200, 1)

0046b898: _and s1,s1,s6
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (register, 0x58, 4)

0046b89c: b 0x0046b150
	 ---  BRANCH (ram, 0x46b150, 4)

0046b8a0: _nop

0046b8a4: bne v0,zero,0x0046b8c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b8c0, 4) , (unique, 0x1700, 1)

0046b8a8: _nop

0046b8ac: lw v0,0x2c(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b8b0: nop

0046b8b4: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b8b8: bne v0,zero,0x0046b20c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b20c, 4) , (unique, 0x1700, 1)

0046b8bc: _nop

0046b8c0: lw t9,-0x7e10(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81f0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b8c4: lw a0,0x1c8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b8c8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b8d0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b8cc: _nop

0046b8d0: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b8d4: sw s4,0x6a38(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x6a38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046b8d8: bne s4,zero,0x0046af4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x46af4c, 4) , (unique, 0x1700, 1)

0046b8dc: _sw s1,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046b8e0: b 0x0046ad98
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46ad98, 4)

0046b8e4: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b8e8: lw v0,0x2c(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b8ec: nop

0046b8f0: sltu v0,v0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046b8f4: beq v0,zero,0x0046b198
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46b198, 4) , (unique, 0x1200, 1)

0046b8f8: _nop

0046b8fc: b 0x0046b218
	 ---  BRANCH (ram, 0x46b218, 4)

0046b900: _nop

0046b904: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b908: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b90c: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b910: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b914: addiu a3,a3,-0x7498
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff8b68, 4)

0046b918: li a2,0x1ba
	(register, 0x18, 4) COPY (const, 0x1ba, 4)

0046b91c: addiu a1,a1,-0x751c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff8ae4, 4)

0046b920: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b928, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b1c, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b924: _addiu a0,a0,-0x74e4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b1c, 4)

0046b928: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b92c: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b930: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b934: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b938: addiu a3,a3,-0x7498
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff8b68, 4)

0046b93c: li a2,0x1b2
	(register, 0x18, 4) COPY (const, 0x1b2, 4)

0046b940: addiu a1,a1,-0x751c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff8ae4, 4)

0046b944: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b94c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b04, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b948: _addiu a0,a0,-0x74fc
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8b04, 4)

0046b94c: lw t9,-0x7e54(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff81ac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b950: nop

0046b954: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b95c, 4)
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b958: _or a0,a2,zero
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046b95c: lw gp,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b960: b 0x0046b150
	 ---  BRANCH (ram, 0x46b150, 4)

0046b964: _nop

0046b968: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b96c: nop

0046b970: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b978, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b974: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046b978: b 0x0046ad98
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46ad98, 4)

0046b97c: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046b980: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b984: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b988: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b98c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046b990: addiu a3,a3,-0x7498
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff8b68, 4)

0046b994: li a2,0x178
	(register, 0x18, 4) COPY (const, 0x178, 4)

0046b998: addiu a1,a1,-0x751c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff8ae4, 4)

0046b99c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46b9a4, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8af4, 4)
	 ---  CALLIND (register, 0x80, 4)

0046b9a0: _addiu a0,a0,-0x750c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8af4, 4)

