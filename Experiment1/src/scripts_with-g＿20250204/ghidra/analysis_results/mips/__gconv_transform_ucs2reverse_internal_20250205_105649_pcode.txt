Function: __gconv_transform_ucs2reverse_internal
Address: 004509f8
P-code:

004509f8: lui gp,0x7
	(register, 0x70, 4) INT_LEFT (const, 0x7, 4) , (const, 0x10, 4)

004509fc: addiu gp,gp,-0x5b98
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffa468, 4)

00450a00: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00450a04: addiu sp,sp,-0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff88, 4)

00450a08: sw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00450a0c: or s6,a1,zero
	(register, 0x58, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00450a10: lw a1,0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a14: lw t0,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a18: sw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00450a1c: or s3,a2,zero
	(register, 0x4c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00450a20: addiu a2,a0,0x3c
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)

00450a24: sw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00450a28: sw a2,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00450a2c: andi v1,a1,0x1
	(register, 0xc, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

00450a30: addiu a2,s6,0x20
	(register, 0x18, 4) INT_ADD (register, 0x58, 4) , (const, 0x20, 4)

00450a34: sw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00450a38: sw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00450a3c: sw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00450a40: lw s2,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a44: lw s0,0x88(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a48: lw v0,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a4c: sw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00450a50: sw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00450a54: sw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00450a58: sw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00450a5c: sw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00450a60: sw t0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

00450a64: sw a2,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

00450a68: bne v1,zero,0x00450d04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450d04, 4) , (unique, 0x1700, 1)

00450a6c: _or s5,a3,zero
	(register, 0x54, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00450a70: lw v1,0x50(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a74: bne v0,zero,0x00450d0c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x450d0c, 4) , (unique, 0x1700, 1)

00450a78: _sw v1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00450a7c: bne s0,zero,0x00450f34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450f34, 4) , (unique, 0x1700, 1)

00450a80: _nop

00450a84: lw s1,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a88: lw v1,0x4(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450a8c: beq s2,zero,0x00450dd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450dd8, 4) , (unique, 0x1200, 1)

00450a90: _sw zero,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450a94: addiu v0,sp,0x2c
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)

00450a98: sw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450a9c: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450aa0: nop

00450aa4: beq v0,zero,0x00450b08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450b08, 4) , (unique, 0x1200, 1)

00450aa8: _nop

00450aac: lw a2,0x14(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ab0: nop

00450ab4: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ab8: nop

00450abc: andi v0,a0,0x7
	(register, 0x8, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

00450ac0: beq v0,zero,0x00450b08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450b08, 4) , (unique, 0x1200, 1)

00450ac4: _nop

00450ac8: bne s0,zero,0x0045113c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45113c, 4) , (unique, 0x1700, 1)

00450acc: _nop

00450ad0: slti a3,v0,0x5
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5180, 1)

00450ad4: lw t3,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ad8: beq a3,zero,0x00451160
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x451160, 4) , (unique, 0x1200, 1)

00450adc: _nop

00450ae0: lbu t5,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x34, 4) INT_ZEXT (unique, 0x2f00, 1)

00450ae4: li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

00450ae8: beq v0,a3,0x00450de0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x37, 1)
	 ---  CBRANCH (ram, 0x450de0, 4) , (unique, 0x1200, 1)

00450aec: _sb t5,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x37, 1)

00450af0: sltu v0,s5,t3
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x2c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00450af4: bne v0,zero,0x00450f68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x54, 4) , (register, 0x2c, 4)
	 ---  CBRANCH (ram, 0x450f68, 4) , (unique, 0x1700, 1)

00450af8: _subu v0,s5,t3
	(register, 0x8, 4) INT_SUB (register, 0x54, 4) , (register, 0x2c, 4)

00450afc: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

00450b00: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

00450b04: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450b08: lw s7,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450b0c: or s8,zero,zero
	(register, 0x78, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00450b10: beq s2,zero,0x00450b24
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450b24, 4) , (unique, 0x1200, 1)

00450b14: _nop

00450b18: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450b1c: nop

00450b20: addu s8,s8,v0
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (register, 0x8, 4)

00450b24: beq s5,s7,0x00450b98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	(register, 0x50, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450b98, 4) , (unique, 0x1200, 1)

00450b28: _or s4,s1,zero
	(register, 0x50, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00450b2c: or s4,s1,zero
	(register, 0x50, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00450b30: or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00450b34: or t5,a2,zero
	(register, 0x34, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00450b38: addiu a2,a2,0x2
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)

00450b3c: sltu v0,s5,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00450b40: bne v0,zero,0x00450bb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x450bb4, 4) , (unique, 0x1700, 1)

00450b44: _addiu t6,s4,0x4
	(register, 0x38, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)

00450b48: sltu v0,v1,t6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x38, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00450b4c: bne v0,zero,0x00450c84
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x450c84, 4) , (unique, 0x1700, 1)

00450b50: _li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

00450b54: lbu a0,0x0(t5)
	(unique, 0x100, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

00450b58: lbu v0,0x1(t5)
	(unique, 0x100, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00450b5c: sll a0,a0,0x8
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x8, 4)

00450b60: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00450b64: sll a0,v0,0x8
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4)

00450b68: srl v0,v0,0x8
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x8, 4)

00450b6c: or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

00450b70: andi v0,v0,0xffff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)

00450b74: addiu a0,v0,0x2800
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x2800, 4)

00450b78: andi a0,a0,0xffff
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xffff, 4)

00450b7c: sltiu a0,a0,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x800, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00450b80: bne a0,zero,0x00450c8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450c8c, 4) , (unique, 0x1700, 1)

00450b84: _nop

00450b88: sw v0,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450b8c: or s4,t6,zero
	(register, 0x50, 4) INT_OR (register, 0x38, 4) , (const, 0x0, 4)

00450b90: bne s5,a2,0x00450b38
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x18, 4)
	(register, 0x34, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450b38, 4) , (unique, 0x1700, 1)

00450b94: _or t5,a2,zero
	(register, 0x34, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00450b98: or t5,s5,zero
	(register, 0x34, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00450b9c: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00450ba0: sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450ba4: beq s0,zero,0x00450bc4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)
	 ---  CBRANCH (ram, 0x450bc4, 4) , (unique, 0x1200, 1)

00450ba8: _sw t5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

00450bac: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

00450bb0: _sw s4,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00450bb4: li v0,0x7
	(register, 0x8, 4) COPY (const, 0x7, 4)

00450bb8: sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450bbc: bne s0,zero,0x00450bac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)
	 ---  CBRANCH (ram, 0x450bac, 4) , (unique, 0x1700, 1)

00450bc0: _sw t5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x34, 4)

00450bc4: lw a1,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bc8: lw v0,0xc(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bcc: andi a1,a1,0x1
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

00450bd0: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00450bd4: bne a1,zero,0x00450dc0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x450dc0, 4) , (unique, 0x1700, 1)

00450bd8: _sw v0,0xc(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450bdc: sltu v0,s1,s4
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x50, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00450be0: beq v0,zero,0x00450cc0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x450cc0, 4) , (unique, 0x1200, 1)

00450be4: _sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00450be8: lw v0,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bec: lw v1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bf0: lw a0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bf4: lw a1,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bf8: lw t9,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450bfc: sw v1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00450c00: sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450c04: sw zero,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450c08: sw s2,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00450c0c: sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450c10: or a3,s4,zero
	(register, 0x1c, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00450c14: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x450c1c, 4)
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  CALLIND (register, 0x80, 4)

00450c18: _addiu a2,sp,0x28
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00450c1c: li a0,0x4
	(register, 0x10, 4) COPY (const, 0x4, 4)

00450c20: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c24: lw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c28: beq v0,a0,0x00450cb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x450cb0, 4) , (unique, 0x1200, 1)

00450c2c: _nop

00450c30: lw a0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c34: nop

00450c38: bne a0,s4,0x00450e74
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x450e74, 4) , (unique, 0x1700, 1)

00450c3c: _nop

00450c40: bne v0,zero,0x004510e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4510e4, 4) , (unique, 0x1700, 1)

00450c44: _nop

00450c48: lw s1,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c4c: lw s8,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c50: lw s7,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c54: lw a1,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c58: beq s2,zero,0x00450c6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450c6c, 4) , (unique, 0x1200, 1)

00450c5c: _nop

00450c60: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c64: nop

00450c68: addu s8,s8,v0
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (register, 0x8, 4)

00450c6c: bne s5,s7,0x00450b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x450b2c, 4) , (unique, 0x1700, 1)

00450c70: _li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00450c74: sw s7,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00450c78: or s4,s1,zero
	(register, 0x50, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00450c7c: b 0x00450bc8
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450bc8, 4)

00450c80: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450c84: b 0x00450bbc
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450bbc, 4)

00450c88: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450c8c: lw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450c90: nop

00450c94: beq v0,zero,0x00450ca4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x450ca4, 4) , (unique, 0x1200, 1)

00450c98: _andi v0,a1,0x2
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x2, 4)

00450c9c: bne v0,zero,0x00450da4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450da4, 4) , (unique, 0x1700, 1)

00450ca0: _nop

00450ca4: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

00450ca8: b 0x00450bbc
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450bbc, 4)

00450cac: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450cb0: lw a0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cb4: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

00450cb8: beq a0,v0,0x00450c48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x450c48, 4) , (unique, 0x1200, 1)

00450cbc: _nop

00450cc0: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cc4: nop

00450cc8: bne v0,zero,0x00450f9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x450f9c, 4) , (unique, 0x1700, 1)

00450ccc: _li v0,0x7
	(register, 0x8, 4) COPY (const, 0x7, 4)

00450cd0: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cd4: lw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cd8: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cdc: lw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ce0: lw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ce4: lw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450ce8: lw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cec: lw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cf0: lw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cf4: lw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cf8: lw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450cfc: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	 ---  RETURN (register, 0x80, 4)

00450d00: _addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

00450d04: beq v0,zero,0x00450a7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450a7c, 4) , (unique, 0x1200, 1)

00450d08: _sw zero,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450d0c: bne s0,zero,0x00451184
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x15e, 4)
	 ---  CBRANCH (ram, 0x451184, 4) , (unique, 0x1700, 1)

00450d10: _li a2,0x15e
	(register, 0x18, 4) COPY (const, 0x15e, 4)

00450d14: lw v1,0x14(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d18: nop

00450d1c: sb zero,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d20: sb zero,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d24: sb zero,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d28: sb zero,0x3(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d2c: sb zero,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d30: sb zero,0x5(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d34: sb zero,0x6(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d38: sb zero,0x7(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x7, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00450d3c: lw v1,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d40: nop

00450d44: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00450d48: bne v1,zero,0x00450f60
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450f60, 4) , (unique, 0x1700, 1)

00450d4c: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00450d50: lw v1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d54: sw s2,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00450d58: lw a1,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d5c: lw a0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d60: lw t9,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d64: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d68: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d6c: lw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d70: lw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d74: lw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d78: lw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d7c: lw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d80: lw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d84: lw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d88: lw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450d8c: sw v1,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00450d90: sw v0,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450d94: sw zero,0x88(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450d98: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00450d9c: jr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	 ---  BRANCHIND (register, 0x80, 4)

00450da0: _addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

00450da4: lw a0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450da8: nop

00450dac: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450db0: nop

00450db4: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00450db8: b 0x00450b90
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450b90, 4)

00450dbc: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450dc0: lw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450dc4: lw v1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450dc8: sw s4,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00450dcc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00450dd0: b 0x00450cc0
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cc0, 4)

00450dd4: _sw v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00450dd8: b 0x00450a9c
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x450a9c, 4)

00450ddc: _sw zero,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450de0: addiu a3,t3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x2c, 4) , (const, 0x1, 4)

00450de4: sltu t5,s5,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x1c, 4)
	(register, 0x34, 4) INT_ZEXT (unique, 0x5380, 1)

00450de8: bne t5,zero,0x0045105c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (const, 0x0, 4)
	(register, 0x38, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45105c, 4) , (unique, 0x1700, 1)

00450dec: _addiu t6,s1,0x4
	(register, 0x38, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)

00450df0: sltu a3,v1,t6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x38, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

00450df4: bne a3,zero,0x00450afc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450afc, 4) , (unique, 0x1700, 1)

00450df8: _nop

00450dfc: lbu a3,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x2f00, 1)

00450e00: nop

00450e04: sb a3,0x29(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x29, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1f, 1)

00450e08: lhu a3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x3300, 2)

00450e0c: nop

00450e10: or t5,a3,zero
	(register, 0x34, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00450e14: srl t5,t5,0x8
	(register, 0x34, 4) INT_RIGHT (register, 0x34, 4) , (const, 0x8, 4)

00450e18: sll a3,a3,0x8
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x8, 4)

00450e1c: or a3,a3,t5
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0x34, 4)

00450e20: andi a3,a3,0xffff
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xffff, 4)

00450e24: addiu t5,a3,0x2800
	(register, 0x34, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2800, 4)

00450e28: andi t5,t5,0xffff
	(register, 0x34, 4) INT_AND (register, 0x34, 4) , (const, 0xffff, 4)

00450e2c: sltiu t5,t5,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x34, 4) , (const, 0x800, 4)
	(register, 0x34, 4) INT_ZEXT (unique, 0x5280, 1)

00450e30: bne t5,zero,0x004510ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4510ac, 4) , (unique, 0x1700, 1)

00450e34: _nop

00450e38: sw a3,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

00450e3c: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e40: or s1,t6,zero
	(register, 0x44, 4) INT_OR (register, 0x38, 4) , (const, 0x0, 4)

00450e44: andi v0,a0,0x7
	(register, 0x8, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

00450e48: andi a1,a0,0x6
	(register, 0x14, 4) INT_AND (register, 0x10, 4) , (const, 0x6, 4)

00450e4c: bne a1,zero,0x00451190
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x2c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x451190, 4) , (unique, 0x1700, 1)

00450e50: _subu v0,t3,v0
	(register, 0x8, 4) INT_SUB (register, 0x2c, 4) , (register, 0x8, 4)

00450e54: addiu s7,v0,0x2
	(register, 0x5c, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)

00450e58: li v0,-0x8
	(register, 0x8, 4) COPY (const, 0xfffffff8, 4)

00450e5c: and a0,a0,v0
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x8, 4)

00450e60: lw a1,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e64: lw s8,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e68: sw s7,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

00450e6c: b 0x00450b10
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x450b10, 4)

00450e70: _sw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00450e74: beq s2,zero,0x00450e80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450e80, 4) , (unique, 0x1200, 1)

00450e78: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00450e7c: lw a1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e80: lw a2,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e84: nop

00450e88: addu a1,a1,a2
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x18, 4)

00450e8c: beq a1,s8,0x00450f40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x450f40, 4) , (unique, 0x1200, 1)

00450e90: _nop

00450e94: lw t6,0x8(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x38, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450e98: beq s5,s7,0x004510ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	(register, 0x2c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4510ec, 4) , (unique, 0x1200, 1)

00450e9c: _or t3,s1,zero
	(register, 0x2c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00450ea0: or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00450ea4: addiu s7,s7,0x2
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x2, 4)

00450ea8: sltu a1,s5,s7
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x5c, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00450eac: bne a1,zero,0x00450f08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x34, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x450f08, 4) , (unique, 0x1700, 1)

00450eb0: _addiu t5,t3,0x4
	(register, 0x34, 4) INT_ADD (register, 0x2c, 4) , (const, 0x4, 4)

00450eb4: sltu a1,a0,t5
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x34, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00450eb8: bne a1,zero,0x00451004
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x451004, 4) , (unique, 0x1700, 1)

00450ebc: _nop

00450ec0: lbu a2,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

00450ec4: lbu a1,0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

00450ec8: sll a2,a2,0x8
	(register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (const, 0x8, 4)

00450ecc: or a1,a1,a2
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x18, 4)

00450ed0: sll a2,a1,0x8
	(register, 0x18, 4) INT_LEFT (register, 0x14, 4) , (const, 0x8, 4)

00450ed4: srl a1,a1,0x8
	(register, 0x14, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x8, 4)

00450ed8: or a1,a2,a1
	(register, 0x14, 4) INT_OR (register, 0x18, 4) , (register, 0x14, 4)

00450edc: andi a1,a1,0xffff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xffff, 4)

00450ee0: addiu a2,a1,0x2800
	(register, 0x18, 4) INT_ADD (register, 0x14, 4) , (const, 0x2800, 4)

00450ee4: andi a2,a2,0xffff
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xffff, 4)

00450ee8: sltiu a2,a2,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x800, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

00450eec: bne a2,zero,0x00451028
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x451028, 4) , (unique, 0x1700, 1)

00450ef0: _nop

00450ef4: sw a1,0x0(t3)
	(unique, 0x100, 4) INT_ADD (register, 0x2c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00450ef8: or t3,t5,zero
	(register, 0x2c, 4) INT_OR (register, 0x34, 4) , (const, 0x0, 4)

00450efc: bne s5,s7,0x00450ea4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450ea4, 4) , (unique, 0x1700, 1)

00450f00: _or a3,s7,zero
	(register, 0x1c, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00450f04: or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00450f08: beq a0,t3,0x004510f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x2c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x4510f4, 4) , (unique, 0x1200, 1)

00450f0c: _sw a3,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

00450f10: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f14: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f18: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f1c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f20: addiu a3,a3,0x71ac
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)

00450f24: li a2,0x252
	(register, 0x18, 4) COPY (const, 0x252, 4)

00450f28: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

00450f2c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x450f34, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fa8, 4)
	 ---  CALLIND (register, 0x80, 4)

00450f30: _addiu a0,a0,0x6fa8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fa8, 4)

00450f34: lw s1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f38: b 0x00450a88
	 ---  BRANCH (ram, 0x450a88, 4)

00450f3c: _nop

00450f40: subu a2,s4,a0
	(register, 0x18, 4) INT_SUB (register, 0x50, 4) , (register, 0x10, 4)

00450f44: srl a0,a2,0x1f
	(register, 0x10, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x1f, 4)

00450f48: lw a1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f4c: addu a0,a0,a2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)

00450f50: sra a0,a0,0x1
	(register, 0x10, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x1, 4)

00450f54: subu a0,a1,a0
	(register, 0x10, 4) INT_SUB (register, 0x14, 4) , (register, 0x10, 4)

00450f58: b 0x00450c40
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x450c40, 4)

00450f5c: _sw a0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00450f60: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

00450f64: _sw zero,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00450f68: addiu v0,v0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)

00450f6c: sltiu v0,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00450f70: bne v0,zero,0x004510a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x4510a0, 4) , (unique, 0x1700, 1)

00450f74: _sw s5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00450f78: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f7c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f80: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f84: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450f88: addiu a3,a3,0x7188
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7188, 4)

00450f8c: li a2,0x152
	(register, 0x18, 4) COPY (const, 0x152, 4)

00450f90: addiu a1,a1,0x703c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x703c, 4)

00450f94: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x450f9c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x707c, 4)
	 ---  CALLIND (register, 0x80, 4)

00450f98: _addiu a0,a0,0x707c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x707c, 4)

00450f9c: lw v1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450fa0: nop

00450fa4: bne v1,v0,0x00450cd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x450cd0, 4) , (unique, 0x1700, 1)

00450fa8: _nop

00450fac: lw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450fb0: nop

00450fb4: subu a2,s5,v0
	(register, 0x18, 4) INT_SUB (register, 0x54, 4) , (register, 0x8, 4)

00450fb8: sltiu v1,a2,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00450fbc: beq v1,zero,0x00451118
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x451118, 4) , (unique, 0x1200, 1)

00450fc0: _nop

00450fc4: lw a1,0x14(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450fc8: beq a2,zero,0x00450fe8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450fe8, 4) , (unique, 0x1200, 1)

00450fcc: _nop

00450fd0: addiu v1,a1,0x4
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

00450fd4: lbu a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

00450fd8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00450fdc: sb a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x13, 1)

00450fe0: bne s5,v0,0x00450fd4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x450fd4, 4) , (unique, 0x1700, 1)

00450fe4: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

00450fe8: lw v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00450fec: li v1,-0x8
	(register, 0xc, 4) COPY (const, 0xfffffff8, 4)

00450ff0: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00450ff4: or v0,v0,a2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x18, 4)

00450ff8: sw s5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00450ffc: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

00451000: _sw v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00451004: bne a0,t3,0x00450f10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x2c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x450f10, 4) , (unique, 0x1700, 1)

00451008: _sw a3,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0045100c: bne s1,a0,0x00450c40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x450c40, 4) , (unique, 0x1700, 1)

00451010: _nop

00451014: lw a0,0xc(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451018: nop

0045101c: addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

00451020: b 0x00450c40
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x450c40, 4)

00451024: _sw a0,0xc(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00451028: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045102c: nop

00451030: beq a1,zero,0x00450f08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x450f08, 4) , (unique, 0x1200, 1)

00451034: _andi a1,t6,0x2
	(register, 0x14, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)

00451038: beq a1,zero,0x00450f08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x450f08, 4) , (unique, 0x1200, 1)

0045103c: _nop

00451040: lw a2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451044: nop

00451048: lw a1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045104c: nop

00451050: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

00451054: b 0x00450efc
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x450efc, 4)

00451058: _sw a1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045105c: subu v0,s5,t3
	(register, 0x8, 4) INT_SUB (register, 0x54, 4) , (register, 0x2c, 4)

00451060: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00451064: sltiu v1,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00451068: beq v1,zero,0x00450f78
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x450f78, 4) , (unique, 0x1200, 1)

0045106c: _sw s5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00451070: sltiu v0,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00451074: bne v0,zero,0x004510a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x4510a0, 4) , (unique, 0x1700, 1)

00451078: _addiu a2,a2,0x5
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x5, 4)

0045107c: lbu v0,-0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00451080: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

00451084: beq s5,a3,0x004510a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x4510a0, 4) , (unique, 0x1200, 1)

00451088: _sb v0,-0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045108c: lbu v0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00451090: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

00451094: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

00451098: bne s5,a3,0x0045108c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x45108c, 4) , (unique, 0x1700, 1)

0045109c: _sb v0,-0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004510a0: li v0,0x7
	(register, 0x8, 4) COPY (const, 0x7, 4)

004510a4: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

004510a8: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004510ac: lw a3,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004510b0: nop

004510b4: beq a3,zero,0x004510c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x4510c4, 4) , (unique, 0x1200, 1)

004510b8: _andi a1,a1,0x2
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x2, 4)

004510bc: bne a1,zero,0x004510d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4510d0, 4) , (unique, 0x1700, 1)

004510c0: _nop

004510c4: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

004510c8: b 0x00450cd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cd0, 4)

004510cc: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004510d0: lw a1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004510d4: nop

004510d8: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

004510dc: b 0x00450e48
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x450e48, 4)

004510e0: _sw a1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004510e4: b 0x00450cc0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x450cc0, 4)

004510e8: _sw v0,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004510ec: bne a0,s1,0x00450f10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x44, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x450f10, 4) , (unique, 0x1700, 1)

004510f0: _sw s5,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004510f4: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004510f8: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004510fc: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451100: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451104: addiu a3,a3,0x71ac
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)

00451108: li a2,0x253
	(register, 0x18, 4) COPY (const, 0x253, 4)

0045110c: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

00451110: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x451118, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fbc, 4)
	 ---  CALLIND (register, 0x80, 4)

00451114: _addiu a0,a0,0x6fbc
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fbc, 4)

00451118: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045111c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451120: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451124: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451128: addiu a3,a3,0x71ac
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)

0045112c: li a2,0x287
	(register, 0x18, 4) COPY (const, 0x287, 4)

00451130: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

00451134: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45113c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fdc, 4)
	 ---  CALLIND (register, 0x80, 4)

00451138: _addiu a0,a0,0x6fdc
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fdc, 4)

0045113c: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451140: li a2,0x1d3
	(register, 0x18, 4) COPY (const, 0x1d3, 4)

00451144: addiu a3,a3,0x71ac
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)

00451148: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045114c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451150: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451154: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

00451158: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x451160, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6f94, 4)
	 ---  CALLIND (register, 0x80, 4)

0045115c: _addiu a0,a0,0x6f94
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6f94, 4)

00451160: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451164: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451168: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045116c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451170: addiu a3,a3,0x7188
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7188, 4)

00451174: li a2,0x135
	(register, 0x18, 4) COPY (const, 0x135, 4)

00451178: addiu a1,a1,0x703c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x703c, 4)

0045117c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x451184, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x704c, 4)
	 ---  CALLIND (register, 0x80, 4)

00451180: _addiu a0,a0,0x704c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x704c, 4)

00451184: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451188: b 0x00451148
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)
	 ---  BRANCH (ram, 0x451148, 4)

0045118c: _addiu a3,a3,0x71ac
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x71ac, 4)

00451190: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451194: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00451198: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045119c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004511a0: addiu a3,a3,0x7188
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7188, 4)

004511a4: li a2,0x181
	(register, 0x18, 4) COPY (const, 0x181, 4)

004511a8: addiu a1,a1,0x703c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x703c, 4)

004511ac: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4511b4, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70ac, 4)
	 ---  CALLIND (register, 0x80, 4)

004511b0: _addiu a0,a0,0x70ac
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70ac, 4)

