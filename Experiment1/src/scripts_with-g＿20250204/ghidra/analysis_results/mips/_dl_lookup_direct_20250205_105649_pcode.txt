Function: _dl_lookup_direct
Address: 004783bc
P-code:

004783bc: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

004783c0: addiu gp,gp,0x2aa4
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x2aa4, 4)

004783c4: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

004783c8: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

004783cc: lw v0,0x270(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x270, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004783d0: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004783d4: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004783d8: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004783dc: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004783e0: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004783e4: lw s4,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004783e8: lw v1,0x264(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x264, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004783ec: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004783f0: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004783f4: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004783f8: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004783fc: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00478400: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00478404: or s6,a0,zero
	(register, 0x58, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00478408: or s2,a1,zero
	(register, 0x48, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0047840c: beq v0,zero,0x004784d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4784d8, 4) , (unique, 0x1200, 1)

00478410: _or s3,a3,zero
	(register, 0x4c, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00478414: bne v1,zero,0x00478420
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_REM (register, 0x18, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x478420, 4) , (unique, 0x1700, 1)

00478418: _divu a2,v1
	(register, 0x3004, 4) INT_DIV (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_REM (register, 0x18, 4) , (register, 0xc, 4)

0047841c: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00478420: lw v0,0x274(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x274, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478424: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

00478428: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0047842c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00478430: lw s1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478434: nop

00478438: beq s1,zero,0x004784a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4784a4, 4) , (unique, 0x1200, 1)

0047843c: _or s7,a2,zero
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00478440: lw s8,0x278(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x278, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478444: lw s5,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478448: sll s1,s1,0x2
	(register, 0x44, 4) INT_LEFT (register, 0x44, 4) , (const, 0x2, 4)

0047844c: addu s1,s8,s1
	(register, 0x44, 4) INT_ADD (register, 0x78, 4) , (register, 0x44, 4)

00478450: addiu s5,s5,-0x7db0
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffff8250, 4)

00478454: lw s0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478458: subu v1,s1,s8
	(register, 0xc, 4) INT_SUB (register, 0x44, 4) , (register, 0x78, 4)

0047845c: xor v0,s0,s7
	(register, 0x8, 4) INT_XOR (register, 0x40, 4) , (register, 0x5c, 4)

00478460: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00478464: or a3,s4,zero
	(register, 0x1c, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00478468: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0047846c: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00478470: bne v0,zero,0x00478498
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x478498, 4) , (unique, 0x1700, 1)

00478474: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00478478: lw v0,0x30c(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x30c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0047847c: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00478480: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00478484: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478488: bal 0x00478250
	(register, 0x7c, 4) COPY (const, 0x478490, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x478250, 4)

0047848c: _sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00478490: bne v0,zero,0x004784a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4784a8, 4) , (unique, 0x1700, 1)

00478494: _nop

00478498: andi s0,s0,0x1
	(register, 0x40, 4) INT_AND (register, 0x40, 4) , (const, 0x1, 4)

0047849c: beq s0,zero,0x00478454
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x478454, 4) , (unique, 0x1200, 1)

004784a0: _addiu s1,s1,0x4
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)

004784a4: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004784a8: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784ac: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784b0: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784b4: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784b8: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784bc: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784c0: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784c4: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784c8: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784cc: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004784d0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

004784d4: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

004784d8: lbu a0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

004784dc: nop

004784e0: beq a0,zero,0x00478568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x478568, 4) , (unique, 0x1200, 1)

004784e4: _nop

004784e8: lbu a1,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

004784ec: nop

004784f0: beq a1,zero,0x00478568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x478568, 4) , (unique, 0x1200, 1)

004784f4: _nop

004784f8: lbu a2,0x2(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

004784fc: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

00478500: beq a2,zero,0x00478568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x478568, 4) , (unique, 0x1200, 1)

00478504: _addu a0,a1,a0
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

00478508: lbu a3,0x3(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x2f00, 1)

0047850c: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

00478510: beq a3,zero,0x00478568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x478568, 4) , (unique, 0x1200, 1)

00478514: _addu a0,a2,a0
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)

00478518: lbu a1,0x4(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0047851c: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

00478520: beq a1,zero,0x00478568
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x1c, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x478568, 4) , (unique, 0x1200, 1)

00478524: _addu a0,a3,a0
	(register, 0x10, 4) INT_ADD (register, 0x1c, 4) , (register, 0x10, 4)

00478528: lbu a2,0x5(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0047852c: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

00478530: addu a0,a1,a0
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

00478534: beq a2,zero,0x0047855c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x47855c, 4) , (unique, 0x1200, 1)

00478538: _addiu a3,s2,0x5
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)

0047853c: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

00478540: addu a0,a2,a0
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)

00478544: srl a1,a0,0x18
	(register, 0x14, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x18, 4)

00478548: lbu a2,0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0047854c: andi a1,a1,0xf0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xf0, 4)

00478550: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

00478554: bne a2,zero,0x0047853c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x47853c, 4) , (unique, 0x1700, 1)

00478558: _xor a0,a0,a1
	(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (register, 0x14, 4)

0047855c: lui a1,0xfff
	(register, 0x14, 4) INT_LEFT (const, 0xfff, 4) , (const, 0x10, 4)

00478560: ori a1,a1,0xffff
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (const, 0xffff, 4)

00478564: and a0,a0,a1
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x14, 4)

00478568: bne v1,zero,0x00478574
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_REM (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x478574, 4) , (unique, 0x1700, 1)

0047856c: _divu a0,v1
	(register, 0x3004, 4) INT_DIV (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_REM (register, 0x10, 4) , (register, 0xc, 4)

00478570: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00478574: lw v1,0x278(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x278, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478578: mfhi a0
	(register, 0x10, 4) COPY (register, 0x3000, 4)

0047857c: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

00478580: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

00478584: lw s0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478588: nop

0047858c: beq s0,zero,0x004784a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4784a8, 4) , (unique, 0x1200, 1)

00478590: _nop

00478594: lw s1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478598: b 0x004785bc
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffff8250, 4)
	 ---  BRANCH (ram, 0x4785bc, 4)

0047859c: _addiu s1,s1,-0x7db0
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffff8250, 4)

004785a0: lw v1,0x274(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x274, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004785a4: nop

004785a8: addu v1,v1,s0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x40, 4)

004785ac: lw s0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004785b0: nop

004785b4: beq s0,zero,0x004784a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4784a8, 4) , (unique, 0x1200, 1)

004785b8: _nop

004785bc: sw s0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004785c0: or a3,s4,zero
	(register, 0x1c, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

004785c4: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

004785c8: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

004785cc: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004785d0: bal 0x00478250
	(register, 0x7c, 4) COPY (const, 0x4785d8, 4)
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x478250, 4)

004785d4: _or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

004785d8: beq v0,zero,0x004785a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x4785a0, 4) , (unique, 0x1200, 1)

004785dc: _sll s0,s0,0x2
	(register, 0x40, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)

004785e0: b 0x004784a8
	 ---  BRANCH (ram, 0x4784a8, 4)

004785e4: _nop

