Function: __ctzsi2
Address: 00478f30
P-code:

00478f30: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00478f34: addiu gp,gp,0x1f30
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x1f30, 4)

00478f38: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00478f3c: subu v0,zero,a0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)

00478f40: and a0,v0,a0
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00478f44: lui v0,0x1
	(register, 0x8, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

00478f48: sltu v0,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00478f4c: beq v0,zero,0x00478f7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x478f7c, 4) , (unique, 0x1200, 1)

00478f50: _nop

00478f54: sltiu v1,a0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x100, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00478f58: xori v1,v1,0x1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)

00478f5c: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

00478f60: lw v0,-0x77d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff882c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00478f64: srlv a0,a0,v1
	(unique, 0x5780, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00478f68: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

00478f6c: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00478f70: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

00478f74: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)
	 ---  RETURN (register, 0x80, 4)

00478f78: _addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00478f7c: lui v0,0x100
	(register, 0x8, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

00478f80: sltu v0,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00478f84: beq v0,zero,0x00478f60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x478f60, 4) , (unique, 0x1200, 1)

00478f88: _li v1,0x18
	(register, 0xc, 4) COPY (const, 0x18, 4)

00478f8c: b 0x00478f60
	(register, 0xc, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x478f60, 4)

00478f90: _li v1,0x10
	(register, 0xc, 4) COPY (const, 0x10, 4)

