Function: _nl_intern_locale_data
Address: 0046bb60
P-code:

0046bb60: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046bb64: addiu gp,gp,-0xd00
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xfffff300, 4)

0046bb68: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046bb6c: addiu sp,sp,-0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc8, 4)

0046bb70: sltiu v0,a2,0x8
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046bb74: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046bb78: sw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046bb7c: sw s6,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046bb80: sw s5,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046bb84: sw s4,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046bb88: sw s3,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046bb8c: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046bb90: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046bb94: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046bb98: bne v0,zero,0x0046bfa8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46bfa8, 4) , (unique, 0x1700, 1)

0046bb9c: _li v0,0x3
	(register, 0x8, 4) COPY (const, 0x3, 4)

0046bba0: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bba4: or s2,a2,zero
	(register, 0x48, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046bba8: or s3,a0,zero
	(register, 0x4c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046bbac: beq a0,v0,0x0046bfc0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bfc0, 4) , (unique, 0x1200, 1)

0046bbb0: _or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046bbb4: beq a0,zero,0x0046bc94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x2009, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46bc94, 4) , (unique, 0x1200, 1)

0046bbb8: _lui v0,0x2009
	(register, 0x8, 4) INT_LEFT (const, 0x2009, 4) , (const, 0x10, 4)

0046bbbc: lui v0,0x2003
	(register, 0x8, 4) INT_LEFT (const, 0x2003, 4) , (const, 0x10, 4)

0046bbc0: addiu v0,v0,0x1115
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1115, 4)

0046bbc4: xor v0,a0,v0
	(register, 0x8, 4) INT_XOR (register, 0x10, 4) , (register, 0x8, 4)

0046bbc8: bne v1,v0,0x0046bfa8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x58, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bfa8, 4) , (unique, 0x1700, 1)

0046bbcc: _sll s6,s3,0x2
	(register, 0x58, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0046bbd0: lw v0,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bbd4: nop

0046bbd8: addiu v0,v0,-0x51b4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffae4c, 4)

0046bbdc: addu v0,v0,s6
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x58, 4)

0046bbe0: lw s5,0x4(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bbe4: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bbe8: nop

0046bbec: sltu v0,s5,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x54, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046bbf0: bne v0,zero,0x0046bfa8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bfa8, 4) , (unique, 0x1700, 1)

0046bbf4: _addiu v0,s5,0x2
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (const, 0x2, 4)

0046bbf8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046bbfc: sltu v1,v0,s2
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x48, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bc00: beq v1,zero,0x0046bfa8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x46bfa8, 4) , (unique, 0x1200, 1)

0046bc04: _addiu s4,v0,0x18
	(register, 0x50, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)

0046bc08: sltiu a0,s3,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0x4c, 4) , (const, 0x1, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0046bc0c: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bc10: sll a0,a0,0x4
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

0046bc14: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46bc1c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x50, 4)
	 ---  CALLIND (register, 0x80, 4)

0046bc18: _addu a0,a0,s4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x50, 4)

0046bc1c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bc20: beq v0,zero,0x0046bd34
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd34, 4) , (unique, 0x1200, 1)

0046bc24: _or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046bc28: sw s1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046bc2c: beq s3,zero,0x0046bfcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x46bfcc, 4) , (unique, 0x1200, 1)

0046bc30: _sw s2,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046bc34: sw zero,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bc38: sw zero,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bc3c: sw zero,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bc40: beq s5,zero,0x0046bd38
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46bd38, 4) , (unique, 0x1200, 1)

0046bc44: _sw s5,0x1c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046bc48: lw a2,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bc4c: addiu a1,s1,0x8
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (const, 0x8, 4)

0046bc50: addiu a2,a2,-0x5790
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffa870, 4)

0046bc54: addiu a0,s0,0x20
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)

0046bc58: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046bc5c: sltiu t0,s3,0xd
	(unique, 0x5280, 1) INT_LESS (register, 0x4c, 4) , (const, 0xd, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

0046bc60: addu a2,a2,s6
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x58, 4)

0046bc64: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bc68: nop

0046bc6c: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bc70: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bc74: _nop

0046bc78: beq t0,zero,0x0046c2c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c2c4, 4) , (unique, 0x1200, 1)

0046bc7c: _nop

0046bc80: lw v1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bc84: nop

0046bc88: addu v1,v1,gp
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x70, 4)

0046bc8c: jr v1
	(unique, 0xc80, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0xc, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0046bc90: _nop

0046bc94: b 0x0046bbc8
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x720, 4)
	 ---  BRANCH (ram, 0x46bbc8, 4)

0046bc98: _addiu v0,v0,0x720
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x720, 4)

0046bc9c: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bca0: nop

0046bca4: addiu v1,v1,-0x571c
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa8e4, 4)

0046bca8: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046bcac: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bcb0: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046bcb4: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046bcb8: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046bcbc: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bcc0: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046bcc4: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bcc8: nop

0046bccc: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046bcd0: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bcd4: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bcd8: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046bcdc: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046bce0: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046bce4: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046bce8: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bcec: nop

0046bcf0: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bcf4: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bcf8: _nop

0046bcfc: sltiu v1,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046bd00: bne v1,zero,0x0046bc9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bc9c, 4) , (unique, 0x1700, 1)

0046bd04: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046bd08: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd0c: nop

0046bd10: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46bd18, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046bd14: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046bd18: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd1c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0046bd20: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd24: nop

0046bd28: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046bd2c: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0046bd30: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046bd34: or s0,zero,zero
	(register, 0x40, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046bd38: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd3c: lw s6,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd40: lw s5,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd44: lw s4,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd48: lw s3,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd4c: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd50: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd54: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046bd58: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd5c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  RETURN (register, 0x80, 4)

0046bd60: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

0046bd64: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd68: nop

0046bd6c: addiu v1,v1,-0x56c4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa93c, 4)

0046bd70: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046bd74: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd78: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046bd7c: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046bd80: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046bd84: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bd88: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046bd8c: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd90: nop

0046bd94: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046bd98: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bd9c: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bda0: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046bda4: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046bda8: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046bdac: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046bdb0: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bdb4: nop

0046bdb8: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bdbc: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bdc0: _nop

0046bdc4: sltiu v1,v0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046bdc8: bne v1,zero,0x0046bd64
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd64, 4) , (unique, 0x1700, 1)

0046bdcc: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046bdd0: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046bdd4: _nop

0046bdd8: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bddc: nop

0046bde0: addiu v1,v1,-0x56b8
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa948, 4)

0046bde4: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046bde8: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bdec: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046bdf0: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046bdf4: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046bdf8: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bdfc: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046be00: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be04: nop

0046be08: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046be0c: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be10: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046be14: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046be18: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046be1c: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046be20: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046be24: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be28: nop

0046be2c: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046be30: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046be34: _nop

0046be38: sltiu v1,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046be3c: bne v1,zero,0x0046bdd8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bdd8, 4) , (unique, 0x1700, 1)

0046be40: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046be44: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046be48: _nop

0046be4c: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be50: nop

0046be54: addiu v1,v1,-0x56b8
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa948, 4)

0046be58: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046be5c: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be60: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046be64: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046be68: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046be6c: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046be70: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046be74: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be78: nop

0046be7c: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046be80: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be84: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046be88: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046be8c: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046be90: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046be94: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046be98: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046be9c: nop

0046bea0: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bea4: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bea8: _nop

0046beac: sltiu v1,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046beb0: bne v1,zero,0x0046be4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46be4c, 4) , (unique, 0x1700, 1)

0046beb4: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046beb8: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046bebc: _nop

0046bec0: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bec4: nop

0046bec8: addiu v1,v1,-0x5428
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffabd8, 4)

0046becc: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046bed0: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bed4: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046bed8: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046bedc: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046bee0: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bee4: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046bee8: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046beec: nop

0046bef0: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046bef4: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bef8: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046befc: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046bf00: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046bf04: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046bf08: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046bf0c: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf10: nop

0046bf14: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bf18: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bf1c: _nop

0046bf20: sltiu v1,v0,0x6
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x6, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046bf24: bne v1,zero,0x0046bec0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bec0, 4) , (unique, 0x1700, 1)

0046bf28: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046bf2c: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046bf30: _nop

0046bf34: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf38: nop

0046bf3c: addiu v1,v1,-0x56e0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa920, 4)

0046bf40: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0046bf44: lw t1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf48: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0046bf4c: bne t1,v1,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046bf50: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046bf54: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bf58: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046bf5c: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf60: nop

0046bf64: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046bf68: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf6c: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bf70: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046bf74: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046bf78: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046bf7c: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046bf80: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bf84: nop

0046bf88: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046bf8c: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046bf90: _nop

0046bf94: sltiu v1,v0,0x7
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x7, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046bf98: bne v1,zero,0x0046bf34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bf34, 4) , (unique, 0x1700, 1)

0046bf9c: _sll t1,v0,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046bfa0: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046bfa4: _nop

0046bfa8: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bfac: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0046bfb0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046bfb4: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0046bfb8: b 0x0046bd34
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x46bd34, 4)

0046bfbc: _sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046bfc0: lui v0,0x2005
	(register, 0x8, 4) INT_LEFT (const, 0x2005, 4) , (const, 0x10, 4)

0046bfc4: b 0x0046bbc8
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1017, 4)
	 ---  BRANCH (ram, 0x46bbc8, 4)

0046bfc8: _addiu v0,v0,0x1017
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1017, 4)

0046bfcc: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046bfd0: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046bfd4: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bfd8: sw zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bfdc: sw zero,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bfe0: sw zero,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bfe4: lw s5,0x4(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bfe8: sw zero,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bfec: sw zero,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046bff0: beq s5,zero,0x0046c058
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46c058, 4) , (unique, 0x1200, 1)

0046bff4: _sw s5,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046bff8: lw s2,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046bffc: b 0x0046bc48
	 ---  BRANCH (ram, 0x46bc48, 4)

0046c000: _nop

0046c004: lw t1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c008: li t2,0x5
	(register, 0x28, 4) COPY (const, 0x5, 4)

0046c00c: addiu t1,t1,-0x5714
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffa8ec, 4)

0046c010: sltiu v1,v0,0xd
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xd, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c014: beq v1,zero,0x0046bd08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1200, 1)

0046c018: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c01c: addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0046c020: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c024: nop

0046c028: beq v1,t2,0x0046c394
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c394, 4) , (unique, 0x1200, 1)

0046c02c: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c030: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c034: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c038: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c03c: sltu a3,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046c040: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046c044: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c048: bne a3,zero,0x0046bc64
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46bc64, 4) , (unique, 0x1700, 1)

0046c04c: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c050: bne s3,zero,0x0046bd38
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46bd38, 4) , (unique, 0x1700, 1)

0046c054: _nop

0046c058: lw s2,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c05c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046c060: lw s4,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c064: sb v0,0x5(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c068: sb v0,0x6(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c06c: sb v0,0x7(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x7, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c070: sb v0,0x8(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c074: sb v0,0x9(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x9, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c078: sb v0,0xa(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xa, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c07c: sb v0,0xb(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xb, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c080: sb v0,0xc(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c084: sb v0,0xd(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xd, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c088: sb v0,0xe(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c08c: addiu s6,s0,0xc4
	(register, 0x58, 4) INT_ADD (register, 0x40, 4) , (const, 0xc4, 4)

0046c090: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046c094: li s3,0x1
	(register, 0x4c, 4) COPY (const, 0x1, 4)

0046c098: li s5,0xa
	(register, 0x54, 4) COPY (const, 0xa, 4)

0046c09c: lw a0,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c0a0: addiu v0,s1,0x30
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0x30, 4)

0046c0a4: lb v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046c0a8: nop

0046c0ac: beq v1,v0,0x0046c37c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c37c, 4) , (unique, 0x1200, 1)

0046c0b0: _or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046c0b4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46c0bc, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4f, 1)
	 ---  CALLIND (register, 0x80, 4)

0046c0b8: _sb s3,0x4(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4f, 1)

0046c0bc: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0046c0c0: addu v1,s2,s1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0x44, 4)

0046c0c4: beq s1,zero,0x0046c36c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x46c36c, 4) , (unique, 0x1200, 1)

0046c0c8: _sb v0,0x5(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c0cc: lbu v1,0xf(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xf, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046c0d0: nop

0046c0d4: beq v1,v0,0x0046c0e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46c0e0, 4) , (unique, 0x1200, 1)

0046c0d8: _nop

0046c0dc: sb zero,0xf(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xf, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0046c0e0: addiu s1,s1,0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0046c0e4: bne s1,s5,0x0046c09c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x54, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c09c, 4) , (unique, 0x1700, 1)

0046c0e8: _addiu s6,s6,0x4
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)

0046c0ec: b 0x0046bd38
	 ---  BRANCH (ram, 0x46bd38, 4)

0046c0f0: _nop

0046c0f4: lw t1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c0f8: li t2,0x5
	(register, 0x28, 4) COPY (const, 0x5, 4)

0046c0fc: addiu t1,t1,-0x5200
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffae00, 4)

0046c100: sltiu v1,v0,0x13
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x13, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c104: beq v1,zero,0x0046bd08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1200, 1)

0046c108: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c10c: addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0046c110: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c114: nop

0046c118: bne v1,t2,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046c11c: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c120: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c124: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c128: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c12c: nop

0046c130: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c134: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c138: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c13c: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c140: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c144: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046c148: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c14c: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c150: nop

0046c154: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c158: beq v1,zero,0x0046c104
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x13, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46c104, 4) , (unique, 0x1200, 1)

0046c15c: _sltiu v1,v0,0x13
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x13, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c160: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c164: _nop

0046c168: lw t1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c16c: li t2,0x5
	(register, 0x28, 4) COPY (const, 0x5, 4)

0046c170: addiu t1,t1,-0x575c
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffa8a4, 4)

0046c174: sltiu v1,v0,0x10
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c178: beq v1,zero,0x0046bd08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1200, 1)

0046c17c: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c180: addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0046c184: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c188: nop

0046c18c: bne v1,t2,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046c190: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c194: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c198: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c19c: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c1a0: nop

0046c1a4: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c1a8: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c1ac: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c1b0: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c1b4: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c1b8: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046c1bc: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c1c0: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c1c4: nop

0046c1c8: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c1cc: beq v1,zero,0x0046c178
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46c178, 4) , (unique, 0x1200, 1)

0046c1d0: _sltiu v1,v0,0x10
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c1d4: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c1d8: _nop

0046c1dc: lw t1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c1e0: li t2,0x5
	(register, 0x28, 4) COPY (const, 0x5, 4)

0046c1e4: addiu t1,t1,-0x5410
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffabf0, 4)

0046c1e8: sltiu v1,v0,0x2e
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2e, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c1ec: beq v1,zero,0x0046bd08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1200, 1)

0046c1f0: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c1f4: addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0046c1f8: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c1fc: nop

0046c200: bne v1,t2,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046c204: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c208: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c20c: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c210: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c214: nop

0046c218: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c21c: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c220: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c224: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c228: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c22c: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046c230: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c234: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c238: nop

0046c23c: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c240: beq v1,zero,0x0046c1ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2e, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46c1ec, 4) , (unique, 0x1200, 1)

0046c244: _sltiu v1,v0,0x2e
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2e, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c248: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c24c: _nop

0046c250: lw t1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c254: li t2,0x9f
	(register, 0x28, 4) COPY (const, 0x9f, 4)

0046c258: addiu t1,t1,-0x56a4
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffa95c, 4)

0046c25c: li t3,0x5
	(register, 0x2c, 4) COPY (const, 0x5, 4)

0046c260: beq v0,t2,0x0046bd08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x28, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1200, 1)

0046c264: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c268: addu v1,t1,v1
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (register, 0xc, 4)

0046c26c: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c270: nop

0046c274: bne v1,t3,0x0046c030
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x2c, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c030, 4) , (unique, 0x1700, 1)

0046c278: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c27c: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c280: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c284: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c288: nop

0046c28c: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c290: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c294: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c298: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c29c: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c2a0: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046c2a4: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c2a8: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c2ac: nop

0046c2b0: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c2b4: beq v1,zero,0x0046c260
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c260, 4) , (unique, 0x1200, 1)

0046c2b8: _nop

0046c2bc: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c2c0: _nop

0046c2c4: lw a2,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c2c8: li t0,0x5
	(register, 0x20, 4) COPY (const, 0x5, 4)

0046c2cc: bne s3,zero,0x0046c410
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffaca8, 4)
	 ---  CBRANCH (ram, 0x46c410, 4) , (unique, 0x1700, 1)

0046c2d0: _addiu a2,a2,-0x5358
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffaca8, 4)

0046c2d4: sltiu v1,v0,0x56
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x56, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c2d8: beq v1,zero,0x0046c330
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46c330, 4) , (unique, 0x1200, 1)

0046c2dc: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046c2e0: addu v1,a2,v1
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

0046c2e4: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c2e8: nop

0046c2ec: beq v1,t0,0x0046c3dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x46c3dc, 4) , (unique, 0x1200, 1)

0046c2f0: _andi v1,a3,0x3
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0046c2f4: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c2f8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c2fc: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c300: sltu a3,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0046c304: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046c308: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c30c: beq a3,zero,0x0046c058
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c058, 4) , (unique, 0x1200, 1)

0046c310: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c314: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c318: nop

0046c31c: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c320: beq v1,zero,0x0046c2d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x56, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46c2d8, 4) , (unique, 0x1200, 1)

0046c324: _sltiu v1,v0,0x56
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x56, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c328: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c32c: _nop

0046c330: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c334: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c338: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c33c: sltu a2,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)

0046c340: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046c344: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c348: beq a2,zero,0x0046c058
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c058, 4) , (unique, 0x1200, 1)

0046c34c: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c350: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c354: nop

0046c358: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c35c: beq v1,zero,0x0046c330
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c330, 4) , (unique, 0x1200, 1)

0046c360: _nop

0046c364: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c368: _nop

0046c36c: sb v0,0xf(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xf, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046c370: addiu s6,s6,0x4
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x4, 4)

0046c374: b 0x0046c09c
	(register, 0x44, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46c09c, 4)

0046c378: _li s1,0x1
	(register, 0x44, 4) COPY (const, 0x1, 4)

0046c37c: lb v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046c380: nop

0046c384: bne v0,zero,0x0046c0b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46c0b4, 4) , (unique, 0x1700, 1)

0046c388: _nop

0046c38c: b 0x0046c0c0
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46c0c0, 4)

0046c390: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046c394: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c398: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c39c: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c3a0: nop

0046c3a4: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c3a8: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c3ac: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c3b0: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c3b4: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c3b8: beq v1,zero,0x0046c050
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c050, 4) , (unique, 0x1200, 1)

0046c3bc: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c3c0: lw a3,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c3c4: nop

0046c3c8: sltu v1,s2,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c3cc: beq v1,zero,0x0046c014
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xd, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46c014, 4) , (unique, 0x1200, 1)

0046c3d0: _sltiu v1,v0,0xd
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xd, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0046c3d4: b 0x0046bd08
	 ---  BRANCH (ram, 0x46bd08, 4)

0046c3d8: _nop

0046c3dc: bne v1,zero,0x0046bd08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46bd08, 4) , (unique, 0x1700, 1)

0046c3e0: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046c3e4: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c3e8: nop

0046c3ec: addu v1,v1,a3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x1c, 4)

0046c3f0: lw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c3f4: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046c3f8: sw a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0046c3fc: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046c400: bne v1,zero,0x0046c314
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46c314, 4) , (unique, 0x1700, 1)

0046c404: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046c408: b 0x0046c058
	 ---  BRANCH (ram, 0x46c058, 4)

0046c40c: _nop

0046c410: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c414: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c418: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c41c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046c420: addiu a3,a3,-0x7428
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff8bd8, 4)

0046c424: li a2,0xce
	(register, 0x18, 4) COPY (const, 0xce, 4)

0046c428: addiu a1,a1,-0x7458
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff8ba8, 4)

0046c42c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46c434, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8bb8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046c430: _addiu a0,a0,-0x7448
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8bb8, 4)

