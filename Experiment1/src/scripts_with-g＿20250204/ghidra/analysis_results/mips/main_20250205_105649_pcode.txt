Function: main
Address: 0040dfd0
P-code:

0040dfd0: addiu sp,sp,-0x658
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffff9a8, 4)

0040dfd4: sw ra,0x654(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x654, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040dfd8: sw s8,0x650(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x650, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040dfdc: sw s0,0x64c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0040dfe0: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040dfe4: sw a0,0x658(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x658, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040dfe8: sw a1,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0040dfec: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040dff0: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040dff4: nop

0040dff8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040dffc: nop

0040e000: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e004: jal 0x0041fbb8
	(register, 0x7c, 4) COPY (const, 0x40e00c, 4)
	 ---  CALL (ram, 0x41fbb8, 4)

0040e008: _nop

0040e00c: addiu v0,s8,0x94
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)

0040e010: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e014: jal 0x004127d8
	(register, 0x7c, 4) COPY (const, 0x40e01c, 4)
	 ---  CALL (ram, 0x4127d8, 4)

0040e018: _nop

0040e01c: addiu v0,s8,0x94
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)

0040e020: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0040e024: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e028: jal 0x00412838
	(register, 0x7c, 4) COPY (const, 0x40e030, 4)
	 ---  CALL (ram, 0x412838, 4)

0040e02c: _nop

0040e030: addiu v0,s8,0x94
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)

0040e034: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040e038: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e03c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e040: jal 0x00412728
	(register, 0x7c, 4) COPY (const, 0x40e048, 4)
	 ---  CALL (ram, 0x412728, 4)

0040e044: _nop

0040e048: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040e04c: li a0,0x12
	(register, 0x10, 4) COPY (const, 0x12, 4)

0040e050: jal 0x004123e8
	(register, 0x7c, 4) COPY (const, 0x40e058, 4)
	 ---  CALL (ram, 0x4123e8, 4)

0040e054: _nop

0040e058: lui v0,0x41
	(register, 0x8, 4) INT_LEFT (const, 0x41, 4) , (const, 0x10, 4)

0040e05c: addiu a1,v0,-0x1360
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffeca0, 4)

0040e060: li a0,0x5
	(register, 0x10, 4) COPY (const, 0x5, 4)

0040e064: jal 0x004123e8
	(register, 0x7c, 4) COPY (const, 0x40e06c, 4)
	 ---  CALL (ram, 0x4123e8, 4)

0040e068: _nop

0040e06c: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0040e070: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040e074: addiu a0,v0,0x3270
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x3270, 4)

0040e078: jal 0x0041f878
	(register, 0x7c, 4) COPY (const, 0x40e080, 4)
	 ---  CALL (ram, 0x41f878, 4)

0040e07c: _nop

0040e080: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e084: lw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e088: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e08c: bne v1,v0,0x0040e0bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e0bc, 4) , (unique, 0x1700, 1)

0040e090: _nop

0040e094: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0040e098: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040e09c: addiu a0,v0,0x3280
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x3280, 4)

0040e0a0: jal 0x0041f878
	(register, 0x7c, 4) COPY (const, 0x40e0a8, 4)
	 ---  CALL (ram, 0x41f878, 4)

0040e0a4: _nop

0040e0a8: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e0ac: lw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e0b0: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e0b4: beq v1,v0,0x0040e0f0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e0f0, 4) , (unique, 0x1200, 1)

0040e0b8: _nop

0040e0bc: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040e0c0: sw v0,0x114(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x114, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e0c4: addiu v0,s8,0x114
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x114, 4)

0040e0c8: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e0cc: lui v0,0x8004
	(register, 0x8, 4) INT_LEFT (const, 0x8004, 4) , (const, 0x10, 4)

0040e0d0: ori a1,v0,0x5704
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x5704, 4)

0040e0d4: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e0d8: jal 0x00420a78
	(register, 0x7c, 4) COPY (const, 0x40e0e0, 4)
	 ---  CALL (ram, 0x420a78, 4)

0040e0dc: _nop

0040e0e0: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e0e4: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40e0ec, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040e0e8: _nop

0040e0ec: sw zero,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e0f0: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040e0f4: addiu a0,v0,0x3294
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x3294, 4)

0040e0f8: jal 0x004003d0
	(register, 0x7c, 4) COPY (const, 0x40e100, 4)
	 ---  CALL (ram, 0x4003d0, 4)

0040e0fc: _nop

0040e100: jal 0x00411854
	(register, 0x7c, 4) COPY (const, 0x40e108, 4)
	 ---  CALL (ram, 0x411854, 4)

0040e104: _nop

0040e108: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e10c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e110: sw v1,0x39bc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39bc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e114: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e118: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0040e11c: sh v1,0x6bc0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6bc0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040e120: lui v0,0x41de
	(register, 0x8, 4) INT_LEFT (const, 0x41de, 4) , (const, 0x10, 4)

0040e124: ori a0,v0,0xca35
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0xca35, 4)

0040e128: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x40e130, 4)
	 ---  CALL (ram, 0x422288, 4)

0040e12c: _nop

0040e130: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e134: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e138: addiu v0,v0,0x6bc0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x6bc0, 4)

0040e13c: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e140: li a0,0x50
	(register, 0x10, 4) COPY (const, 0x50, 4)

0040e144: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40e14c, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040e148: _nop

0040e14c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e150: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e154: addiu v0,v0,0x6bc0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x6bc0, 4)

0040e158: sh v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xe, 2)

0040e15c: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e160: nop

0040e164: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e168: nop

0040e16c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e170: jal 0x0040f1b0
	(register, 0x7c, 4) COPY (const, 0x40e178, 4)
	 ---  CALL (ram, 0x40f1b0, 4)

0040e174: _nop

0040e178: beq v0,zero,0x0040e18c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e18c, 4) , (unique, 0x1200, 1)

0040e17c: _nop

0040e180: li a0,0x5
	(register, 0x10, 4) COPY (const, 0x5, 4)

0040e184: jal 0x004124d8
	(register, 0x7c, 4) COPY (const, 0x40e18c, 4)
	 ---  CALL (ram, 0x4124d8, 4)

0040e188: _nop

0040e18c: jal 0x0040ef6c
	(register, 0x7c, 4) COPY (const, 0x40e194, 4)
	 ---  CALL (ram, 0x40ef6c, 4)

0040e190: _nop

0040e194: jal 0x0040f480
	(register, 0x7c, 4) COPY (const, 0x40e19c, 4)
	 ---  CALL (ram, 0x40f480, 4)

0040e198: _nop

0040e19c: addiu v0,s8,0x70
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)

0040e1a0: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0040e1a4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e1a8: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40e1b0, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040e1ac: _nop

0040e1b0: lw v1,0x658(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x658, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e1b4: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0040e1b8: bne v1,v0,0x0040e250
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e250, 4) , (unique, 0x1700, 1)

0040e1bc: _nop

0040e1c0: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e1c4: nop

0040e1c8: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0040e1cc: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e1d0: nop

0040e1d4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e1d8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40e1e0, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040e1dc: _nop

0040e1e0: slti v0,v0,0x20
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040e1e4: beq v0,zero,0x0040e250
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e250, 4) , (unique, 0x1200, 1)

0040e1e8: _nop

0040e1ec: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e1f0: nop

0040e1f4: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0040e1f8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e1fc: addiu v1,s8,0x70
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)

0040e200: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e204: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e208: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40e210, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040e20c: _nop

0040e210: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e214: nop

0040e218: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0040e21c: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e220: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e224: nop

0040e228: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0040e22c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e230: nop

0040e234: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e238: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40e240, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040e23c: _nop

0040e240: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e244: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040e248: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40e250, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040e24c: _nop

0040e250: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x40e258, 4)
	 ---  CALL (ram, 0x40f524, 4)

0040e254: _nop

0040e258: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

0040e25c: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0040e260: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e264: sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e268: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040e26c: lw a1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e270: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e274: jal 0x0040f738
	(register, 0x7c, 4) COPY (const, 0x40e27c, 4)
	 ---  CALL (ram, 0x40f738, 4)

0040e278: _nop

0040e27c: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e280: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e284: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e288: sb zero,0x30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040e28c: lw v0,0x65c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x65c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e290: nop

0040e294: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e298: addiu v1,s8,0x50
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040e29c: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e2a0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e2a4: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40e2ac, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040e2a8: _nop

0040e2ac: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x40e2b4, 4)
	 ---  CALL (ram, 0x40f524, 4)

0040e2b0: _nop

0040e2b4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e2b8: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0040e2bc: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0040e2c0: bne v0,zero,0x0040e2cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e2cc, 4) , (unique, 0x1700, 1)

0040e2c4: _nop

0040e2c8: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040e2cc: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040e2d0: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0040e2d4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e2d8: sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e2dc: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040e2e0: lw a1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e2e4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e2e8: jal 0x0040f738
	(register, 0x7c, 4) COPY (const, 0x40e2f0, 4)
	 ---  CALL (ram, 0x40f738, 4)

0040e2ec: _nop

0040e2f0: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e2f4: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e2f8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e2fc: sb zero,0x30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040e300: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040e304: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e308: li a0,0xf
	(register, 0x10, 4) COPY (const, 0xf, 4)

0040e30c: jal 0x00400330
	(register, 0x7c, 4) COPY (const, 0x40e314, 4)
	 ---  CALL (ram, 0x400330, 4)

0040e310: _nop

0040e314: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040e318: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40e320, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040e31c: _nop

0040e320: addiu v0,s8,0x90
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)

0040e324: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e328: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040e32c: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40e334, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040e330: _nop

0040e334: sw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e338: lw v0,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e33c: nop

0040e340: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e344: lw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e348: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e34c: jal 0x0041fc28
	(register, 0x7c, 4) COPY (const, 0x40e354, 4)
	 ---  CALL (ram, 0x41fc28, 4)

0040e350: _nop

0040e354: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0040e358: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040e35c: addiu a1,v0,0x3298
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x3298, 4)

0040e360: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e364: jal 0x0041fc28
	(register, 0x7c, 4) COPY (const, 0x40e36c, 4)
	 ---  CALL (ram, 0x41fc28, 4)

0040e368: _nop

0040e36c: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040e370: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40e378, 4)
	 ---  CALL (ram, 0x410940, 4)

0040e374: _nop

0040e378: jal 0x0041dc48
	(register, 0x7c, 4) COPY (const, 0x40e380, 4)
	 ---  CALL (ram, 0x41dc48, 4)

0040e37c: _nop

0040e380: blez v0,0x0040e394
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e394, 4) , (unique, 0x1500, 1)

0040e384: _nop

0040e388: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040e38c: b 0x0040ec84
	 ---  BRANCH (ram, 0x40ec84, 4)

0040e390: _nop

0040e394: jal 0x00400430
	(register, 0x7c, 4) COPY (const, 0x40e39c, 4)
	 ---  CALL (ram, 0x400430, 4)

0040e398: _nop

0040e39c: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e3a0: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040e3a4: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40e3ac, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040e3a8: _nop

0040e3ac: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e3b0: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40e3b8, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040e3b4: _nop

0040e3b8: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0040e3bc: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40e3c4, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040e3c0: _nop

0040e3c4: jal 0x00407730
	(register, 0x7c, 4) COPY (const, 0x40e3cc, 4)
	 ---  CALL (ram, 0x407730, 4)

0040e3c8: _nop

0040e3cc: jal 0x0040ca80
	(register, 0x7c, 4) COPY (const, 0x40e3d4, 4)
	 ---  CALL (ram, 0x40ca80, 4)

0040e3d0: _nop

0040e3d4: addiu v0,s8,0x5c4
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c4, 4)

0040e3d8: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e3dc: sw zero,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e3e0: b 0x0040e410
	 ---  BRANCH (ram, 0x40e410, 4)

0040e3e4: _nop

0040e3e8: lw v1,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e3ec: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e3f0: nop

0040e3f4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e3f8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e3fc: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e400: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e404: nop

0040e408: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040e40c: sw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e410: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e414: nop

0040e418: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0040e41c: bne v0,zero,0x0040e3e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e3e8, 4) , (unique, 0x1700, 1)

0040e420: _nop

0040e424: addiu v0,s8,0x544
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x544, 4)

0040e428: sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e42c: sw zero,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e430: b 0x0040e460
	 ---  BRANCH (ram, 0x40e460, 4)

0040e434: _nop

0040e438: lw v1,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e43c: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e440: nop

0040e444: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e448: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e44c: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e450: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e454: nop

0040e458: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040e45c: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e460: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e464: nop

0040e468: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0040e46c: bne v0,zero,0x0040e438
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e438, 4) , (unique, 0x1700, 1)

0040e470: _nop

0040e474: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e478: lw v1,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e47c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e480: beq v1,v0,0x0040e4e4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e4e4, 4) , (unique, 0x1200, 1)

0040e484: _nop

0040e488: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e48c: lw v0,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e490: nop

0040e494: bgez v0,0x0040e4a0
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e4a0, 4) , (unique, 0x1300, 1)

0040e498: _nop

0040e49c: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e4a0: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e4a4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e4a8: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e4ac: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e4b0: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040e4b4: lw v0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e4b8: lui a0,0x4b
	(register, 0x10, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e4bc: lw a0,0x1ed0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e4c0: nop

0040e4c4: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

0040e4c8: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040e4cc: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

0040e4d0: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0040e4d4: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e4d8: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e4dc: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e4e0: sw a0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040e4e4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e4e8: lw v1,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e4ec: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e4f0: bne v1,v0,0x0040e500
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e500, 4) , (unique, 0x1700, 1)

0040e4f4: _nop

0040e4f8: jal 0x0040edf4
	(register, 0x7c, 4) COPY (const, 0x40e500, 4)
	 ---  CALL (ram, 0x40edf4, 4)

0040e4fc: _nop

0040e500: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e504: lb v0,0x3a30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3a30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040e508: nop

0040e50c: beq v0,zero,0x0040e578
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e578, 4) , (unique, 0x1200, 1)

0040e510: _nop

0040e514: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e518: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e51c: nop

0040e520: bgez v0,0x0040e52c
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e52c, 4) , (unique, 0x1300, 1)

0040e524: _nop

0040e528: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e52c: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e530: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e534: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e538: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e53c: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040e540: lw v0,0x524(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x524, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e544: lui a0,0x4b
	(register, 0x10, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e548: lw a0,0x1ed4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e54c: nop

0040e550: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

0040e554: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040e558: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

0040e55c: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0040e560: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e564: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e568: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e56c: sw a0,0x524(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x524, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040e570: b 0x0040e5d4
	 ---  BRANCH (ram, 0x40e5d4, 4)

0040e574: _nop

0040e578: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e57c: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e580: nop

0040e584: bgez v0,0x0040e590
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e590, 4) , (unique, 0x1300, 1)

0040e588: _nop

0040e58c: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e590: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e594: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e598: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e59c: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e5a0: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040e5a4: lw v0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e5a8: lui a0,0x4b
	(register, 0x10, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e5ac: lw a0,0x1ed4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e5b0: nop

0040e5b4: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

0040e5b8: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040e5bc: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

0040e5c0: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0040e5c4: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040e5c8: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e5cc: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e5d0: sw a0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0040e5d4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e5d8: lw v1,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e5dc: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e5e0: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e5e4: nop

0040e5e8: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0040e5ec: beq v0,zero,0x0040e60c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e60c, 4) , (unique, 0x1200, 1)

0040e5f0: _nop

0040e5f4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e5f8: lw v0,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e5fc: nop

0040e600: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e604: b 0x0040e61c
	 ---  BRANCH (ram, 0x40e61c, 4)

0040e608: _nop

0040e60c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e610: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e614: nop

0040e618: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e61c: sw zero,0x11c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e620: li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

0040e624: sw v0,0x118(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e628: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e62c: nop

0040e630: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040e634: addiu a1,s8,0x544
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0x544, 4)

0040e638: addiu a0,s8,0x5c4
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c4, 4)

0040e63c: addiu v1,s8,0x118
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x118, 4)

0040e640: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e644: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040e648: or a2,a1,zero
	(register, 0x18, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0040e64c: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040e650: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e654: jal 0x00400360
	(register, 0x7c, 4) COPY (const, 0x40e65c, 4)
	 ---  CALL (ram, 0x400360, 4)

0040e658: _nop

0040e65c: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e660: lw v1,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e664: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e668: beq v1,v0,0x0040ec60
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec60, 4) , (unique, 0x1200, 1)

0040e66c: _nop

0040e670: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e674: nop

0040e678: bne v0,zero,0x0040e6d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e6d8, 4) , (unique, 0x1700, 1)

0040e67c: _nop

0040e680: sh zero,0x120(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 2)

0040e684: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e688: nop

0040e68c: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040e690: sw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e694: li v1,0x6
	(register, 0xc, 4) COPY (const, 0x6, 4)

0040e698: div v0,v1
	(register, 0x3004, 4) INT_SDIV (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x3000, 4) INT_SREM (register, 0x8, 4) , (register, 0xc, 4)

0040e69c: bne v1,zero,0x0040e6a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e6a8, 4) , (unique, 0x1700, 1)

0040e6a0: _nop

0040e6a4: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040e6a8: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040e6ac: bne v0,zero,0x0040e6d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e6d8, 4) , (unique, 0x1700, 1)

0040e6b0: _nop

0040e6b4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e6b8: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e6bc: addiu v1,s8,0x120
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x120, 4)

0040e6c0: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040e6c4: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0040e6c8: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e6cc: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e6d0: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40e6d8, 4)
	 ---  CALL (ram, 0x421ec8, 4)

0040e6d4: _nop

0040e6d8: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e6dc: lw v1,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e6e0: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e6e4: beq v1,v0,0x0040e7a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e7a0, 4) , (unique, 0x1200, 1)

0040e6e8: _nop

0040e6ec: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e6f0: lw v0,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e6f4: nop

0040e6f8: bgez v0,0x0040e704
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e704, 4) , (unique, 0x1300, 1)

0040e6fc: _nop

0040e700: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e704: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e708: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e70c: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e710: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e714: lw v0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e718: lui v1,0x4b
	(register, 0xc, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e71c: lw v1,0x1ed0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e720: nop

0040e724: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

0040e728: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e72c: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

0040e730: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0040e734: beq v0,zero,0x0040e7a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e7a0, 4) , (unique, 0x1200, 1)

0040e738: _nop

0040e73c: li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

0040e740: sw v0,0x134(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e744: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e748: lw v0,0x1ed0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e74c: addiu v1,s8,0x124
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x124, 4)

0040e750: addiu a0,s8,0x134
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x134, 4)

0040e754: or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040e758: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e75c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e760: jal 0x00421808
	(register, 0x7c, 4) COPY (const, 0x40e768, 4)
	 ---  CALL (ram, 0x421808, 4)

0040e764: _nop

0040e768: jal 0x0040d0f8
	(register, 0x7c, 4) COPY (const, 0x40e770, 4)
	 ---  CALL (ram, 0x40d0f8, 4)

0040e76c: _nop

0040e770: jal 0x00407824
	(register, 0x7c, 4) COPY (const, 0x40e778, 4)
	 ---  CALL (ram, 0x407824, 4)

0040e774: _nop

0040e778: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e77c: nop

0040e780: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0040e784: li a1,0x9
	(register, 0x14, 4) COPY (const, 0x9, 4)

0040e788: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e78c: jal 0x00400390
	(register, 0x7c, 4) COPY (const, 0x40e794, 4)
	 ---  CALL (ram, 0x400390, 4)

0040e790: _nop

0040e794: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040e798: jal 0x00400420
	(register, 0x7c, 4) COPY (const, 0x40e7a0, 4)
	 ---  CALL (ram, 0x400420, 4)

0040e79c: _nop

0040e7a0: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e7a4: lb v0,0x3a30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3a30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040e7a8: nop

0040e7ac: beq v0,zero,0x0040e978
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e978, 4) , (unique, 0x1200, 1)

0040e7b0: _nop

0040e7b4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e7b8: sb zero,0x3a30(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3a30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040e7bc: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e7c0: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e7c4: nop

0040e7c8: bgez v0,0x0040e7d4
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e7d4, 4) , (unique, 0x1300, 1)

0040e7cc: _nop

0040e7d0: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e7d4: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e7d8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e7dc: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e7e0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e7e4: lw v0,0x524(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x524, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e7e8: lui v1,0x4b
	(register, 0xc, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e7ec: lw v1,0x1ed4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e7f0: nop

0040e7f4: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

0040e7f8: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e7fc: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

0040e800: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0040e804: bne v0,zero,0x0040e81c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e81c, 4) , (unique, 0x1700, 1)

0040e808: _nop

0040e80c: jal 0x0040eefc
	(register, 0x7c, 4) COPY (const, 0x40e814, 4)
	 ---  CALL (ram, 0x40eefc, 4)

0040e810: _nop

0040e814: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040e818: _nop

0040e81c: sw zero,0x138(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e820: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0040e824: sw v0,0x13c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040e828: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e82c: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e830: addiu a0,s8,0x138
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x138, 4)

0040e834: addiu v1,s8,0x13c
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x13c, 4)

0040e838: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e83c: or a3,a0,zero
	(register, 0x1c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040e840: li a2,0x1007
	(register, 0x18, 4) COPY (const, 0x1007, 4)

0040e844: ori a1,zero,0xffff
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

0040e848: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e84c: jal 0x00421b08
	(register, 0x7c, 4) COPY (const, 0x40e854, 4)
	 ---  CALL (ram, 0x421b08, 4)

0040e850: _nop

0040e854: lw v0,0x138(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e858: nop

0040e85c: beq v0,zero,0x0040e8c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e8c4, 4) , (unique, 0x1200, 1)

0040e860: _nop

0040e864: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e868: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e86c: nop

0040e870: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e874: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40e87c, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040e878: _nop

0040e87c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e880: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

0040e884: sw v1,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e888: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x40e890, 4)
	 ---  CALL (ram, 0x40f524, 4)

0040e88c: _nop

0040e890: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e894: li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

0040e898: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

0040e89c: bne v0,zero,0x0040e8a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e8a8, 4) , (unique, 0x1700, 1)

0040e8a0: _nop

0040e8a4: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0040e8a8: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

0040e8ac: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040e8b0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e8b4: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40e8bc, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040e8b8: _nop

0040e8bc: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040e8c0: _nop

0040e8c4: addiu v0,s8,0x70
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)

0040e8c8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e8cc: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40e8d4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040e8d0: _nop

0040e8d4: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0040e8d8: sb v0,0x140(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040e8dc: jal 0x00411854
	(register, 0x7c, 4) COPY (const, 0x40e8e4, 4)
	 ---  CALL (ram, 0x411854, 4)

0040e8e0: _nop

0040e8e4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e8e8: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e8ec: sw v1,0x39bc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x39bc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040e8f0: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e8f4: lw v1,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e8f8: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040e8fc: li a2,0x4
	(register, 0x18, 4) COPY (const, 0x4, 4)

0040e900: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040e904: addiu a1,v0,0x329c
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x329c, 4)

0040e908: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e90c: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40e914, 4)
	 ---  CALL (ram, 0x421ec8, 4)

0040e910: _nop

0040e914: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e918: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e91c: addiu v1,s8,0x140
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x140, 4)

0040e920: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040e924: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0040e928: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e92c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e930: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40e938, 4)
	 ---  CALL (ram, 0x421ec8, 4)

0040e934: _nop

0040e938: lbu v0,0x140(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040e93c: nop

0040e940: beq v0,zero,0x0040e3d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e3d4, 4) , (unique, 0x1200, 1)

0040e944: _nop

0040e948: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e94c: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e950: lbu v1,0x140(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x140, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0040e954: addiu a0,s8,0x70
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)

0040e958: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040e95c: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040e960: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040e964: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040e968: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40e970, 4)
	 ---  CALL (ram, 0x421ec8, 4)

0040e96c: _nop

0040e970: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040e974: _nop

0040e978: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e97c: lw v1,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e980: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040e984: beq v1,v0,0x0040e3d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e3d4, 4) , (unique, 0x1200, 1)

0040e988: _nop

0040e98c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e990: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e994: nop

0040e998: bgez v0,0x0040e9a4
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40e9a4, 4) , (unique, 0x1300, 1)

0040e99c: _nop

0040e9a0: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040e9a4: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040e9a8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0040e9ac: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040e9b0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040e9b4: lw v0,0x5a4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e9b8: lui v1,0x4b
	(register, 0xc, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e9bc: lw v1,0x1ed4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e9c0: nop

0040e9c4: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

0040e9c8: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040e9cc: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

0040e9d0: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0040e9d4: beq v0,zero,0x0040e3d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e3d4, 4) , (unique, 0x1200, 1)

0040e9d8: _nop

0040e9dc: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40e9e4, 4)
	 ---  CALL (ram, 0x412398, 4)

0040e9e0: _nop

0040e9e4: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040e9e8: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040e9ec: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040e9f0: addiu v1,s8,0x142
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)

0040e9f4: li a3,0x4002
	(register, 0x1c, 4) COPY (const, 0x4002, 4)

0040e9f8: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0040e9fc: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040ea00: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ea04: jal 0x00421be8
	(register, 0x7c, 4) COPY (const, 0x40ea0c, 4)
	 ---  CALL (ram, 0x421be8, 4)

0040ea08: _nop

0040ea0c: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040ea10: lw v1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ea14: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040ea18: bne v1,v0,0x0040ea6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ea6c, 4) , (unique, 0x1700, 1)

0040ea1c: _nop

0040ea20: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40ea28, 4)
	 ---  CALL (ram, 0x412398, 4)

0040ea24: _nop

0040ea28: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ea2c: li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

0040ea30: beq v1,v0,0x0040ec6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec6c, 4) , (unique, 0x1200, 1)

0040ea34: _nop

0040ea38: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40ea40, 4)
	 ---  CALL (ram, 0x412398, 4)

0040ea3c: _nop

0040ea40: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ea44: li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

0040ea48: beq v1,v0,0x0040ec6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec6c, 4) , (unique, 0x1200, 1)

0040ea4c: _nop

0040ea50: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40ea58, 4)
	 ---  CALL (ram, 0x412398, 4)

0040ea54: _nop

0040ea58: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ea5c: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0040ea60: beq v1,v0,0x0040ec6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec6c, 4) , (unique, 0x1200, 1)

0040ea64: _nop

0040ea68: sw zero,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040ea6c: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ea70: nop

0040ea74: bne v0,zero,0x0040ea8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40ea8c, 4) , (unique, 0x1700, 1)

0040ea78: _nop

0040ea7c: jal 0x0040eefc
	(register, 0x7c, 4) COPY (const, 0x40ea84, 4)
	 ---  CALL (ram, 0x40eefc, 4)

0040ea80: _nop

0040ea84: b 0x0040ec7c
	 ---  BRANCH (ram, 0x40ec7c, 4)

0040ea88: _nop

0040ea8c: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ea90: nop

0040ea94: bne v0,zero,0x0040eac8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40eac8, 4) , (unique, 0x1700, 1)

0040ea98: _nop

0040ea9c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040eaa0: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eaa4: addiu v1,s8,0x142
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)

0040eaa8: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040eaac: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0040eab0: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040eab4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040eab8: jal 0x00421be8
	(register, 0x7c, 4) COPY (const, 0x40eac0, 4)
	 ---  CALL (ram, 0x421be8, 4)

0040eabc: _nop

0040eac0: b 0x0040ec7c
	 ---  BRANCH (ram, 0x40ec7c, 4)

0040eac4: _nop

0040eac8: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040eacc: nop

0040ead0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ead4: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40eadc, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040ead8: _nop

0040eadc: sh v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040eae0: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040eae4: nop

0040eae8: sltiu v0,v0,0x401
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x401, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0040eaec: bne v0,zero,0x0040eb18
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40eb18, 4) , (unique, 0x1700, 1)

0040eaf0: _nop

0040eaf4: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040eaf8: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eafc: nop

0040eb00: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040eb04: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40eb0c, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040eb08: _nop

0040eb0c: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040eb10: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

0040eb14: sw v1,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040eb18: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40eb20, 4)
	 ---  CALL (ram, 0x412398, 4)

0040eb1c: _nop

0040eb20: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040eb24: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040eb28: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eb2c: lhu v1,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

0040eb30: addiu a0,s8,0x144
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x144, 4)

0040eb34: li a3,0x4002
	(register, 0x1c, 4) COPY (const, 0x4002, 4)

0040eb38: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040eb3c: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040eb40: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040eb44: jal 0x00421be8
	(register, 0x7c, 4) COPY (const, 0x40eb4c, 4)
	 ---  CALL (ram, 0x421be8, 4)

0040eb48: _nop

0040eb4c: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040eb50: lw v1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eb54: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040eb58: bne v1,v0,0x0040ebac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ebac, 4) , (unique, 0x1700, 1)

0040eb5c: _nop

0040eb60: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40eb68, 4)
	 ---  CALL (ram, 0x412398, 4)

0040eb64: _nop

0040eb68: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eb6c: li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

0040eb70: beq v1,v0,0x0040ec78
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec78, 4) , (unique, 0x1200, 1)

0040eb74: _nop

0040eb78: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40eb80, 4)
	 ---  CALL (ram, 0x412398, 4)

0040eb7c: _nop

0040eb80: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eb84: li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

0040eb88: beq v1,v0,0x0040ec78
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec78, 4) , (unique, 0x1200, 1)

0040eb8c: _nop

0040eb90: jal 0x00412398
	(register, 0x7c, 4) COPY (const, 0x40eb98, 4)
	 ---  CALL (ram, 0x412398, 4)

0040eb94: _nop

0040eb98: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040eb9c: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0040eba0: beq v1,v0,0x0040ec78
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40ec78, 4) , (unique, 0x1200, 1)

0040eba4: _nop

0040eba8: sw zero,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040ebac: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ebb0: nop

0040ebb4: bne v0,zero,0x0040ebcc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40ebcc, 4) , (unique, 0x1700, 1)

0040ebb8: _nop

0040ebbc: jal 0x0040eefc
	(register, 0x7c, 4) COPY (const, 0x40ebc4, 4)
	 ---  CALL (ram, 0x40eefc, 4)

0040ebc0: _nop

0040ebc4: b 0x0040ec7c
	 ---  BRANCH (ram, 0x40ec7c, 4)

0040ebc8: _nop

0040ebcc: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040ebd0: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ebd4: addiu v1,s8,0x142
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)

0040ebd8: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040ebdc: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0040ebe0: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040ebe4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ebe8: jal 0x00421be8
	(register, 0x7c, 4) COPY (const, 0x40ebf0, 4)
	 ---  CALL (ram, 0x421be8, 4)

0040ebec: _nop

0040ebf0: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ebf4: nop

0040ebf8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ebfc: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40ec04, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040ec00: _nop

0040ec04: sh v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040ec08: lui v0,0x4b
	(register, 0x8, 4) INT_LEFT (const, 0x4b, 4) , (const, 0x10, 4)

0040ec0c: lw v0,0x1ed4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1ed4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ec10: lhu v1,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x3300, 2)

0040ec14: addiu a0,s8,0x144
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x144, 4)

0040ec18: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

0040ec1c: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040ec20: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040ec24: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ec28: jal 0x00421be8
	(register, 0x7c, 4) COPY (const, 0x40ec30, 4)
	 ---  CALL (ram, 0x421be8, 4)

0040ec2c: _nop

0040ec30: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ec34: nop

0040ec38: beq v0,zero,0x0040e3d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40e3d4, 4) , (unique, 0x1200, 1)

0040ec3c: _nop

0040ec40: lhu v0,0x142(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x142, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040ec44: addiu v1,s8,0x144
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x144, 4)

0040ec48: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040ec4c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040ec50: jal 0x004078f4
	(register, 0x7c, 4) COPY (const, 0x40ec58, 4)
	 ---  CALL (ram, 0x4078f4, 4)

0040ec54: _nop

0040ec58: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040ec5c: _nop

0040ec60: nop

0040ec64: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040ec68: _nop

0040ec6c: nop

0040ec70: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040ec74: _nop

0040ec78: nop

0040ec7c: b 0x0040e3d4
	 ---  BRANCH (ram, 0x40e3d4, 4)

0040ec80: _nop

0040ec84: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040ec88: lw ra,0x654(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x654, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ec8c: lw s8,0x650(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x650, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ec90: lw s0,0x64c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040ec94: addiu sp,sp,0x658
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x658, 4)

0040ec98: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0040ec9c: _nop

