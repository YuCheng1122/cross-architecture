Function: _dl_find_object_dlclose
Address: 00475734
P-code:

00475734: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00475738: addiu gp,gp,0x572c
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x572c, 4)

0047573c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00475740: addiu sp,sp,-0x20
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffe0, 4)

00475744: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00475748: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0047574c: lw a0,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475750: lw t9,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475754: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00475758: sw ra,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0047575c: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x475764, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6a60, 4)
	 ---  CALL (ram, 0x476c24, 4)

00475760: _addiu a0,a0,0x6a60
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6a60, 4)

00475764: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475768: andi v0,v1,0x1
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0047576c: lw v1,-0x7fc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475770: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00475774: addiu v1,v1,0x6a68
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x6a68, 4)

00475778: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0047577c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475780: lw a1,0x2a0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2a0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475784: bne v0,zero,0x004757b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4757b8, 4) , (unique, 0x1700, 1)

00475788: _nop

0047578c: b 0x004757c8
	 ---  BRANCH (ram, 0x4757c8, 4)

00475790: _nop

00475794: lw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475798: nop

0047579c: sltu v1,a1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

004757a0: beq v1,zero,0x004757d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x4757d8, 4) , (unique, 0x1200, 1)

004757a4: _sll t0,a0,0x4
	(register, 0x20, 4) INT_LEFT (register, 0x10, 4) , (const, 0x4, 4)

004757a8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004757ac: nop

004757b0: beq v0,zero,0x004757c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4757c8, 4) , (unique, 0x1200, 1)

004757b4: _nop

004757b8: lw a0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004757bc: nop

004757c0: bne a0,zero,0x00475794
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x475794, 4) , (unique, 0x1700, 1)

004757c4: _nop

004757c8: lw ra,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004757cc: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004757d0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	 ---  RETURN (register, 0x80, 4)

004757d4: _addiu sp,sp,0x20
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

004757d8: addiu v0,v0,0x10
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)

004757dc: b 0x004757f0
	(register, 0x20, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)
	 ---  BRANCH (ram, 0x4757f0, 4)

004757e0: _addu t0,v0,t0
	(register, 0x20, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

004757e4: subu a0,a0,a3
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x1c, 4)

004757e8: beq a0,zero,0x0047581c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x47581c, 4) , (unique, 0x1200, 1)

004757ec: _addiu v0,v1,0x10
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)

004757f0: srl a3,a0,0x1
	(register, 0x1c, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)

004757f4: sll v1,a3,0x4
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x4, 4)

004757f8: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004757fc: lw a2,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475800: nop

00475804: sltu a2,a2,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0x14, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)

00475808: bne a2,zero,0x004757e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x4757e4, 4) , (unique, 0x1700, 1)

0047580c: _addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

00475810: or a0,a3,zero
	(register, 0x10, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00475814: bne a0,zero,0x004757f4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4757f4, 4) , (unique, 0x1700, 1)

00475818: _srl a3,a0,0x1
	(register, 0x1c, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4)

0047581c: beq t0,v0,0x00475834
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x475834, 4) , (unique, 0x1200, 1)

00475820: _nop

00475824: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475828: nop

0047582c: beq a1,v1,0x0047586c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x47586c, 4) , (unique, 0x1200, 1)

00475830: _nop

00475834: lw v1,-0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475838: nop

0047583c: sltu a1,a1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00475840: beq a1,zero,0x004757c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4757c8, 4) , (unique, 0x1200, 1)

00475844: _nop

00475848: addiu v0,v0,-0x10
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff0, 4)

0047584c: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475850: nop

00475854: sw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00475858: sw zero,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0047585c: lw ra,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475860: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475864: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	 ---  RETURN (register, 0x80, 4)

00475868: _addiu sp,sp,0x20
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

0047586c: lw v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00475870: nop

00475874: sltu a1,a1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00475878: beq a1,zero,0x004757c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4757c8, 4) , (unique, 0x1200, 1)

0047587c: _nop

00475880: beq v0,zero,0x004757c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4757c8, 4) , (unique, 0x1200, 1)

00475884: _nop

00475888: b 0x0047584c
	 ---  BRANCH (ram, 0x47584c, 4)

0047588c: _nop

