Function: _wordcopy_bwd_dest_aligned
Address: 0041d0ec
P-code:

0041d0ec: andi t0,a1,0x3
	(register, 0x20, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)

0041d0f0: li v0,-0x4
	(register, 0x8, 4) COPY (const, 0xfffffffc, 4)

0041d0f4: and a1,a1,v0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x8, 4)

0041d0f8: sll t0,t0,0x3
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x3, 4)

0041d0fc: li t1,0x20
	(register, 0x24, 4) COPY (const, 0x20, 4)

0041d100: andi v1,a2,0x3
	(register, 0xc, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

0041d104: li t2,0x2
	(register, 0x28, 4) COPY (const, 0x2, 4)

0041d108: lw v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d10c: lw a3,-0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d110: beq v1,t2,0x0041d1d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x41d1d4, 4) , (unique, 0x1200, 1)

0041d114: _subu t1,t1,t0
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)

0041d118: li t2,0x3
	(register, 0x28, 4) COPY (const, 0x3, 4)

0041d11c: beq v1,t2,0x0041d1c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x28, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41d1c0, 4) , (unique, 0x1200, 1)

0041d120: _or t2,v0,zero
	(register, 0x28, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041d124: li t2,0x1
	(register, 0x28, 4) COPY (const, 0x1, 4)

0041d128: beq v1,t2,0x0041d210
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x41d210, 4) , (unique, 0x1200, 1)

0041d12c: _nop

0041d130: or t2,a3,zero
	(register, 0x28, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0041d134: or a3,v0,zero
	(register, 0x1c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041d138: srlv v0,a3,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)

0041d13c: sllv v1,t2,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0041d140: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d144: addiu a0,a0,-0xc
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff4, 4)

0041d148: addiu a1,a1,-0x10
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff0, 4)

0041d14c: lw v0,0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d150: sw v1,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d154: lw a3,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d158: sllv v1,v0,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0041d15c: srlv t2,t2,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x28, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5780, 4)

0041d160: or v1,v1,t2
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x28, 4)

0041d164: sw v1,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d168: srlv v0,v0,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041d16c: sllv v1,a3,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

0041d170: or v0,v1,v0
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d174: addiu a2,a2,-0x4
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffc, 4)

0041d178: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d17c: beq a2,zero,0x0041d1fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41d1fc, 4) , (unique, 0x1200, 1)

0041d180: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041d184: or v0,a3,zero
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0041d188: addiu a1,a1,-0x10
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff0, 4)

0041d18c: addiu a0,a0,-0x10
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff0, 4)

0041d190: or a3,v1,zero
	(register, 0x1c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0041d194: lw t2,0xc(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d198: sllv v1,a3,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

0041d19c: srlv v0,v0,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041d1a0: or v0,v1,v0
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d1a4: sw v0,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041d1a8: sllv v1,t2,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0041d1ac: srlv v0,a3,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)

0041d1b0: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d1b4: lw v0,0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d1b8: b 0x0041d154
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x41d154, 4)

0041d1bc: _sw v1,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d1c0: addiu a1,a1,-0xc
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff4, 4)

0041d1c4: addiu a0,a0,-0x8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff8, 4)

0041d1c8: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0041d1cc: b 0x0041d154
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x41d154, 4)

0041d1d0: _or v0,a3,zero
	(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0041d1d4: sllv v1,a3,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

0041d1d8: addiu a2,a2,0x2
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)

0041d1dc: srlv v0,v0,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0041d1e0: or v0,v1,v0
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d1e4: addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0041d1e8: addiu a2,a2,-0x4
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffc, 4)

0041d1ec: addiu a1,a1,-0x8
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff8, 4)

0041d1f0: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041d1f4: bne a2,zero,0x0041d184
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x41d184, 4) , (unique, 0x1700, 1)

0041d1f8: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0041d1fc: sllv v1,v1,t0
	(unique, 0x4f80, 4) INT_AND (register, 0x20, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0041d200: srlv v0,a3,t1
	(unique, 0x5780, 4) INT_AND (register, 0x24, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x1c, 4) , (unique, 0x5780, 4)

0041d204: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

0041d208: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  RETURN (register, 0x80, 4)

0041d20c: _sw v1,-0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041d210: addiu a1,a1,-0x14
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffec, 4)

0041d214: addiu a0,a0,-0x10
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff0, 4)

0041d218: b 0x0041d194
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x41d194, 4)

0041d21c: _addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

