Function: plural_eval
Address: 00454410
P-code:

00454410: lui gp,0x6
	(register, 0x70, 4) INT_LEFT (const, 0x6, 4) , (const, 0x10, 4)

00454414: addiu gp,gp,0x6a50
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x6a50, 4)

00454418: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0045441c: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

00454420: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00454424: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00454428: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045442c: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00454430: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00454434: li s1,0x2
	(register, 0x44, 4) COPY (const, 0x2, 4)

00454438: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0045443c: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00454440: beq v0,s1,0x00454508
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x454508, 4) , (unique, 0x1200, 1)

00454444: _slti v1,v0,0x3
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

00454448: beq v1,zero,0x004544b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x4544b8, 4) , (unique, 0x1200, 1)

0045444c: _li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00454450: beq v0,zero,0x00454494
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x454494, 4) , (unique, 0x1200, 1)

00454454: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00454458: bne v0,v1,0x00454588
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x454588, 4) , (unique, 0x1700, 1)

0045445c: _nop

00454460: lw t9,-0x7968(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8698, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454464: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454468: addiu t9,t9,0x4410
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4410, 4)

0045446c: bal 0x00454410
	(register, 0x7c, 4) COPY (const, 0x454474, 4)
	 ---  CALL (ram, 0x454410, 4)

00454470: _nop

00454474: sltiu s1,v0,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5280, 1)

00454478: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045447c: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454480: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454484: or v0,s1,zero
	(register, 0x8, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00454488: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045448c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

00454490: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

00454494: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454498: nop

0045449c: beq v0,zero,0x00454478
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x454478, 4) , (unique, 0x1200, 1)

004544a0: _or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

004544a4: bne v0,v1,0x00454588
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x454588, 4) , (unique, 0x1700, 1)

004544a8: _nop

004544ac: lw s1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544b0: b 0x00454478
	 ---  BRANCH (ram, 0x454478, 4)

004544b4: _nop

004544b8: bne v0,v1,0x00454588
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x454588, 4) , (unique, 0x1700, 1)

004544bc: _nop

004544c0: lw t9,-0x7968(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8698, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544c4: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544c8: addiu t9,t9,0x4410
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0x4410, 4)

004544cc: bal 0x00454410
	(register, 0x7c, 4) COPY (const, 0x4544d4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CALL (ram, 0x454410, 4)

004544d0: _sw a1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004544d4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544d8: lw a1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544dc: bne v0,zero,0x004544e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4544e8, 4) , (unique, 0x1700, 1)

004544e0: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004544e4: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

004544e8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004544ec: addu v0,s0,v0
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

004544f0: lw s0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544f4: nop

004544f8: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004544fc: nop

00454500: bne v0,s1,0x00454448
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x454448, 4) , (unique, 0x1700, 1)

00454504: _slti v1,v0,0x3
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

00454508: lw s2,-0x7968(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8698, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045450c: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454510: addiu s2,s2,0x4410
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x4410, 4)

00454514: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00454518: bal 0x00454410
	(register, 0x7c, 4) COPY (const, 0x454520, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CALL (ram, 0x454410, 4)

0045451c: _sw a1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

00454520: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454524: li a0,0xf
	(register, 0x10, 4) COPY (const, 0xf, 4)

00454528: lw a1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045452c: beq v1,a0,0x004545b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4545b0, 4) , (unique, 0x1200, 1)

00454530: _or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00454534: li v0,0xe
	(register, 0x8, 4) COPY (const, 0xe, 4)

00454538: beq v1,v0,0x004545c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4545c0, 4) , (unique, 0x1200, 1)

0045453c: _or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00454540: lw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454544: bal 0x00454410
	(register, 0x7c, 4) COPY (const, 0x45454c, 4)
	 ---  CALL (ram, 0x454410, 4)

00454548: _nop

0045454c: lw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454550: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454554: addiu v1,v1,-0x3
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffd, 4)

00454558: sltiu a0,v1,0xb
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xb, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0045455c: beq a0,zero,0x00454588
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x454588, 4) , (unique, 0x1200, 1)

00454560: _or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00454564: lw a0,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454568: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045456c: addiu a0,a0,-0x60b0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff9f50, 4)

00454570: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

00454574: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454578: nop

0045457c: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

00454580: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

00454584: _nop

00454588: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045458c: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00454590: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454594: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454598: or v0,s1,zero
	(register, 0x8, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045459c: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004545a0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

004545a4: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

004545b0: beq v0,zero,0x004545c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4545c8, 4) , (unique, 0x1200, 1)

004545b4: _nop

004545b8: b 0x00454478
	(register, 0x44, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x454478, 4)

004545bc: _li s1,0x1
	(register, 0x44, 4) COPY (const, 0x1, 4)

004545c0: beq s1,zero,0x00454478
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x454478, 4) , (unique, 0x1200, 1)

004545c4: _nop

004545c8: lw a0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004545cc: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

004545d0: bal 0x00454410
	(register, 0x7c, 4) COPY (const, 0x4545d8, 4)
	 ---  CALL (ram, 0x454410, 4)

004545d4: _nop

004545d8: b 0x00454478
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  BRANCH (ram, 0x454478, 4)

004545dc: _sltu s1,zero,v0
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

004545e0: xor s0,s1,s0
	(register, 0x40, 4) INT_XOR (register, 0x44, 4) , (register, 0x40, 4)

004545e4: b 0x00454478
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x40, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  BRANCH (ram, 0x454478, 4)

004545e8: _sltu s1,zero,s0
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x40, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

004545ec: beq s0,zero,0x00454680
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x454680, 4) , (unique, 0x1200, 1)

004545f0: _nop

004545f4: bne s0,zero,0x00454600
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x3000, 4) INT_REM (register, 0x44, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x454600, 4) , (unique, 0x1700, 1)

004545f8: _divu s1,s0
	(register, 0x3004, 4) INT_DIV (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x3000, 4) INT_REM (register, 0x44, 4) , (register, 0x40, 4)

004545fc: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00454600: mflo s1
	(register, 0x44, 4) COPY (register, 0x3004, 4)

00454604: b 0x00454478
	 ---  BRANCH (ram, 0x454478, 4)

00454608: _nop

0045460c: mult s1,s0
	(unique, 0xda80, 8) INT_SEXT (register, 0x44, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x40, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

00454610: mflo s1
	(register, 0x44, 4) COPY (register, 0x3004, 4)

00454614: b 0x00454478
	 ---  BRANCH (ram, 0x454478, 4)

00454618: _nop

0045461c: xor s0,s1,s0
	(register, 0x40, 4) INT_XOR (register, 0x44, 4) , (register, 0x40, 4)

00454620: b 0x00454478
	(unique, 0x5280, 1) INT_LESS (register, 0x40, 4) , (const, 0x1, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  BRANCH (ram, 0x454478, 4)

00454624: _sltiu s1,s0,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0x40, 4) , (const, 0x1, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5280, 1)

00454628: sltu s0,s1,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x40, 4) INT_ZEXT (unique, 0x5380, 1)

0045462c: b 0x00454478
	(register, 0x44, 4) INT_XOR (register, 0x40, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x454478, 4)

00454630: _xori s1,s0,0x1
	(register, 0x44, 4) INT_XOR (register, 0x40, 4) , (const, 0x1, 4)

00454634: sltu s0,s0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x40, 4) , (register, 0x44, 4)
	(register, 0x40, 4) INT_ZEXT (unique, 0x5380, 1)

00454638: b 0x00454478
	(register, 0x44, 4) INT_XOR (register, 0x40, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x454478, 4)

0045463c: _xori s1,s0,0x1
	(register, 0x44, 4) INT_XOR (register, 0x40, 4) , (const, 0x1, 4)

00454640: b 0x00454478
	(unique, 0x5380, 1) INT_LESS (register, 0x40, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  BRANCH (ram, 0x454478, 4)

00454644: _sltu s1,s0,s1
	(unique, 0x5380, 1) INT_LESS (register, 0x40, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00454648: b 0x00454478
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  BRANCH (ram, 0x454478, 4)

0045464c: _sltu s1,s1,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x5380, 1)

00454650: b 0x00454478
	(register, 0x44, 4) INT_SUB (register, 0x44, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x454478, 4)

00454654: _subu s1,s1,s0
	(register, 0x44, 4) INT_SUB (register, 0x44, 4) , (register, 0x40, 4)

00454658: b 0x00454478
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x454478, 4)

0045465c: _addu s1,s1,s0
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x40, 4)

00454660: beq s0,zero,0x00454698
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x454698, 4) , (unique, 0x1200, 1)

00454664: _nop

00454668: bne s0,zero,0x00454674
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x40, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_DIV (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x3000, 4) INT_REM (register, 0x44, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x454674, 4) , (unique, 0x1700, 1)

0045466c: _divu s1,s0
	(register, 0x3004, 4) INT_DIV (register, 0x44, 4) , (register, 0x40, 4)
	(register, 0x3000, 4) INT_REM (register, 0x44, 4) , (register, 0x40, 4)

00454670: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00454674: mfhi s1
	(register, 0x44, 4) COPY (register, 0x3000, 4)

00454678: b 0x00454478
	 ---  BRANCH (ram, 0x454478, 4)

0045467c: _nop

00454680: lw t9,-0x7fbc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8044, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00454684: nop

00454688: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x454690, 4)
	(register, 0x10, 4) COPY (const, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0045468c: _li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

00454690: b 0x004545f4
	 ---  BRANCH (ram, 0x4545f4, 4)

00454694: _nop

00454698: lw t9,-0x7fbc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8044, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045469c: nop

004546a0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4546a8, 4)
	(register, 0x10, 4) COPY (const, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

004546a4: _li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

004546a8: b 0x00454668
	 ---  BRANCH (ram, 0x454668, 4)

004546ac: _nop

