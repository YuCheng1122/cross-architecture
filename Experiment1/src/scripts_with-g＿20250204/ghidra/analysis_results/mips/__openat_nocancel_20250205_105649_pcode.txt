Function: __openat_nocancel
Address: 0041ff90
P-code:

0041ff90: lui gp,0xa
	(register, 0x70, 4) INT_LEFT (const, 0xa, 4) , (const, 0x10, 4)

0041ff94: addiu gp,gp,-0x5130
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffaed0, 4)

0041ff98: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0041ff9c: addiu sp,sp,-0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffff0, 4)

0041ffa0: andi v0,a2,0x100
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x100, 4)

0041ffa4: sw gp,0x0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0041ffa8: sw a3,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0041ffac: bne v0,zero,0x0041ffec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x41, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x41ffec, 4) , (unique, 0x1700, 1)

0041ffb0: _lui v1,0x41
	(register, 0xc, 4) INT_LEFT (const, 0x41, 4) , (const, 0x10, 4)

0041ffb4: and a3,a2,v1
	(register, 0x1c, 4) INT_AND (register, 0x18, 4) , (register, 0xc, 4)

0041ffb8: beq a3,v1,0x0041fff0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	 ---  CBRANCH (ram, 0x41fff0, 4) , (unique, 0x1200, 1)

0041ffbc: _addiu v1,sp,0x1c
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)

0041ffc0: or a3,v0,zero
	(register, 0x1c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0041ffc4: li v0,0x10c0
	(register, 0x8, 4) COPY (const, 0x10c0, 4)

0041ffc8: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

0041ffcc: beq a3,zero,0x0041ffdc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x41ffdc, 4) , (unique, 0x1200, 1)

0041ffd0: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041ffd4: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0041ffd8: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0041ffdc: beq v1,zero,0x0041fffc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41fffc, 4) , (unique, 0x1200, 1)

0041ffe0: _nop

0041ffe4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  RETURN (register, 0x80, 4)

0041ffe8: _addiu sp,sp,0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

0041ffec: addiu v1,sp,0x1c
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)

0041fff0: lw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0041fff4: b 0x0041ffc0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x41ffc0, 4)

0041fff8: _sw v1,0x8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0041fffc: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00420000: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00420004: lw v1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00420008: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0042000c: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

00420010: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00420014: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00420018: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	 ---  RETURN (register, 0x80, 4)

0042001c: _addiu sp,sp,0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)

