Function: util_isalpha
Address: 00411a98
P-code:

00411a98: addiu sp,sp,-0x8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffff8, 4)

00411a9c: sw s8,0x4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

00411aa0: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

00411aa4: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00411aa8: sb v0,0x8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

00411aac: lb v0,0x8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00411ab0: nop

00411ab4: slti v0,v0,0x41
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x41, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00411ab8: bne v0,zero,0x00411ad4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x411ad4, 4) , (unique, 0x1700, 1)

00411abc: _nop

00411ac0: lb v0,0x8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00411ac4: nop

00411ac8: slti v0,v0,0x5b
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x5b, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00411acc: bne v0,zero,0x00411afc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x411afc, 4) , (unique, 0x1700, 1)

00411ad0: _nop

00411ad4: lb v0,0x8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00411ad8: nop

00411adc: slti v0,v0,0x61
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x61, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00411ae0: bne v0,zero,0x00411b08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x411b08, 4) , (unique, 0x1700, 1)

00411ae4: _nop

00411ae8: lb v0,0x8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

00411aec: nop

00411af0: slti v0,v0,0x7b
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x7b, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00411af4: beq v0,zero,0x00411b08
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x411b08, 4) , (unique, 0x1200, 1)

00411af8: _nop

00411afc: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00411b00: b 0x00411b0c
	 ---  BRANCH (ram, 0x411b0c, 4)

00411b04: _nop

00411b08: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00411b0c: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00411b10: lw s8,0x4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00411b14: addiu sp,sp,0x8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x8, 4)

00411b18: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00411b1c: _nop

