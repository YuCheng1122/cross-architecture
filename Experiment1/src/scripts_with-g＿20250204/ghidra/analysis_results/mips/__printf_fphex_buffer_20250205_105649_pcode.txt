Function: __printf_fphex_buffer
Address: 0045e6f0
P-code:

0045e6f0: lui gp,0x6
	(register, 0x70, 4) INT_LEFT (const, 0x6, 4) , (const, 0x10, 4)

0045e6f4: addiu gp,gp,-0x3890
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffc770, 4)

0045e6f8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0045e6fc: addiu sp,sp,-0x88
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff78, 4)

0045e700: sw s6,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0045e704: lhu s6,0xc(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x3300, 2)

0045e708: sw s1,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0045e70c: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0045e710: or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0045e714: andi a2,s6,0x80
	(register, 0x18, 4) INT_AND (register, 0x58, 4) , (const, 0x80, 4)

0045e718: sw ra,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0045e71c: sw s8,0x80(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0045e720: sw s7,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0045e724: sw s5,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045e728: sw s4,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0045e72c: sw s3,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045e730: sw s2,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045e734: sw s0,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0045e738: sw a1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045e73c: bne a2,zero,0x0045f270
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f270, 4) , (unique, 0x1700, 1)

0045e740: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045e744: lw a0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e748: lw t9,-0x77e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8820, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e74c: lw s2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e750: lw s3,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e754: sw t1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0045e758: sw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045e75c: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045e760: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045e764: or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045e768: or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045e76c: lw s8,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e770: lw s7,0x4(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e774: lw s4,0x8(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e778: bal 0x004790f0
	(register, 0x7c, 4) COPY (const, 0x45e780, 4)
	(register, 0x54, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CALL (ram, 0x4790f0, 4)

0045e77c: _lui s5,0x8000
	(register, 0x54, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

0045e780: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e784: bne v0,zero,0x0045ef44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_AND (register, 0x48, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x45ef44, 4) , (unique, 0x1700, 1)

0045e788: _and s5,s2,s5
	(register, 0x54, 4) INT_AND (register, 0x48, 4) , (register, 0x54, 4)

0045e78c: lw t2,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e790: lui v1,0x7fff
	(register, 0xc, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045e794: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

0045e798: lw t9,-0x77e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8820, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e79c: and v1,s2,v1
	(register, 0xc, 4) INT_AND (register, 0x48, 4) , (register, 0xc, 4)

0045e7a0: lw a3,-0x57ec(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffa814, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7a4: lw a2,-0x57f0(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffa810, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7a8: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045e7ac: sw v1,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045e7b0: sw t2,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0045e7b4: bal 0x004790f0
	(register, 0x7c, 4) COPY (const, 0x45e7bc, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4790f0, 4)

0045e7b8: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045e7bc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7c0: bne v0,zero,0x0045e8bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45e8bc, 4) , (unique, 0x1700, 1)

0045e7c4: _nop

0045e7c8: lw v1,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7cc: lw t2,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7d0: sw v1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045e7d4: sw s3,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045e7d8: lw t9,-0x77dc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8824, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7dc: lw a3,-0x57ec(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffa814, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7e0: lw a2,-0x57f0(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffa810, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7e4: lw a1,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7e8: lw a0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7ec: bal 0x00478fd0
	(register, 0x7c, 4) COPY (const, 0x45e7f4, 4)
	 ---  CALL (ram, 0x478fd0, 4)

0045e7f0: _nop

0045e7f4: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e7f8: blez v0,0x0045e8bc
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45e8bc, 4) , (unique, 0x1500, 1)

0045e7fc: _nop

0045e800: lw v0,-0x74d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e804: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045e808: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045e80c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e810: sll s4,s4,0x1
	(register, 0x50, 4) INT_LEFT (register, 0x50, 4) , (const, 0x1, 4)

0045e814: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0045e818: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045e81c: nop

0045e820: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0045e824: beq v0,zero,0x0045eb78
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eb78, 4) , (unique, 0x1200, 1)

0045e828: _nop

0045e82c: lw s2,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e830: nop

0045e834: addiu s2,s2,0x79f0
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79f0, 4)

0045e838: bne s5,zero,0x0045ead8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x400, 4)
	 ---  CBRANCH (ram, 0x45ead8, 4) , (unique, 0x1700, 1)

0045e83c: _andi v0,s6,0x400
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x400, 4)

0045e840: lw v1,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e844: lui a0,0xa00
	(register, 0x10, 4) INT_LEFT (const, 0xa00, 4) , (const, 0x10, 4)

0045e848: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

0045e84c: bne v1,zero,0x0045eb84
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eb84, 4) , (unique, 0x1700, 1)

0045e850: _nop

0045e854: bne v0,zero,0x0045e884
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffd, 4)
	 ---  CBRANCH (ram, 0x45e884, 4) , (unique, 0x1700, 1)

0045e858: _addiu s7,s7,-0x3
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffd, 4)

0045e85c: blez s7,0x0045e888
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x200, 4)
	 ---  CBRANCH (ram, 0x45e888, 4) , (unique, 0x1500, 1)

0045e860: _andi v0,s6,0x200
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x200, 4)

0045e864: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e868: or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045e86c: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045e870: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45e878, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045e874: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045e878: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e87c: lhu s6,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x3300, 2)

0045e880: nop

0045e884: andi v0,s6,0x200
	(register, 0x8, 4) INT_AND (register, 0x58, 4) , (const, 0x200, 4)

0045e888: bne v0,zero,0x0045ee00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x45ee00, 4) , (unique, 0x1700, 1)

0045e88c: _andi s6,s6,0x800
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (const, 0x800, 4)

0045e890: beq s6,zero,0x0045eb1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eb1c, 4) , (unique, 0x1200, 1)

0045e894: _nop

0045e898: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e89c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e8a0: nop

0045e8a4: beq v0,v1,0x0045f0ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45f0ec, 4) , (unique, 0x1200, 1)

0045e8a8: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045e8ac: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045e8b0: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045e8b4: b 0x0045eb1c
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  BRANCH (ram, 0x45eb1c, 4)

0045e8b8: _sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045e8bc: lui s6,0xf
	(register, 0x58, 4) INT_LEFT (const, 0xf, 4) , (const, 0x10, 4)

0045e8c0: xori v0,s4,0x41
	(register, 0x8, 4) INT_XOR (register, 0x50, 4) , (const, 0x41, 4)

0045e8c4: ori s6,s6,0xffff
	(register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0xffff, 4)

0045e8c8: lw t9,-0x7be0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8420, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e8cc: addiu a2,sp,0x40
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)

0045e8d0: sltiu v0,v0,0x1
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045e8d4: and s6,s2,s6
	(register, 0x58, 4) INT_AND (register, 0x48, 4) , (register, 0x58, 4)

0045e8d8: or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045e8dc: sw a2,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045e8e0: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045e8e4: li a3,0x10
	(register, 0x1c, 4) COPY (const, 0x10, 4)

0045e8e8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45e8f0, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045e8ec: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045e8f0: addiu a0,sp,0x33
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x33, 4)

0045e8f4: or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045e8f8: sltu v0,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045e8fc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e900: beq v0,zero,0x0045e920
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_SUB (register, 0x50, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45e920, 4) , (unique, 0x1200, 1)

0045e904: _subu a2,s4,a0
	(register, 0x18, 4) INT_SUB (register, 0x50, 4) , (register, 0x10, 4)

0045e908: lw t9,-0x7fb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8048, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e90c: nop

0045e910: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45e918, 4)
	(register, 0x14, 4) COPY (const, 0x30, 4)
	 ---  CALLIND (register, 0x80, 4)

0045e914: _li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045e918: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e91c: or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045e920: lui v0,0x7ff0
	(register, 0x8, 4) INT_LEFT (const, 0x7ff0, 4) , (const, 0x10, 4)

0045e924: and v0,s2,v0
	(register, 0x8, 4) INT_AND (register, 0x48, 4) , (register, 0x8, 4)

0045e928: bne v0,zero,0x0045eb94
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x31, 4)
	 ---  CBRANCH (ram, 0x45eb94, 4) , (unique, 0x1700, 1)

0045e92c: _li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045e930: srl s2,s2,0x14
	(register, 0x48, 4) INT_RIGHT (register, 0x48, 4) , (const, 0x14, 4)

0045e934: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045e938: andi s2,s2,0x7ff
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0x7ff, 4)

0045e93c: bne s2,zero,0x0045eba4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45eba4, 4) , (unique, 0x1700, 1)

0045e940: _sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045e944: or s6,s6,s3
	(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x4c, 4)

0045e948: beq s6,zero,0x0045ebc4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ebc4, 4) , (unique, 0x1200, 1)

0045e94c: _or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045e950: li a0,0x3fe
	(register, 0x10, 4) COPY (const, 0x3fe, 4)

0045e954: li s2,0x1
	(register, 0x48, 4) COPY (const, 0x1, 4)

0045e958: lb v1,0x3f(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3f, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045e95c: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045e960: lw t0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e964: bne v1,v0,0x0045e984
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45e984, 4) , (unique, 0x1700, 1)

0045e968: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0045e96c: li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045e970: lb v0,-0x2(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0045e974: nop

0045e978: beq v0,v1,0x0045e970
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45e970, 4) , (unique, 0x1200, 1)

0045e97c: _addiu t0,t0,-0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffff, 4)

0045e980: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0045e984: beq s8,v0,0x0045f0c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_SUB (register, 0x20, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x45f0c8, 4) , (unique, 0x1200, 1)

0045e988: _subu v1,t0,s4
	(register, 0xc, 4) INT_SUB (register, 0x20, 4) , (register, 0x50, 4)

0045e98c: slt v0,s8,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x78, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045e990: beq v0,zero,0x0045ebd0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x45ebd0, 4) , (unique, 0x1200, 1)

0045e994: _addu v0,s4,s8
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (register, 0x78, 4)

0045e998: lb a2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_SEXT (unique, 0x2d00, 1)

0045e99c: blez s8,0x0045f108
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f108, 4) , (unique, 0x1500, 1)

0045e9a0: _nop

0045e9a4: lb v0,-0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0045e9a8: nop

0045e9ac: andi a1,v0,0xff
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0045e9b0: addiu a3,a1,-0x41
	(register, 0x1c, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffbf, 4)

0045e9b4: sltiu a3,a3,0x6
	(unique, 0x5280, 1) INT_LESS (register, 0x1c, 4) , (const, 0x6, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5280, 1)

0045e9b8: bne a3,zero,0x0045f1ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f1ac, 4) , (unique, 0x1700, 1)

0045e9bc: _nop

0045e9c0: addiu a1,a1,-0x61
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffff9f, 4)

0045e9c4: sltiu a1,a1,0x6
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0x6, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0045e9c8: beq a1,zero,0x0045f10c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffa9, 4)
	 ---  CBRANCH (ram, 0x45f10c, 4) , (unique, 0x1200, 1)

0045e9cc: _addiu a1,v0,-0x57
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffa9, 4)

0045e9d0: li v0,-0x21
	(register, 0x8, 4) COPY (const, 0xffffffdf, 4)

0045e9d4: and v0,a2,v0
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x8, 4)

0045e9d8: addiu v0,v0,-0x41
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffbf, 4)

0045e9dc: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0045e9e0: sltiu v0,v0,0x6
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x6, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045e9e4: beq v0,zero,0x0045f12c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45f12c, 4) , (unique, 0x1200, 1)

0045e9e8: _addiu v0,s8,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0xffffffff, 4)

0045e9ec: lw t2,-0x74f4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b0c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045e9f0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045e9f4: addu v0,s4,v0
	(register, 0x8, 4) INT_ADD (register, 0x50, 4) , (register, 0x8, 4)

0045e9f8: li t3,0x39
	(register, 0x2c, 4) COPY (const, 0x39, 4)

0045e9fc: addu a3,t2,v1
	(register, 0x1c, 4) INT_ADD (register, 0x28, 4) , (register, 0xc, 4)

0045ea00: b 0x0045ea38
	(register, 0x30, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x45ea38, 4)

0045ea04: _li t4,0x30
	(register, 0x30, 4) COPY (const, 0x30, 4)

0045ea08: lw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea0c: nop

0045ea10: addu v1,v1,a2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0045ea14: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea18: nop

0045ea1c: slti v1,v1,0x66
	(unique, 0x5180, 1) INT_SLESS (register, 0xc, 4) , (const, 0x66, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

0045ea20: bne v1,zero,0x0045f1e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f1e8, 4) , (unique, 0x1700, 1)

0045ea24: _or a2,t2,zero
	(register, 0x18, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0045ea28: sb t4,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x33, 1)

0045ea2c: beq s4,v0,0x0045f164
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45f164, 4) , (unique, 0x1200, 1)

0045ea30: _addiu v1,v0,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045ea34: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045ea38: lb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0045ea3c: nop

0045ea40: bne a1,t3,0x0045ea08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x2c, 4)
	(register, 0x18, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45ea08, 4) , (unique, 0x1700, 1)

0045ea44: _sll a2,a1,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)

0045ea48: lb v1,0xb(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xb, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045ea4c: lw t9,-0x7c14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff83ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea50: addiu s3,sp,0x45
	(register, 0x4c, 4) INT_ADD (register, 0x74, 4) , (const, 0x45, 4)

0045ea54: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045ea58: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045ea5c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ea60: li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

0045ea64: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45ea6c, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045ea68: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045ea6c: sw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ea70: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea74: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea78: beq s5,zero,0x0045ee8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ee8c, 4) , (unique, 0x1200, 1)

0045ea7c: _nop

0045ea80: lw v1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ea84: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ea88: subu s3,s3,v1
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0xc, 4)

0045ea8c: addiu s6,s8,0x6
	(register, 0x58, 4) INT_ADD (register, 0x78, 4) , (const, 0x6, 4)

0045ea90: addu s6,s6,s3
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x4c, 4)

0045ea94: subu s6,s7,s6
	(register, 0x58, 4) INT_SUB (register, 0x5c, 4) , (register, 0x58, 4)

0045ea98: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045ea9c: beq v0,zero,0x0045ec34
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45ec34, 4) , (unique, 0x1200, 1)

0045eaa0: _addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0045eaa4: lw a0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eaa8: lw a1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eaac: nop

0045eab0: beq a0,a1,0x0045f1bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x14, 4)
	(register, 0x14, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x45f1bc, 4) , (unique, 0x1200, 1)

0045eab4: _li a1,0x2d
	(register, 0x14, 4) COPY (const, 0x2d, 4)

0045eab8: addiu v0,a0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0045eabc: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045eac0: li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

0045eac4: sb v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045eac8: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eacc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ead0: b 0x0045ec98
	 ---  BRANCH (ram, 0x45ec98, 4)

0045ead4: _nop

0045ead8: bne v0,zero,0x0045eafc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45eafc, 4) , (unique, 0x1700, 1)

0045eadc: _addiu s7,s7,-0x4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffc, 4)

0045eae0: blez s7,0x0045eafc
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eafc, 4) , (unique, 0x1500, 1)

0045eae4: _or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045eae8: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eaec: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045eaf0: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45eaf8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045eaf4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045eaf8: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eafc: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb00: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb04: nop

0045eb08: beq v0,v1,0x0045f058
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45f058, 4) , (unique, 0x1200, 1)

0045eb0c: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045eb10: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045eb14: li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

0045eb18: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045eb1c: lw t9,-0x7bcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8434, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb20: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045eb24: bal 0x0045b620
	(register, 0x7c, 4) COPY (const, 0x45eb2c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b620, 4)

0045eb28: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045eb2c: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045eb30: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb34: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045eb38: beq v0,zero,0x0045eb48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eb48, 4) , (unique, 0x1200, 1)

0045eb3c: _nop

0045eb40: bgtz s7,0x0045ee24
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x5c, 4)
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ee24, 4) , (unique, 0x1400, 1)

0045eb44: _or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045eb48: lw ra,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb4c: lw s8,0x80(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb50: lw s7,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb54: lw s6,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb58: lw s5,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb5c: lw s4,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb60: lw s3,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb64: lw s2,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb68: lw s1,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb6c: lw s0,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb70: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	 ---  RETURN (register, 0x80, 4)

0045eb74: _addiu sp,sp,0x88
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)

0045eb78: lw s2,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eb7c: b 0x0045e838
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79ec, 4)
	 ---  BRANCH (ram, 0x45e838, 4)

0045eb80: _addiu s2,s2,0x79ec
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79ec, 4)

0045eb84: bne v0,zero,0x0045e884
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45e884, 4) , (unique, 0x1700, 1)

0045eb88: _addiu s7,s7,-0x4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xfffffffc, 4)

0045eb8c: b 0x0045e85c
	 ---  BRANCH (ram, 0x45e85c, 4)

0045eb90: _nop

0045eb94: srl s2,s2,0x14
	(register, 0x48, 4) INT_RIGHT (register, 0x48, 4) , (const, 0x14, 4)

0045eb98: andi s2,s2,0x7ff
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0x7ff, 4)

0045eb9c: beq s2,zero,0x0045e944
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45e944, 4) , (unique, 0x1200, 1)

0045eba0: _sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045eba4: slti v0,s2,0x3ff
	(unique, 0x5180, 1) INT_SLESS (register, 0x48, 4) , (const, 0x3ff, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045eba8: bne v0,zero,0x0045ef7c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x3ff, 4)
	 ---  CBRANCH (ram, 0x45ef7c, 4) , (unique, 0x1700, 1)

0045ebac: _li a0,0x3ff
	(register, 0x10, 4) COPY (const, 0x3ff, 4)

0045ebb0: addiu a0,s2,-0x3ff
	(register, 0x10, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffc01, 4)

0045ebb4: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ebb8: or s6,s6,s3
	(register, 0x58, 4) INT_OR (register, 0x58, 4) , (register, 0x4c, 4)

0045ebbc: bne s6,zero,0x0045e958
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45e958, 4) , (unique, 0x1700, 1)

0045ebc0: _nop

0045ebc4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0045ebc8: beq s8,v0,0x0045ee60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x20, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ee60, 4) , (unique, 0x1200, 1)

0045ebcc: _or t0,s4,zero
	(register, 0x20, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0045ebd0: lw t9,-0x7c14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff83ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ebd4: addiu s3,sp,0x45
	(register, 0x4c, 4) INT_ADD (register, 0x74, 4) , (const, 0x45, 4)

0045ebd8: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045ebdc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ebe0: li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

0045ebe4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45ebec, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045ebe8: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045ebec: sw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ebf0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ebf4: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ebf8: beq s5,zero,0x0045ee8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ee8c, 4) , (unique, 0x1200, 1)

0045ebfc: _nop

0045ec00: li s6,0x4
	(register, 0x58, 4) COPY (const, 0x4, 4)

0045ec04: lw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec08: addu s6,s8,s6
	(register, 0x58, 4) INT_ADD (register, 0x78, 4) , (register, 0x58, 4)

0045ec0c: subu s3,s3,v0
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x8, 4)

0045ec10: addiu s6,s6,0x2
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x2, 4)

0045ec14: addu s6,s6,s3
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (register, 0x4c, 4)

0045ec18: blez s8,0x0045ef28
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x78, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_SUB (register, 0x5c, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x45ef28, 4) , (unique, 0x1500, 1)

0045ec1c: _subu s6,s7,s6
	(register, 0x58, 4) INT_SUB (register, 0x5c, 4) , (register, 0x58, 4)

0045ec20: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ec24: addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0045ec28: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045ec2c: bne v0,zero,0x0045ec68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ec68, 4) , (unique, 0x1700, 1)

0045ec30: _nop

0045ec34: lw v1,0x10(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec38: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045ec3c: beq v1,v0,0x0045ec68
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45ec68, 4) , (unique, 0x1200, 1)

0045ec40: _nop

0045ec44: blez s6,0x0045ec68
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ec68, 4) , (unique, 0x1500, 1)

0045ec48: _or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045ec4c: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec50: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045ec54: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045ec58: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45ec60, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045ec5c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045ec60: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec64: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec68: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec6c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ec70: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045ec74: bne s5,zero,0x0045eab0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45eab0, 4) , (unique, 0x1700, 1)

0045ec78: _or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045ec7c: lhu a0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

0045ec80: nop

0045ec84: andi a1,a0,0x200
	(register, 0x14, 4) INT_AND (register, 0x10, 4) , (const, 0x200, 4)

0045ec88: bne a1,zero,0x0045ef88
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x45ef88, 4) , (unique, 0x1700, 1)

0045ec8c: _andi a0,a0,0x800
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x800, 4)

0045ec90: bne a0,zero,0x0045f0a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f0a0, 4) , (unique, 0x1700, 1)

0045ec94: _nop

0045ec98: beq v0,v1,0x0045efd0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45efd0, 4) , (unique, 0x1200, 1)

0045ec9c: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045eca0: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045eca4: li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045eca8: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045ecac: lw a1,0x8(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ecb0: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ecb4: addiu a1,a1,0x17
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x17, 4)

0045ecb8: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ecbc: sll a1,a1,0x18
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)

0045ecc0: beq v0,v1,0x0045efb0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x45efb0, 4) , (unique, 0x1200, 1)

0045ecc4: _sra a1,a1,0x18
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)

0045ecc8: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045eccc: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ecd0: sb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045ecd4: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ecd8: nop

0045ecdc: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045ece0: bne v0,zero,0x0045ecf8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x45ecf8, 4) , (unique, 0x1700, 1)

0045ece4: _li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045ece8: lw v1,0x10(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ecec: nop

0045ecf0: beq v1,v0,0x0045f074
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45f074, 4) , (unique, 0x1200, 1)

0045ecf4: _nop

0045ecf8: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ecfc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed00: nop

0045ed04: beq v0,v1,0x0045eff4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45eff4, 4) , (unique, 0x1200, 1)

0045ed08: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045ed0c: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ed10: lw v1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed14: nop

0045ed18: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045ed1c: bgtz s8,0x0045eea4
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x78, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x45eea4, 4) , (unique, 0x1400, 1)

0045ed20: _sw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045ed24: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ed28: nop

0045ed2c: andi v0,v0,0x1000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045ed30: beq v0,zero,0x0045ed50
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ed50, 4) , (unique, 0x1200, 1)

0045ed34: _nop

0045ed38: lw t9,-0x7bcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8434, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed3c: lw a1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed40: bal 0x0045b620
	(register, 0x7c, 4) COPY (const, 0x45ed48, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b620, 4)

0045ed44: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045ed48: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed4c: nop

0045ed50: lw s5,-0x7bd4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff842c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed54: lw a1,0x8(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed58: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed5c: addiu a1,a1,0xf
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xf, 4)

0045ed60: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed64: sll a1,a1,0x18
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)

0045ed68: beq v0,v1,0x0045f018
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x45f018, 4) , (unique, 0x1200, 1)

0045ed6c: _sra a1,a1,0x18
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)

0045ed70: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045ed74: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ed78: sb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045ed7c: beq s2,zero,0x0045ed88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x2b, 4)
	 ---  CBRANCH (ram, 0x45ed88, 4) , (unique, 0x1200, 1)

0045ed80: _li a1,0x2b
	(register, 0x14, 4) COPY (const, 0x2b, 4)

0045ed84: li a1,0x2d
	(register, 0x14, 4) COPY (const, 0x2d, 4)

0045ed88: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed8c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ed90: nop

0045ed94: beq v0,v1,0x0045f034
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45f034, 4) , (unique, 0x1200, 1)

0045ed98: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045ed9c: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045eda0: sb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045eda4: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eda8: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045edac: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045edb0: bal 0x0045ba60
	(register, 0x7c, 4) COPY (const, 0x45edb8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45ba60, 4)

0045edb4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045edb8: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045edbc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045edc0: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045edc4: beq v0,zero,0x0045eb48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x45eb48, 4) , (unique, 0x1200, 1)

0045edc8: _li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045edcc: lw a1,0x10(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045edd0: nop

0045edd4: beq a1,v0,0x0045eb48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45eb48, 4) , (unique, 0x1200, 1)

0045edd8: _nop

0045eddc: blez s6,0x0045eb48
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x45eb48, 4) , (unique, 0x1500, 1)

0045ede0: _sll a1,a1,0x18
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)

0045ede4: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ede8: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045edec: sra a1,a1,0x18
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)

0045edf0: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45edf8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045edf4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045edf8: b 0x0045eb48
	 ---  BRANCH (ram, 0x45eb48, 4)

0045edfc: _nop

0045ee00: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee04: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee08: nop

0045ee0c: beq v0,v1,0x0045f0d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45f0d0, 4) , (unique, 0x1200, 1)

0045ee10: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045ee14: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ee18: li v1,0x2b
	(register, 0xc, 4) COPY (const, 0x2b, 4)

0045ee1c: b 0x0045eb1c
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  BRANCH (ram, 0x45eb1c, 4)

0045ee20: _sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045ee24: lw ra,0x84(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee28: lw s8,0x80(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee2c: lw s6,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee30: lw s5,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee34: lw s4,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee38: lw s3,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee3c: lw s2,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee40: lw s1,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee44: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045ee48: lw s7,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee4c: lw s0,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee50: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee54: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045ee58: b 0x0045b450
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	 ---  BRANCH (ram, 0x45b450, 4)

0045ee5c: _addiu sp,sp,0x88
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)

0045ee60: lw t9,-0x7c14(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff83ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee64: addiu s3,sp,0x45
	(register, 0x4c, 4) INT_ADD (register, 0x74, 4) , (const, 0x45, 4)

0045ee68: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ee6c: li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

0045ee70: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45ee78, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045ee74: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045ee78: sw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ee7c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee80: bne s5,zero,0x0045ef10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ef10, 4) , (unique, 0x1700, 1)

0045ee84: _or t0,s4,zero
	(register, 0x20, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0045ee88: or s8,zero,zero
	(register, 0x78, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ee8c: lw s6,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ee90: lui v0,0xa00
	(register, 0x8, 4) INT_LEFT (const, 0xa00, 4) , (const, 0x10, 4)

0045ee94: and s6,s6,v0
	(register, 0x58, 4) INT_AND (register, 0x58, 4) , (register, 0x8, 4)

0045ee98: sltu s6,zero,s6
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x58, 4)
	(register, 0x58, 4) INT_ZEXT (unique, 0x5380, 1)

0045ee9c: b 0x0045ec04
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x45ec04, 4)

0045eea0: _addiu s6,s6,0x3
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x3, 4)

0045eea4: lw t9,-0x7bcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8434, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eea8: lw a1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eeac: bal 0x0045b620
	(register, 0x7c, 4) COPY (const, 0x45eeb4, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b620, 4)

0045eeb0: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045eeb4: lw t0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eeb8: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eebc: subu t0,t0,s4
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x50, 4)

0045eec0: slt v0,s8,t0
	(unique, 0x5080, 1) INT_SLESS (register, 0x78, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045eec4: or a2,t0,zero
	(register, 0x18, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0045eec8: beq v0,zero,0x0045eed4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_SUB (register, 0x78, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x45eed4, 4) , (unique, 0x1200, 1)

0045eecc: _subu s7,s8,t0
	(register, 0x5c, 4) INT_SUB (register, 0x78, 4) , (register, 0x20, 4)

0045eed0: or a2,s8,zero
	(register, 0x18, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0045eed4: lw s5,-0x7bd4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff842c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eed8: or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0045eedc: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045eee0: bal 0x0045ba60
	(register, 0x7c, 4) COPY (const, 0x45eee8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45ba60, 4)

0045eee4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045eee8: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eeec: blez s7,0x0045ed54
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ed54, 4) , (unique, 0x1500, 1)

0045eef0: _or a2,s7,zero
	(register, 0x18, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045eef4: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eef8: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045eefc: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45ef04, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045ef00: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045ef04: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ef08: b 0x0045ed54
	 ---  BRANCH (ram, 0x45ed54, 4)

0045ef0c: _nop

0045ef10: lw v0,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ef14: nop

0045ef18: subu s3,s3,v0
	(register, 0x4c, 4) INT_SUB (register, 0x4c, 4) , (register, 0x8, 4)

0045ef1c: addiu s6,s3,0x6
	(register, 0x58, 4) INT_ADD (register, 0x4c, 4) , (const, 0x6, 4)

0045ef20: subu s6,s7,s6
	(register, 0x58, 4) INT_SUB (register, 0x5c, 4) , (register, 0x58, 4)

0045ef24: or s8,zero,zero
	(register, 0x78, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ef28: lhu v0,0xc(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ef2c: nop

0045ef30: andi v1,v0,0x1000
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045ef34: beq v1,zero,0x0045ec28
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ec28, 4) , (unique, 0x1200, 1)

0045ef38: _nop

0045ef3c: b 0x0045ec28
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x45ec28, 4)

0045ef40: _addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0045ef44: lw v0,-0x74d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ef48: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045ef4c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045ef50: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ef54: sll s4,s4,0x1
	(register, 0x50, 4) INT_LEFT (register, 0x50, 4) , (const, 0x1, 4)

0045ef58: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0045ef5c: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ef60: nop

0045ef64: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0045ef68: beq v0,zero,0x0045f04c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f04c, 4) , (unique, 0x1200, 1)

0045ef6c: _nop

0045ef70: lw s2,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ef74: b 0x0045e838
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79e8, 4)
	 ---  BRANCH (ram, 0x45e838, 4)

0045ef78: _addiu s2,s2,0x79e8
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79e8, 4)

0045ef7c: subu a0,a0,s2
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x48, 4)

0045ef80: b 0x0045ebb8
	(register, 0x48, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x45ebb8, 4)

0045ef84: _li s2,0x1
	(register, 0x48, 4) COPY (const, 0x1, 4)

0045ef88: beq v0,v1,0x0045f1f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45f1f8, 4) , (unique, 0x1200, 1)

0045ef8c: _nop

0045ef90: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045ef94: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ef98: li v1,0x2b
	(register, 0xc, 4) COPY (const, 0x2b, 4)

0045ef9c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045efa0: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efa4: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efa8: b 0x0045ec98
	 ---  BRANCH (ram, 0x45ec98, 4)

0045efac: _nop

0045efb0: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efb4: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045efb8: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45efc0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045efbc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045efc0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efc4: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efc8: b 0x0045ecd4
	 ---  BRANCH (ram, 0x45ecd4, 4)

0045efcc: _nop

0045efd0: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efd4: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045efd8: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045efdc: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45efe4, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045efe0: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045efe4: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efe8: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045efec: b 0x0045ecac
	 ---  BRANCH (ram, 0x45ecac, 4)

0045eff0: _nop

0045eff4: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045eff8: lw a1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045effc: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045f000: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f008, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f004: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f008: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f00c: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f010: b 0x0045ed1c
	 ---  BRANCH (ram, 0x45ed1c, 4)

0045f014: _nop

0045f018: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f01c: nop

0045f020: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f028, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f024: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f028: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f02c: b 0x0045ed7c
	 ---  BRANCH (ram, 0x45ed7c, 4)

0045f030: _nop

0045f034: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f038: nop

0045f03c: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f044, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f040: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f044: b 0x0045eda4
	 ---  BRANCH (ram, 0x45eda4, 4)

0045f048: _nop

0045f04c: lw s2,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f050: b 0x0045e838
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79e4, 4)
	 ---  BRANCH (ram, 0x45e838, 4)

0045f054: _addiu s2,s2,0x79e4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x79e4, 4)

0045f058: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f05c: li a1,0x2d
	(register, 0x14, 4) COPY (const, 0x2d, 4)

0045f060: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f068, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f064: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f068: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f06c: b 0x0045eb1c
	 ---  BRANCH (ram, 0x45eb1c, 4)

0045f070: _nop

0045f074: blez s6,0x0045ecf8
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ecf8, 4) , (unique, 0x1500, 1)

0045f078: _or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045f07c: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f080: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045f084: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045f088: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45f090, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045f08c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f090: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f094: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f098: b 0x0045ecf8
	 ---  BRANCH (ram, 0x45ecf8, 4)

0045f09c: _nop

0045f0a0: beq v0,v1,0x0045f240
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45f240, 4) , (unique, 0x1200, 1)

0045f0a4: _nop

0045f0a8: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045f0ac: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045f0b0: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045f0b4: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045f0b8: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f0bc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f0c0: b 0x0045ec98
	 ---  BRANCH (ram, 0x45ec98, 4)

0045f0c4: _nop

0045f0c8: b 0x0045ebd0
	(register, 0x78, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f0cc: _or s8,v1,zero
	(register, 0x78, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045f0d0: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f0d4: li a1,0x2b
	(register, 0x14, 4) COPY (const, 0x2b, 4)

0045f0d8: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f0e0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f0dc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f0e0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f0e4: b 0x0045eb1c
	 ---  BRANCH (ram, 0x45eb1c, 4)

0045f0e8: _nop

0045f0ec: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f0f0: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045f0f4: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f0fc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f0f8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f0fc: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f100: b 0x0045eb1c
	 ---  BRANCH (ram, 0x45eb1c, 4)

0045f104: _nop

0045f108: lw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f10c: li a1,-0x21
	(register, 0x14, 4) COPY (const, 0xffffffdf, 4)

0045f110: and a1,a2,a1
	(register, 0x14, 4) INT_AND (register, 0x18, 4) , (register, 0x14, 4)

0045f114: addiu a1,a1,-0x41
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffbf, 4)

0045f118: andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

0045f11c: sltiu a1,a1,0x6
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0x6, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0045f120: bne a1,zero,0x0045f154
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f154, 4) , (unique, 0x1700, 1)

0045f124: _nop

0045f128: addiu a1,v0,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0045f12c: andi v0,a2,0x7
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x7, 4)

0045f130: addiu a2,a2,-0x30
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffd0, 4)

0045f134: bne v0,zero,0x0045f14c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x18, 4) , (const, 0x8, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x45f14c, 4) , (unique, 0x1700, 1)

0045f138: _slti a2,a2,0x8
	(unique, 0x5180, 1) INT_SLESS (register, 0x18, 4) , (const, 0x8, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)

0045f13c: addiu v0,s8,0x1
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1, 4)

0045f140: slt v0,v0,v1
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045f144: beq v0,zero,0x0045f204
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f204, 4) , (unique, 0x1200, 1)

0045f148: _nop

0045f14c: bne a2,zero,0x0045ebd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ebd0, 4) , (unique, 0x1700, 1)

0045f150: _nop

0045f154: addiu v0,s8,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0xffffffff, 4)

0045f158: bgez v0,0x0045e9ec
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45e9ec, 4) , (unique, 0x1300, 1)

0045f15c: _nop

0045f160: lw a2,-0x74f4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b0c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f164: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045f168: addu a2,a2,v1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0xc, 4)

0045f16c: lw v1,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f170: lw v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f174: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045f178: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045f17c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f180: nop

0045f184: slti v0,v0,0x66
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x66, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045f188: beq v0,zero,0x0045f21c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f21c, 4) , (unique, 0x1200, 1)

0045f18c: _nop

0045f190: lw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f194: nop

0045f198: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045f19c: sll v0,v0,0x18
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x18, 4)

0045f1a0: sra v0,v0,0x18
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x18, 4)

0045f1a4: b 0x0045ebd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f1a8: _sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045f1ac: addiu v0,v0,-0x37
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffc9, 4)

0045f1b0: sll a1,v0,0x18
	(register, 0x14, 4) INT_LEFT (register, 0x8, 4) , (const, 0x18, 4)

0045f1b4: b 0x0045e9d0
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45e9d0, 4)

0045f1b8: _sra a1,a1,0x18
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)

0045f1bc: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045f1c0: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f1c4: nop

0045f1c8: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45f1d0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045f1cc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045f1d0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f1d4: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f1d8: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f1dc: lw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f1e0: b 0x0045ec98
	 ---  BRANCH (ram, 0x45ec98, 4)

0045f1e4: _nop

0045f1e8: addiu v1,a1,0x1
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0045f1ec: sll v1,v1,0x18
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x18, 4)

0045f1f0: b 0x0045ea4c
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45ea4c, 4)

0045f1f4: _sra v1,v1,0x18
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x18, 4)

0045f1f8: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045f1fc: b 0x0045f1c0
	(register, 0x14, 4) COPY (const, 0x2b, 4)
	 ---  BRANCH (ram, 0x45f1c0, 4)

0045f200: _li a1,0x2b
	(register, 0x14, 4) COPY (const, 0x2b, 4)

0045f204: bne a2,zero,0x0045ebd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45ebd0, 4) , (unique, 0x1700, 1)

0045f208: _andi v0,a1,0x1
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x1, 4)

0045f20c: bne v0,zero,0x0045f158
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45f158, 4) , (unique, 0x1700, 1)

0045f210: _addiu v0,s8,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0xffffffff, 4)

0045f214: b 0x0045ebd0
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f218: _nop

0045f21c: beq s2,zero,0x0045f24c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x31, 4)
	 ---  CBRANCH (ram, 0x45f24c, 4) , (unique, 0x1200, 1)

0045f220: _li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045f224: addiu v0,a0,-0x4
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0045f228: blez v0,0x0045f258
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45f258, 4) , (unique, 0x1500, 1)

0045f22c: _nop

0045f230: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045f234: li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045f238: b 0x0045ebd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f23c: _sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045f240: sw t0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045f244: b 0x0045f1c0
	(register, 0x14, 4) COPY (const, 0x20, 4)
	 ---  BRANCH (ram, 0x45f1c0, 4)

0045f248: _li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045f24c: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0045f250: b 0x0045ebd0
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f254: _sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045f258: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0045f25c: subu a0,v0,a0
	(register, 0x10, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0045f260: li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045f264: sw v0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045f268: b 0x0045ebd0
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45ebd0, 4)

0045f26c: _or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045f270: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f274: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f278: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f27c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045f280: addiu a3,a3,0x7b78
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b78, 4)

0045f284: li a2,0x41
	(register, 0x18, 4) COPY (const, 0x41, 4)

0045f288: addiu a1,a1,0x7b54
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x7b54, 4)

0045f28c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45f294, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b64, 4)
	 ---  CALLIND (register, 0x80, 4)

0045f290: _addiu a0,a0,0x7b64
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b64, 4)

