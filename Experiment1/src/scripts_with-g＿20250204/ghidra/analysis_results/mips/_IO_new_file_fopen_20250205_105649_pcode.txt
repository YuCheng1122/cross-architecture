Function: _IO_new_file_fopen
Address: 0042ed24
P-code:

0042ed24: lui gp,0x9
	(register, 0x70, 4) INT_LEFT (const, 0x9, 4) , (const, 0x10, 4)

0042ed28: addiu gp,gp,-0x3ec4
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffc13c, 4)

0042ed2c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0042ed30: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

0042ed34: lw v1,0x38(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ed38: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042ed3c: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0042ed40: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0042ed44: sw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0042ed48: sw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0042ed4c: sw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042ed50: sw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0042ed54: sw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0042ed58: bne v1,v0,0x0042ee00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x72, 4)
	 ---  CBRANCH (ram, 0x42ee00, 4) , (unique, 0x1700, 1)

0042ed5c: _li v1,0x72
	(register, 0xc, 4) COPY (const, 0x72, 4)

0042ed60: lb v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0042ed64: nop

0042ed68: beq v0,v1,0x0042f19c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42f19c, 4) , (unique, 0x1200, 1)

0042ed6c: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042ed70: li v1,0x77
	(register, 0xc, 4) COPY (const, 0x77, 4)

0042ed74: beq v0,v1,0x0042f118
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x61, 4)
	 ---  CBRANCH (ram, 0x42f118, 4) , (unique, 0x1200, 1)

0042ed78: _li v1,0x61
	(register, 0xc, 4) COPY (const, 0x61, 4)

0042ed7c: bne v0,v1,0x0042edec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x2c, 4) COPY (const, 0x1004, 4)
	 ---  CBRANCH (ram, 0x42edec, 4) , (unique, 0x1700, 1)

0042ed80: _li t3,0x1004
	(register, 0x2c, 4) COPY (const, 0x1004, 4)

0042ed84: li t4,0x1
	(register, 0x30, 4) COPY (const, 0x1, 4)

0042ed88: li t2,0x108
	(register, 0x28, 4) COPY (const, 0x108, 4)

0042ed8c: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ed90: addiu t1,a2,0x6
	(register, 0x24, 4) INT_ADD (register, 0x18, 4) , (const, 0x6, 4)

0042ed94: or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042ed98: addiu a0,a0,-0x4980
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffb680, 4)

0042ed9c: li t0,0x2b
	(register, 0x20, 4) COPY (const, 0x2b, 4)

0042eda0: lb v0,0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0042eda4: nop

0042eda8: slti v1,v0,0x79
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x79, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

0042edac: beq v1,zero,0x0042ee34
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42ee34, 4) , (unique, 0x1200, 1)

0042edb0: _addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0042edb4: slti v1,v0,0x62
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x62, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

0042edb8: bne v1,zero,0x0042f17c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42f17c, 4) , (unique, 0x1700, 1)

0042edbc: _nop

0042edc0: addiu v0,v0,-0x62
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff9e, 4)

0042edc4: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0042edc8: sltiu v1,v0,0x17
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x17, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042edcc: beq v1,zero,0x0042ee34
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42ee34, 4) , (unique, 0x1200, 1)

0042edd0: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042edd4: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0042edd8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eddc: nop

0042ede0: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

0042ede4: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0042ede8: _nop

0042edec: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042edf0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0042edf4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042edf8: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0042edfc: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ee00: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042ee04: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee08: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee0c: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee10: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee14: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee18: or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0042ee1c: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee20: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

0042ee24: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0042ee28: andi t3,t3,0x1000
	(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (const, 0x1000, 4)

0042ee2c: or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042ee30: li t4,0x2
	(register, 0x30, 4) COPY (const, 0x2, 4)

0042ee34: bne a2,t1,0x0042eda0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x42eda0, 4) , (unique, 0x1700, 1)

0042ee38: _nop

0042ee3c: lw t9,-0x7b08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee40: sw a3,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0042ee44: sw t3,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0042ee48: li a3,0x1b6
	(register, 0x1c, 4) COPY (const, 0x1b6, 4)

0042ee4c: or a2,t2,t4
	(register, 0x18, 4) INT_OR (register, 0x28, 4) , (register, 0x30, 4)

0042ee50: bal 0x0042e6d8
	(register, 0x7c, 4) COPY (const, 0x42ee58, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x42e6d8, 4)

0042ee54: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042ee58: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee5c: beq v0,zero,0x0042ee00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ee00, 4) , (unique, 0x1200, 1)

0042ee60: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042ee64: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee68: lw t9,-0x7d0c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee6c: addiu a1,a1,0x558c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x558c, 4)

0042ee70: bal 0x0043888c
	(register, 0x7c, 4) COPY (const, 0x42ee78, 4)
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	 ---  CALL (ram, 0x43888c, 4)

0042ee74: _addiu a0,s1,0x1
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0042ee78: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee7c: beq v0,zero,0x0042ee04
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x8, 4) , (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x42ee04, 4) , (unique, 0x1200, 1)

0042ee80: _addiu s1,v0,0x5
	(register, 0x44, 4) INT_ADD (register, 0x8, 4) , (const, 0x5, 4)

0042ee84: lw t9,-0x7b78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8488, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee88: li a1,0x2c
	(register, 0x14, 4) COPY (const, 0x2c, 4)

0042ee8c: bal 0x00437b60
	(register, 0x7c, 4) COPY (const, 0x42ee94, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x437b60, 4)

0042ee90: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0042ee94: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ee98: subu s4,v0,s1
	(register, 0x50, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

0042ee9c: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eea0: nop

0042eea4: bal 0x004198a0
	(register, 0x7c, 4) COPY (const, 0x42eeac, 4)
	(register, 0x10, 4) INT_ADD (register, 0x50, 4) , (const, 0x3, 4)
	 ---  CALL (ram, 0x4198a0, 4)

0042eea8: _addiu a0,s4,0x3
	(register, 0x10, 4) INT_ADD (register, 0x50, 4) , (const, 0x3, 4)

0042eeac: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eeb0: beq v0,zero,0x0042f210
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42f210, 4) , (unique, 0x1200, 1)

0042eeb4: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042eeb8: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eebc: or a2,s4,zero
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0042eec0: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0042eec4: bal 0x0041c5a0
	(register, 0x7c, 4) COPY (const, 0x42eecc, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41c5a0, 4)

0042eec8: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042eecc: addu v0,s3,s4
	(register, 0x8, 4) INT_ADD (register, 0x4c, 4) , (register, 0x50, 4)

0042eed0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eed4: sb zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042eed8: lb v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0042eedc: nop

0042eee0: beq v1,zero,0x0042f204
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42f204, 4) , (unique, 0x1200, 1)

0042eee4: _nop

0042eee8: lw a0,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eeec: or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042eef0: lw v0,0x34(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eef4: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042eef8: lw a0,0x3c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eefc: or t1,zero,zero
	(register, 0x24, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042ef00: li t0,0x5f
	(register, 0x20, 4) COPY (const, 0x5f, 4)

0042ef04: li t2,0x3a
	(register, 0x28, 4) COPY (const, 0x3a, 4)

0042ef08: b 0x0042ef48
	(register, 0x2c, 4) COPY (const, 0x2f, 4)
	 ---  BRANCH (ram, 0x42ef48, 4)

0042ef0c: _li t3,0x2f
	(register, 0x2c, 4) COPY (const, 0x2f, 4)

0042ef10: beq v1,t0,0x0042ef64
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)
	 ---  CBRANCH (ram, 0x42ef64, 4) , (unique, 0x1200, 1)

0042ef14: _addiu a1,v1,-0x2c
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)

0042ef18: andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

0042ef1c: sltiu a1,a1,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0x3, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0042ef20: bne a1,zero,0x0042ef64
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ef64, 4) , (unique, 0x1700, 1)

0042ef24: _nop

0042ef28: beq v1,t2,0x0042ef64
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x42ef64, 4) , (unique, 0x1200, 1)

0042ef2c: _nop

0042ef30: beq v1,t3,0x0042f1ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x2c, 4)
	(register, 0xc, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42f1ac, 4) , (unique, 0x1200, 1)

0042ef34: _li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0042ef38: lb v1,0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0042ef3c: nop

0042ef40: beq v1,zero,0x0042ef88
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42ef88, 4) , (unique, 0x1200, 1)

0042ef44: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0042ef48: sll a1,v1,0x1
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0042ef4c: addu a1,v0,a1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

0042ef50: lhu a1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x3300, 2)

0042ef54: nop

0042ef58: andi a1,a1,0x800
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x800, 4)

0042ef5c: beq a1,zero,0x0042ef10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ef10, 4) , (unique, 0x1200, 1)

0042ef60: _nop

0042ef64: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0042ef68: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0042ef6c: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ef70: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0042ef74: sb v1,-0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0042ef78: lb v1,0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0042ef7c: nop

0042ef80: bne v1,zero,0x0042ef48
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42ef48, 4) , (unique, 0x1700, 1)

0042ef84: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0042ef88: slti v0,t1,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x24, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0042ef8c: beq v0,zero,0x0042efb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42efb4, 4) , (unique, 0x1200, 1)

0042ef90: _addiu t1,t1,0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

0042ef94: nor v0,zero,t1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x24, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0042ef98: li v1,0x2f
	(register, 0xc, 4) COPY (const, 0x2f, 4)

0042ef9c: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0042efa0: beq v0,zero,0x0042efac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x42efac, 4) , (unique, 0x1200, 1)

0042efa4: _sb v1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0042efa8: sb v1,0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0042efac: addiu a2,a2,0x3
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x3, 4)

0042efb0: subu a2,a2,t1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x24, 4)

0042efb4: sb zero,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042efb8: lb v0,0x2(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0042efbc: nop

0042efc0: bne v0,zero,0x0042eff4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42eff4, 4) , (unique, 0x1700, 1)

0042efc4: _or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042efc8: lw v1,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042efcc: nop

0042efd0: lw a0,0x3c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042efd4: lb v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0042efd8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042efdc: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0042efe0: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0042efe4: lb v1,0x3(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0042efe8: addiu s1,s1,0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0042efec: bne v1,zero,0x0042efd4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x42efd4, 4) , (unique, 0x1700, 1)

0042eff0: _sb v1,-0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0042eff4: lw t9,-0x7b04(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84fc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042eff8: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042effc: bal 0x00439408
	(register, 0x7c, 4) COPY (const, 0x42f004, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	 ---  CALL (ram, 0x439408, 4)

0042f000: _addiu a0,sp,0x20
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

0042f004: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f008: bne v0,zero,0x0042f1c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42f1c0, 4) , (unique, 0x1700, 1)

0042f00c: _nop

0042f010: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f014: nop

0042f018: bal 0x0041a318
	(register, 0x7c, 4) COPY (const, 0x42f020, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41a318, 4)

0042f01c: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042f020: lw v0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f024: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0042f028: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f02c: bne v0,v1,0x0042f258
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x18, 4) COPY (const, 0x142, 4)
	 ---  CBRANCH (ram, 0x42f258, 4) , (unique, 0x1700, 1)

0042f030: _li a2,0x142
	(register, 0x18, 4) COPY (const, 0x142, 4)

0042f034: lw a0,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f038: nop

0042f03c: bne a0,v0,0x0042f238
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x143, 4)
	 ---  CBRANCH (ram, 0x42f238, 4) , (unique, 0x1700, 1)

0042f040: _li a2,0x143
	(register, 0x18, 4) COPY (const, 0x143, 4)

0042f044: lw v1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f048: lw a1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f04c: lw a3,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f050: lw a2,0xc(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f054: sb zero,0x2c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f058: sb zero,0x2d(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2d, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f05c: sb zero,0x2e(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2e, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f060: sb zero,0x2f(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2f, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f064: sb zero,0x30(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f068: sb zero,0x31(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x31, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f06c: sb zero,0x32(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x32, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f070: sb zero,0x33(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x33, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f074: sw a3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0042f078: sw a2,0x10(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042f07c: lw v1,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f080: nop

0042f084: sb zero,0x34(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f088: sb zero,0x35(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x35, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f08c: sb zero,0x36(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x36, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f090: sb zero,0x37(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x37, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f094: sb zero,0x38(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f098: sb zero,0x39(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x39, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f09c: sb zero,0x3a(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f0a0: sb zero,0x3b(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042f0a4: lw v0,0x5c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0a8: lw v1,0x5c(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0ac: addiu a2,v0,0x3c
	(register, 0x18, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)

0042f0b0: sw a2,0x58(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042f0b4: sw a1,0x3c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042f0b8: lw a1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0bc: addiu v1,v1,0x2c
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2c, 4)

0042f0c0: sw a0,0x50(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042f0c4: sw a0,0x48(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042f0c8: sw v1,0x54(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042f0cc: sw zero,0x4c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042f0d0: sw a1,0x60(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042f0d4: lw a1,0x88(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0d8: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0dc: li a2,0x9
	(register, 0x18, 4) COPY (const, 0x9, 4)

0042f0e0: sw zero,0x70(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042f0e4: sw a0,0x74(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042f0e8: sw a2,0x6c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042f0ec: sw v1,0x78(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042f0f0: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0f4: sw a1,0x98(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042f0f8: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f0fc: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f100: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f104: sw a0,0x6c(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042f108: or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0042f10c: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f110: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  RETURN (register, 0x80, 4)

0042f114: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0042f118: li t3,0x4
	(register, 0x2c, 4) COPY (const, 0x4, 4)

0042f11c: li t4,0x1
	(register, 0x30, 4) COPY (const, 0x1, 4)

0042f120: b 0x0042ed8c
	(register, 0x28, 4) COPY (const, 0x300, 4)
	 ---  BRANCH (ram, 0x42ed8c, 4)

0042f124: _li t2,0x300
	(register, 0x28, 4) COPY (const, 0x300, 4)

0042f128: ori t2,t2,0x400
	(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0x400, 4)

0042f12c: b 0x0042ee34
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f130: _or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042f134: lw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f138: nop

0042f13c: ori v0,v0,0x1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1, 4)

0042f140: b 0x0042ee34
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f144: _sw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042f148: lw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f14c: lui v1,0x8
	(register, 0xc, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

0042f150: ori v0,v0,0x40
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x40, 4)

0042f154: or t2,t2,v1
	(register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0xc, 4)

0042f158: b 0x0042ee34
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f15c: _sw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042f160: lw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f164: nop

0042f168: ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

0042f16c: b 0x0042ee34
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f170: _sw v0,0x3c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042f174: b 0x0042ee34
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f178: _or s1,a2,zero
	(register, 0x44, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042f17c: beq v0,t0,0x0042ee28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x20, 4)
	(register, 0xc, 4) COPY (const, 0x2c, 4)
	 ---  CBRANCH (ram, 0x42ee28, 4) , (unique, 0x1200, 1)

0042f180: _li v1,0x2c
	(register, 0xc, 4) COPY (const, 0x2c, 4)

0042f184: beq v0,v1,0x0042ee3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42ee3c, 4) , (unique, 0x1200, 1)

0042f188: _nop

0042f18c: beq v0,zero,0x0042ee3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ee3c, 4) , (unique, 0x1200, 1)

0042f190: _nop

0042f194: b 0x0042ee34
	 ---  BRANCH (ram, 0x42ee34, 4)

0042f198: _nop

0042f19c: li t3,0x8
	(register, 0x2c, 4) COPY (const, 0x8, 4)

0042f1a0: or t4,zero,zero
	(register, 0x30, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042f1a4: b 0x0042ed8c
	(register, 0x28, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42ed8c, 4)

0042f1a8: _or t2,zero,zero
	(register, 0x28, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042f1ac: beq t1,v1,0x0042efb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42efb4, 4) , (unique, 0x1200, 1)

0042f1b0: _addiu t1,t1,0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

0042f1b4: sb t3,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2f, 1)

0042f1b8: b 0x0042ef38
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42ef38, 4)

0042f1bc: _addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0042f1c0: lw t9,-0x7b00(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8500, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f1c4: nop

0042f1c8: bal 0x0042eb04
	(register, 0x7c, 4) COPY (const, 0x42f1d0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x42eb04, 4)

0042f1cc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042f1d0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f1d4: or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042f1d8: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f1dc: nop

0042f1e0: bal 0x0041a318
	(register, 0x7c, 4) COPY (const, 0x42f1e8, 4)
	(register, 0x40, 4) COPY (const, 0x16, 4)
	 ---  CALL (ram, 0x41a318, 4)

0042f1e4: _li s0,0x16
	(register, 0x40, 4) COPY (const, 0x16, 4)

0042f1e8: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f1ec: nop

0042f1f0: lw s1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f1f4: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0042f1f8: addu s1,s1,v1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

0042f1fc: b 0x0042ee00
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x42ee00, 4)

0042f200: _sw s0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0042f204: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042f208: b 0x0042ef94
	(register, 0x24, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42ef94, 4)

0042f20c: _li t1,0x1
	(register, 0x24, 4) COPY (const, 0x1, 4)

0042f210: lw s1,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f214: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0042f218: lw t9,-0x7b00(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8500, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f21c: addu v0,s1,v1
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

0042f220: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042f224: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f228: bal 0x0042eb04
	(register, 0x7c, 4) COPY (const, 0x42f230, 4)
	 ---  CALL (ram, 0x42eb04, 4)

0042f22c: _nop

0042f230: b 0x0042f1f4
	 ---  BRANCH (ram, 0x42f1f4, 4)

0042f234: _nop

0042f238: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f23c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f240: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f244: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f248: addiu a3,a3,0x55d0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x55d0, 4)

0042f24c: addiu a1,a1,0x5594
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x5594, 4)

0042f250: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x42f258, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x55b8, 4)
	 ---  CALL (ram, 0x425590, 4)

0042f254: _addiu a0,a0,0x55b8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x55b8, 4)

0042f258: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f25c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f260: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f264: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042f268: addiu a3,a3,0x55d0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x55d0, 4)

0042f26c: addiu a1,a1,0x5594
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x5594, 4)

0042f270: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x42f278, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x55a0, 4)
	 ---  CALL (ram, 0x425590, 4)

0042f274: _addiu a0,a0,0x55a0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x55a0, 4)

