Function: attack_app_cfnull
Address: 004048cc
P-code:

004048cc: addiu sp,sp,-0x5198
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffae68, 4)

004048d0: sw ra,0x5194(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004048d4: sw s8,0x5190(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5190, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004048d8: sw s0,0x518c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x518c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004048dc: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

004048e0: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

004048e4: sw a1,0x519c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x519c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

004048e8: or v1,a2,zero
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004048ec: sw a3,0x51a4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

004048f0: sb v0,0x5198(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5198, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004048f4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004048f8: sb v0,0x51a0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

004048fc: sw zero,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404900: sw zero,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404904: lbu v0,0x51a0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404908: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040490c: li a2,0x8
	(register, 0x18, 4) COPY (const, 0x8, 4)

00404910: lw a1,0x51a4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404914: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404918: jal 0x00408038
	(register, 0x7c, 4) COPY (const, 0x404920, 4)
	 ---  CALL (ram, 0x408038, 4)

0040491c: _nop

00404920: sw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404924: lbu v0,0x51a0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404928: li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

0040492c: li a2,0x18
	(register, 0x18, 4) COPY (const, 0x18, 4)

00404930: lw a1,0x51a4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x51a4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404934: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404938: jal 0x004080fc
	(register, 0x7c, 4) COPY (const, 0x404940, 4)
	 ---  CALL (ram, 0x4080fc, 4)

0040493c: _nop

00404940: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404944: addiu v1,s8,0x5c
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x5c, 4)

00404948: li v0,0x2801
	(register, 0x8, 4) COPY (const, 0x2801, 4)

0040494c: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404950: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404954: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404958: jal 0x0041cb28
	(register, 0x7c, 4) COPY (const, 0x404960, 4)
	 ---  CALL (ram, 0x41cb28, 4)

0040495c: _nop

00404960: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404964: nop

00404968: beq v0,zero,0x004060f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4060f8, 4) , (unique, 0x1200, 1)

0040496c: _nop

00404970: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404974: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40497c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00404978: _nop

0040497c: slti v0,v0,0x80
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x80, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00404980: beq v0,zero,0x00406104
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x406104, 4) , (unique, 0x1200, 1)

00404984: _nop

00404988: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040498c: nop

00404990: slti v0,v0,0x101
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x101, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00404994: bne v0,zero,0x004049a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4049a4, 4) , (unique, 0x1700, 1)

00404998: _nop

0040499c: li v0,0x100
	(register, 0x8, 4) COPY (const, 0x100, 4)

004049a0: sw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004049a4: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004049a8: li a1,0x29c
	(register, 0x14, 4) COPY (const, 0x29c, 4)

004049ac: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004049b0: jal 0x00400380
	(register, 0x7c, 4) COPY (const, 0x4049b8, 4)
	 ---  CALL (ram, 0x400380, 4)

004049b4: _nop

004049b8: sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004049bc: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004049c0: b 0x00404f38
	 ---  BRANCH (ram, 0x404f38, 4)

004049c4: _nop

004049c8: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004049cc: nop

004049d0: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004049d4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004049d8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004049dc: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004049e0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004049e4: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

004049e8: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

004049ec: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004049f0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004049f4: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004049f8: nop

004049fc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a00: sb zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00404a04: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404a08: nop

00404a0c: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404a10: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404a14: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a18: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404a1c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a20: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404a24: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404a28: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404a2c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404a30: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404a34: nop

00404a38: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a3c: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00404a40: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00404a44: lbu v0,0x5198(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5198, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404a48: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404a4c: nop

00404a50: div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

00404a54: bne v0,zero,0x00404a60
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404a60, 4) , (unique, 0x1700, 1)

00404a58: _nop

00404a5c: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00404a60: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

00404a64: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404a68: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404a6c: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00404a70: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a74: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404a78: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404a7c: lw v0,0x519c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x519c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404a80: nop

00404a84: addu a0,v0,v1
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a88: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404a8c: nop

00404a90: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404a94: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404a98: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404a9c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404aa0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404aa4: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404aa8: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404aac: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ab0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404ab4: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404ab8: nop

00404abc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ac0: lw v1,0x10(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404ac4: nop

00404ac8: sw v1,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00404acc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404ad0: nop

00404ad4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404ad8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404adc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ae0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ae4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ae8: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404aec: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404af0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404af4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404af8: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404afc: nop

00404b00: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404b04: addiu v0,v0,0x214
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x214, 4)

00404b08: lw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404b0c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404b10: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404b18, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404b14: _nop

00404b18: lbu v0,0x5198(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5198, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404b1c: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404b20: nop

00404b24: div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

00404b28: bne v0,zero,0x00404b34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404b34, 4) , (unique, 0x1700, 1)

00404b2c: _nop

00404b30: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00404b34: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

00404b38: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404b3c: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404b40: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00404b44: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404b48: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404b4c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404b50: lw v0,0x519c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x519c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404b54: nop

00404b58: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404b5c: lbu v0,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404b60: nop

00404b64: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00404b68: beq v0,zero,0x00404c70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404c70, 4) , (unique, 0x1200, 1)

00404b6c: _nop

00404b70: lbu v0,0x5198(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5198, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404b74: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404b78: nop

00404b7c: div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

00404b80: bne v0,zero,0x00404b8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404b8c, 4) , (unique, 0x1700, 1)

00404b84: _nop

00404b88: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00404b8c: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

00404b90: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404b94: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404b98: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00404b9c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ba0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404ba4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404ba8: lw v0,0x519c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x519c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404bac: nop

00404bb0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404bb4: lw v0,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404bb8: nop

00404bbc: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404bc0: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x404bc8, 4)
	 ---  CALL (ram, 0x422288, 4)

00404bc4: _nop

00404bc8: or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404bcc: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x404bd4, 4)
	 ---  CALL (ram, 0x40f524, 4)

00404bd0: _nop

00404bd4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404bd8: lbu v0,0x5198(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x5198, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404bdc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404be0: nop

00404be4: div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

00404be8: bne v0,zero,0x00404bf4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404bf4, 4) , (unique, 0x1700, 1)

00404bec: _nop

00404bf0: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00404bf4: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

00404bf8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404bfc: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404c00: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

00404c04: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404c08: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404c0c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404c10: lw v0,0x519c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x519c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404c14: nop

00404c18: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404c1c: lbu v0,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00404c20: nop

00404c24: srlv v0,a0,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x5780, 4)

00404c28: addu a0,s0,v0
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x8, 4)

00404c2c: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404c30: nop

00404c34: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404c38: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404c3c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404c40: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404c44: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404c48: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404c4c: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404c50: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404c54: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404c58: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404c5c: nop

00404c60: addu s0,v0,v1
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404c64: jal 0x00422288
	(register, 0x7c, 4) COPY (const, 0x404c6c, 4)
	 ---  CALL (ram, 0x422288, 4)

00404c68: _nop

00404c6c: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404c70: jal 0x0040f524
	(register, 0x7c, 4) COPY (const, 0x404c78, 4)
	 ---  CALL (ram, 0x40f524, 4)

00404c74: _nop

00404c78: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404c7c: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

00404c80: divu v1,v0
	(register, 0x3004, 4) INT_DIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_REM (register, 0xc, 4) , (register, 0x8, 4)

00404c84: bne v0,zero,0x00404c90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404c90, 4) , (unique, 0x1700, 1)

00404c88: _nop

00404c8c: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

00404c90: mfhi v0
	(register, 0x8, 4) COPY (register, 0x3000, 4)

00404c94: sltiu v1,v0,0x5
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00404c98: beq v1,zero,0x00404f28
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404f28, 4) , (unique, 0x1200, 1)

00404c9c: _nop

00404ca0: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ca4: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00404ca8: addiu v0,v0,0x3238
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3238, 4)

00404cac: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00404cb0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404cb4: nop

00404cb8: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

00404cbc: _nop

00404cc0: li a0,0x2f
	(register, 0x10, 4) COPY (const, 0x2f, 4)

00404cc4: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x404ccc, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00404cc8: _nop

00404ccc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404cd0: nop

00404cd4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404cd8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404cdc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ce0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ce4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ce8: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404cec: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404cf0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404cf4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404cf8: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404cfc: nop

00404d00: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404d04: addiu s0,v0,0x14
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00404d08: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404d0c: li a0,0x2f
	(register, 0x10, 4) COPY (const, 0x2f, 4)

00404d10: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x404d18, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00404d14: _nop

00404d18: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404d1c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00404d20: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404d28, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404d24: _nop

00404d28: li a0,0x2f
	(register, 0x10, 4) COPY (const, 0x2f, 4)

00404d2c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x404d34, 4)
	 ---  CALL (ram, 0x410940, 4)

00404d30: _nop

00404d34: b 0x00404f28
	 ---  BRANCH (ram, 0x404f28, 4)

00404d38: _nop

00404d3c: li a0,0x30
	(register, 0x10, 4) COPY (const, 0x30, 4)

00404d40: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x404d48, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00404d44: _nop

00404d48: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404d4c: nop

00404d50: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404d54: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404d58: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404d5c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404d60: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404d64: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404d68: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404d6c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404d70: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404d74: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404d78: nop

00404d7c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404d80: addiu s0,v0,0x14
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00404d84: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404d88: li a0,0x30
	(register, 0x10, 4) COPY (const, 0x30, 4)

00404d8c: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x404d94, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00404d90: _nop

00404d94: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404d98: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00404d9c: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404da4, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404da0: _nop

00404da4: li a0,0x30
	(register, 0x10, 4) COPY (const, 0x30, 4)

00404da8: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x404db0, 4)
	 ---  CALL (ram, 0x410940, 4)

00404dac: _nop

00404db0: b 0x00404f28
	 ---  BRANCH (ram, 0x404f28, 4)

00404db4: _nop

00404db8: li a0,0x31
	(register, 0x10, 4) COPY (const, 0x31, 4)

00404dbc: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x404dc4, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00404dc0: _nop

00404dc4: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404dc8: nop

00404dcc: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404dd0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404dd4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404dd8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ddc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404de0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404de4: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404de8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404dec: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404df0: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404df4: nop

00404df8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404dfc: addiu s0,v0,0x14
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00404e00: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404e04: li a0,0x31
	(register, 0x10, 4) COPY (const, 0x31, 4)

00404e08: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x404e10, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00404e0c: _nop

00404e10: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404e14: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00404e18: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404e20, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404e1c: _nop

00404e20: li a0,0x31
	(register, 0x10, 4) COPY (const, 0x31, 4)

00404e24: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x404e2c, 4)
	 ---  CALL (ram, 0x410940, 4)

00404e28: _nop

00404e2c: b 0x00404f28
	 ---  BRANCH (ram, 0x404f28, 4)

00404e30: _nop

00404e34: li a0,0x32
	(register, 0x10, 4) COPY (const, 0x32, 4)

00404e38: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x404e40, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00404e3c: _nop

00404e40: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404e44: nop

00404e48: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404e4c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404e50: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404e54: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404e58: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404e5c: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404e60: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404e64: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404e68: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404e6c: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404e70: nop

00404e74: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404e78: addiu s0,v0,0x14
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00404e7c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404e80: li a0,0x32
	(register, 0x10, 4) COPY (const, 0x32, 4)

00404e84: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x404e8c, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00404e88: _nop

00404e8c: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404e90: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00404e94: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404e9c, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404e98: _nop

00404e9c: li a0,0x32
	(register, 0x10, 4) COPY (const, 0x32, 4)

00404ea0: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x404ea8, 4)
	 ---  CALL (ram, 0x410940, 4)

00404ea4: _nop

00404ea8: b 0x00404f28
	 ---  BRANCH (ram, 0x404f28, 4)

00404eac: _nop

00404eb0: li a0,0x33
	(register, 0x10, 4) COPY (const, 0x33, 4)

00404eb4: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x404ebc, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00404eb8: _nop

00404ebc: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404ec0: nop

00404ec4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00404ec8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ecc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ed0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ed4: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ed8: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00404edc: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00404ee0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404ee4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404ee8: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404eec: nop

00404ef0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00404ef4: addiu s0,v0,0x14
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00404ef8: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404efc: li a0,0x33
	(register, 0x10, 4) COPY (const, 0x33, 4)

00404f00: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x404f08, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00404f04: _nop

00404f08: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00404f0c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00404f10: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x404f18, 4)
	 ---  CALL (ram, 0x410eec, 4)

00404f14: _nop

00404f18: li a0,0x33
	(register, 0x10, 4) COPY (const, 0x33, 4)

00404f1c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x404f24, 4)
	 ---  CALL (ram, 0x410940, 4)

00404f20: _nop

00404f24: nop

00404f28: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f2c: nop

00404f30: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00404f34: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404f38: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f3c: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f40: nop

00404f44: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00404f48: bne v0,zero,0x004049c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4049c8, 4) , (unique, 0x1700, 1)

00404f4c: _nop

00404f50: sw zero,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404f54: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00404f58: jal 0x00400400
	(register, 0x7c, 4) COPY (const, 0x404f60, 4)
	 ---  CALL (ram, 0x400400, 4)

00404f5c: _nop

00404f60: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404f64: addiu v0,s8,0x5104
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x5104, 4)

00404f68: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404f6c: sw zero,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404f70: b 0x00404fa0
	 ---  BRANCH (ram, 0x404fa0, 4)

00404f74: _nop

00404f78: lw v1,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f7c: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f80: nop

00404f84: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404f88: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00404f8c: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404f90: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404f94: nop

00404f98: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00404f9c: sw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404fa0: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404fa4: nop

00404fa8: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00404fac: bne v0,zero,0x00404f78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404f78, 4) , (unique, 0x1700, 1)

00404fb0: _nop

00404fb4: addiu v0,s8,0x5084
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x5084, 4)

00404fb8: sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404fbc: sw zero,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404fc0: b 0x00404ff0
	 ---  BRANCH (ram, 0x404ff0, 4)

00404fc4: _nop

00404fc8: lw v1,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404fcc: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404fd0: nop

00404fd4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00404fd8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00404fdc: sw zero,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00404fe0: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404fe4: nop

00404fe8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00404fec: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00404ff0: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00404ff4: nop

00404ff8: sltiu v0,v0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00404ffc: bne v0,zero,0x00404fc8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x404fc8, 4) , (unique, 0x1700, 1)

00405000: _nop

00405004: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405008: b 0x00405e1c
	 ---  BRANCH (ram, 0x405e1c, 4)

0040500c: _nop

00405010: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405014: nop

00405018: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040501c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405020: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00405024: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405028: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040502c: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00405030: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00405034: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405038: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040503c: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405040: nop

00405044: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00405048: sw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040504c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405050: nop

00405054: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00405058: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040505c: bne v1,v0,0x00405070
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405070, 4) , (unique, 0x1700, 1)

00405060: _nop

00405064: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405068: nop

0040506c: sb zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00405070: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405074: nop

00405078: lbu v0,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0040507c: nop

00405080: bne v0,zero,0x00405294
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405294, 4) , (unique, 0x1700, 1)

00405084: _nop

00405088: sw zero,0x2868(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2868, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040508c: sw zero,0x286c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x286c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405090: sw zero,0x2870(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2870, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405094: sw zero,0x2874(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2874, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405098: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040509c: nop

004050a0: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050a4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

004050a8: beq v1,v0,0x004050cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4050cc, 4) , (unique, 0x1200, 1)

004050ac: _nop

004050b0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050b4: nop

004050b8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050bc: nop

004050c0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004050c4: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x4050cc, 4)
	 ---  CALL (ram, 0x41f008, 4)

004050c8: _nop

004050cc: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004050d0: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

004050d4: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

004050d8: jal 0x00400350
	(register, 0x7c, 4) COPY (const, 0x4050e0, 4)
	 ---  CALL (ram, 0x400350, 4)

004050dc: _nop

004050e0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004050e4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050e8: nop

004050ec: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004050f0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050f4: nop

004050f8: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004050fc: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00405100: beq v1,v0,0x00405e08
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405e08, 4) , (unique, 0x1200, 1)

00405104: _nop

00405108: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040510c: nop

00405110: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405114: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405118: nop

0040511c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405120: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00405124: li a1,0x3
	(register, 0x14, 4) COPY (const, 0x3, 4)

00405128: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040512c: jal 0x0041f128
	(register, 0x7c, 4) COPY (const, 0x405134, 4)
	 ---  CALL (ram, 0x41f128, 4)

00405130: _nop

00405134: ori v0,v0,0x80
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x80, 4)

00405138: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040513c: li a1,0x4
	(register, 0x14, 4) COPY (const, 0x4, 4)

00405140: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405144: jal 0x0041f128
	(register, 0x7c, 4) COPY (const, 0x40514c, 4)
	 ---  CALL (ram, 0x41f128, 4)

00405148: _nop

0040514c: ori v0,zero,0xffff
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00405150: sw v0,0x58(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405154: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405158: nop

0040515c: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405160: addiu a0,s8,0x58
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)

00405164: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00405168: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040516c: or a3,a0,zero
	(register, 0x1c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00405170: li a2,0x1002
	(register, 0x18, 4) COPY (const, 0x1002, 4)

00405174: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00405178: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040517c: jal 0x004221a8
	(register, 0x7c, 4) COPY (const, 0x405184, 4)
	 ---  CALL (ram, 0x4221a8, 4)

00405180: _nop

00405184: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00405188: sh v0,0x2868(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2868, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040518c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405190: nop

00405194: lw v0,0x10(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405198: nop

0040519c: sw v0,0x286c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x286c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004051a0: li a0,0x50
	(register, 0x10, 4) COPY (const, 0x50, 4)

004051a4: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x4051ac, 4)
	 ---  CALL (ram, 0x4222a8, 4)

004051a8: _nop

004051ac: sh v0,0x286a(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x286a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

004051b0: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051b4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051b8: nop

004051bc: sw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004051c0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051c4: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

004051c8: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

004051cc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051d0: nop

004051d4: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051d8: addiu v1,s8,0x2868
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2868, 4)

004051dc: li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

004051e0: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004051e4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004051e8: jal 0x00421988
	(register, 0x7c, 4) COPY (const, 0x4051f0, 4)
	 ---  CALL (ram, 0x421988, 4)

004051ec: _nop

004051f0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051f4: nop

004051f8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004051fc: nop

00405200: bgez v0,0x0040520c
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40520c, 4) , (unique, 0x1300, 1)

00405204: _nop

00405208: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040520c: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405210: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405214: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405218: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040521c: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00405220: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405224: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405228: nop

0040522c: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405230: nop

00405234: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

00405238: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0040523c: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00405240: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405244: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405248: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0040524c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405250: sw a0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405254: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405258: nop

0040525c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405260: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405264: nop

00405268: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0040526c: beq v0,zero,0x00405e0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405e0c, 4) , (unique, 0x1200, 1)

00405270: _nop

00405274: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405278: nop

0040527c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405280: nop

00405284: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00405288: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040528c: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405290: _nop

00405294: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405298: nop

0040529c: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004052a0: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

004052a4: bne v1,v0,0x004053b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4053b8, 4) , (unique, 0x1700, 1)

004052a8: _nop

004052ac: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052b0: nop

004052b4: lw v0,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052b8: nop

004052bc: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004052c0: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052c4: nop

004052c8: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

004052cc: sltiu v0,v0,0x1f
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

004052d0: bne v0,zero,0x00405314
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405314, 4) , (unique, 0x1700, 1)

004052d4: _nop

004052d8: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052dc: nop

004052e0: sb zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

004052e4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052e8: nop

004052ec: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004052f0: nop

004052f4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004052f8: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x405300, 4)
	 ---  CALL (ram, 0x41f008, 4)

004052fc: _nop

00405300: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405304: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00405308: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040530c: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405310: _nop

00405314: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405318: nop

0040531c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405320: nop

00405324: bgez v0,0x00405330
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405330, 4) , (unique, 0x1300, 1)

00405328: _nop

0040532c: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405330: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405334: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405338: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040533c: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405340: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00405344: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405348: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040534c: nop

00405350: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405354: nop

00405358: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

0040535c: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00405360: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00405364: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405368: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0040536c: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405370: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405374: sw a0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405378: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040537c: nop

00405380: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405384: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405388: nop

0040538c: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00405390: beq v0,zero,0x00405e0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405e0c, 4) , (unique, 0x1200, 1)

00405394: _nop

00405398: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040539c: nop

004053a0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004053a4: nop

004053a8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004053ac: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004053b0: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

004053b4: _nop

004053b8: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004053bc: nop

004053c0: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004053c4: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

004053c8: bne v1,v0,0x004059a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4059a0, 4) , (unique, 0x1700, 1)

004053cc: _nop

004053d0: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004053d4: li a1,0x2800
	(register, 0x14, 4) COPY (const, 0x2800, 4)

004053d8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004053dc: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x4053e4, 4)
	 ---  CALL (ram, 0x410fe8, 4)

004053e0: _nop

004053e4: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004053e8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004053ec: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4053f4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004053f0: _nop

004053f4: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004053f8: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004053fc: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405400: addiu a1,v0,0x3224
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x3224, 4)

00405404: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405408: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405410, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040540c: _nop

00405410: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405414: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405418: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405420, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040541c: _nop

00405420: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405424: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405428: li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0040542c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405430: jal 0x0040f738
	(register, 0x7c, 4) COPY (const, 0x405438, 4)
	 ---  CALL (ram, 0x40f738, 4)

00405434: _nop

00405438: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040543c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405440: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405448, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405444: _nop

00405448: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040544c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405450: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405454: addiu a1,v0,0x31ac
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31ac, 4)

00405458: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040545c: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405464, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405460: _nop

00405464: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405468: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040546c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405474, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405470: _nop

00405474: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405478: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040547c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405480: nop

00405484: addiu v0,v0,0x14
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)

00405488: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040548c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405490: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405498, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405494: _nop

00405498: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040549c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004054a0: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4054a8, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004054a4: _nop

004054a8: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004054ac: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004054b0: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

004054b4: addiu a1,v0,0x31c4
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31c4, 4)

004054b8: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004054bc: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4054c4, 4)
	 ---  CALL (ram, 0x410eec, 4)

004054c0: _nop

004054c4: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004054c8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004054cc: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4054d4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004054d0: _nop

004054d4: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004054d8: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004054dc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004054e0: nop

004054e4: addiu v0,v0,0x214
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x214, 4)

004054e8: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004054ec: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004054f0: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4054f8, 4)
	 ---  CALL (ram, 0x410eec, 4)

004054f4: _nop

004054f8: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004054fc: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405500: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405508, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405504: _nop

00405508: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040550c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405510: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405514: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405518: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040551c: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405524, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405520: _nop

00405524: li a0,0x20
	(register, 0x10, 4) COPY (const, 0x20, 4)

00405528: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x405530, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040552c: _nop

00405530: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405534: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405538: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405540, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040553c: _nop

00405540: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405544: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405548: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040554c: li a0,0x20
	(register, 0x10, 4) COPY (const, 0x20, 4)

00405550: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x405558, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00405554: _nop

00405558: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040555c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405560: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405568, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405564: _nop

00405568: li a0,0x20
	(register, 0x10, 4) COPY (const, 0x20, 4)

0040556c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x405574, 4)
	 ---  CALL (ram, 0x410940, 4)

00405570: _nop

00405574: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405578: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040557c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405584, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405580: _nop

00405584: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405588: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040558c: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405590: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405594: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405598: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4055a0, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040559c: _nop

004055a0: li a0,0x21
	(register, 0x10, 4) COPY (const, 0x21, 4)

004055a4: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x4055ac, 4)
	 ---  CALL (ram, 0x4108dc, 4)

004055a8: _nop

004055ac: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004055b0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004055b4: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4055bc, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004055b8: _nop

004055bc: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004055c0: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004055c4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004055c8: li a0,0x21
	(register, 0x10, 4) COPY (const, 0x21, 4)

004055cc: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x4055d4, 4)
	 ---  CALL (ram, 0x4109a4, 4)

004055d0: _nop

004055d4: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004055d8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004055dc: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4055e4, 4)
	 ---  CALL (ram, 0x410eec, 4)

004055e0: _nop

004055e4: li a0,0x21
	(register, 0x10, 4) COPY (const, 0x21, 4)

004055e8: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x4055f0, 4)
	 ---  CALL (ram, 0x410940, 4)

004055ec: _nop

004055f0: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004055f4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004055f8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405600, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004055fc: _nop

00405600: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405604: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405608: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040560c: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405610: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405614: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40561c, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405618: _nop

0040561c: li a0,0x22
	(register, 0x10, 4) COPY (const, 0x22, 4)

00405620: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x405628, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00405624: _nop

00405628: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040562c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405630: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405638, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405634: _nop

00405638: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

0040563c: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405640: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00405644: li a0,0x22
	(register, 0x10, 4) COPY (const, 0x22, 4)

00405648: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x405650, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040564c: _nop

00405650: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405654: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405658: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405660, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040565c: _nop

00405660: li a0,0x22
	(register, 0x10, 4) COPY (const, 0x22, 4)

00405664: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40566c, 4)
	 ---  CALL (ram, 0x410940, 4)

00405668: _nop

0040566c: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405670: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405674: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40567c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405678: _nop

0040567c: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405680: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405684: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405688: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

0040568c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405690: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405698, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405694: _nop

00405698: li a0,0x23
	(register, 0x10, 4) COPY (const, 0x23, 4)

0040569c: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x4056a4, 4)
	 ---  CALL (ram, 0x4108dc, 4)

004056a0: _nop

004056a4: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004056a8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004056ac: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4056b4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004056b0: _nop

004056b4: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004056b8: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004056bc: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004056c0: li a0,0x23
	(register, 0x10, 4) COPY (const, 0x23, 4)

004056c4: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x4056cc, 4)
	 ---  CALL (ram, 0x4109a4, 4)

004056c8: _nop

004056cc: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004056d0: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004056d4: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4056dc, 4)
	 ---  CALL (ram, 0x410eec, 4)

004056d8: _nop

004056dc: li a0,0x23
	(register, 0x10, 4) COPY (const, 0x23, 4)

004056e0: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x4056e8, 4)
	 ---  CALL (ram, 0x410940, 4)

004056e4: _nop

004056e8: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004056ec: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004056f0: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4056f8, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004056f4: _nop

004056f8: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004056fc: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405700: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405704: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405708: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040570c: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405714, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405710: _nop

00405714: li a0,0x29
	(register, 0x10, 4) COPY (const, 0x29, 4)

00405718: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x405720, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040571c: _nop

00405720: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405724: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405728: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405730, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040572c: _nop

00405730: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405734: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405738: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040573c: li a0,0x29
	(register, 0x10, 4) COPY (const, 0x29, 4)

00405740: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x405748, 4)
	 ---  CALL (ram, 0x4109a4, 4)

00405744: _nop

00405748: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040574c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405750: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405758, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405754: _nop

00405758: li a0,0x29
	(register, 0x10, 4) COPY (const, 0x29, 4)

0040575c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x405764, 4)
	 ---  CALL (ram, 0x410940, 4)

00405760: _nop

00405764: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405768: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040576c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405774, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405770: _nop

00405774: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405778: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040577c: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405780: addiu a1,v0,0x31a8
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31a8, 4)

00405784: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405788: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405790, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040578c: _nop

00405790: li a0,0x2a
	(register, 0x10, 4) COPY (const, 0x2a, 4)

00405794: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40579c, 4)
	 ---  CALL (ram, 0x4108dc, 4)

00405798: _nop

0040579c: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004057a0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004057a4: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4057ac, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004057a8: _nop

004057ac: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004057b0: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004057b4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004057b8: li a0,0x2a
	(register, 0x10, 4) COPY (const, 0x2a, 4)

004057bc: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x4057c4, 4)
	 ---  CALL (ram, 0x4109a4, 4)

004057c0: _nop

004057c4: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004057c8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004057cc: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x4057d4, 4)
	 ---  CALL (ram, 0x410eec, 4)

004057d0: _nop

004057d4: li a0,0x2a
	(register, 0x10, 4) COPY (const, 0x2a, 4)

004057d8: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x4057e0, 4)
	 ---  CALL (ram, 0x410940, 4)

004057dc: _nop

004057e0: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004057e4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004057e8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x4057f0, 4)
	 ---  CALL (ram, 0x410cd0, 4)

004057ec: _nop

004057f0: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004057f4: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004057f8: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

004057fc: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405800: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405804: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40580c, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405808: _nop

0040580c: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405810: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405814: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40581c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405818: _nop

0040581c: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405820: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405824: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405828: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

0040582c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405830: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x405838, 4)
	 ---  CALL (ram, 0x410eec, 4)

00405834: _nop

00405838: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040583c: lui v1,0x500
	(register, 0xc, 4) INT_LEFT (const, 0x500, 4) , (const, 0x10, 4)

00405840: sw v1,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00405844: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405848: nop

0040584c: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405850: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405854: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405858: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405860, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040585c: _nop

00405860: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405864: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00405868: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040586c: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405870: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405874: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x40587c, 4)
	 ---  CALL (ram, 0x421ec8, 4)

00405878: _nop

0040587c: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405880: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405884: nop

00405888: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040588c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405890: li v1,0x8
	(register, 0xc, 4) COPY (const, 0x8, 4)

00405894: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00405898: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040589c: nop

004058a0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004058a4: nop

004058a8: bgez v0,0x004058b4
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4058b4, 4) , (unique, 0x1300, 1)

004058ac: _nop

004058b0: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

004058b4: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

004058b8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004058bc: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

004058c0: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

004058c4: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

004058c8: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004058cc: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004058d0: nop

004058d4: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004058d8: nop

004058dc: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

004058e0: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

004058e4: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

004058e8: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

004058ec: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

004058f0: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

004058f4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

004058f8: sw a0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

004058fc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405900: nop

00405904: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405908: nop

0040590c: bgez v0,0x00405918
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405918, 4) , (unique, 0x1300, 1)

00405910: _nop

00405914: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405918: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

0040591c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405920: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405924: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405928: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0040592c: lw v0,0x50e4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405930: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405934: nop

00405938: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040593c: nop

00405940: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

00405944: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00405948: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

0040594c: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405950: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405954: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405958: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040595c: sw a0,0x50e4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405960: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405964: nop

00405968: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040596c: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405970: nop

00405974: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00405978: beq v0,zero,0x00405e0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405e0c, 4) , (unique, 0x1200, 1)

0040597c: _nop

00405980: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405984: nop

00405988: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040598c: nop

00405990: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00405994: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405998: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

0040599c: _nop

004059a0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004059a4: nop

004059a8: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004059ac: li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

004059b0: bne v1,v0,0x00405d10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405d10, 4) , (unique, 0x1700, 1)

004059b4: _nop

004059b8: sw zero,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004059bc: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004059c0: li v0,0x401
	(register, 0x8, 4) COPY (const, 0x401, 4)

004059c4: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004059c8: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004059cc: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004059d0: jal 0x0041cb28
	(register, 0x7c, 4) COPY (const, 0x4059d8, 4)
	 ---  CALL (ram, 0x41cb28, 4)

004059d4: _nop

004059d8: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004059dc: li a1,0x401
	(register, 0x14, 4) COPY (const, 0x401, 4)

004059e0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004059e4: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x4059ec, 4)
	 ---  CALL (ram, 0x410fe8, 4)

004059e8: _nop

004059ec: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

004059f0: li a1,0x400
	(register, 0x14, 4) COPY (const, 0x400, 4)

004059f4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004059f8: jal 0x0040f738
	(register, 0x7c, 4) COPY (const, 0x405a00, 4)
	 ---  CALL (ram, 0x40f738, 4)

004059fc: _nop

00405a00: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a04: nop

00405a08: lw v0,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a0c: nop

00405a10: bgtz v0,0x00405a48
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405a48, 4) , (unique, 0x1400, 1)

00405a14: _nop

00405a18: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a1c: nop

00405a20: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a24: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00405a28: li a2,0x3
	(register, 0x18, 4) COPY (const, 0x3, 4)

00405a2c: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405a30: addiu a1,v0,0x3234
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x3234, 4)

00405a34: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405a38: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x405a40, 4)
	 ---  CALL (ram, 0x421ec8, 4)

00405a3c: _nop

00405a40: b 0x00405c5c
	 ---  BRANCH (ram, 0x405c5c, 4)

00405a44: _nop

00405a48: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a4c: nop

00405a50: lw v0,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a54: nop

00405a58: slti v0,v0,0x400
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x400, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00405a5c: beq v0,zero,0x00405a7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405a7c, 4) , (unique, 0x1200, 1)

00405a60: _nop

00405a64: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a68: nop

00405a6c: lw v0,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a70: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405a74: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405a78: sb zero,0x2864(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2864, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00405a7c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a80: nop

00405a84: lw v0,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a88: nop

00405a8c: slti v0,v0,0x400
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x400, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00405a90: bne v0,zero,0x00405b44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405b44, 4) , (unique, 0x1700, 1)

00405a94: _nop

00405a98: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405a9c: nop

00405aa0: lw v0,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405aa4: nop

00405aa8: andi v0,v0,0x3ff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4)

00405aac: bne v0,zero,0x00405b44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405b44, 4) , (unique, 0x1700, 1)

00405ab0: _nop

00405ab4: sw zero,0x2878(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2878, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405ab8: addiu v0,s8,0x2878
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2878, 4)

00405abc: li a1,0x4
	(register, 0x14, 4) COPY (const, 0x4, 4)

00405ac0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405ac4: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x405acc, 4)
	 ---  CALL (ram, 0x410fe8, 4)

00405ac8: _nop

00405acc: addiu v0,s8,0x2878
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2878, 4)

00405ad0: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405ad4: li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

00405ad8: li a0,0x400
	(register, 0x10, 4) COPY (const, 0x400, 4)

00405adc: jal 0x004113a0
	(register, 0x7c, 4) COPY (const, 0x405ae4, 4)
	 ---  CALL (ram, 0x4113a0, 4)

00405ae0: _nop

00405ae4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ae8: nop

00405aec: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405af0: addiu v0,s8,0x2878
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2878, 4)

00405af4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405af8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405b00, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405afc: _nop

00405b00: addiu v1,s8,0x2878
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2878, 4)

00405b04: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00405b08: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405b0c: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405b10: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405b14: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x405b1c, 4)
	 ---  CALL (ram, 0x421ec8, 4)

00405b18: _nop

00405b1c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b20: nop

00405b24: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b28: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00405b2c: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

00405b30: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

00405b34: addiu a1,v0,0x31d0
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x31d0, 4)

00405b38: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405b3c: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x405b44, 4)
	 ---  CALL (ram, 0x421ec8, 4)

00405b40: _nop

00405b44: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b48: nop

00405b4c: lw s0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b50: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405b54: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405b58: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405b60, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405b5c: _nop

00405b60: addiu v1,s8,0x2884
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405b64: li a3,0x4000
	(register, 0x1c, 4) COPY (const, 0x4000, 4)

00405b68: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405b6c: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405b70: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00405b74: jal 0x00421ec8
	(register, 0x7c, 4) COPY (const, 0x405b7c, 4)
	 ---  CALL (ram, 0x421ec8, 4)

00405b78: _nop

00405b7c: sw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405b80: lw v1,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b84: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00405b88: bne v1,v0,0x00405ba4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405ba4, 4) , (unique, 0x1700, 1)

00405b8c: _nop

00405b90: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405b94: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00405b98: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00405b9c: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405ba0: _nop

00405ba4: addiu v0,s8,0x2884
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2884, 4)

00405ba8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405bac: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x405bb4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

00405bb0: _nop

00405bb4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405bb8: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405bbc: nop

00405bc0: beq v0,v1,0x00405bd4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x405bd4, 4) , (unique, 0x1200, 1)

00405bc4: _nop

00405bc8: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405bcc: li v1,0x9
	(register, 0xc, 4) COPY (const, 0x9, 4)

00405bd0: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00405bd4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405bd8: nop

00405bdc: lw v1,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405be0: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405be4: nop

00405be8: subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

00405bec: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405bf0: nop

00405bf4: sw v1,0x298(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x298, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00405bf8: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405bfc: nop

00405c00: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c04: nop

00405c08: bgez v0,0x00405c14
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405c14, 4) , (unique, 0x1300, 1)

00405c0c: _nop

00405c10: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405c14: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405c18: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405c1c: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405c20: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405c24: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00405c28: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c2c: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c30: nop

00405c34: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c38: nop

00405c3c: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

00405c40: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00405c44: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00405c48: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405c4c: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405c50: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405c54: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405c58: sw a0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405c5c: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c60: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c64: nop

00405c68: sw v1,0xc(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00405c6c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c70: nop

00405c74: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405c78: nop

00405c7c: bgez v0,0x00405c88
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405c88, 4) , (unique, 0x1300, 1)

00405c80: _nop

00405c84: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405c88: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405c8c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405c90: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405c94: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405c98: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00405c9c: lw v0,0x50e4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ca0: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ca4: nop

00405ca8: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405cac: nop

00405cb0: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

00405cb4: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00405cb8: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00405cbc: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405cc0: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405cc4: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405cc8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405ccc: sw a0,0x50e4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405cd0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405cd4: nop

00405cd8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405cdc: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ce0: nop

00405ce4: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00405ce8: beq v0,zero,0x00405e0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405e0c, 4) , (unique, 0x1200, 1)

00405cec: _nop

00405cf0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405cf4: nop

00405cf8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405cfc: nop

00405d00: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00405d04: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405d08: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405d0c: _nop

00405d10: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d14: nop

00405d18: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00405d1c: li v0,0x9
	(register, 0x8, 4) COPY (const, 0x9, 4)

00405d20: bne v1,v0,0x00405dcc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405dcc, 4) , (unique, 0x1700, 1)

00405d24: _nop

00405d28: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d2c: nop

00405d30: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d34: nop

00405d38: bgez v0,0x00405d44
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405d44, 4) , (unique, 0x1300, 1)

00405d3c: _nop

00405d40: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405d44: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405d48: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405d4c: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405d50: addiu a0,s8,0x20
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405d54: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00405d58: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d5c: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d60: nop

00405d64: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d68: nop

00405d6c: andi a0,a0,0x1f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)

00405d70: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

00405d74: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00405d78: or a0,v0,a0
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

00405d7c: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

00405d80: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405d84: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405d88: sw a0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00405d8c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d90: nop

00405d94: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d98: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405d9c: nop

00405da0: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00405da4: beq v0,zero,0x00405e0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405e0c, 4) , (unique, 0x1200, 1)

00405da8: _nop

00405dac: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405db0: nop

00405db4: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405db8: nop

00405dbc: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00405dc0: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405dc4: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405dc8: _nop

00405dcc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405dd0: nop

00405dd4: sb zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00405dd8: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ddc: nop

00405de0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405de4: nop

00405de8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405dec: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x405df4, 4)
	 ---  CALL (ram, 0x41f008, 4)

00405df0: _nop

00405df4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405df8: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00405dfc: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00405e00: b 0x00405e0c
	 ---  BRANCH (ram, 0x405e0c, 4)

00405e04: _nop

00405e08: nop

00405e0c: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e10: nop

00405e14: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00405e18: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405e1c: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e20: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e24: nop

00405e28: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

00405e2c: bne v0,zero,0x00405010
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405010, 4) , (unique, 0x1700, 1)

00405e30: _nop

00405e34: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e38: nop

00405e3c: beq v0,zero,0x004060e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4060e0, 4) , (unique, 0x1200, 1)

00405e40: _nop

00405e44: sw zero,0x2864(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2864, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405e48: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00405e4c: sw v0,0x2860(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2860, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405e50: addiu a0,s8,0x5084
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x5084, 4)

00405e54: addiu v1,s8,0x5104
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x5104, 4)

00405e58: addiu v0,s8,0x2860
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2860, 4)

00405e5c: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405e60: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00405e64: or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00405e68: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405e6c: lw a0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e70: jal 0x00400360
	(register, 0x7c, 4) COPY (const, 0x405e78, 4)
	 ---  CALL (ram, 0x400360, 4)

00405e74: _nop

00405e78: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405e7c: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00405e80: jal 0x00400400
	(register, 0x7c, 4) COPY (const, 0x405e88, 4)
	 ---  CALL (ram, 0x400400, 4)

00405e84: _nop

00405e88: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405e8c: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405e90: nop

00405e94: blez v0,0x004060ec
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4060ec, 4) , (unique, 0x1500, 1)

00405e98: _nop

00405e9c: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405ea0: b 0x004060c0
	 ---  BRANCH (ram, 0x4060c0, 4)

00405ea4: _nop

00405ea8: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405eac: nop

00405eb0: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00405eb4: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405eb8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00405ebc: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405ec0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00405ec4: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

00405ec8: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

00405ecc: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405ed0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405ed4: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ed8: nop

00405edc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

00405ee0: sw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405ee4: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ee8: nop

00405eec: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405ef0: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00405ef4: beq v1,v0,0x004060ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4060ac, 4) , (unique, 0x1200, 1)

00405ef8: _nop

00405efc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f00: nop

00405f04: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f08: nop

00405f0c: bgez v0,0x00405f18
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x405f18, 4) , (unique, 0x1300, 1)

00405f10: _nop

00405f14: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

00405f18: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00405f1c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00405f20: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00405f24: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

00405f28: lw v0,0x5064(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5064, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f2c: lw v1,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f30: nop

00405f34: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f38: nop

00405f3c: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

00405f40: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00405f44: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

00405f48: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00405f4c: beq v0,zero,0x00406040
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x406040, 4) , (unique, 0x1200, 1)

00405f50: _nop

00405f54: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f58: nop

00405f5c: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00405f60: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00405f64: bne v1,v0,0x0040601c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40601c, 4) , (unique, 0x1700, 1)

00405f68: _nop

00405f6c: sw zero,0x287c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x287c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00405f70: li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

00405f74: sw v0,0x2880(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2880, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405f78: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f7c: nop

00405f80: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405f84: addiu a0,s8,0x287c
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x287c, 4)

00405f88: addiu v1,s8,0x2880
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2880, 4)

00405f8c: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00405f90: or a3,a0,zero
	(register, 0x1c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00405f94: li a2,0x1007
	(register, 0x18, 4) COPY (const, 0x1007, 4)

00405f98: ori a1,zero,0xffff
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0xffff, 4)

00405f9c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405fa0: jal 0x00421b08
	(register, 0x7c, 4) COPY (const, 0x405fa8, 4)
	 ---  CALL (ram, 0x421b08, 4)

00405fa4: _nop

00405fa8: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00405fac: lw v0,0x287c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x287c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405fb0: nop

00405fb4: bne v0,zero,0x00405fe0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405fe0, 4) , (unique, 0x1700, 1)

00405fb8: _nop

00405fbc: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405fc0: nop

00405fc4: bne v0,zero,0x00405fe0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405fe0, 4) , (unique, 0x1700, 1)

00405fc8: _nop

00405fcc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405fd0: li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

00405fd4: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00405fd8: b 0x00406040
	 ---  BRANCH (ram, 0x406040, 4)

00405fdc: _nop

00405fe0: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405fe4: nop

00405fe8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00405fec: nop

00405ff0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00405ff4: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x405ffc, 4)
	 ---  CALL (ram, 0x41f008, 4)

00405ff8: _nop

00405ffc: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406000: li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00406004: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00406008: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040600c: nop

00406010: sb zero,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

00406014: b 0x004060b0
	 ---  BRANCH (ram, 0x4060b0, 4)

00406018: _nop

0040601c: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406020: nop

00406024: lbu v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00406028: li v0,0x9
	(register, 0x8, 4) COPY (const, 0x9, 4)

0040602c: bne v1,v0,0x00406040
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x406040, 4) , (unique, 0x1700, 1)

00406030: _nop

00406034: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406038: li v1,0x8
	(register, 0xc, 4) COPY (const, 0x8, 4)

0040603c: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

00406040: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406044: nop

00406048: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040604c: nop

00406050: bgez v0,0x0040605c
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40605c, 4) , (unique, 0x1300, 1)

00406054: _nop

00406058: addiu v0,v0,0x1f
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1f, 4)

0040605c: sra v0,v0,0x5
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4)

00406060: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00406064: addiu v1,s8,0x20
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

00406068: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040606c: lw v0,0x50e4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x50e4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406070: lw v1,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406074: nop

00406078: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040607c: nop

00406080: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

00406084: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00406088: sllv v1,a0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (unique, 0x4f80, 4)

0040608c: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00406090: beq v0,zero,0x004060b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4060b0, 4) , (unique, 0x1200, 1)

00406094: _nop

00406098: lw v0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040609c: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

004060a0: sb v1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

004060a4: b 0x004060b0
	 ---  BRANCH (ram, 0x4060b0, 4)

004060a8: _nop

004060ac: nop

004060b0: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004060b4: nop

004060b8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004060bc: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004060c0: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004060c4: lw v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004060c8: nop

004060cc: slt v0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

004060d0: bne v0,zero,0x00405ea8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x405ea8, 4) , (unique, 0x1700, 1)

004060d4: _nop

004060d8: b 0x00404f50
	 ---  BRANCH (ram, 0x404f50, 4)

004060dc: _nop

004060e0: nop

004060e4: b 0x00404f50
	 ---  BRANCH (ram, 0x404f50, 4)

004060e8: _nop

004060ec: nop

004060f0: b 0x00404f50
	 ---  BRANCH (ram, 0x404f50, 4)

004060f4: _nop

004060f8: nop

004060fc: b 0x00406108
	 ---  BRANCH (ram, 0x406108, 4)

00406100: _nop

00406104: nop

00406108: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040610c: lw ra,0x5194(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406110: lw s8,0x5190(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5190, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406114: lw s0,0x518c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x518c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00406118: addiu sp,sp,0x5198
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x5198, 4)

0040611c: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00406120: _nop

