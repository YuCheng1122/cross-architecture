Function: __mpn_lshift
Address: 0046d1a0
P-code:

0046d1a0: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046d1a4: addiu gp,gp,-0x2340
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffdcc0, 4)

0046d1a8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046d1ac: sll v0,a2,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0046d1b0: addu a1,a1,v0
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0046d1b4: lw t2,-0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d1b8: subu t5,zero,a3
	(register, 0x34, 4) INT_SUB (const, 0x0, 4) , (register, 0x1c, 4)

0046d1bc: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0046d1c0: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046d1c4: andi t1,a2,0x3
	(register, 0x24, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

0046d1c8: beq t1,zero,0x0046d1fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5780, 4)
	 ---  CBRANCH (ram, 0x46d1fc, 4) , (unique, 0x1200, 1)

0046d1cc: _srlv v0,t2,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5780, 4)

0046d1d0: subu a2,a2,t1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x24, 4)

0046d1d4: lw v1,-0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d1d8: addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0046d1dc: addiu a1,a1,-0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0046d1e0: addiu t1,t1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffff, 4)

0046d1e4: sllv t3,t2,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0046d1e8: srlv t4,v1,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x30, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0046d1ec: or t2,v1,zero
	(register, 0x28, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046d1f0: or t0,t3,t4
	(register, 0x20, 4) INT_OR (register, 0x2c, 4) , (register, 0x30, 4)

0046d1f4: bne t1,zero,0x0046d1d4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46d1d4, 4) , (unique, 0x1700, 1)

0046d1f8: _sw t0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046d1fc: beq a2,zero,0x0046d264
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46d264, 4) , (unique, 0x1200, 1)

0046d200: _nop

0046d204: lw v1,-0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d208: addiu a0,a0,-0x10
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffff0, 4)

0046d20c: addiu a2,a2,-0x4
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffc, 4)

0046d210: sllv t3,t2,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0046d214: srlv t4,v1,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x30, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0046d218: lw t2,-0xc(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d21c: sllv t6,v1,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x38, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0046d220: or t0,t3,t4
	(register, 0x20, 4) INT_OR (register, 0x2c, 4) , (register, 0x30, 4)

0046d224: sw t0,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046d228: srlv t1,t2,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x24, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5780, 4)

0046d22c: lw v1,-0x10(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d230: sllv t3,t2,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x2c, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0046d234: or t0,t6,t1
	(register, 0x20, 4) INT_OR (register, 0x38, 4) , (register, 0x24, 4)

0046d238: sw t0,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046d23c: srlv t4,v1,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x30, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0046d240: lw t2,-0x14(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046d244: sllv t6,v1,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x38, 4) INT_LEFT (register, 0xc, 4) , (unique, 0x4f80, 4)

0046d248: or t0,t3,t4
	(register, 0x20, 4) INT_OR (register, 0x2c, 4) , (register, 0x30, 4)

0046d24c: sw t0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046d250: srlv t1,t2,t5
	(unique, 0x5780, 4) INT_AND (register, 0x34, 4) , (const, 0x1f, 4)
	(register, 0x24, 4) INT_RIGHT (register, 0x28, 4) , (unique, 0x5780, 4)

0046d254: addiu a1,a1,-0x10
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffff0, 4)

0046d258: or t0,t6,t1
	(register, 0x20, 4) INT_OR (register, 0x38, 4) , (register, 0x24, 4)

0046d25c: bgtz a2,0x0046d204
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x18, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46d204, 4) , (unique, 0x1400, 1)

0046d260: _sw t0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0046d264: sllv t0,t2,a3
	(unique, 0x4f80, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x20, 4) INT_LEFT (register, 0x28, 4) , (unique, 0x4f80, 4)

0046d268: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)
	 ---  RETURN (register, 0x80, 4)

0046d26c: _sw t0,-0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

