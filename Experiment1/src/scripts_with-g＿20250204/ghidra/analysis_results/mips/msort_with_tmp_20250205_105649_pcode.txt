Function: msort_with_tmp
Address: 0045a774
P-code:

0045a774: lui gp,0x6
	(register, 0x70, 4) INT_LEFT (const, 0x6, 4) , (const, 0x10, 4)

0045a778: addiu gp,gp,0x6ec
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x6ec, 4)

0045a77c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0045a780: addiu sp,sp,-0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffb8, 4)

0045a784: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a788: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045a78c: srl s2,a2,0x1
	(register, 0x48, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x1, 4)

0045a790: mult s2,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045a794: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0045a798: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045a79c: sw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0045a7a0: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045a7a4: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0045a7a8: sw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0045a7ac: sw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0045a7b0: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0045a7b4: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045a7b8: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0045a7bc: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0045a7c0: mflo a3
	(register, 0x1c, 4) COPY (register, 0x3004, 4)

0045a7c4: or s3,a0,zero
	(register, 0x4c, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045a7c8: sw a2,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045a7cc: sw a1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045a7d0: subu s1,a2,s2
	(register, 0x44, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)

0045a7d4: beq s2,v0,0x0045a7f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x14, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x45a7f4, 4) , (unique, 0x1200, 1)

0045a7d8: _addu s7,a1,a3
	(register, 0x5c, 4) INT_ADD (register, 0x14, 4) , (register, 0x1c, 4)

0045a7dc: lw t9,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a7e0: nop

0045a7e4: addiu t9,t9,-0x588c
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffffa774, 4)

0045a7e8: bal 0x0045a774
	(register, 0x7c, 4) COPY (const, 0x45a7f0, 4)
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45a774, 4)

0045a7ec: _or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045a7f0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a7f4: sltiu v0,s1,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x44, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045a7f8: bne v0,zero,0x0045a818
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a818, 4) , (unique, 0x1700, 1)

0045a7fc: _or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045a800: lw t9,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a804: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045a808: addiu t9,t9,-0x588c
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffffa774, 4)

0045a80c: bal 0x0045a774
	(register, 0x7c, 4) COPY (const, 0x45a814, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45a774, 4)

0045a810: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045a814: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a818: lw v0,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a81c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0045a820: lw s8,0x10(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a824: lw s4,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a828: lw s5,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a82c: lw s6,0xc(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a830: beq v0,a0,0x0045a9f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45a9f8, 4) , (unique, 0x1200, 1)

0045a834: _li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0045a838: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a83c: beq v0,a0,0x0045a88c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45a88c, 4) , (unique, 0x1200, 1)

0045a840: _nop

0045a844: beq v0,zero,0x0045a940
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a940, 4) , (unique, 0x1200, 1)

0045a848: _nop

0045a84c: bne s1,zero,0x0045a9b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a9b0, 4) , (unique, 0x1700, 1)

0045a850: _or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045a854: mult s4,s2
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045a858: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a85c: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045a860: mflo a2
	(register, 0x18, 4) COPY (register, 0x3004, 4)

0045a864: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a86c, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a868: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0045a86c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a870: b 0x0045a8dc
	 ---  BRANCH (ram, 0x45a8dc, 4)

0045a874: _nop

0045a878: lw v0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a87c: addiu s1,s1,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

0045a880: sw v0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045a884: addiu s7,s7,0x4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x4, 4)

0045a888: addiu s8,s8,0x4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)

0045a88c: beq s1,zero,0x0045a858
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a858, 4) , (unique, 0x1200, 1)

0045a890: _mult s4,s2
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045a894: lw a1,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a898: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a89c: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045a8a0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a8a8, 4)
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a8a4: _or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045a8a8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8ac: bgtz v0,0x0045a878
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45a878, 4) , (unique, 0x1400, 1)

0045a8b0: _nop

0045a8b4: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8b8: addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045a8bc: sw v0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045a8c0: addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0045a8c4: bne s2,zero,0x0045a894
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45a894, 4) , (unique, 0x1700, 1)

0045a8c8: _addiu s8,s8,0x4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)

0045a8cc: lw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8d0: nop

0045a8d4: subu v0,v0,s1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

0045a8d8: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045a8dc: lw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8e0: lw a1,0x10(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8e4: mult s4,v0
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x8, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045a8e8: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8ec: lw ra,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8f0: lw s8,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8f4: lw s7,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8f8: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a8fc: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a900: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a904: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a908: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a90c: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a910: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a914: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a918: mflo a2
	(register, 0x18, 4) COPY (register, 0x3004, 4)

0045a91c: jr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0045a920: _addiu sp,sp,0x48
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)

0045a924: lw a1,0x4(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a928: lw a0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a92c: addiu s1,s1,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

0045a930: sw a1,0x4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045a934: sw a0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045a938: addiu s7,s7,0x8
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)

0045a93c: addiu s8,s8,0x8
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)

0045a940: beq s1,zero,0x0045a858
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a858, 4) , (unique, 0x1200, 1)

0045a944: _mult s4,s2
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045a948: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045a94c: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045a950: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045a954: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a95c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a958: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045a95c: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a960: bgtz v0,0x0045a924
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45a924, 4) , (unique, 0x1400, 1)

0045a964: _nop

0045a968: lw a1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a96c: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a970: addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045a974: sw a1,0x4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045a978: sw a0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045a97c: addiu s0,s0,0x8
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

0045a980: bne s2,zero,0x0045a948
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x45a948, 4) , (unique, 0x1700, 1)

0045a984: _addiu s8,s8,0x8
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x8, 4)

0045a988: b 0x0045a8cc
	 ---  BRANCH (ram, 0x45a8cc, 4)

0045a98c: _nop

0045a990: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045a994: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a99c, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a998: _addiu s1,s1,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

0045a99c: addu s8,s8,s4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (register, 0x50, 4)

0045a9a0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a9a4: beq s1,zero,0x0045a854
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x45a854, 4) , (unique, 0x1200, 1)

0045a9a8: _addu s7,s7,s4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (register, 0x50, 4)

0045a9ac: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045a9b0: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045a9b4: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045a9b8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a9c0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a9bc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045a9c0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a9c4: or a2,s4,zero
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0045a9c8: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a9cc: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045a9d0: bgtz v0,0x0045a990
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a990, 4) , (unique, 0x1400, 1)

0045a9d4: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0045a9d8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45a9e0, 4)
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	 ---  CALLIND (register, 0x80, 4)

0045a9dc: _addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045a9e0: addu s8,s8,s4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (register, 0x50, 4)

0045a9e4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a9e8: bne s2,zero,0x0045a9ac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x45a9ac, 4) , (unique, 0x1700, 1)

0045a9ec: _addu s0,s0,s4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x50, 4)

0045a9f0: b 0x0045a8cc
	 ---  BRANCH (ram, 0x45a8cc, 4)

0045a9f4: _nop

0045a9f8: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045a9fc: b 0x0045aa18
	 ---  BRANCH (ram, 0x45aa18, 4)

0045aa00: _nop

0045aa04: lw v0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045aa08: addiu s1,s1,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

0045aa0c: sw v0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045aa10: addiu s7,s7,0x4
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x4, 4)

0045aa14: addiu s8,s8,0x4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)

0045aa18: beq s1,zero,0x0045a858
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45a858, 4) , (unique, 0x1200, 1)

0045aa1c: _mult s4,s2
	(unique, 0xda80, 8) INT_SEXT (register, 0x50, 4)
	(unique, 0xdb80, 8) INT_SEXT (register, 0x48, 4)
	(unique, 0xdc80, 8) INT_MULT (unique, 0xda80, 8) , (unique, 0xdb80, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)
	(unique, 0xdc80, 8) INT_RIGHT (unique, 0xdc80, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xdc80, 8) , (const, 0x0, 4)

0045aa20: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045aa24: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045aa28: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045aa2c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45aa34, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045aa30: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045aa34: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045aa38: bgtz v0,0x0045aa04
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45aa04, 4) , (unique, 0x1400, 1)

0045aa3c: _nop

0045aa40: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045aa44: addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045aa48: sw v0,0x0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045aa4c: addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0045aa50: bne s2,zero,0x0045aa20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45aa20, 4) , (unique, 0x1700, 1)

0045aa54: _addiu s8,s8,0x4
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0x4, 4)

0045aa58: b 0x0045a8cc
	 ---  BRANCH (ram, 0x45a8cc, 4)

0045aa5c: _nop

