Function: is_dst
Address: 0043bff8
P-code:

0043bff8: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

0043bffc: addiu gp,gp,-0x1198
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffee68, 4)

0043c000: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0043c004: addiu sp,sp,-0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd8, 4)

0043c008: lw t9,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c00c: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0043c010: sw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0043c014: sw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0043c018: sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0043c01c: sw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0043c020: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0043c024: or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0043c028: bal 0x0041cc50
	(register, 0x7c, 4) COPY (const, 0x43c030, 4)
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x41cc50, 4)

0043c02c: _or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0043c030: lb a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

0043c034: li v1,0x7b
	(register, 0xc, 4) COPY (const, 0x7b, 4)

0043c038: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c03c: beq a0,v1,0x0043c0d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43c0d8, 4) , (unique, 0x1200, 1)

0043c040: _or s2,v0,zero
	(register, 0x48, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043c044: lw t9,-0x7d18(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c048: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043c04c: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0043c050: bal 0x00437ee0
	(register, 0x7c, 4) COPY (const, 0x43c058, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x437ee0, 4)

0043c054: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043c058: beq v0,zero,0x0043c07c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x43c07c, 4) , (unique, 0x1200, 1)

0043c05c: _addu s0,s0,s2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)

0043c060: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0043c064: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c068: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c06c: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c070: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c074: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0043c078: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0043c07c: lb a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

0043c080: nop

0043c084: andi v0,a0,0xff
	(register, 0x8, 4) INT_AND (register, 0x10, 4) , (const, 0xff, 4)

0043c088: addiu v1,v0,-0x41
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffbf, 4)

0043c08c: sltiu v1,v1,0x1a
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x1a, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0043c090: bne v1,zero,0x0043c060
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff9f, 4)
	 ---  CBRANCH (ram, 0x43c060, 4) , (unique, 0x1700, 1)

0043c094: _addiu v1,v0,-0x61
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff9f, 4)

0043c098: sltiu v1,v1,0x1a
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x1a, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0043c09c: bne v1,zero,0x0043c060
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x43c060, 4) , (unique, 0x1700, 1)

0043c0a0: _addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0043c0a4: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0043c0a8: bne v0,zero,0x0043c060
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x5f, 4)
	 ---  CBRANCH (ram, 0x43c060, 4) , (unique, 0x1700, 1)

0043c0ac: _li v1,0x5f
	(register, 0xc, 4) COPY (const, 0x5f, 4)

0043c0b0: beq a0,v1,0x0043c064
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x43c064, 4) , (unique, 0x1200, 1)

0043c0b4: _nop

0043c0b8: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0043c0bc: addu v0,v0,s2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)

0043c0c0: lw ra,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c0c4: lw s2,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c0c8: lw s1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c0cc: lw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c0d0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  RETURN (register, 0x80, 4)

0043c0d4: _addiu sp,sp,0x28
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0043c0d8: lw t9,-0x7d18(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043c0dc: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

0043c0e0: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0043c0e4: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0043c0e8: bal 0x00437ee0
	(register, 0x7c, 4) COPY (const, 0x43c0f0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x437ee0, 4)

0043c0ec: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043c0f0: bne v0,zero,0x0043c060
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x43c060, 4) , (unique, 0x1700, 1)

0043c0f4: _addu s0,s0,s2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)

0043c0f8: lb v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0043c0fc: li v0,0x7d
	(register, 0x8, 4) COPY (const, 0x7d, 4)

0043c100: bne v1,v0,0x0043c060
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x43c060, 4) , (unique, 0x1700, 1)

0043c104: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0043c108: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0043c10c: b 0x0043c0c0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x43c0c0, 4)

0043c110: _addu v0,v0,s2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)

