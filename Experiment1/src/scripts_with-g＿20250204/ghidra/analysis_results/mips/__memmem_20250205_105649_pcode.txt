Function: __memmem
Address: 0046f724
P-code:

0046f724: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046f728: addiu gp,gp,-0x48c4
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffb73c, 4)

0046f72c: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046f730: addiu sp,sp,-0x140
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffec0, 4)

0046f734: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046f738: sw s0,0x118(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046f73c: sw ra,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046f740: sw s8,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0046f744: sw s7,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046f748: sw s6,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046f74c: sw s5,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046f750: sw s4,0x128(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x128, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046f754: sw s3,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046f758: sw s2,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046f75c: sw s1,0x11c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046f760: beq a3,zero,0x0046f8d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f8d0, 4) , (unique, 0x1200, 1)

0046f764: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046f768: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0046f76c: or s1,a3,zero
	(register, 0x44, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046f770: or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046f774: beq a3,v1,0x0046f910
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0xc, 4)
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f910, 4) , (unique, 0x1200, 1)

0046f778: _or s7,a2,zero
	(register, 0x5c, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046f77c: sltu v1,a1,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x1c, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f780: bne v1,zero,0x0046f8cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x14, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x46f8cc, 4) , (unique, 0x1700, 1)

0046f784: _subu v0,a1,a3
	(register, 0x8, 4) INT_SUB (register, 0x14, 4) , (register, 0x1c, 4)

0046f788: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0046f78c: beq a3,v1,0x0046f94c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0xc, 4)
	(register, 0x50, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46f94c, 4) , (unique, 0x1200, 1)

0046f790: _addu s4,a0,v0
	(register, 0x50, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0046f794: sltiu v0,a3,0x101
	(unique, 0x5280, 1) INT_LESS (register, 0x1c, 4) , (const, 0x101, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046f798: beq v0,zero,0x0046f9a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	 ---  CBRANCH (ram, 0x46f9a0, 4) , (unique, 0x1200, 1)

0046f79c: _addiu s6,sp,0x18
	(register, 0x58, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0046f7a0: lw t9,-0x7fb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8048, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f7a4: or a0,s6,zero
	(register, 0x10, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046f7a8: li a2,0x100
	(register, 0x18, 4) COPY (const, 0x100, 4)

0046f7ac: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f7b0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46f7b8, 4)
	(register, 0x54, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)
	 ---  CALLIND (register, 0x80, 4)

0046f7b4: _addiu s5,a3,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0046f7b8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f7bc: lbu a0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f7c0: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0046f7c4: addu a1,s7,v1
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (register, 0xc, 4)

0046f7c8: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046f7cc: lbu a0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f7d0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046f7d4: subu v0,a0,v0
	(register, 0x8, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)

0046f7d8: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0046f7dc: addu v0,s6,v0
	(register, 0x8, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)

0046f7e0: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0046f7e4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046f7e8: sltu v0,v1,s5
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x54, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046f7ec: bne v0,zero,0x0046f7c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46f7c8, 4) , (unique, 0x1700, 1)

0046f7f0: _addu a1,s7,v1
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (register, 0xc, 4)

0046f7f4: addu v0,s7,s1
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x44, 4)

0046f7f8: lbu v1,-0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f7fc: addu v0,s7,s5
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x54, 4)

0046f800: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f804: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

0046f808: subu v0,v0,v1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0046f80c: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0046f810: addu v0,s6,v0
	(register, 0x8, 4) INT_ADD (register, 0x58, 4) , (register, 0x8, 4)

0046f814: lbu s2,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x48, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f818: or s8,zero,zero
	(register, 0x78, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f81c: subu s2,s5,s2
	(register, 0x48, 4) INT_SUB (register, 0x54, 4) , (register, 0x48, 4)

0046f820: sb s5,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x57, 1)

0046f824: sltiu s3,s5,0xf
	(unique, 0x5280, 1) INT_LESS (register, 0x54, 4) , (const, 0xf, 4)
	(register, 0x4c, 4) INT_ZEXT (unique, 0x5280, 1)

0046f828: sltu v1,s4,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f82c: bne v1,zero,0x0046f8cc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x46f8cc, 4) , (unique, 0x1700, 1)

0046f830: _addu s0,s0,s5
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x54, 4)

0046f834: lbu v0,-0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f838: lbu v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f83c: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046f840: subu v1,v1,v0
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0046f844: andi v1,v1,0xff
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xff, 4)

0046f848: addu v1,s6,v1
	(register, 0xc, 4) INT_ADD (register, 0x58, 4) , (register, 0xc, 4)

0046f84c: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f850: nop

0046f854: beq v0,zero,0x0046f82c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
	 ---  CBRANCH (ram, 0x46f82c, 4) , (unique, 0x1200, 1)

0046f858: _sltu v1,s4,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f85c: sltu v1,v0,s5
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x54, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f860: bne v1,zero,0x0046f828
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46f828, 4) , (unique, 0x1700, 1)

0046f864: _subu s0,s0,v0
	(register, 0x40, 4) INT_SUB (register, 0x40, 4) , (register, 0x8, 4)

0046f868: bne s3,zero,0x0046f88c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x46f88c, 4) , (unique, 0x1700, 1)

0046f86c: _li a2,0x8
	(register, 0x18, 4) COPY (const, 0x8, 4)

0046f870: lw t9,-0x7e70(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8190, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f874: addu a1,s7,s8
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (register, 0x78, 4)

0046f878: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46f880, 4)
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)
	 ---  CALLIND (register, 0x80, 4)

0046f87c: _addu a0,s0,s8
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)

0046f880: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f884: bne v0,zero,0x0046f8b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f8b8, 4) , (unique, 0x1700, 1)

0046f888: _nop

0046f88c: lw t9,-0x7e70(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8190, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f890: or a2,s5,zero
	(register, 0x18, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046f894: or a1,s7,zero
	(register, 0x14, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046f898: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46f8a0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046f89c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046f8a0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8a4: beq v0,zero,0x0046f8d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x78, 4) , (const, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46f8d0, 4) , (unique, 0x1200, 1)

0046f8a8: _sltiu v0,s8,0x8
	(unique, 0x5280, 1) INT_LESS (register, 0x78, 4) , (const, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046f8ac: bne v0,zero,0x0046f904
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f904, 4) , (unique, 0x1700, 1)

0046f8b0: _nop

0046f8b4: addiu s8,s8,-0x8
	(register, 0x78, 4) INT_ADD (register, 0x78, 4) , (const, 0xfffffff8, 4)

0046f8b8: b 0x0046f828
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x46f828, 4)

0046f8bc: _addu s0,s0,s2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)

0046f8c0: or s4,s0,zero
	(register, 0x50, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046f8c4: beq a0,v0,0x0046f9d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46f9d8, 4) , (unique, 0x1200, 1)

0046f8c8: _or s0,s4,zero
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046f8cc: or s0,zero,zero
	(register, 0x40, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046f8d0: lw ra,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8d4: lw s8,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8d8: lw s7,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8dc: lw s6,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8e0: lw s5,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8e4: lw s4,0x128(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x128, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8e8: lw s3,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8ec: lw s2,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8f0: lw s1,0x11c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8f4: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046f8f8: lw s0,0x118(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f8fc: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)
	 ---  RETURN (register, 0x80, 4)

0046f900: _addiu sp,sp,0x140
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)

0046f904: addiu s8,s1,-0x9
	(register, 0x78, 4) INT_ADD (register, 0x44, 4) , (const, 0xfffffff7, 4)

0046f908: b 0x0046f828
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x46f828, 4)

0046f90c: _addu s0,s0,s2
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (register, 0x48, 4)

0046f910: lbu a1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f914: lw ra,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f918: lw s8,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f91c: lw s7,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f920: lw s6,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f924: lw s5,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f928: lw s4,0x128(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x128, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f92c: lw s3,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f930: lw s2,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f934: lw s1,0x11c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f938: lw s0,0x118(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f93c: lw t9,-0x7d48(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82b8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f940: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046f944: jr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0046f948: _addiu sp,sp,0x140
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)

0046f94c: lbu v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f950: lbu a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f954: lbu a1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f958: lbu a2,0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f95c: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

0046f960: sll a0,a0,0x10
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x10, 4)

0046f964: sll v0,v0,0x10
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0046f968: sltu v1,s4,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x40, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046f96c: or a0,a0,a2
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x18, 4)

0046f970: bne v1,zero,0x0046f8c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x46f8c0, 4) , (unique, 0x1700, 1)

0046f974: _or v0,v0,a1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x14, 4)

0046f978: b 0x0046f990
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46f990, 4)

0046f97c: _addiu s4,s4,0x1
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x1, 4)

0046f980: lbu v0,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046f984: addiu s0,s0,0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)

0046f988: beq s0,s4,0x0046f8c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (register, 0x50, 4)
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46f8c4, 4) , (unique, 0x1200, 1)

0046f98c: _or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0046f990: bne v0,a0,0x0046f980
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46f980, 4) , (unique, 0x1700, 1)

0046f994: _sll v1,v0,0x10
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x10, 4)

0046f998: b 0x0046f8d0
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46f8d0, 4)

0046f99c: _addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

0046f9a0: lw t9,-0x76e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff891c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9a4: lw ra,0x13c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x13c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9a8: lw s8,0x138(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x138, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9ac: lw s7,0x134(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x134, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9b0: lw s6,0x130(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x130, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9b4: lw s5,0x12c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x12c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9b8: lw s4,0x128(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x128, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9bc: lw s3,0x124(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x124, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9c0: lw s2,0x120(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x120, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9c4: lw s1,0x11c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x11c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9c8: lw s0,0x118(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x118, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046f9cc: addiu t9,t9,-0xd60
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xfffff2a0, 4)

0046f9d0: b 0x0046f2a0
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)
	 ---  BRANCH (ram, 0x46f2a0, 4)

0046f9d4: _addiu sp,sp,0x140
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x140, 4)

0046f9d8: b 0x0046f8d0
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x46f8d0, 4)

0046f9dc: _addiu s0,s0,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0xffffffff, 4)

