Function: read_encoded_value
Address: 0047ffc8
P-code:

0047ffc8: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

0047ffcc: addiu gp,gp,-0x5168
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffae98, 4)

0047ffd0: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0047ffd4: addiu sp,sp,-0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc8, 4)

0047ffd8: li v0,0xff
	(register, 0x8, 4) COPY (const, 0xff, 4)

0047ffdc: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0047ffe0: sw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0047ffe4: sw s3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0047ffe8: sw s2,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0047ffec: sw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0047fff0: sw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0047fff4: beq a1,v0,0x0048002c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x48002c, 4) , (unique, 0x1200, 1)

0047fff8: _li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0047fffc: andi s3,a1,0x70
	(register, 0x4c, 4) INT_AND (register, 0x14, 4) , (const, 0x70, 4)

00480000: or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00480004: or s0,a2,zero
	(register, 0x40, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00480008: beq s3,v0,0x004800ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4800ac, 4) , (unique, 0x1200, 1)

0048000c: _or s2,a3,zero
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00480010: sltiu v0,s3,0x31
	(unique, 0x5280, 1) INT_LESS (register, 0x4c, 4) , (const, 0x31, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00480014: beq v0,zero,0x0048003c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x20, 4)
	 ---  CBRANCH (ram, 0x48003c, 4) , (unique, 0x1200, 1)

00480018: _li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0048001c: beq s3,v0,0x00480090
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x4c, 4) , (const, 0x21, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480090, 4) , (unique, 0x1200, 1)

00480020: _sltiu v0,s3,0x21
	(unique, 0x5280, 1) INT_LESS (register, 0x4c, 4) , (const, 0x21, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00480024: bne v0,zero,0x00480050
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480050, 4) , (unique, 0x1700, 1)

00480028: _or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0048002c: lw t9,-0x7fcc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8034, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480030: nop

00480034: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x48003c, 4)
	 ---  CALLIND (register, 0x80, 4)

00480038: _nop

0048003c: li v0,0x40
	(register, 0x8, 4) COPY (const, 0x40, 4)

00480040: beq s3,v0,0x004800b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x50, 4)
	 ---  CBRANCH (ram, 0x4800b8, 4) , (unique, 0x1200, 1)

00480044: _li v0,0x50
	(register, 0x8, 4) COPY (const, 0x50, 4)

00480048: bne s3,v0,0x0048002c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48002c, 4) , (unique, 0x1700, 1)

0048004c: _or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480050: li v0,0x50
	(register, 0x8, 4) COPY (const, 0x50, 4)

00480054: bne s1,v0,0x004800c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0xf, 4)
	 ---  CBRANCH (ram, 0x4800c4, 4) , (unique, 0x1700, 1)

00480058: _andi v0,s1,0xf
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0xf, 4)

0048005c: li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00480060: addiu v0,s0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x3, 4)

00480064: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00480068: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048006c: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

00480070: lw ra,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480074: lw s3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480078: lw s1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048007c: lw s0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480080: sw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00480084: lw s2,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480088: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	 ---  RETURN (register, 0x80, 4)

0048008c: _addiu sp,sp,0x38
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)

00480090: lw t9,-0x75e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480094: nop

00480098: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4800a0, 4)
	 ---  CALLIND (register, 0x80, 4)

0048009c: _nop

004800a0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800a4: b 0x00480050
	(register, 0x20, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x480050, 4)

004800a8: _or t0,v0,zero
	(register, 0x20, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004800ac: lw t9,-0x75e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800b0: b 0x00480098
	 ---  BRANCH (ram, 0x480098, 4)

004800b4: _nop

004800b8: lw t9,-0x75dc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8a24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800bc: b 0x00480098
	 ---  BRANCH (ram, 0x480098, 4)

004800c0: _nop

004800c4: sltiu v1,v0,0xd
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xd, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004800c8: beq v1,zero,0x0048002c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x48002c, 4) , (unique, 0x1200, 1)

004800cc: _sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

004800d0: lw v0,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800d4: nop

004800d8: addiu v0,v0,-0x4650
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffb9b0, 4)

004800dc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004800e0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800e4: nop

004800e8: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

004800ec: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

004800f0: _nop

004800f4: lw t9,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004800f8: addiu a1,sp,0x18
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

004800fc: addiu t9,t9,-0x70
	(register, 0x64, 4) INT_ADD (register, 0x64, 4) , (const, 0xffffff90, 4)

00480100: bal 0x0047ff90
	(register, 0x7c, 4) COPY (const, 0x480108, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x47ff90, 4)

00480104: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480108: lw v1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048010c: nop

00480110: beq v1,zero,0x00480070
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480070, 4) , (unique, 0x1200, 1)

00480114: _nop

00480118: b 0x00480170
	(register, 0x10, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x480170, 4)

0048011c: _li a0,0x10
	(register, 0x10, 4) COPY (const, 0x10, 4)

00480120: or v0,s0,zero
	(register, 0x8, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00480124: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480128: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0048012c: lbu a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

00480130: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00480134: andi a2,a1,0x7f
	(register, 0x18, 4) INT_AND (register, 0x14, 4) , (const, 0x7f, 4)

00480138: sllv a2,a2,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (unique, 0x4f80, 4)

0048013c: or v1,v1,a2
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x18, 4)

00480140: sll a2,a1,0x18
	(register, 0x18, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)

00480144: sra a2,a2,0x18
	(register, 0x18, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x18, 4)

00480148: bltz a2,0x0048012c
	(unique, 0x1600, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x48012c, 4) , (unique, 0x1600, 1)

0048014c: _addiu a0,a0,0x7
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7, 4)

00480150: sltiu a2,a0,0x20
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x20, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

00480154: beq a2,zero,0x00480110
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x40, 4)
	 ---  CBRANCH (ram, 0x480110, 4) , (unique, 0x1200, 1)

00480158: _andi a1,a1,0x40
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x40, 4)

0048015c: beq a1,zero,0x00480110
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x480110, 4) , (unique, 0x1200, 1)

00480160: _li a1,-0x1
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)

00480164: sllv a0,a1,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x14, 4) , (unique, 0x4f80, 4)

00480168: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

0048016c: li a0,0x10
	(register, 0x10, 4) COPY (const, 0x10, 4)

00480170: bne s3,a0,0x0048017c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x48017c, 4) , (unique, 0x1700, 1)

00480174: _nop

00480178: or t0,s0,zero
	(register, 0x20, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0048017c: sll s1,s1,0x18
	(register, 0x44, 4) INT_LEFT (register, 0x44, 4) , (const, 0x18, 4)

00480180: sra s1,s1,0x18
	(register, 0x44, 4) INT_SRIGHT (register, 0x44, 4) , (const, 0x18, 4)

00480184: bgez s1,0x00480070
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x480070, 4) , (unique, 0x1300, 1)

00480188: _addu v1,v1,t0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)

0048018c: lw v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480190: b 0x00480070
	 ---  BRANCH (ram, 0x480070, 4)

00480194: _nop

00480198: lbu v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0048019c: lbu v1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004801a0: sll v0,v0,0x8
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4)

004801a4: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

004801a8: b 0x00480110
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x480110, 4)

004801ac: _addiu v0,s0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)

004801b0: lbu v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

004801b4: lbu v1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

004801b8: sll v0,v0,0x8
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4)

004801bc: or v1,v1,v0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x8, 4)

004801c0: sll v1,v1,0x10
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x10, 4)

004801c4: b 0x004801a8
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x4801a8, 4)

004801c8: _sra v1,v1,0x10
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x10, 4)

004801cc: lwl v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004801d0: nop

004801d4: lwr v1,0x3(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

004801d8: b 0x00480110
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x480110, 4)

004801dc: _addiu v0,s0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

004801e0: lwl v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004801e4: nop

004801e8: lwr v1,0x7(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x7, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

004801ec: b 0x00480110
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	 ---  BRANCH (ram, 0x480110, 4)

004801f0: _addiu v0,s0,0x8
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

