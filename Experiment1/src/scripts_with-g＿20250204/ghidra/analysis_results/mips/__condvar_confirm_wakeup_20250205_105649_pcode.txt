Function: __condvar_confirm_wakeup
Address: 00480af0
P-code:

00480af0: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

00480af4: addiu gp,gp,-0x5c90
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffa370, 4)

00480af8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00480afc: addiu a0,a0,0x24
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)

00480b00: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480b04: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480b08: addiu at,v0,-0x8
	(register, 0x4, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)

00480b0c: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480b10: beq at,zero,0x00480b04
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480b04, 4) , (unique, 0x1200, 1)

00480b14: _nop

00480b18: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00480b1c: srl v0,v0,0x2
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4)

00480b20: beq v0,v1,0x00480b30
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x480b30, 4) , (unique, 0x1200, 1)

00480b24: _lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00480b28: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

00480b2c: _nop

00480b30: xori a1,a1,0x81
	(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x81, 4)

00480b34: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

00480b38: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480b3c: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00480b40: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00480b44: beq a3,zero,0x00480b54
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480b54, 4) , (unique, 0x1200, 1)

00480b48: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480b4c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00480b50: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480b54: bne v1,zero,0x00480b28
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x480b28, 4) , (unique, 0x1700, 1)

00480b58: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00480b5c: beq v0,v1,0x00480b28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x480b28, 4) , (unique, 0x1200, 1)

00480b60: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00480b64: beq v0,v1,0x00480b28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x480b28, 4) , (unique, 0x1200, 1)

00480b68: _nop

00480b6c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480b70: addiu sp,sp,-0x20
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffe0, 4)

00480b74: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480b78: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00480b7c: sw ra,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00480b80: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x480b88, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00480b84: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

