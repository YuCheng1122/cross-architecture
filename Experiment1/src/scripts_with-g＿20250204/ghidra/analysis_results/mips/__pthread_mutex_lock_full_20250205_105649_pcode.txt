Function: __pthread_mutex_lock_full
Address: 004355c0
P-code:

004355c0: lui gp,0x8
	(register, 0x70, 4) INT_LEFT (const, 0x8, 4) , (const, 0x10, 4)

004355c4: addiu gp,gp,0x58a0
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x58a0, 4)

004355c8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

004355cc: addiu sp,sp,-0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffa8, 4)

004355d0: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004355d4: sw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004355d8: sw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004355dc: sw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004355e0: sw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004355e4: sw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004355e8: sw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004355ec: sw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004355f0: sw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004355f4: sw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004355f8: sw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004355fc: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00435600: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435604: lw s1,-0x7478(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435608: lw v1,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043560c: addiu s3,a0,0xc
	(register, 0x4c, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)

00435610: andi v0,v1,0x7f
	(register, 0x8, 4) INT_AND (register, 0xc, 4) , (const, 0x7f, 4)

00435614: sltiu a0,v0,0x34
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x34, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00435618: beq a0,zero,0x004356f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4356f8, 4) , (unique, 0x1200, 1)

0043561c: _sltiu a0,v0,0x30
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00435620: beq a0,zero,0x00435898
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x435898, 4) , (unique, 0x1200, 1)

00435624: _sltiu a0,v0,0x14
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

00435628: beq a0,zero,0x00435888
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x70, 4)
	 ---  CBRANCH (ram, 0x435888, 4) , (unique, 0x1200, 1)

0043562c: _andi v1,v1,0x70
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x70, 4)

00435630: beq v1,zero,0x004356c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x4356c8, 4) , (unique, 0x1200, 1)

00435634: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00435638: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0043563c: addiu s2,s0,0x14
	(register, 0x48, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)

00435640: sw s2,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00435644: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435648: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0043564c: bne a2,zero,0x00435a98
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x435a98, 4) , (unique, 0x1700, 1)

00435650: _or v1,s1,v0
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (register, 0x8, 4)

00435654: ll a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435658: bne a2,zero,0x00435670
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435670, 4) , (unique, 0x1700, 1)

0043565c: _or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435660: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435664: beq at,zero,0x00435654
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435654, 4) , (unique, 0x1200, 1)

00435668: _nop

0043566c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435670: bne a2,zero,0x00435a9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435a9c, 4) , (unique, 0x1700, 1)

00435674: _lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

00435678: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0043567c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435680: ori v0,v0,0xfffe
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xfffe, 4)

00435684: beq v1,v0,0x00435c58
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435c58, 4) , (unique, 0x1200, 1)

00435688: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0043568c: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435690: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435694: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435698: nop

0043569c: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004356a0: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004356a4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004356a8: sw s2,-0x7474(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004356ac: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004356b0: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004356b4: lw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356b8: sw s1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004356bc: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004356c0: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004356c4: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004356c8: lw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356cc: lw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356d0: lw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356d4: lw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356d8: lw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356dc: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356e0: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356e4: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356e8: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356ec: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004356f0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	 ---  RETURN (register, 0x80, 4)

004356f4: _addiu sp,sp,0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)

004356f8: addiu v0,v0,-0x40
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffc0, 4)

004356fc: sltiu v0,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00435700: beq v0,zero,0x004356c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x4356c8, 4) , (unique, 0x1200, 1)

00435704: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00435708: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043570c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435710: lw s6,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435714: beq v1,s1,0x00435a1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x435a1c, 4) , (unique, 0x1200, 1)

00435718: _andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

0043571c: lw v0,-0x7abc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8544, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435720: lw s5,-0x7ab8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8548, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435724: sw s1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00435728: li s8,-0x1
	(register, 0x78, 4) COPY (const, 0xffffffff, 4)

0043572c: sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435730: lui s2,0xfff8
	(register, 0x48, 4) INT_LEFT (const, 0xfff8, 4) , (const, 0x10, 4)

00435734: li s7,-0xb
	(register, 0x5c, 4) COPY (const, 0xfffffff5, 4)

00435738: or s1,s6,zero
	(register, 0x44, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0043573c: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00435740: bal 0x0043725c
	(register, 0x7c, 4) COPY (const, 0x435748, 4)
	(register, 0x58, 4) INT_RIGHT (register, 0x44, 4) , (const, 0x13, 4)
	 ---  CALL (ram, 0x43725c, 4)

00435744: _srl s6,s1,0x13
	(register, 0x58, 4) INT_RIGHT (register, 0x44, 4) , (const, 0x13, 4)

00435748: slt v0,s6,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x58, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0043574c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435750: bne v0,zero,0x00435a4c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435a4c, 4) , (unique, 0x1700, 1)

00435754: _or a1,s6,zero
	(register, 0x14, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00435758: lw t9,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043575c: nop

00435760: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x435768, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00435764: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00435768: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043576c: bne v0,zero,0x004356c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_AND (register, 0x44, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x4356c8, 4) , (unique, 0x1700, 1)

00435770: _and s4,s1,s2
	(register, 0x50, 4) INT_AND (register, 0x44, 4) , (register, 0x48, 4)

00435774: ori s8,s4,0x1
	(register, 0x78, 4) INT_OR (register, 0x50, 4) , (const, 0x1, 4)

00435778: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043577c: bne v0,s4,0x00435794
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x4, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435794, 4) , (unique, 0x1700, 1)

00435780: _or at,s8,zero
	(register, 0x4, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00435784: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435788: beq at,zero,0x00435778
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435778, 4) , (unique, 0x1200, 1)

0043578c: _nop

00435790: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435794: beq s4,v0,0x00435b20
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435b20, 4) , (unique, 0x1200, 1)

00435798: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043579c: b 0x004357c8
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x4357c8, 4)

004357a0: _ori a2,s4,0x2
	(register, 0x18, 4) INT_OR (register, 0x50, 4) , (const, 0x2, 4)

004357a4: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004357a8: bne v0,s4,0x004357c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4357c0, 4) , (unique, 0x1700, 1)

004357ac: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004357b0: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004357b4: beq at,zero,0x004357a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4357a4, 4) , (unique, 0x1200, 1)

004357b8: _nop

004357bc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004357c0: beq s4,v0,0x0043585c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x43585c, 4) , (unique, 0x1200, 1)

004357c4: _nop

004357c8: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004357cc: bne v0,s8,0x004357e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x78, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4357e4, 4) , (unique, 0x1700, 1)

004357d0: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

004357d4: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004357d8: beq at,zero,0x004357c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4357c8, 4) , (unique, 0x1200, 1)

004357dc: _nop

004357e0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004357e4: and v1,v0,s2
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (register, 0x48, 4)

004357e8: bne v1,s4,0x0043587c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x50, 4)
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43587c, 4) , (unique, 0x1700, 1)

004357ec: _or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004357f0: beq s4,v0,0x004357a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x50, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4357a4, 4) , (unique, 0x1200, 1)

004357f4: _nop

004357f8: lw a1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004357fc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435800: nor a1,zero,a1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_NEGATE (unique, 0x4280, 4)

00435804: andi a1,a1,0x80
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x80, 4)

00435808: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

0043580c: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00435810: beq a3,zero,0x00435820
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x435820, 4) , (unique, 0x1200, 1)

00435814: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435818: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0043581c: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435820: bne v1,zero,0x004357a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4357a4, 4) , (unique, 0x1700, 1)

00435824: _nop

00435828: beq v0,s7,0x004357a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x5c, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x4357a4, 4) , (unique, 0x1200, 1)

0043582c: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00435830: bne v0,v1,0x00435d00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x435d00, 4) , (unique, 0x1700, 1)

00435834: _nop

00435838: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043583c: bne v0,s4,0x00435854
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435854, 4) , (unique, 0x1700, 1)

00435840: _or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00435844: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435848: beq at,zero,0x00435838
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435838, 4) , (unique, 0x1200, 1)

0043584c: _nop

00435850: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435854: bne s4,v0,0x004357c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x50, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4357c8, 4) , (unique, 0x1700, 1)

00435858: _nop

0043585c: lw s1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435860: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00435864: lw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435868: nop

0043586c: bne v0,zero,0x00435d9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435d9c, 4) , (unique, 0x1700, 1)

00435870: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435874: b 0x004356b4
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x4356b4, 4)

00435878: _sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0043587c: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00435880: b 0x0043573c
	(register, 0x78, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x43573c, 4)

00435884: _or s8,s6,zero
	(register, 0x78, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

00435888: addiu v0,v0,-0x20
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffe0, 4)

0043588c: sltiu v0,v0,0x4
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x4, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00435890: beq v0,zero,0x004356c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  CBRANCH (ram, 0x4356c8, 4) , (unique, 0x1200, 1)

00435894: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00435898: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043589c: nop

004358a0: andi v1,v0,0x10
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x10, 4)

004358a4: beq v1,zero,0x00435970
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x435970, 4) , (unique, 0x1200, 1)

004358a8: _andi s3,v0,0x3
	(register, 0x4c, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

004358ac: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

004358b0: addiu s2,s0,0x14
	(register, 0x48, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)

004358b4: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

004358b8: ori v1,s2,0x1
	(register, 0xc, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)

004358bc: sw v1,-0x746c(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

004358c0: lui v1,0x3fff
	(register, 0xc, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

004358c4: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004358c8: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

004358cc: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004358d0: beq s1,v0,0x00435c28
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x435c28, 4) , (unique, 0x1200, 1)

004358d4: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

004358d8: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004358dc: bne v0,zero,0x004358f4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4358f4, 4) , (unique, 0x1700, 1)

004358e0: _or at,s1,zero
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004358e4: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004358e8: beq at,zero,0x004358d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4358d8, 4) , (unique, 0x1200, 1)

004358ec: _nop

004358f0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004358f4: beq v0,zero,0x00435a64
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435a64, 4) , (unique, 0x1200, 1)

004358f8: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004358fc: lw t9,-0x7ab4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff854c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435900: li a3,0x80
	(register, 0x1c, 4) COPY (const, 0x80, 4)

00435904: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435908: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0043590c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x435914, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00435910: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00435914: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00435918: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043591c: beq v0,v1,0x00435d78
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x435d78, 4) , (unique, 0x1200, 1)

00435920: _li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

00435924: bne v0,v1,0x00435b80
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435b80, 4) , (unique, 0x1700, 1)

00435928: _lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

0043592c: li s2,0x80
	(register, 0x48, 4) COPY (const, 0x80, 4)

00435930: addiu v0,s3,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x4c, 4) , (const, 0xffffffff, 4)

00435934: sltiu v0,v0,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

00435938: bne v0,zero,0x00435dc0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1bd, 4)
	 ---  CBRANCH (ram, 0x435dc0, 4) , (unique, 0x1700, 1)

0043593c: _li a2,0x1bd
	(register, 0x18, 4) COPY (const, 0x1bd, 4)

00435940: lw s1,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435944: addiu s0,sp,0x20
	(register, 0x40, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)

00435948: sw s2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0043594c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435950: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435954: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435958: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0043595c: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00435960: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x435968, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00435964: _sw zero,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435968: b 0x0043594c
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x43594c, 4)

0043596c: _sw s2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00435970: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435974: lui v1,0x3fff
	(register, 0xc, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

00435978: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

0043597c: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00435980: beq v0,s1,0x00435c90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x44, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x435c90, 4) , (unique, 0x1200, 1)

00435984: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00435988: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0043598c: bne v0,zero,0x004359a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4359a4, 4) , (unique, 0x1700, 1)

00435990: _or at,s1,zero
	(register, 0x4, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00435994: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435998: beq at,zero,0x00435988
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435988, 4) , (unique, 0x1200, 1)

0043599c: _nop

004359a0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004359a4: beq v0,zero,0x00435874
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435874, 4) , (unique, 0x1200, 1)

004359a8: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004359ac: lw s2,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004359b0: lw t9,-0x7ab4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff854c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004359b4: andi s2,s2,0x80
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0x80, 4)

004359b8: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

004359bc: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004359c0: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004359c4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4359cc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

004359c8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

004359cc: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

004359d0: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004359d4: beq v0,v1,0x00435940
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x435940, 4) , (unique, 0x1200, 1)

004359d8: _li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

004359dc: beq v0,v1,0x00435930
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435930, 4) , (unique, 0x1200, 1)

004359e0: _lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

004359e4: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004359e8: nop

004359ec: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004359f0: beq v0,zero,0x00435874
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435874, 4) , (unique, 0x1200, 1)

004359f4: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

004359f8: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004359fc: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a00: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a04: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a08: addiu a3,a3,0x570c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x570c, 4)

00435a0c: li a2,0x1cc
	(register, 0x18, 4) COPY (const, 0x1cc, 4)

00435a10: addiu a1,a1,-0x6574
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a8c, 4)

00435a14: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x435a1c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5688, 4)
	 ---  CALL (ram, 0x425590, 4)

00435a18: _addiu a0,a0,0x5688
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5688, 4)

00435a1c: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00435a20: beq v0,v1,0x00435d1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435d1c, 4) , (unique, 0x1200, 1)

00435a24: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00435a28: bne v0,v1,0x0043571c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x43571c, 4) , (unique, 0x1700, 1)

00435a2c: _li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

00435a30: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a34: nop

00435a38: beq v0,v1,0x00435c50
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x435c50, 4) , (unique, 0x1200, 1)

00435a3c: _nop

00435a40: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

00435a44: b 0x004356c4
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x4356c4, 4)

00435a48: _sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435a4c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

00435a50: bne s8,v0,0x00435b68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (register, 0x8, 4)
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x435b68, 4) , (unique, 0x1700, 1)

00435a54: _li a1,-0x1
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)

00435a58: b 0x004356c8
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435a5c: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00435a60: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00435a64: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a68: ori v0,v0,0xfffe
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xfffe, 4)

00435a6c: beq v1,v0,0x00435cac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x435cac, 4) , (unique, 0x1200, 1)

00435a70: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435a74: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435a78: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435a7c: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435a80: nop

00435a84: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435a88: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435a8c: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435a90: b 0x004356a8
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4356a8, 4)

00435a94: _ori s2,s2,0x1
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)

00435a98: lui v1,0x4000
	(register, 0xc, 4) INT_LEFT (const, 0x4000, 4) , (const, 0x10, 4)

00435a9c: and a0,a2,v1
	(register, 0x10, 4) INT_AND (register, 0x18, 4) , (register, 0xc, 4)

00435aa0: bne a0,zero,0x00435b2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x435b2c, 4) , (unique, 0x1700, 1)

00435aa4: _addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

00435aa8: and v1,a2,v1
	(register, 0xc, 4) INT_AND (register, 0x18, 4) , (register, 0xc, 4)

00435aac: beq v1,s1,0x00435d54
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x435d54, 4) , (unique, 0x1200, 1)

00435ab0: _nop

00435ab4: bltz a2,0x00435ae8
	(unique, 0x1600, 1) INT_SLESS (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435ae8, 4) , (unique, 0x1600, 1)

00435ab8: _lui v1,0x8000
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00435abc: or v1,a2,v1
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (register, 0xc, 4)

00435ac0: ll a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435ac4: bne a0,a2,0x00435adc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x18, 4)
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435adc, 4) , (unique, 0x1700, 1)

00435ac8: _or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435acc: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435ad0: beq at,zero,0x00435ac0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435ac0, 4) , (unique, 0x1200, 1)

00435ad4: _nop

00435ad8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435adc: bne a2,a0,0x0043564c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x10, 4)
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x43564c, 4) , (unique, 0x1700, 1)

00435ae0: _or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00435ae4: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435ae8: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00435aec: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435af0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435af4: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00435af8: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00435afc: beq a3,zero,0x00435b0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x435b0c, 4) , (unique, 0x1200, 1)

00435b00: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435b04: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00435b08: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435b0c: beq v1,zero,0x00435d3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)
	 ---  CBRANCH (ram, 0x435d3c, 4) , (unique, 0x1200, 1)

00435b10: _li v1,-0xb
	(register, 0xc, 4) COPY (const, 0xfffffff5, 4)

00435b14: lw a2,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435b18: b 0x0043564c
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x43564c, 4)

00435b1c: _lui v0,0x8000
	(register, 0x8, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00435b20: lw s1,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435b24: b 0x00435864
	 ---  BRANCH (ram, 0x435864, 4)

00435b28: _nop

00435b2c: lui v1,0x8000
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

00435b30: and v1,a2,v1
	(register, 0xc, 4) INT_AND (register, 0x18, 4) , (register, 0xc, 4)

00435b34: or a0,s1,v0
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (register, 0x8, 4)

00435b38: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

00435b3c: ll a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435b40: bne a0,a2,0x00435b58
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x18, 4)
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435b58, 4) , (unique, 0x1700, 1)

00435b44: _or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435b48: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435b4c: beq at,zero,0x00435b3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435b3c, 4) , (unique, 0x1200, 1)

00435b50: _nop

00435b54: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435b58: beq a2,a0,0x00435bf8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x435bf8, 4) , (unique, 0x1200, 1)

00435b5c: _nop

00435b60: b 0x0043564c
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x43564c, 4)

00435b64: _or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00435b68: lw t9,-0x7abc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8544, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435b6c: nop

00435b70: bal 0x00436e04
	(register, 0x7c, 4) COPY (const, 0x435b78, 4)
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x436e04, 4)

00435b74: _or a0,s8,zero
	(register, 0x10, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00435b78: b 0x004356c8
	(register, 0x8, 4) COPY (const, 0x16, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435b7c: _li v0,0x16
	(register, 0x8, 4) COPY (const, 0x16, 4)

00435b80: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435b84: nop

00435b88: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00435b8c: beq v0,zero,0x00435a60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0xbfff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x435a60, 4) , (unique, 0x1200, 1)

00435b90: _lui v0,0xbfff
	(register, 0x8, 4) INT_LEFT (const, 0xbfff, 4) , (const, 0x10, 4)

00435b94: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00435b98: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435b9c: ll at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435ba0: and at,at,v0
	(register, 0x4, 4) INT_AND (register, 0x4, 4) , (register, 0x8, 4)

00435ba4: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435ba8: beq at,zero,0x00435b9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435b9c, 4) , (unique, 0x1200, 1)

00435bac: _nop

00435bb0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435bb4: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435bb8: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435bbc: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00435bc0: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00435bc4: sw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435bc8: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435bcc: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435bd0: nop

00435bd4: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435bd8: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435bdc: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435be0: ori s2,s2,0x1
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)

00435be4: sw s2,-0x7474(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00435be8: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435bec: li v0,0xa5
	(register, 0x8, 4) COPY (const, 0xa5, 4)

00435bf0: b 0x004356c8
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435bf4: _sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435bf8: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435bfc: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435c00: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00435c04: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

00435c08: sw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435c0c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435c10: lw v0,-0x7474(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435c14: nop

00435c18: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00435c1c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435c20: b 0x00435be4
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x435be4, 4)

00435c24: _or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00435c28: beq s3,v0,0x00435d14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x435d14, 4) , (unique, 0x1200, 1)

00435c2c: _nop

00435c30: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435c34: bne s3,v0,0x004358d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4358d8, 4) , (unique, 0x1700, 1)

00435c38: _nop

00435c3c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435c40: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435c44: li a0,-0x1
	(register, 0x10, 4) COPY (const, 0xffffffff, 4)

00435c48: bne v0,a0,0x00435a40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435a40, 4) , (unique, 0x1700, 1)

00435c4c: _sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435c50: b 0x004356c8
	(register, 0x8, 4) COPY (const, 0xb, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435c54: _li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

00435c58: sw zero,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435c5c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00435c60: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435c64: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

00435c68: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00435c6c: beq at,zero,0x00435c60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435c60, 4) , (unique, 0x1200, 1)

00435c70: _nop

00435c74: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

00435c78: beq v0,zero,0x00435d24
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x80, 4)
	 ---  CBRANCH (ram, 0x435d24, 4) , (unique, 0x1200, 1)

00435c7c: _li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

00435c80: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435c84: li v0,0xa6
	(register, 0x8, 4) COPY (const, 0xa6, 4)

00435c88: b 0x004356c8
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435c8c: _sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435c90: beq s3,v0,0x00435d14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x435d14, 4) , (unique, 0x1200, 1)

00435c94: _nop

00435c98: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00435c9c: bne s3,v0,0x00435988
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x435988, 4) , (unique, 0x1700, 1)

00435ca0: _nop

00435ca4: b 0x00435c3c
	 ---  BRANCH (ram, 0x435c3c, 4)

00435ca8: _nop

00435cac: sw zero,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435cb0: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00435cb4: li a1,0x7
	(register, 0x14, 4) COPY (const, 0x7, 4)

00435cb8: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435cbc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00435cc0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00435cc4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00435cc8: beq a3,zero,0x00435cd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x435cd8, 4) , (unique, 0x1200, 1)

00435ccc: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435cd0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00435cd4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00435cd8: bne v1,zero,0x00435c80
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0xfffffff5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x435c80, 4) , (unique, 0x1700, 1)

00435cdc: _slti v1,v0,-0xb
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0xfffffff5, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5180, 1)

00435ce0: beq v1,zero,0x00435de0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)
	 ---  CBRANCH (ram, 0x435de0, 4) , (unique, 0x1200, 1)

00435ce4: _li v1,-0x59
	(register, 0xc, 4) COPY (const, 0xffffffa7, 4)

00435ce8: beq v0,v1,0x00435c80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffffd3, 4)
	 ---  CBRANCH (ram, 0x435c80, 4) , (unique, 0x1200, 1)

00435cec: _li v1,-0x2d
	(register, 0xc, 4) COPY (const, 0xffffffd3, 4)

00435cf0: beq v0,v1,0x00435c80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xffffff6f, 4)
	 ---  CBRANCH (ram, 0x435c80, 4) , (unique, 0x1200, 1)

00435cf4: _li v1,-0x91
	(register, 0xc, 4) COPY (const, 0xffffff6f, 4)

00435cf8: beq v0,v1,0x00435c80
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x435c80, 4) , (unique, 0x1200, 1)

00435cfc: _nop

00435d00: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d04: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d08: nop

00435d0c: bal 0x0042de90
	(register, 0x7c, 4) COPY (const, 0x435d14, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALL (ram, 0x42de90, 4)

00435d10: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00435d14: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00435d18: sw zero,-0x746c(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

00435d1c: b 0x004356c8
	(register, 0x8, 4) COPY (const, 0x2d, 4)
	 ---  BRANCH (ram, 0x4356c8, 4)

00435d20: _li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

00435d24: lw t9,-0x7aac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8554, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d28: nop

00435d2c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x435d34, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

00435d30: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00435d34: b 0x00435c80
	 ---  BRANCH (ram, 0x435c80, 4)

00435d38: _nop

00435d3c: beq v0,v1,0x00435b14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x435b14, 4) , (unique, 0x1200, 1)

00435d40: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

00435d44: beq v0,v1,0x00435b14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x435b14, 4) , (unique, 0x1200, 1)

00435d48: _nop

00435d4c: b 0x00435d00
	 ---  BRANCH (ram, 0x435d00, 4)

00435d50: _nop

00435d54: lw v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d58: li a0,0x12
	(register, 0x10, 4) COPY (const, 0x12, 4)

00435d5c: andi v1,v1,0x7f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x7f, 4)

00435d60: beq v1,a0,0x00435d14
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x10, 4) COPY (const, 0x11, 4)
	 ---  CBRANCH (ram, 0x435d14, 4) , (unique, 0x1200, 1)

00435d64: _li a0,0x11
	(register, 0x10, 4) COPY (const, 0x11, 4)

00435d68: bne v1,a0,0x00435ab4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x435ab4, 4) , (unique, 0x1700, 1)

00435d6c: _nop

00435d70: b 0x00435c3c
	 ---  BRANCH (ram, 0x435c3c, 4)

00435d74: _nop

00435d78: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d7c: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d80: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d84: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435d88: addiu a3,a3,0x570c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x570c, 4)

00435d8c: li a2,0x1c2
	(register, 0x18, 4) COPY (const, 0x1c2, 4)

00435d90: addiu a1,a1,-0x6574
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a8c, 4)

00435d94: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x435d9c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5670, 4)
	 ---  CALL (ram, 0x425590, 4)

00435d98: _addiu a0,a0,0x5670
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5670, 4)

00435d9c: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435da0: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435da4: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435da8: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435dac: addiu a3,a3,0x570c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x570c, 4)

00435db0: li a2,0x25f
	(register, 0x18, 4) COPY (const, 0x25f, 4)

00435db4: addiu a1,a1,-0x6574
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a8c, 4)

00435db8: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x435dc0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x56b4, 4)
	 ---  CALL (ram, 0x425590, 4)

00435dbc: _addiu a0,a0,0x56b4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x56b4, 4)

00435dc0: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435dc4: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435dc8: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435dcc: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00435dd0: addiu a3,a3,0x570c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x570c, 4)

00435dd4: addiu a1,a1,-0x6574
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff9a8c, 4)

00435dd8: bal 0x00425590
	(register, 0x7c, 4) COPY (const, 0x435de0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5614, 4)
	 ---  CALL (ram, 0x425590, 4)

00435ddc: _addiu a0,a0,0x5614
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x5614, 4)

00435de0: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

00435de4: li v1,0x581
	(register, 0xc, 4) COPY (const, 0x581, 4)

00435de8: srlv v0,v1,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

00435dec: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00435df0: beq v0,zero,0x00435d00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x435d00, 4) , (unique, 0x1200, 1)

00435df4: _nop

00435df8: b 0x00435c80
	 ---  BRANCH (ram, 0x435c80, 4)

00435dfc: _nop

