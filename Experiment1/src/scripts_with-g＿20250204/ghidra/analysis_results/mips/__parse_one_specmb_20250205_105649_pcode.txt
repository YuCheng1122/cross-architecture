Function: __parse_one_specmb
Address: 0042c780
P-code:

0042c780: lui gp,0x9
	(register, 0x70, 4) INT_LEFT (const, 0x9, 4) , (const, 0x10, 4)

0042c784: addiu gp,gp,-0x1920
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffe6e0, 4)

0042c788: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0042c78c: addiu sp,sp,-0x30
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffd0, 4)

0042c790: lhu v0,0xc(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c794: sw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0042c798: sw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0042c79c: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0042c7a0: or s0,a2,zero
	(register, 0x40, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042c7a4: lw s1,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c7a8: li a2,-0x1
	(register, 0x18, 4) COPY (const, 0xffffffff, 4)

0042c7ac: sw s2,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042c7b0: sw ra,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0042c7b4: sw s3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0042c7b8: andi v0,v0,0xe047
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xe047, 4)

0042c7bc: sw a2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042c7c0: addiu v1,a0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042c7c4: li a2,0x20
	(register, 0x18, 4) COPY (const, 0x20, 4)

0042c7c8: sw a2,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042c7cc: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c7d0: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042c7d4: sb zero,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0042c7d8: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c7dc: nop

0042c7e0: addiu t1,v0,-0x30
	(register, 0x24, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042c7e4: sltiu a2,t1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x24, 4) , (const, 0xa, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

0042c7e8: bne a2,zero,0x0042cbf0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cbf0, 4) , (unique, 0x1700, 1)

0042c7ec: _or s2,a1,zero
	(register, 0x48, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042c7f0: lw a2,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c7f4: nop

0042c7f8: addiu a2,a2,-0x4bd0
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffb430, 4)

0042c7fc: addiu v0,v0,-0x20
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffe0, 4)

0042c800: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0042c804: sltiu a0,v0,0x2a
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2a, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0042c808: beq a0,zero,0x0042c850
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42c850, 4) , (unique, 0x1200, 1)

0042c80c: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042c810: addu v0,a2,v0
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0042c814: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c818: nop

0042c81c: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

0042c820: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0042c824: _nop

0042c828: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c82c: nop

0042c830: ori v0,v0,0x10
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x10, 4)

0042c834: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c838: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042c83c: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042c840: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c844: nop

0042c848: bne v0,zero,0x0042c800
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffe0, 4)
	 ---  CBRANCH (ram, 0x42c800, 4) , (unique, 0x1700, 1)

0042c84c: _addiu v0,v0,-0x20
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffe0, 4)

0042c850: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c854: nop

0042c858: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0042c85c: beq v0,zero,0x0042c870
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x42c870, 4) , (unique, 0x1200, 1)

0042c860: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042c864: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0042c868: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c86c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042c870: sw v0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c874: sw zero,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042c878: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c87c: li a0,0x2a
	(register, 0x10, 4) COPY (const, 0x2a, 4)

0042c880: beq v0,a0,0x0042cbb8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x42cbb8, 4) , (unique, 0x1200, 1)

0042c884: _addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042c888: sltiu a0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0042c88c: bne a0,zero,0x0042ca00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42ca00, 4) , (unique, 0x1700, 1)

0042c890: _addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042c894: or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042c898: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042c89c: sw v0,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c8a0: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c8a4: lbu a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c8a8: li v0,0x2e
	(register, 0x8, 4) COPY (const, 0x2e, 4)

0042c8ac: beq a0,v0,0x0042cab0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42cab0, 4) , (unique, 0x1200, 1)

0042c8b0: _addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042c8b4: lw a0,-0x7b74(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff848c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c8b8: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c8bc: lui a1,0x1fbf
	(register, 0x14, 4) INT_LEFT (const, 0x1fbf, 4) , (const, 0x10, 4)

0042c8c0: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c8c4: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

0042c8c8: bne a0,zero,0x0042caf0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42caf0, 4) , (unique, 0x1700, 1)

0042c8cc: _sw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c8d0: addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042c8d4: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042c8d8: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c8dc: nop

0042c8e0: addiu v0,v0,-0x4c
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffb4, 4)

0042c8e4: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0042c8e8: sltiu a1,v0,0x2f
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x2f, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0042c8ec: beq a1,zero,0x0042c930
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42c930, 4) , (unique, 0x1200, 1)

0042c8f0: _sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042c8f4: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c8f8: nop

0042c8fc: addiu a1,a1,-0x4b28
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffb4d8, 4)

0042c900: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0042c904: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c908: nop

0042c90c: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

0042c910: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0042c914: _nop

0042c918: lbu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c91c: addiu a1,v1,0x2
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042c920: andi v0,v0,0x5f
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x5f, 4)

0042c924: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042c928: sb v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0042c92c: or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042c930: lw v0,-0x7bb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8448, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c934: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042c938: lbu a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0042c93c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c940: li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

0042c944: sw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042c948: bne v0,zero,0x0042cb50
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x42cb50, 4) , (unique, 0x1700, 1)

0042c94c: _sw s1,0x30(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0042c950: addiu v0,a0,-0x41
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffbf, 4)

0042c954: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0042c958: sltiu v1,v0,0x38
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x38, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042c95c: lw a2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c960: beq v1,zero,0x0042cce4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x42cce4, 4) , (unique, 0x1200, 1)

0042c964: _sw a1,0x2c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042c968: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042c96c: lw v0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c970: nop

0042c974: addiu v0,v0,-0x4a6c
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffb594, 4)

0042c978: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042c97c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042c980: nop

0042c984: addu v0,v0,gp
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x70, 4)

0042c988: jr v0
	(unique, 0xc80, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x8, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0042c98c: _nop

0042c990: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0042c994: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c998: _sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042c99c: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c9a0: nop

0042c9a4: ori v0,v0,0x400
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x400, 4)

0042c9a8: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c9ac: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c9b0: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c9b4: nop

0042c9b8: ori v0,v0,0x200
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x200, 4)

0042c9bc: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c9c0: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c9c4: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c9c8: nop

0042c9cc: ori v0,v0,0x100
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x100, 4)

0042c9d0: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c9d4: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c9d8: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c9dc: nop

0042c9e0: ori v0,v0,0x1000
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x1000, 4)

0042c9e4: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c9e8: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042c9ec: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042c9f0: nop

0042c9f4: ori v0,v0,0x800
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x800, 4)

0042c9f8: b 0x0042c838
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c838, 4)

0042c9fc: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042ca00: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042ca04: lbu t1,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ca08: nop

0042ca0c: addiu a1,t1,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffd0, 4)

0042ca10: sltiu v1,a1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042ca14: beq v1,zero,0x0042cf84
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x42cf84, 4) , (unique, 0x1200, 1)

0042ca18: _lui t0,0x7fff
	(register, 0x20, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042ca1c: lui a2,0xccc
	(register, 0x18, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042ca20: ori t0,t0,0xffff
	(register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0xffff, 4)

0042ca24: ori a2,a2,0xcccd
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xcccd, 4)

0042ca28: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042ca2c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0042ca30: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042ca34: subu v1,t0,a1
	(register, 0xc, 4) INT_SUB (register, 0x20, 4) , (register, 0x14, 4)

0042ca38: slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042ca3c: bne v1,zero,0x0042cf44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42cf44, 4) , (unique, 0x1700, 1)

0042ca40: _addiu v1,a0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042ca44: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ca48: lbu t1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ca4c: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0042ca50: addiu a1,t1,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffd0, 4)

0042ca54: sltiu t1,a1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0xa, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5280, 1)

0042ca58: beq t1,zero,0x0042cf88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x42cf88, 4) , (unique, 0x1200, 1)

0042ca5c: _slt t1,v0,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5080, 1)

0042ca60: bne t1,zero,0x0042d5d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d5d0, 4) , (unique, 0x1700, 1)

0042ca64: _nop

0042ca68: addiu v1,a0,0x2
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0042ca6c: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ca70: lbu v0,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ca74: nop

0042ca78: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042ca7c: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042ca80: beq v0,zero,0x0042c898
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42c898, 4) , (unique, 0x1200, 1)

0042ca84: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042ca88: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042ca8c: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ca90: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ca94: nop

0042ca98: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042ca9c: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042caa0: bne v0,zero,0x0042ca88
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ca88, 4) , (unique, 0x1700, 1)

0042caa4: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042caa8: b 0x0042c89c
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x42c89c, 4)

0042caac: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042cab0: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cab4: lbu v0,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cab8: li a1,0x2a
	(register, 0x14, 4) COPY (const, 0x2a, 4)

0042cabc: beq v0,a1,0x0042cf94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x42cf94, 4) , (unique, 0x1200, 1)

0042cac0: _addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042cac4: sltiu a1,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0042cac8: bne a1,zero,0x0042cdb0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_LEFT (const, 0x1fbf, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x42cdb0, 4) , (unique, 0x1700, 1)

0042cacc: _lui a1,0x1fbf
	(register, 0x14, 4) INT_LEFT (const, 0x1fbf, 4) , (const, 0x10, 4)

0042cad0: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cad4: lw a0,-0x7b74(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff848c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cad8: lw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cadc: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cae0: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

0042cae4: sw zero,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042cae8: beq a0,zero,0x0042c8d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42c8d0, 4) , (unique, 0x1200, 1)

0042caec: _sw v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042caf0: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042caf4: nop

0042caf8: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042cafc: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0042cb00: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb04: nop

0042cb08: beq v0,zero,0x0042c8d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42c8d0, 4) , (unique, 0x1200, 1)

0042cb0c: _or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042cb10: lw t9,-0x7b58(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff84a8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb14: nop

0042cb18: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x42cb20, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  CALLIND (register, 0x80, 4)

0042cb1c: _addiu a0,sp,0x30
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0042cb20: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb24: lw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb28: bne v0,zero,0x0042c8d4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42c8d4, 4) , (unique, 0x1700, 1)

0042cb2c: _addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042cb30: lw v0,-0x7bb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8448, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb34: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cb38: lbu a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cb3c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb40: li s1,-0x1
	(register, 0x44, 4) COPY (const, 0xffffffff, 4)

0042cb44: sw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cb48: beq v0,zero,0x0042c950
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x42c950, 4) , (unique, 0x1200, 1)

0042cb4c: _sw s1,0x30(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0042cb50: lw v0,-0x7bac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8454, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb54: sll v1,a0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0042cb58: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb5c: nop

0042cb60: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042cb64: lw t9,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb68: nop

0042cb6c: beq t9,zero,0x0042c950
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x42c950, 4) , (unique, 0x1200, 1)

0042cb70: _addiu a3,s0,0x30
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (const, 0x30, 4)

0042cb74: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0042cb78: addiu a2,s0,0x28
	(register, 0x18, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

0042cb7c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x42cb84, 4)
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  CALLIND (register, 0x80, 4)

0042cb80: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0042cb84: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb88: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb8c: bltz v0,0x0042c950
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42c950, 4) , (unique, 0x1600, 1)

0042cb90: _sw v0,0x2c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cb94: lw v1,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cb98: nop

0042cb9c: bne v1,s1,0x0042cce8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x42cce8, 4) , (unique, 0x1700, 1)

0042cba0: _nop

0042cba4: beq v0,zero,0x0042cce8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cce8, 4) , (unique, 0x1200, 1)

0042cba8: _nop

0042cbac: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042cbb0: b 0x0042cce8
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42cce8, 4)

0042cbb4: _addu s3,s3,v0
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)

0042cbb8: addiu a1,v1,0x1
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042cbbc: sw a1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042cbc0: lbu v0,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cbc4: nop

0042cbc8: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042cbcc: sltiu a0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0042cbd0: bne a0,zero,0x0042cfcc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42cfcc, 4) , (unique, 0x1700, 1)

0042cbd4: _addiu a0,v1,0x2
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042cbd8: sw s2,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042cbdc: sw a1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042cbe0: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042cbe4: addiu s2,s2,0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)

0042cbe8: b 0x0042c898
	(register, 0x4c, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42c898, 4)

0042cbec: _li s3,0x1
	(register, 0x4c, 4) COPY (const, 0x1, 4)

0042cbf0: addiu a2,a0,0x2
	(register, 0x18, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0042cbf4: sw a2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042cbf8: lbu t4,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cbfc: nop

0042cc00: addiu t0,t4,-0x30
	(register, 0x20, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffd0, 4)

0042cc04: sltiu v0,t0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042cc08: beq v0,zero,0x0042d414
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d414, 4) , (unique, 0x1200, 1)

0042cc0c: _or a1,t1,zero
	(register, 0x14, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0042cc10: lui t3,0x7fff
	(register, 0x2c, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042cc14: lui t2,0xccc
	(register, 0x28, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042cc18: ori t3,t3,0xffff
	(register, 0x2c, 4) INT_OR (register, 0x2c, 4) , (const, 0xffff, 4)

0042cc1c: ori t2,t2,0xcccd
	(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xcccd, 4)

0042cc20: sll v0,a1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)

0042cc24: addu v0,v0,a1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

0042cc28: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042cc2c: subu a1,t3,t0
	(register, 0x14, 4) INT_SUB (register, 0x2c, 4) , (register, 0x20, 4)

0042cc30: slt a1,a1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

0042cc34: bne a1,zero,0x0042ccbc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42ccbc, 4) , (unique, 0x1700, 1)

0042cc38: _addiu t1,a2,0x1
	(register, 0x24, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0042cc3c: sw t1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0042cc40: lbu t4,0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x30, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cc44: addu a1,t0,v0
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

0042cc48: addiu t0,t4,-0x30
	(register, 0x20, 4) INT_ADD (register, 0x30, 4) , (const, 0xffffffd0, 4)

0042cc4c: sltiu v0,t0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042cc50: beq v0,zero,0x0042cf68
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x14, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x42cf68, 4) , (unique, 0x1200, 1)

0042cc54: _slt v0,a1,t2
	(unique, 0x5080, 1) INT_SLESS (register, 0x14, 4) , (register, 0x28, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0042cc58: bne v0,zero,0x0042d5d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42d5d8, 4) , (unique, 0x1700, 1)

0042cc5c: _addiu v0,a2,0x2
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)

0042cc60: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cc64: lbu a1,0x2(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cc68: nop

0042cc6c: addiu a2,a1,-0x30
	(register, 0x18, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd0, 4)

0042cc70: sltiu a2,a2,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0xa, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

0042cc74: beq a2,zero,0x0042cca0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cca0, 4) , (unique, 0x1200, 1)

0042cc78: _nop

0042cc7c: or t1,v0,zero
	(register, 0x24, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042cc80: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042cc84: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cc88: lbu a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cc8c: nop

0042cc90: addiu a2,a1,-0x30
	(register, 0x18, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd0, 4)

0042cc94: sltiu a2,a2,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0xa, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

0042cc98: bne a2,zero,0x0042cc7c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cc7c, 4) , (unique, 0x1700, 1)

0042cc9c: _nop

0042cca0: li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042cca4: beq a1,v0,0x0042d1cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42d1cc, 4) , (unique, 0x1200, 1)

0042cca8: _nop

0042ccac: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ccb0: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ccb4: b 0x0042c7f0
	 ---  BRANCH (ram, 0x42c7f0, 4)

0042ccb8: _nop

0042ccbc: addiu v0,a2,0x1
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0042ccc0: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042ccc4: lbu a1,0x1(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ccc8: nop

0042cccc: addiu t0,a1,-0x30
	(register, 0x20, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd0, 4)

0042ccd0: sltiu t0,t0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0xa, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

0042ccd4: bne t0,zero,0x0042cc7c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cc7c, 4) , (unique, 0x1700, 1)

0042ccd8: _or t1,a2,zero
	(register, 0x24, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042ccdc: b 0x0042cca4
	(register, 0x8, 4) COPY (const, 0x24, 4)
	 ---  BRANCH (ram, 0x42cca4, 4)

0042cce0: _li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042cce4: sw zero,0x2c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042cce8: bne a0,zero,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042ccec: _nop

0042ccf0: lw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ccf4: lw ra,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042ccf8: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0042ccfc: sw v0,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cd00: sw v0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cd04: lw s2,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd08: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd0c: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd10: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042cd14: lw s3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd18: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  RETURN (register, 0x80, 4)

0042cd1c: _addiu sp,sp,0x30
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0042cd20: lh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3100, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x3100, 2)

0042cd24: nop

0042cd28: bltz v0,0x0042cd34
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x107, 4)
	 ---  CBRANCH (ram, 0x42cd34, 4) , (unique, 0x1600, 1)

0042cd2c: _li v1,0x107
	(register, 0xc, 4) COPY (const, 0x107, 4)

0042cd30: li v1,0x7
	(register, 0xc, 4) COPY (const, 0x7, 4)

0042cd34: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042cd38: beq a2,v0,0x0042d59c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42d59c, 4) , (unique, 0x1200, 1)

0042cd3c: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042cd40: lw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd44: lw t9,-0x7b78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8488, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd48: sw a0,0x14(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cd4c: bal 0x00437b60
	(register, 0x7c, 4) COPY (const, 0x42cd54, 4)
	(register, 0x14, 4) COPY (const, 0x25, 4)
	 ---  CALL (ram, 0x437b60, 4)

0042cd50: _li a1,0x25
	(register, 0x14, 4) COPY (const, 0x25, 4)

0042cd54: lw ra,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd58: sw v0,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cd5c: lw s2,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd60: lw s1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd64: lw s0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd68: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0042cd6c: lw s3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cd70: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  RETURN (register, 0x80, 4)

0042cd74: _addiu sp,sp,0x30
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0042cd78: lh v1,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3100, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x3100, 2)

0042cd7c: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042cd80: bltz v1,0x0042cd34
	(unique, 0x1600, 1) INT_SLESS (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x100, 4)
	 ---  CBRANCH (ram, 0x42cd34, 4) , (unique, 0x1600, 1)

0042cd84: _li v1,0x100
	(register, 0xc, 4) COPY (const, 0x100, 4)

0042cd88: andi v1,v0,0x2000
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x2000, 4)

0042cd8c: bne v1,zero,0x0042cd34
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x200, 4)
	 ---  CBRANCH (ram, 0x42cd34, 4) , (unique, 0x1700, 1)

0042cd90: _li v1,0x200
	(register, 0xc, 4) COPY (const, 0x200, 4)

0042cd94: andi v1,v0,0x4000
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x4000, 4)

0042cd98: bne v1,zero,0x0042d4fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x40, 4)
	 ---  CBRANCH (ram, 0x42d4fc, 4) , (unique, 0x1700, 1)

0042cd9c: _andi v0,v0,0x40
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x40, 4)

0042cda0: beq v0,zero,0x0042d16c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x42d16c, 4) , (unique, 0x1200, 1)

0042cda4: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042cda8: b 0x0042cd38
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd38, 4)

0042cdac: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0042cdb0: addiu a0,v1,0x2
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042cdb4: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cdb8: lbu t0,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cdbc: nop

0042cdc0: addiu a1,t0,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

0042cdc4: sltiu v1,a1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042cdc8: beq v1,zero,0x0042d1e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d1e0, 4) , (unique, 0x1200, 1)

0042cdcc: _or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cdd0: lui a3,0x7fff
	(register, 0x1c, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042cdd4: lui a2,0xccc
	(register, 0x18, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042cdd8: ori a3,a3,0xffff
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (const, 0xffff, 4)

0042cddc: ori a2,a2,0xcccd
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xcccd, 4)

0042cde0: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042cde4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0042cde8: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042cdec: subu v1,a3,a1
	(register, 0xc, 4) INT_SUB (register, 0x1c, 4) , (register, 0x14, 4)

0042cdf0: slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042cdf4: bne v1,zero,0x0042d0a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d0a0, 4) , (unique, 0x1700, 1)

0042cdf8: _addiu v1,a0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042cdfc: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ce00: lbu t0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ce04: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0042ce08: addiu a1,t0,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffd0, 4)

0042ce0c: sltiu t0,a1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0xa, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

0042ce10: beq t0,zero,0x0042d1e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x42d1e0, 4) , (unique, 0x1200, 1)

0042ce14: _slt t0,v0,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5080, 1)

0042ce18: bne t0,zero,0x0042d5e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d5e0, 4) , (unique, 0x1700, 1)

0042ce1c: _nop

0042ce20: addiu v1,a0,0x2
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0042ce24: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ce28: lbu v0,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ce2c: nop

0042ce30: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042ce34: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042ce38: beq v0,zero,0x0042c8b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42c8b4, 4) , (unique, 0x1200, 1)

0042ce3c: _nop

0042ce40: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042ce44: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042ce48: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ce4c: nop

0042ce50: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042ce54: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042ce58: bne v0,zero,0x0042ce40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ce40, 4) , (unique, 0x1700, 1)

0042ce5c: _nop

0042ce60: b 0x0042c8b4
	 ---  BRANCH (ram, 0x42c8b4, 4)

0042ce64: _nop

0042ce68: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042ce6c: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042ce70: li a0,-0x8000
	(register, 0x10, 4) COPY (const, 0xffff8000, 4)

0042ce74: or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

0042ce78: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042ce7c: b 0x0042cb30
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cb30, 4)

0042ce80: _addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042ce84: lbu a1,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0042ce88: li v0,0x68
	(register, 0x8, 4) COPY (const, 0x68, 4)

0042ce8c: beq a1,v0,0x0042d1e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42d1e8, 4) , (unique, 0x1200, 1)

0042ce90: _nop

0042ce94: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042ce98: addiu a1,v1,0x2
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042ce9c: ori v0,v0,0x4000
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x4000, 4)

0042cea0: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cea4: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042cea8: b 0x0042c930
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042ceac: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042ceb0: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042ceb4: li a1,0x6c
	(register, 0x14, 4) COPY (const, 0x6c, 4)

0042ceb8: ori v0,v0,0x2000
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2000, 4)

0042cebc: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042cec0: lbu a2,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cec4: nop

0042cec8: beq a2,a1,0x0042d330
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x42d330, 4) , (unique, 0x1200, 1)

0042cecc: _nop

0042ced0: addiu v0,v1,0x2
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042ced4: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042ced8: b 0x0042c930
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042cedc: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042cee0: lbu v0,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cee4: li a1,0x66
	(register, 0x14, 4) COPY (const, 0x66, 4)

0042cee8: beq v0,a1,0x0042d200
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)
	 ---  CBRANCH (ram, 0x42d200, 4) , (unique, 0x1200, 1)

0042ceec: _addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042cef0: sltiu a1,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0042cef4: bne a1,zero,0x0042d480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d480, 4) , (unique, 0x1700, 1)

0042cef8: _nop

0042cefc: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042cf00: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0042cf04: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042cf08: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0042cf0c: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042cf10: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0042cf14: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cf18: sb v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0042cf1c: b 0x0042c930
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042cf20: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042cf24: lbu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cf28: addiu a1,v1,0x2
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042cf2c: li v1,-0x60
	(register, 0xc, 4) COPY (const, 0xffffffa0, 4)

0042cf30: or v0,v0,v1
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0042cf34: sb v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0042cf38: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cf3c: b 0x0042c930
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042cf40: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042cf44: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042cf48: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cf4c: nop

0042cf50: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042cf54: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042cf58: bne v0,zero,0x0042ca88
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ca88, 4) , (unique, 0x1700, 1)

0042cf5c: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042cf60: b 0x0042c89c
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x42c89c, 4)

0042cf64: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042cf68: beq a1,zero,0x0042ccac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ccac, 4) , (unique, 0x1200, 1)

0042cf6c: _nop

0042cf70: li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042cf74: bne t4,v0,0x0042ccac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42ccac, 4) , (unique, 0x1700, 1)

0042cf78: _nop

0042cf7c: b 0x0042d42c
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x42d42c, 4)

0042cf80: _addiu v1,a2,0x2
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)

0042cf84: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042cf88: sw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042cf8c: b 0x0042c898
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42c898, 4)

0042cf90: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042cf94: addiu a2,v1,0x2
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042cf98: sw a2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042cf9c: lbu a0,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cfa0: nop

0042cfa4: addiu a0,a0,-0x30
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffd0, 4)

0042cfa8: sltiu v0,a0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042cfac: bne v0,zero,0x0042d338
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x42d338, 4) , (unique, 0x1700, 1)

0042cfb0: _addiu a1,v1,0x3
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)

0042cfb4: sw s2,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042cfb8: addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042cfbc: sw a2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0042cfc0: or v1,a2,zero
	(register, 0xc, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042cfc4: b 0x0042c8b4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42c8b4, 4)

0042cfc8: _addiu s2,s2,0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)

0042cfcc: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042cfd0: lbu t2,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0042cfd4: nop

0042cfd8: addiu a2,t2,-0x30
	(register, 0x18, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)

0042cfdc: sltiu t0,a2,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0xa, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5280, 1)

0042cfe0: beq t0,zero,0x0042d504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d504, 4) , (unique, 0x1200, 1)

0042cfe4: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042cfe8: lui t1,0x7fff
	(register, 0x24, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042cfec: lui t0,0xccc
	(register, 0x20, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042cff0: ori t1,t1,0xffff
	(register, 0x24, 4) INT_OR (register, 0x24, 4) , (const, 0xffff, 4)

0042cff4: ori t0,t0,0xcccd
	(register, 0x20, 4) INT_OR (register, 0x20, 4) , (const, 0xcccd, 4)

0042cff8: sll v0,v1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0042cffc: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0042d000: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042d004: subu v1,t1,a2
	(register, 0xc, 4) INT_SUB (register, 0x24, 4) , (register, 0x18, 4)

0042d008: slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042d00c: bne v1,zero,0x0042d078
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d078, 4) , (unique, 0x1700, 1)

0042d010: _addiu t3,a0,0x1
	(register, 0x2c, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042d014: sw t3,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0042d018: lbu t2,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d01c: addu v1,a2,v0
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0042d020: addiu a2,t2,-0x30
	(register, 0x18, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)

0042d024: sltiu v0,a2,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d028: beq v0,zero,0x0042d180
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x42d180, 4) , (unique, 0x1200, 1)

0042d02c: _slt v0,v1,t0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0042d030: bne v0,zero,0x0042d5b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42d5b0, 4) , (unique, 0x1700, 1)

0042d034: _addiu v0,a0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0042d038: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d03c: lbu v1,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d040: nop

0042d044: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d048: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d04c: beq v1,zero,0x0042cbd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42cbd8, 4) , (unique, 0x1200, 1)

0042d050: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d054: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d058: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d05c: nop

0042d060: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d064: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d068: bne v1,zero,0x0042d054
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d054, 4) , (unique, 0x1700, 1)

0042d06c: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d070: b 0x0042cbdc
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cbdc, 4)

0042d074: _sw s2,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d078: addiu v0,a0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042d07c: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d080: lbu v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d084: nop

0042d088: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d08c: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d090: bne v1,zero,0x0042d054
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d054, 4) , (unique, 0x1700, 1)

0042d094: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d098: b 0x0042cbdc
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cbdc, 4)

0042d09c: _sw s2,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d0a0: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d0a4: lbu v0,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d0a8: nop

0042d0ac: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042d0b0: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d0b4: bne v0,zero,0x0042ce40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ce40, 4) , (unique, 0x1700, 1)

0042d0b8: _nop

0042d0bc: b 0x0042c8b4
	 ---  BRANCH (ram, 0x42c8b4, 4)

0042d0c0: _nop

0042d0c4: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0042d0c8: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d0cc: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d0d0: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d0d4: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d0d8: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d0dc: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d0e0: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

0042d0e4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d0e8: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d0ec: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d0f0: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d0f4: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d0f8: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d0fc: li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

0042d100: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d104: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d108: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d10c: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d110: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d114: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d118: li v1,0x5
	(register, 0xc, 4) COPY (const, 0x5, 4)

0042d11c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d120: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d124: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d128: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d12c: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d130: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d134: li v1,0x800
	(register, 0xc, 4) COPY (const, 0x800, 4)

0042d138: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d13c: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d140: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d144: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d148: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d14c: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d150: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0042d154: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d158: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d15c: _sw v1,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d160: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d164: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d168: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d16c: bne a2,v0,0x0042cd40
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cd40, 4) , (unique, 0x1700, 1)

0042d170: _sw zero,0x28(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0042d174: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d178: b 0x0042cd40
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42cd40, 4)

0042d17c: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0042d180: beq v1,zero,0x0042cbd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x24, 4)
	 ---  CBRANCH (ram, 0x42cbd8, 4) , (unique, 0x1200, 1)

0042d184: _li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042d188: bne t2,v0,0x0042cbd8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42cbd8, 4) , (unique, 0x1700, 1)

0042d18c: _nop

0042d190: addiu v0,v1,-0x1
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0042d194: sw v0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d198: lw v0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d19c: nop

0042d1a0: sltu a2,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5380, 1)

0042d1a4: beq a2,zero,0x0042d1b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d1b0, 4) , (unique, 0x1200, 1)

0042d1a8: _nop

0042d1ac: or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0042d1b0: sw v0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d1b4: lw v0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d1b8: addiu v1,a0,0x2
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)

0042d1bc: bgez v0,0x0042c894
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42c894, 4) , (unique, 0x1300, 1)

0042d1c0: _sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d1c4: b 0x0042cbdc
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cbdc, 4)

0042d1c8: _sw s2,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d1cc: addiu v1,t1,0x2
	(register, 0xc, 4) INT_ADD (register, 0x24, 4) , (const, 0x2, 4)

0042d1d0: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d1d4: lbu v0,0x2(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d1d8: b 0x0042c7f0
	 ---  BRANCH (ram, 0x42c7f0, 4)

0042d1dc: _nop

0042d1e0: b 0x0042c8b4
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42c8b4, 4)

0042d1e4: _sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d1e8: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042d1ec: addiu a0,v1,0x3
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)

0042d1f0: ori v0,v0,0x40
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x40, 4)

0042d1f4: sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042d1f8: b 0x0042c930
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042d1fc: _addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042d200: addiu a0,v1,0x2
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042d204: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042d208: lbu a1,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d20c: nop

0042d210: addiu a1,a1,-0x30
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffd0, 4)

0042d214: sltiu v0,a1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d218: beq v0,zero,0x0042cefc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cefc, 4) , (unique, 0x1200, 1)

0042d21c: _or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d220: addiu a0,v1,0x3
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)

0042d224: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042d228: lbu t2,0x3(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d22c: nop

0042d230: addiu t1,t2,-0x30
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)

0042d234: sltiu v1,t1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x24, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d238: beq v1,zero,0x0042d45c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x20, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d45c, 4) , (unique, 0x1200, 1)

0042d23c: _li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0042d240: lui a3,0x7fff
	(register, 0x1c, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042d244: lui a2,0xccc
	(register, 0x18, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042d248: addiu a1,a0,0x1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042d24c: ori a3,a3,0xffff
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (const, 0xffff, 4)

0042d250: ori a2,a2,0xcccd
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xcccd, 4)

0042d254: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042d258: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0042d25c: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042d260: subu v1,a3,t1
	(register, 0xc, 4) INT_SUB (register, 0x1c, 4) , (register, 0x24, 4)

0042d264: slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042d268: bne v1,zero,0x0042d30c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x42d30c, 4) , (unique, 0x1700, 1)

0042d26c: _addu v0,v0,t1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)

0042d270: sw a1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042d274: lbu t2,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d278: nop

0042d27c: addiu t1,t2,-0x30
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)

0042d280: sltiu t2,t1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x24, 4) , (const, 0xa, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5280, 1)

0042d284: or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d288: beq t2,zero,0x0042d520
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d520, 4) , (unique, 0x1200, 1)

0042d28c: _addiu a0,a1,0x1
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0042d290: slt v1,v0,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042d294: bne v1,zero,0x0042d594
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d594, 4) , (unique, 0x1700, 1)

0042d298: _nop

0042d29c: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042d2a0: lbu v0,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d2a4: nop

0042d2a8: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042d2ac: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d2b0: beq v0,zero,0x0042d2d4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x42d2d4, 4) , (unique, 0x1200, 1)

0042d2b4: _addiu v1,a1,0x2
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0042d2b8: sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d2bc: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d2c0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0042d2c4: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042d2c8: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d2cc: bne v0,zero,0x0042d2b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d2b8, 4) , (unique, 0x1700, 1)

0042d2d0: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042d2d4: bne t0,zero,0x0042cefc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x42cefc, 4) , (unique, 0x1700, 1)

0042d2d8: _li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0042d2dc: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d2e0: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0042d2e4: li a1,0x8
	(register, 0x14, 4) COPY (const, 0x8, 4)

0042d2e8: beq v0,a1,0x0042d46c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x14, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x42d46c, 4) , (unique, 0x1200, 1)

0042d2ec: _li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0042d2f0: bne v0,a1,0x0042d5e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x42d5e8, 4) , (unique, 0x1700, 1)

0042d2f4: _nop

0042d2f8: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042d2fc: nop

0042d300: ori v0,v0,0x4000
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x4000, 4)

0042d304: b 0x0042c930
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c930, 4)

0042d308: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042d30c: sw a1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042d310: lbu v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d314: or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d318: addiu v0,v0,-0x30
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffd0, 4)

0042d31c: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0042d320: bne v0,zero,0x0042d2b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d2b8, 4) , (unique, 0x1700, 1)

0042d324: _addiu v1,a1,0x1
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0042d328: b 0x0042d2d4
	 ---  BRANCH (ram, 0x42d2d4, 4)

0042d32c: _nop

0042d330: b 0x0042ce70
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x42ce70, 4)

0042d334: _addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042d338: sw a1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0042d33c: lbu v1,0x3(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d340: nop

0042d344: addiu t0,v1,-0x30
	(register, 0x20, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d348: sltiu t1,t0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0xa, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5280, 1)

0042d34c: beq t1,zero,0x0042d55c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d55c, 4) , (unique, 0x1200, 1)

0042d350: _or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d354: lui t1,0x7fff
	(register, 0x24, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0042d358: lui a0,0xccc
	(register, 0x10, 4) INT_LEFT (const, 0xccc, 4) , (const, 0x10, 4)

0042d35c: ori t1,t1,0xffff
	(register, 0x24, 4) INT_OR (register, 0x24, 4) , (const, 0xffff, 4)

0042d360: ori a0,a0,0xcccd
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0xcccd, 4)

0042d364: sll v1,v0,0x2
	(register, 0xc, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0042d368: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0042d36c: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0042d370: subu v1,t1,t0
	(register, 0xc, 4) INT_SUB (register, 0x24, 4) , (register, 0x20, 4)

0042d374: slt v1,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042d378: bne v1,zero,0x0042d3ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d3ec, 4) , (unique, 0x1700, 1)

0042d37c: _addiu t2,a1,0x1
	(register, 0x28, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0042d380: sw t2,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

0042d384: lbu v1,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d388: addu v0,v0,t0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x20, 4)

0042d38c: addiu t0,v1,-0x30
	(register, 0x20, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d390: sltiu t3,t0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x20, 4) , (const, 0xa, 4)
	(register, 0x2c, 4) INT_ZEXT (unique, 0x5280, 1)

0042d394: beq t3,zero,0x0042d4b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d4b0, 4) , (unique, 0x1200, 1)

0042d398: _nop

0042d39c: slt v1,v0,a0
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0042d3a0: bne v1,zero,0x0042d58c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d58c, 4) , (unique, 0x1700, 1)

0042d3a4: _nop

0042d3a8: addiu v0,a1,0x2
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0042d3ac: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d3b0: lbu v1,0x2(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d3b4: nop

0042d3b8: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d3bc: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d3c0: beq v1,zero,0x0042cfb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42cfb4, 4) , (unique, 0x1200, 1)

0042d3c4: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d3c8: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d3cc: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d3d0: nop

0042d3d4: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d3d8: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d3dc: bne v1,zero,0x0042d3c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d3c8, 4) , (unique, 0x1700, 1)

0042d3e0: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d3e4: b 0x0042cfb8
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cfb8, 4)

0042d3e8: _sw s2,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d3ec: addiu v0,a1,0x1
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0042d3f0: sw v0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d3f4: lbu v1,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d3f8: nop

0042d3fc: addiu v1,v1,-0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd0, 4)

0042d400: sltiu v1,v1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0042d404: bne v1,zero,0x0042d3c8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x42d3c8, 4) , (unique, 0x1700, 1)

0042d408: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0042d40c: b 0x0042cfb8
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cfb8, 4)

0042d410: _sw s2,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d414: beq t1,zero,0x0042ccac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42ccac, 4) , (unique, 0x1200, 1)

0042d418: _nop

0042d41c: li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042d420: bne t4,v0,0x0042ccac
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42ccac, 4) , (unique, 0x1700, 1)

0042d424: _nop

0042d428: addiu v1,a0,0x3
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)

0042d42c: addiu v0,a1,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)

0042d430: sw v0,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d434: lw v0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d438: nop

0042d43c: sltu a0,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0042d440: beq a0,zero,0x0042d44c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42d44c, 4) , (unique, 0x1200, 1)

0042d444: _sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d448: or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d44c: sw v0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0042d450: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d454: b 0x0042c7f0
	 ---  BRANCH (ram, 0x42c7f0, 4)

0042d458: _nop

0042d45c: li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

0042d460: bne a1,v0,0x0042cefc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x42cefc, 4) , (unique, 0x1700, 1)

0042d464: _nop

0042d468: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d46c: lhu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0042d470: addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0042d474: ori v0,v0,0x40
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x40, 4)

0042d478: b 0x0042c930
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)
	 ---  BRANCH (ram, 0x42c930, 4)

0042d47c: _sh v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0042d480: addiu a0,v1,0x2
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0042d484: sw a0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0042d488: lbu t2,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d48c: nop

0042d490: addiu t1,t2,-0x30
	(register, 0x24, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffd0, 4)

0042d494: sltiu a1,t1,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x24, 4) , (const, 0xa, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0042d498: bne a1,zero,0x0042d240
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d240, 4) , (unique, 0x1700, 1)

0042d49c: _or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0042d4a0: addiu a1,v1,0x3
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)

0042d4a4: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d4a8: b 0x0042d2e4
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42d2e4, 4)

0042d4ac: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d4b0: beq v0,zero,0x0042cfb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x24, 4)
	 ---  CBRANCH (ram, 0x42cfb4, 4) , (unique, 0x1200, 1)

0042d4b4: _li a0,0x24
	(register, 0x10, 4) COPY (const, 0x24, 4)

0042d4b8: bne v1,a0,0x0042cfb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x42cfb4, 4) , (unique, 0x1700, 1)

0042d4bc: _nop

0042d4c0: addiu v1,v0,-0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0042d4c4: sw v1,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d4c8: lw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d4cc: nop

0042d4d0: sltu a0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0042d4d4: beq a0,zero,0x0042d4e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d4e0, 4) , (unique, 0x1200, 1)

0042d4d8: _nop

0042d4dc: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042d4e0: sw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d4e4: lw v0,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d4e8: addiu v1,a1,0x2
	(register, 0xc, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0042d4ec: bgez v0,0x0042c8b4
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x42c8b4, 4) , (unique, 0x1300, 1)

0042d4f0: _sw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0042d4f4: b 0x0042cfb8
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x42cfb8, 4)

0042d4f8: _sw s2,0x1c(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d4fc: b 0x0042cd34
	(register, 0xc, 4) COPY (const, 0x400, 4)
	 ---  BRANCH (ram, 0x42cd34, 4)

0042d500: _li v1,0x400
	(register, 0xc, 4) COPY (const, 0x400, 4)

0042d504: beq v0,zero,0x0042cbd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cbd8, 4) , (unique, 0x1200, 1)

0042d508: _nop

0042d50c: li v1,0x24
	(register, 0xc, 4) COPY (const, 0x24, 4)

0042d510: bne t2,v1,0x0042cbd8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cbd8, 4) , (unique, 0x1700, 1)

0042d514: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d518: b 0x0042d190
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42d190, 4)

0042d51c: _or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0042d520: beq t0,zero,0x0042d5b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x20, 4)
	 ---  CBRANCH (ram, 0x42d5b8, 4) , (unique, 0x1200, 1)

0042d524: _li a2,0x20
	(register, 0x18, 4) COPY (const, 0x20, 4)

0042d528: beq v0,a2,0x0042c930
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x21, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x42c930, 4) , (unique, 0x1200, 1)

0042d52c: _slti a2,v0,0x21
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x21, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)

0042d530: bne a2,zero,0x0042d574
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x42d574, 4) , (unique, 0x1700, 1)

0042d534: _li a2,0x8
	(register, 0x18, 4) COPY (const, 0x8, 4)

0042d538: li a0,0x40
	(register, 0x10, 4) COPY (const, 0x40, 4)

0042d53c: bne v0,a0,0x0042d584
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x42d584, 4) , (unique, 0x1700, 1)

0042d540: _nop

0042d544: lbu v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0042d548: li a0,-0x60
	(register, 0x10, 4) COPY (const, 0xffffffa0, 4)

0042d54c: or v0,v0,a0
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x10, 4)

0042d550: sb v0,0xc(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0042d554: b 0x0042c930
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x42c930, 4)

0042d558: _addiu a0,a1,0x1
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0042d55c: beq a0,zero,0x0042cfb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x24, 4)
	 ---  CBRANCH (ram, 0x42cfb4, 4) , (unique, 0x1200, 1)

0042d560: _li v0,0x24
	(register, 0x8, 4) COPY (const, 0x24, 4)

0042d564: bne v1,v0,0x0042cfb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42cfb4, 4) , (unique, 0x1700, 1)

0042d568: _or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d56c: b 0x0042d4c0
	(register, 0x14, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42d4c0, 4)

0042d570: _or a1,a2,zero
	(register, 0x14, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0042d574: beq v0,a2,0x0042d46c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x18, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x42d46c, 4) , (unique, 0x1200, 1)

0042d578: _li a2,0x10
	(register, 0x18, 4) COPY (const, 0x10, 4)

0042d57c: beq v0,a2,0x0042c930
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x42c930, 4) , (unique, 0x1200, 1)

0042d580: _nop

0042d584: b 0x0042cefc
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42cefc, 4)

0042d588: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0042d58c: b 0x0042d364
	(register, 0x14, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42d364, 4)

0042d590: _or a1,t2,zero
	(register, 0x14, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0042d594: b 0x0042d254
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42d254, 4)

0042d598: _or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0042d59c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0042d5a0: lw a0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0042d5a4: sw s2,0x24(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0042d5a8: b 0x0042cce8
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x42cce8, 4)

0042d5ac: _addu s3,s3,v0
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)

0042d5b0: b 0x0042cff8
	(register, 0x10, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42cff8, 4)

0042d5b4: _or a0,t3,zero
	(register, 0x10, 4) INT_OR (register, 0x2c, 4) , (const, 0x0, 4)

0042d5b8: beq v0,a2,0x0042c930
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4)
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x21, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  CBRANCH (ram, 0x42c930, 4) , (unique, 0x1200, 1)

0042d5bc: _slti a2,v0,0x21
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x21, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5180, 1)

0042d5c0: bne a2,zero,0x0042d2e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x42d2e4, 4) , (unique, 0x1700, 1)

0042d5c4: _nop

0042d5c8: b 0x0042d53c
	(register, 0x10, 4) COPY (const, 0x40, 4)
	 ---  BRANCH (ram, 0x42d53c, 4)

0042d5cc: _li a0,0x40
	(register, 0x10, 4) COPY (const, 0x40, 4)

0042d5d0: b 0x0042ca28
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42ca28, 4)

0042d5d4: _or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0042d5d8: b 0x0042cc20
	(register, 0x18, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42cc20, 4)

0042d5dc: _or a2,t1,zero
	(register, 0x18, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0042d5e0: b 0x0042cde0
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42cde0, 4)

0042d5e4: _or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0042d5e8: b 0x0042cefc
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x42cefc, 4)

0042d5ec: _or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

