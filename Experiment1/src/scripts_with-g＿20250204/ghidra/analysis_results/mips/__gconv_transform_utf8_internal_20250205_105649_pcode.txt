Function: __gconv_transform_utf8_internal
Address: 0044e970
P-code:

0044e970: lui gp,0x7
	(register, 0x70, 4) INT_LEFT (const, 0x7, 4) , (const, 0x10, 4)

0044e974: addiu gp,gp,-0x3b10
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffc4f0, 4)

0044e978: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0044e97c: addiu sp,sp,-0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff88, 4)

0044e980: lw t7,0x8(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e984: sw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0044e988: or s7,a1,zero
	(register, 0x5c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0044e98c: lw a1,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e990: lw v0,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e994: sw a1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0044e998: addiu a1,a0,0x3c
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)

0044e99c: sw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0044e9a0: sw a1,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0044e9a4: andi v1,t7,0x1
	(register, 0xc, 4) INT_AND (register, 0x3c, 4) , (const, 0x1, 4)

0044e9a8: addiu a1,s7,0x20
	(register, 0x14, 4) INT_ADD (register, 0x5c, 4) , (const, 0x20, 4)

0044e9ac: sw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0044e9b0: sw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0044e9b4: sw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0044e9b8: sw v0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044e9bc: lw s2,0x88(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e9c0: lw v0,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e9c4: sw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0044e9c8: sw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0044e9cc: sw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0044e9d0: sw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0044e9d4: sw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0044e9d8: sw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0044e9dc: or s5,a2,zero
	(register, 0x54, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0044e9e0: sw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0044e9e4: bne v1,zero,0x0044ecd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ecd0, 4) , (unique, 0x1700, 1)

0044e9e8: _or s6,a3,zero
	(register, 0x58, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0044e9ec: lw v1,0x50(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044e9f0: bne v0,zero,0x0044ecd8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ecd8, 4) , (unique, 0x1700, 1)

0044e9f4: _sw v1,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044e9f8: bne s2,zero,0x0044f024
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f024, 4) , (unique, 0x1700, 1)

0044e9fc: _nop

0044ea00: lw s4,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea04: lw v0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea08: lw s8,0x4(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea0c: beq v0,zero,0x0044eeac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44eeac, 4) , (unique, 0x1200, 1)

0044ea10: _sw zero,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044ea14: addiu v0,sp,0x30
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0044ea18: sw v0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ea1c: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea20: nop

0044ea24: bne v0,zero,0x0044ed78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ed78, 4) , (unique, 0x1700, 1)

0044ea28: _nop

0044ea2c: lw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea30: nop

0044ea34: beq s6,s1,0x0044f120
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x44f120, 4) , (unique, 0x1200, 1)

0044ea38: _nop

0044ea3c: or v1,s1,zero
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0044ea40: or s0,s4,zero
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044ea44: b 0x0044ea74
	(register, 0x4c, 4) COPY (const, 0x4, 4)
	 ---  BRANCH (ram, 0x44ea74, 4)

0044ea48: _li s3,0x4
	(register, 0x4c, 4) COPY (const, 0x4, 4)

0044ea4c: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0044ea50: nop

0044ea54: sltiu a1,v0,0x80
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x80, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0044ea58: beq a1,zero,0x0044eb2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44eb2c, 4) , (unique, 0x1200, 1)

0044ea5c: _addiu a0,v1,0x1
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044ea60: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ea64: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0044ea68: or s0,t1,zero
	(register, 0x40, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0044ea6c: beq s6,v1,0x0044ea88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ea88, 4) , (unique, 0x1200, 1)

0044ea70: _nop

0044ea74: addiu t1,s0,0x4
	(register, 0x24, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0044ea78: sltu v0,s8,t1
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0x24, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0044ea7c: beq v0,zero,0x0044ea4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ea4c, 4) , (unique, 0x1200, 1)

0044ea80: _nop

0044ea84: li s3,0x5
	(register, 0x4c, 4) COPY (const, 0x5, 4)

0044ea88: bne s2,zero,0x0044ec70
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ec70, 4) , (unique, 0x1700, 1)

0044ea8c: _sw v1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044ea90: lw v1,0xc(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea94: lw v0,0x8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ea98: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044ea9c: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0044eaa0: bne v0,zero,0x0044ee90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ee90, 4) , (unique, 0x1700, 1)

0044eaa4: _sw v1,0xc(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044eaa8: sltu v0,s4,s0
	(unique, 0x5380, 1) INT_LESS (register, 0x50, 4) , (register, 0x40, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0044eaac: beq v0,zero,0x0044ec84
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ec84, 4) , (unique, 0x1200, 1)

0044eab0: _or a3,s0,zero
	(register, 0x1c, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0044eab4: lw v0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eab8: lw v1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eabc: sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044eac0: lw v0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eac4: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eac8: lw a0,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eacc: lw t9,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ead0: sw v1,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044ead4: sw zero,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044ead8: sw v0,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044eadc: sw zero,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044eae0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44eae8, 4)
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	 ---  CALLIND (register, 0x80, 4)

0044eae4: _addiu a2,sp,0x28
	(register, 0x18, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0044eae8: li v1,0x4
	(register, 0xc, 4) COPY (const, 0x4, 4)

0044eaec: lw gp,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eaf0: beq v0,v1,0x0044ec78
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ec78, 4) , (unique, 0x1200, 1)

0044eaf4: _nop

0044eaf8: lw a0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eafc: nop

0044eb00: bne a0,s0,0x0044eeb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x40, 4)
	 ---  CBRANCH (ram, 0x44eeb4, 4) , (unique, 0x1700, 1)

0044eb04: _nop

0044eb08: bne v0,zero,0x0044f1d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f1d0, 4) , (unique, 0x1700, 1)

0044eb0c: _nop

0044eb10: lw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eb14: lw s4,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eb18: beq s6,s1,0x0044f030
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x44, 4)
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f030, 4) , (unique, 0x1200, 1)

0044eb1c: _or v1,s1,zero
	(register, 0xc, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0044eb20: lw t7,0x8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eb24: b 0x0044ea44
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44ea44, 4)

0044eb28: _or s0,s4,zero
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044eb2c: addiu a1,v0,-0xc2
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff3e, 4)

0044eb30: sltiu a1,a1,0x1e
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0x1e, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0044eb34: beq a1,zero,0x0044ec00
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xf0, 4)
	 ---  CBRANCH (ram, 0x44ec00, 4) , (unique, 0x1200, 1)

0044eb38: _andi a1,v0,0xf0
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xf0, 4)

0044eb3c: andi v0,v0,0x1f
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)

0044eb40: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0044eb44: addu t9,v1,a2
	(register, 0x64, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0044eb48: sltu a1,s6,t9
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0x64, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0044eb4c: bne a1,zero,0x0044ec20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x20, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44ec20, 4) , (unique, 0x1700, 1)

0044eb50: _li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0044eb54: li t8,-0x40
	(register, 0x60, 4) COPY (const, 0xffffffc0, 4)

0044eb58: li a3,0x80
	(register, 0x1c, 4) COPY (const, 0x80, 4)

0044eb5c: addu a0,v1,t0
	(register, 0x10, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)

0044eb60: lbu a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0044eb64: nop

0044eb68: and a1,a0,t8
	(register, 0x14, 4) INT_AND (register, 0x10, 4) , (register, 0x60, 4)

0044eb6c: bne a1,a3,0x0044ebc4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x1c, 4)
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3f, 4)
	 ---  CBRANCH (ram, 0x44ebc4, 4) , (unique, 0x1700, 1)

0044eb70: _andi a0,a0,0x3f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3f, 4)

0044eb74: sll v0,v0,0x6
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x6, 4)

0044eb78: addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044eb7c: bne a2,t0,0x0044eb5c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x44eb5c, 4) , (unique, 0x1700, 1)

0044eb80: _or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

0044eb84: li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0044eb88: beq a2,a0,0x0044eba4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44eba4, 4) , (unique, 0x1200, 1)

0044eb8c: _sll a0,a2,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0044eb90: addu a0,a0,a2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)

0044eb94: addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0044eb98: srlv a0,v0,a0
	(unique, 0x5780, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0044eb9c: beq a0,zero,0x0044ebd0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ebd0, 4) , (unique, 0x1200, 1)

0044eba0: _nop

0044eba4: lui a0,0xffff
	(register, 0x10, 4) INT_LEFT (const, 0xffff, 4) , (const, 0x10, 4)

0044eba8: addiu a0,a0,0x2800
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2800, 4)

0044ebac: addu a0,v0,a0
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0044ebb0: sltiu a0,a0,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x10, 4) , (const, 0x800, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0044ebb4: bne a0,zero,0x0044ebd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ebd0, 4) , (unique, 0x1700, 1)

0044ebb8: _or a0,t9,zero
	(register, 0x10, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)

0044ebbc: b 0x0044ea64
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x44ea64, 4)

0044ebc0: _sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ebc4: sltu a0,t0,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x18, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0044ebc8: beq a0,zero,0x0044eb88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44eb88, 4) , (unique, 0x1200, 1)

0044ebcc: _li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0044ebd0: lw a0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ebd4: nop

0044ebd8: beq a0,zero,0x0044ecc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x3c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44ecc8, 4) , (unique, 0x1200, 1)

0044ebdc: _andi v0,t7,0x2
	(register, 0x8, 4) INT_AND (register, 0x3c, 4) , (const, 0x2, 4)

0044ebe0: beq v0,zero,0x0044ecc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ecc8, 4) , (unique, 0x1200, 1)

0044ebe4: _nop

0044ebe8: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ebec: addu v1,v1,t0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)

0044ebf0: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0044ebf4: sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ebf8: b 0x0044ea6c
	(register, 0x4c, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44ea6c, 4)

0044ebfc: _li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0044ec00: li a2,0xe0
	(register, 0x18, 4) COPY (const, 0xe0, 4)

0044ec04: bne a1,a2,0x0044ef24
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x18, 4)
	(register, 0x18, 4) COPY (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x44ef24, 4) , (unique, 0x1700, 1)

0044ec08: _li a2,0x3
	(register, 0x18, 4) COPY (const, 0x3, 4)

0044ec0c: addu t9,v1,a2
	(register, 0x64, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0044ec10: sltu a1,s6,t9
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0x64, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0044ec14: andi v0,v0,0xf
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4)

0044ec18: beq a1,zero,0x0044eb54
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x20, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44eb54, 4) , (unique, 0x1200, 1)

0044ec1c: _li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0044ec20: sltu v0,a0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x58, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0044ec24: beq v0,zero,0x0044ec5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ec5c, 4) , (unique, 0x1200, 1)

0044ec28: _nop

0044ec2c: subu a3,s6,v1
	(register, 0x1c, 4) INT_SUB (register, 0x58, 4) , (register, 0xc, 4)

0044ec30: li a2,-0x40
	(register, 0x18, 4) COPY (const, 0xffffffc0, 4)

0044ec34: b 0x0044ec44
	(register, 0x14, 4) COPY (const, 0x80, 4)
	 ---  BRANCH (ram, 0x44ec44, 4)

0044ec38: _li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

0044ec3c: beq t0,a3,0x0044ec5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x1c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44ec5c, 4) , (unique, 0x1200, 1)

0044ec40: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0044ec44: lbu v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0044ec48: nop

0044ec4c: and v0,a2,v0
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x8, 4)

0044ec50: beq v0,a1,0x0044ec3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44ec3c, 4) , (unique, 0x1200, 1)

0044ec54: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044ec58: addiu t0,t0,-0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffff, 4)

0044ec5c: bne s6,a0,0x0044ebd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x44ebd0, 4) , (unique, 0x1700, 1)

0044ec60: _nop

0044ec64: li s3,0x7
	(register, 0x4c, 4) COPY (const, 0x7, 4)

0044ec68: beq s2,zero,0x0044ea90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ea90, 4) , (unique, 0x1200, 1)

0044ec6c: _sw v1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044ec70: b 0x0044ec94
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x44ec94, 4)

0044ec74: _sw s0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0044ec78: li v0,0x5
	(register, 0x8, 4) COPY (const, 0x5, 4)

0044ec7c: beq s3,v0,0x0044eb10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x44eb10, 4) , (unique, 0x1200, 1)

0044ec80: _nop

0044ec84: lw v0,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ec88: nop

0044ec8c: bne v0,zero,0x0044f084
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x44f084, 4) , (unique, 0x1700, 1)

0044ec90: _li v0,0x7
	(register, 0x8, 4) COPY (const, 0x7, 4)

0044ec94: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ec98: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ec9c: lw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eca0: lw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eca4: lw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eca8: lw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ecac: lw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ecb0: lw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ecb4: lw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ecb8: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0044ecbc: lw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ecc0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	 ---  RETURN (register, 0x80, 4)

0044ecc4: _addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

0044ecc8: b 0x0044ea88
	(register, 0x4c, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44ea88, 4)

0044eccc: _li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0044ecd0: beq v0,zero,0x0044e9f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44e9f8, 4) , (unique, 0x1200, 1)

0044ecd4: _sw zero,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044ecd8: bne s2,zero,0x0044f504
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x15e, 4)
	 ---  CBRANCH (ram, 0x44f504, 4) , (unique, 0x1700, 1)

0044ecdc: _li a2,0x15e
	(register, 0x18, 4) COPY (const, 0x15e, 4)

0044ece0: lw v1,0x14(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ece4: nop

0044ece8: sb zero,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ecec: sb zero,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ecf0: sb zero,0x2(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ecf4: sb zero,0x3(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ecf8: sb zero,0x4(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ecfc: sb zero,0x5(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ed00: sb zero,0x6(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x6, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ed04: sb zero,0x7(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x7, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0044ed08: lw v1,0x8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed0c: nop

0044ed10: andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0044ed14: bne v1,zero,0x0044ec94
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ec94, 4) , (unique, 0x1700, 1)

0044ed18: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044ed1c: lw v1,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed20: sw v0,0x90(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ed24: lw v0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed28: lw a1,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed2c: lw a0,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed30: lw t9,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed34: lw ra,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed38: lw s8,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed3c: lw s7,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed40: lw s6,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed44: lw s5,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed48: lw s4,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed4c: lw s3,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed50: lw s2,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed54: lw s1,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed58: lw s0,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed5c: sw v1,0x94(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044ed60: sw v0,0x8c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044ed64: sw zero,0x88(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044ed68: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044ed6c: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044ed70: jr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	 ---  BRANCHIND (register, 0x80, 4)

0044ed74: _addiu sp,sp,0x78
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)

0044ed78: lw a2,0x14(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed7c: nop

0044ed80: lw v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ed84: nop

0044ed88: andi a0,v0,0x7
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0044ed8c: beq a0,zero,0x0044ea2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ea2c, 4) , (unique, 0x1200, 1)

0044ed90: _nop

0044ed94: bne s2,zero,0x0044f4c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x44f4c4, 4) , (unique, 0x1700, 1)

0044ed98: _sra v1,v0,0x8
	(register, 0xc, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x8, 4)

0044ed9c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eda0: nop

0044eda4: addiu a1,a1,0x7268
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x7268, 4)

0044eda8: addu a1,v1,a1
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

0044edac: lbu a1,-0x2(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0044edb0: addiu t0,sp,0x28
	(register, 0x20, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)

0044edb4: lw t2,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044edb8: lw a3,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044edbc: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0044edc0: sb a1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0044edc4: addu t1,t0,v1
	(register, 0x24, 4) INT_ADD (register, 0x20, 4) , (register, 0xc, 4)

0044edc8: li t5,-0x80
	(register, 0x34, 4) COPY (const, 0xffffff80, 4)

0044edcc: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0044edd0: sltu a1,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0044edd4: beq a1,zero,0x0044edec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x44edec, 4) , (unique, 0x1200, 1)

0044edd8: _sltiu a1,v1,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0044eddc: andi a1,a3,0x3f
	(register, 0x14, 4) INT_AND (register, 0x1c, 4) , (const, 0x3f, 4)

0044ede0: or a1,a1,t5
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x34, 4)

0044ede4: sb a1,-0x1(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0044ede8: sltiu a1,v1,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0044edec: srl a3,a3,0x6
	(register, 0x1c, 4) INT_RIGHT (register, 0x1c, 4) , (const, 0x6, 4)

0044edf0: beq a1,zero,0x0044edcc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x44edcc, 4) , (unique, 0x1200, 1)

0044edf4: _addiu t1,t1,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0xffffffff, 4)

0044edf8: lbu v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0044edfc: addiu t5,s4,0x4
	(register, 0x34, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)

0044ee00: or a3,a3,v1
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0xc, 4)

0044ee04: sltu v1,s8,t5
	(unique, 0x5380, 1) INT_LESS (register, 0x78, 4) , (register, 0x34, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0044ee08: bne v1,zero,0x0044f050
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)
	 ---  CBRANCH (ram, 0x44f050, 4) , (unique, 0x1700, 1)

0044ee0c: _andi a3,a3,0xff
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xff, 4)

0044ee10: sb a3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1f, 1)

0044ee14: li t8,0x6
	(register, 0x60, 4) COPY (const, 0x6, 4)

0044ee18: b 0x0044ee28
	(register, 0x1c, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44ee28, 4)

0044ee1c: _or a3,t2,zero
	(register, 0x1c, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0044ee20: beq s6,a3,0x0044ee48
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x44ee48, 4) , (unique, 0x1200, 1)

0044ee24: _nop

0044ee28: lbu t1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x2f00, 1)

0044ee2c: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0044ee30: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0044ee34: addu v1,t0,v0
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (register, 0x8, 4)

0044ee38: addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0044ee3c: bne v0,t8,0x0044ee20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x60, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x27, 1)
	 ---  CBRANCH (ram, 0x44ee20, 4) , (unique, 0x1700, 1)

0044ee40: _sb t1,-0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x27, 1)

0044ee44: li a1,0x5
	(register, 0x14, 4) COPY (const, 0x5, 4)

0044ee48: lbu a3,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x2f00, 1)

0044ee4c: nop

0044ee50: sltiu t1,a3,0x80
	(unique, 0x5280, 1) INT_LESS (register, 0x1c, 4) , (const, 0x80, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5280, 1)

0044ee54: beq t1,zero,0x0044f130
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x24, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f130, 4) , (unique, 0x1200, 1)

0044ee58: _li t1,0x1
	(register, 0x24, 4) COPY (const, 0x1, 4)

0044ee5c: sw a3,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0044ee60: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ee64: nop

0044ee68: andi a0,a0,0x7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

0044ee6c: slt v0,a0,t1
	(unique, 0x5080, 1) INT_SLESS (register, 0x10, 4) , (register, 0x24, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0044ee70: beq v0,zero,0x0044f554
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x44f554, 4) , (unique, 0x1200, 1)

0044ee74: _subu t1,t1,a0
	(register, 0x24, 4) INT_SUB (register, 0x24, 4) , (register, 0x10, 4)

0044ee78: addu s1,t2,t1
	(register, 0x44, 4) INT_ADD (register, 0x28, 4) , (register, 0x24, 4)

0044ee7c: lw t7,0x8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x3c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ee80: sw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0044ee84: or s4,t5,zero
	(register, 0x50, 4) INT_OR (register, 0x34, 4) , (const, 0x0, 4)

0044ee88: b 0x0044ea34
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44ea34, 4)

0044ee8c: _sw zero,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044ee90: lw a0,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ee94: lw v1,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ee98: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ee9c: sw s0,0x0(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0044eea0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0044eea4: b 0x0044ec84
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x44ec84, 4)

0044eea8: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044eeac: b 0x0044ea1c
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44ea1c, 4)

0044eeb0: _sw zero,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0044eeb4: lw s0,0x8(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044eeb8: beq s6,s1,0x0044f2b0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x44, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x44f2b0, 4) , (unique, 0x1200, 1)

0044eebc: _sw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0044eec0: b 0x0044eef0
	(register, 0x1c, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44eef0, 4)

0044eec4: _or a3,s4,zero
	(register, 0x1c, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044eec8: lbu v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0044eecc: nop

0044eed0: sltiu a2,v1,0x80
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x80, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

0044eed4: beq a2,zero,0x0044ef3c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44ef3c, 4) , (unique, 0x1200, 1)

0044eed8: _addiu a1,s1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0044eedc: sw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044eee0: or s1,a1,zero
	(register, 0x44, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0044eee4: or a3,t0,zero
	(register, 0x1c, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0044eee8: beq s6,s1,0x0044eff8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x44eff8, 4) , (unique, 0x1200, 1)

0044eeec: _nop

0044eef0: addiu t0,a3,0x4
	(register, 0x20, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)

0044eef4: sltu v1,a0,t0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x20, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0044eef8: beq v1,zero,0x0044eec8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44eec8, 4) , (unique, 0x1200, 1)

0044eefc: _nop

0044ef00: bne a3,a0,0x0044f000
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x10, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x44f000, 4) , (unique, 0x1700, 1)

0044ef04: _sw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0044ef08: bne a3,s4,0x0044eb08
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x44eb08, 4) , (unique, 0x1700, 1)

0044ef0c: _nop

0044ef10: lw v1,0xc(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044ef14: nop

0044ef18: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0044ef1c: b 0x0044eb08
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x44eb08, 4)

0044ef20: _sw v1,0xc(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044ef24: andi a1,v0,0xf8
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xf8, 4)

0044ef28: li a2,0xf0
	(register, 0x18, 4) COPY (const, 0xf0, 4)

0044ef2c: bne a1,a2,0x0044f224
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x18, 4)
	(register, 0x18, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x44f224, 4) , (unique, 0x1700, 1)

0044ef30: _li a2,0x4
	(register, 0x18, 4) COPY (const, 0x4, 4)

0044ef34: b 0x0044eb44
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)
	 ---  BRANCH (ram, 0x44eb44, 4)

0044ef38: _andi v0,v0,0x7
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0044ef3c: addiu a2,v1,-0xc2
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffff3e, 4)

0044ef40: sltiu a2,a2,0x1e
	(unique, 0x5280, 1) INT_LESS (register, 0x18, 4) , (const, 0x1e, 4)
	(register, 0x18, 4) INT_ZEXT (unique, 0x5280, 1)

0044ef44: beq a2,zero,0x0044f03c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x24, 4) COPY (const, 0xe0, 4)
	 ---  CBRANCH (ram, 0x44f03c, 4) , (unique, 0x1200, 1)

0044ef48: _li t1,0xe0
	(register, 0x24, 4) COPY (const, 0xe0, 4)

0044ef4c: andi v1,v1,0x1f
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)

0044ef50: li t5,0x2
	(register, 0x34, 4) COPY (const, 0x2, 4)

0044ef54: addu t9,s1,t5
	(register, 0x64, 4) INT_ADD (register, 0x44, 4) , (register, 0x34, 4)

0044ef58: sltu t1,s6,t9
	(unique, 0x5380, 1) INT_LESS (register, 0x58, 4) , (register, 0x64, 4)
	(register, 0x24, 4) INT_ZEXT (unique, 0x5380, 1)

0044ef5c: bne t1,zero,0x0044f1d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f1d8, 4) , (unique, 0x1700, 1)

0044ef60: _li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0044ef64: li t8,-0x40
	(register, 0x60, 4) COPY (const, 0xffffffc0, 4)

0044ef68: li t7,0x80
	(register, 0x3c, 4) COPY (const, 0x80, 4)

0044ef6c: addu a1,s1,a2
	(register, 0x14, 4) INT_ADD (register, 0x44, 4) , (register, 0x18, 4)

0044ef70: lbu a1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0044ef74: nop

0044ef78: and t1,a1,t8
	(register, 0x24, 4) INT_AND (register, 0x14, 4) , (register, 0x60, 4)

0044ef7c: bne t1,t7,0x0044efd4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x3c, 4)
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x3f, 4)
	 ---  CBRANCH (ram, 0x44efd4, 4) , (unique, 0x1700, 1)

0044ef80: _andi a1,a1,0x3f
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0x3f, 4)

0044ef84: sll v1,v1,0x6
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x6, 4)

0044ef88: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0044ef8c: bne t5,a2,0x0044ef6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (register, 0x18, 4)
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44ef6c, 4) , (unique, 0x1700, 1)

0044ef90: _or v1,a1,v1
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (register, 0xc, 4)

0044ef94: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0044ef98: beq t5,a1,0x0044efb4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x34, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_LEFT (register, 0x34, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44efb4, 4) , (unique, 0x1200, 1)

0044ef9c: _sll a1,t5,0x2
	(register, 0x14, 4) INT_LEFT (register, 0x34, 4) , (const, 0x2, 4)

0044efa0: addu a1,a1,t5
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0x34, 4)

0044efa4: addiu a1,a1,-0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0044efa8: srlv a1,v1,a1
	(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
	(register, 0x14, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0044efac: beq a1,zero,0x0044efe0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44efe0, 4) , (unique, 0x1200, 1)

0044efb0: _nop

0044efb4: lui a1,0xffff
	(register, 0x14, 4) INT_LEFT (const, 0xffff, 4) , (const, 0x10, 4)

0044efb8: addiu a1,a1,0x2800
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x2800, 4)

0044efbc: addu a1,v1,a1
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

0044efc0: sltiu a1,a1,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x14, 4) , (const, 0x800, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0044efc4: bne a1,zero,0x0044efe0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44efe0, 4) , (unique, 0x1700, 1)

0044efc8: _or a1,t9,zero
	(register, 0x14, 4) INT_OR (register, 0x64, 4) , (const, 0x0, 4)

0044efcc: b 0x0044eee0
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x44eee0, 4)

0044efd0: _sw v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044efd4: sltu a1,a2,t5
	(unique, 0x5380, 1) INT_LESS (register, 0x18, 4) , (register, 0x34, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0044efd8: beq a1,zero,0x0044ef98
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44ef98, 4) , (unique, 0x1200, 1)

0044efdc: _li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0044efe0: lw a1,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044efe4: nop

0044efe8: beq a1,zero,0x0044eff8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x40, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44eff8, 4) , (unique, 0x1200, 1)

0044efec: _andi v1,s0,0x2
	(register, 0xc, 4) INT_AND (register, 0x40, 4) , (const, 0x2, 4)

0044eff0: bne v1,zero,0x0044f058
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f058, 4) , (unique, 0x1700, 1)

0044eff4: _nop

0044eff8: beq a0,a3,0x0044f2b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x44f2b8, 4) , (unique, 0x1200, 1)

0044effc: _sw s1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0044f000: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f004: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f008: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f00c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f010: addiu a3,a3,0x7270
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)

0044f014: li a2,0x252
	(register, 0x18, 4) COPY (const, 0x252, 4)

0044f018: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

0044f01c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f024, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fa8, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f020: _addiu a0,a0,0x6fa8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fa8, 4)

0044f024: lw s4,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f028: b 0x0044ea04
	 ---  BRANCH (ram, 0x44ea04, 4)

0044f02c: _nop

0044f030: or s0,s4,zero
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044f034: b 0x0044ea90
	(register, 0x4c, 4) COPY (const, 0x4, 4)
	 ---  BRANCH (ram, 0x44ea90, 4)

0044f038: _li s3,0x4
	(register, 0x4c, 4) COPY (const, 0x4, 4)

0044f03c: andi a2,v1,0xf0
	(register, 0x18, 4) INT_AND (register, 0xc, 4) , (const, 0xf0, 4)

0044f040: bne a2,t1,0x0044f06c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x24, 4)
	(register, 0x34, 4) COPY (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x44f06c, 4) , (unique, 0x1700, 1)

0044f044: _li t5,0x3
	(register, 0x34, 4) COPY (const, 0x3, 4)

0044f048: b 0x0044ef54
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xf, 4)
	 ---  BRANCH (ram, 0x44ef54, 4)

0044f04c: _andi v1,v1,0xf
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0xf, 4)

0044f050: b 0x0044ec94
	(register, 0x4c, 4) COPY (const, 0x5, 4)
	 ---  BRANCH (ram, 0x44ec94, 4)

0044f054: _li s3,0x5
	(register, 0x4c, 4) COPY (const, 0x5, 4)

0044f058: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f05c: addu s1,s1,a2
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x18, 4)

0044f060: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044f064: b 0x0044eee8
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x44eee8, 4)

0044f068: _sw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044f06c: andi a2,v1,0xf8
	(register, 0x18, 4) INT_AND (register, 0xc, 4) , (const, 0xf8, 4)

0044f070: li t1,0xf0
	(register, 0x24, 4) COPY (const, 0xf0, 4)

0044f074: bne a2,t1,0x0044f5a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x24, 4)
	(register, 0x34, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x44f5a8, 4) , (unique, 0x1700, 1)

0044f078: _li t5,0x4
	(register, 0x34, 4) COPY (const, 0x4, 4)

0044f07c: b 0x0044ef54
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x7, 4)
	 ---  BRANCH (ram, 0x44ef54, 4)

0044f080: _andi v1,v1,0x7
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x7, 4)

0044f084: bne s3,v0,0x0044ec94
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x44ec94, 4) , (unique, 0x1700, 1)

0044f088: _nop

0044f08c: lw a2,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f090: lw t0,0x14(s7)
	(unique, 0x100, 4) INT_ADD (register, 0x5c, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f094: lbu v0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f098: subu t1,s6,a2
	(register, 0x24, 4) INT_SUB (register, 0x58, 4) , (register, 0x18, 4)

0044f09c: addiu v1,v0,-0xc0
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff40, 4)

0044f0a0: sltiu v1,v1,0x2
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x2, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0044f0a4: bne v1,zero,0x0044f510
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x44f510, 4) , (unique, 0x1700, 1)

0044f0a8: _sw t1,0x0(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0044f0ac: addiu v1,v0,-0xc2
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffff3e, 4)

0044f0b0: sltiu v1,v1,0x1e
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x1e, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0044f0b4: beq v1,zero,0x0044f284
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xf0, 4)
	 ---  CBRANCH (ram, 0x44f284, 4) , (unique, 0x1200, 1)

0044f0b8: _andi v1,v0,0xf0
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xf0, 4)

0044f0bc: andi v0,v0,0x1f
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)

0044f0c0: li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0044f0c4: li a3,0x200
	(register, 0x1c, 4) COPY (const, 0x200, 4)

0044f0c8: addiu v1,a2,0x1
	(register, 0xc, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0044f0cc: sltu a0,v1,s6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x58, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0044f0d0: beq a0,zero,0x0044f100
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44f100, 4) , (unique, 0x1200, 1)

0044f0d4: _sw v1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044f0d8: lbu a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f0dc: sll v0,v0,0x6
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x6, 4)

0044f0e0: andi a0,a0,0x3f
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3f, 4)

0044f0e4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044f0e8: or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

0044f0ec: bne v1,s6,0x0044f0d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x58, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44f0d8, 4) , (unique, 0x1700, 1)

0044f0f0: _sw v1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0044f0f4: subu v1,a2,v1
	(register, 0xc, 4) INT_SUB (register, 0x18, 4) , (register, 0xc, 4)

0044f0f8: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044f0fc: addu a1,a1,v1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0xc, 4)

0044f100: sll v1,a1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x14, 4) , (const, 0x1, 4)

0044f104: addu v1,v1,a1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

0044f108: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0044f10c: or a3,a3,t1
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0x24, 4)

0044f110: sllv v0,v0,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0044f114: sw a3,0x0(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0044f118: b 0x0044ec94
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x44ec94, 4)

0044f11c: _sw v0,0x4(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044f120: or v1,s6,zero
	(register, 0xc, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0044f124: or s0,s4,zero
	(register, 0x40, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044f128: b 0x0044ea88
	(register, 0x4c, 4) COPY (const, 0x4, 4)
	 ---  BRANCH (ram, 0x44ea88, 4)

0044f12c: _li s3,0x4
	(register, 0x4c, 4) COPY (const, 0x4, 4)

0044f130: addiu t8,a3,-0xc2
	(register, 0x60, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffff3e, 4)

0044f134: sltiu t8,t8,0x1e
	(unique, 0x5280, 1) INT_LESS (register, 0x60, 4) , (const, 0x1e, 4)
	(register, 0x60, 4) INT_ZEXT (unique, 0x5280, 1)

0044f138: beq t8,zero,0x0044f29c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x60, 4) , (const, 0x0, 4)
	(register, 0x24, 4) INT_AND (register, 0x1c, 4) , (const, 0xf0, 4)
	 ---  CBRANCH (ram, 0x44f29c, 4) , (unique, 0x1200, 1)

0044f13c: _andi t1,a3,0xf0
	(register, 0x24, 4) INT_AND (register, 0x1c, 4) , (const, 0xf0, 4)

0044f140: andi t9,a3,0x1f
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)

0044f144: li t1,0x2
	(register, 0x24, 4) COPY (const, 0x2, 4)

0044f148: addu t0,t0,t1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x24, 4)

0044f14c: sltu t0,v1,t0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0044f150: bne t0,zero,0x0044f308
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x20, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f308, 4) , (unique, 0x1700, 1)

0044f154: _li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0044f158: addiu v1,sp,0x29
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x29, 4)

0044f15c: li a3,-0x40
	(register, 0x1c, 4) COPY (const, 0xffffffc0, 4)

0044f160: li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

0044f164: lbu v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f168: nop

0044f16c: and t8,v0,a3
	(register, 0x60, 4) INT_AND (register, 0x8, 4) , (register, 0x1c, 4)

0044f170: bne t8,a1,0x0044f23c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x60, 4) , (register, 0x14, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4)
	 ---  CBRANCH (ram, 0x44f23c, 4) , (unique, 0x1700, 1)

0044f174: _andi v0,v0,0x3f
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3f, 4)

0044f178: sll t9,t9,0x6
	(register, 0x64, 4) INT_LEFT (register, 0x64, 4) , (const, 0x6, 4)

0044f17c: addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044f180: or t9,v0,t9
	(register, 0x64, 4) INT_OR (register, 0x8, 4) , (register, 0x64, 4)

0044f184: bne t1,t0,0x0044f164
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x20, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f164, 4) , (unique, 0x1700, 1)

0044f188: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0044f18c: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0044f190: beq t1,v0,0x0044f2dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x24, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44f2dc, 4) , (unique, 0x1200, 1)

0044f194: _sll v0,t1,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x24, 4) , (const, 0x2, 4)

0044f198: addu v0,v0,t1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)

0044f19c: addiu v0,v0,-0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)

0044f1a0: srlv v0,t9,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x64, 4) , (unique, 0x5780, 4)

0044f1a4: beq v0,zero,0x0044f248
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0xffff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1200, 1)

0044f1a8: _lui v0,0xffff
	(register, 0x8, 4) INT_LEFT (const, 0xffff, 4) , (const, 0x10, 4)

0044f1ac: addiu v0,v0,0x2800
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2800, 4)

0044f1b0: addu v0,t9,v0
	(register, 0x8, 4) INT_ADD (register, 0x64, 4) , (register, 0x8, 4)

0044f1b4: sltiu v0,v0,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x800, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0044f1b8: bne v0,zero,0x0044f248
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1700, 1)

0044f1bc: _nop

0044f1c0: sw t9,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x64, 4)

0044f1c4: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f1c8: b 0x0044ee6c
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)
	 ---  BRANCH (ram, 0x44ee6c, 4)

0044f1cc: _andi a0,a0,0x7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

0044f1d0: b 0x0044ec84
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44ec84, 4)

0044f1d4: _or s3,v0,zero
	(register, 0x4c, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0044f1d8: sltu v1,a1,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x14, 4) , (register, 0x58, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0044f1dc: beq v1,zero,0x0044f214
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f214, 4) , (unique, 0x1200, 1)

0044f1e0: _nop

0044f1e4: subu t5,s6,s1
	(register, 0x34, 4) INT_SUB (register, 0x58, 4) , (register, 0x44, 4)

0044f1e8: li t1,-0x40
	(register, 0x24, 4) COPY (const, 0xffffffc0, 4)

0044f1ec: b 0x0044f1fc
	(register, 0x20, 4) COPY (const, 0x80, 4)
	 ---  BRANCH (ram, 0x44f1fc, 4)

0044f1f0: _li t0,0x80
	(register, 0x20, 4) COPY (const, 0x80, 4)

0044f1f4: beq a2,t5,0x0044f214
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x34, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f214, 4) , (unique, 0x1200, 1)

0044f1f8: _addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0044f1fc: lbu v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f200: nop

0044f204: and v1,t1,v1
	(register, 0xc, 4) INT_AND (register, 0x24, 4) , (register, 0xc, 4)

0044f208: beq v1,t0,0x0044f1f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x20, 4)
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f1f4, 4) , (unique, 0x1200, 1)

0044f20c: _addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0044f210: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0044f214: beq s6,a1,0x0044eff8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x44eff8, 4) , (unique, 0x1200, 1)

0044f218: _nop

0044f21c: b 0x0044efe0
	 ---  BRANCH (ram, 0x44efe0, 4)

0044f220: _nop

0044f224: andi a1,v0,0xfc
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xfc, 4)

0044f228: li a2,0xf8
	(register, 0x18, 4) COPY (const, 0xf8, 4)

0044f22c: bne a1,a2,0x0044f434
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x18, 4)
	(register, 0x18, 4) COPY (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x44f434, 4) , (unique, 0x1700, 1)

0044f230: _li a2,0x5
	(register, 0x18, 4) COPY (const, 0x5, 4)

0044f234: b 0x0044eb44
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x44eb44, 4)

0044f238: _andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

0044f23c: sltu v0,t0,t1
	(unique, 0x5380, 1) INT_LESS (register, 0x20, 4) , (register, 0x24, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0044f240: beq v0,zero,0x0044f190
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44f190, 4) , (unique, 0x1200, 1)

0044f244: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0044f248: lw v0,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f24c: nop

0044f250: beq v0,zero,0x0044f260
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3c, 4) INT_AND (register, 0x3c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44f260, 4) , (unique, 0x1200, 1)

0044f254: _andi t7,t7,0x2
	(register, 0x3c, 4) INT_AND (register, 0x3c, 4) , (const, 0x2, 4)

0044f258: bne t7,zero,0x0044f268
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x3c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f268, 4) , (unique, 0x1700, 1)

0044f25c: _nop

0044f260: b 0x0044ec94
	(register, 0x4c, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44ec94, 4)

0044f264: _li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0044f268: lw v1,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f26c: or t1,t0,zero
	(register, 0x24, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

0044f270: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f274: or t5,s4,zero
	(register, 0x34, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0044f278: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0044f27c: b 0x0044ee6c
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x44ee6c, 4)

0044f280: _sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0044f284: li a0,0xe0
	(register, 0x10, 4) COPY (const, 0xe0, 4)

0044f288: bne v1,a0,0x0044f4e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x14, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x44f4e8, 4) , (unique, 0x1700, 1)

0044f28c: _li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0044f290: andi v0,v0,0xf
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4)

0044f294: b 0x0044f0c8
	(register, 0x1c, 4) COPY (const, 0x300, 4)
	 ---  BRANCH (ram, 0x44f0c8, 4)

0044f298: _li a3,0x300
	(register, 0x1c, 4) COPY (const, 0x300, 4)

0044f29c: li t9,0xe0
	(register, 0x64, 4) COPY (const, 0xe0, 4)

0044f2a0: bne t1,t9,0x0044f578
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x64, 4)
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0xf, 4)
	 ---  CBRANCH (ram, 0x44f578, 4) , (unique, 0x1700, 1)

0044f2a4: _andi t9,a3,0xf
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0xf, 4)

0044f2a8: b 0x0044f148
	(register, 0x24, 4) COPY (const, 0x3, 4)
	 ---  BRANCH (ram, 0x44f148, 4)

0044f2ac: _li t1,0x3
	(register, 0x24, 4) COPY (const, 0x3, 4)

0044f2b0: bne a0,s4,0x0044f000
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x44f000, 4) , (unique, 0x1700, 1)

0044f2b4: _nop

0044f2b8: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f2bc: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f2c0: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f2c4: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f2c8: addiu a3,a3,0x7270
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)

0044f2cc: li a2,0x253
	(register, 0x18, 4) COPY (const, 0x253, 4)

0044f2d0: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

0044f2d4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f2dc, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fbc, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f2d8: _addiu a0,a0,0x6fbc
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6fbc, 4)

0044f2dc: lui v0,0xffff
	(register, 0x8, 4) INT_LEFT (const, 0xffff, 4) , (const, 0x10, 4)

0044f2e0: addiu v0,v0,0x2800
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2800, 4)

0044f2e4: addu v0,t9,v0
	(register, 0x8, 4) INT_ADD (register, 0x64, 4) , (register, 0x8, 4)

0044f2e8: sltiu v0,v0,0x800
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x800, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0044f2ec: bne v0,zero,0x0044f248
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1700, 1)

0044f2f0: _nop

0044f2f4: sw t9,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x64, 4)

0044f2f8: lw a0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f2fc: li t1,0x2
	(register, 0x24, 4) COPY (const, 0x2, 4)

0044f300: b 0x0044ee6c
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)
	 ---  BRANCH (ram, 0x44ee6c, 4)

0044f304: _andi a0,a0,0x7
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)

0044f308: addiu t1,sp,0x29
	(register, 0x24, 4) INT_ADD (register, 0x74, 4) , (const, 0x29, 4)

0044f30c: sltu t0,t1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5380, 1)

0044f310: beq t0,zero,0x0044f428
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f428, 4) , (unique, 0x1200, 1)

0044f314: _nop

0044f318: li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0044f31c: or t5,t1,zero
	(register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0044f320: li s0,-0x40
	(register, 0x40, 4) COPY (const, 0xffffffc0, 4)

0044f324: b 0x0044f338
	(register, 0x2c, 4) COPY (const, 0x80, 4)
	 ---  BRANCH (ram, 0x44f338, 4)

0044f328: _li t3,0x80
	(register, 0x2c, 4) COPY (const, 0x80, 4)

0044f32c: sltu t9,t5,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x34, 4) , (register, 0xc, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x5380, 1)

0044f330: beq t9,zero,0x0044f350
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f350, 4) , (unique, 0x1200, 1)

0044f334: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044f338: lbu t9,0x0(t5)
	(unique, 0x100, 4) INT_ADD (register, 0x34, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x64, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f33c: nop

0044f340: and t9,s0,t9
	(register, 0x64, 4) INT_AND (register, 0x40, 4) , (register, 0x64, 4)

0044f344: beq t9,t3,0x0044f32c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x64, 4) , (register, 0x2c, 4)
	(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f32c, 4) , (unique, 0x1200, 1)

0044f348: _addiu t5,t5,0x1
	(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0x1, 4)

0044f34c: addiu t5,t5,-0x1
	(register, 0x34, 4) INT_ADD (register, 0x34, 4) , (const, 0xffffffff, 4)

0044f350: bne t5,v1,0x0044f248
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x34, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1700, 1)

0044f354: _nop

0044f358: li t0,0x6
	(register, 0x20, 4) COPY (const, 0x6, 4)

0044f35c: beq v0,t0,0x0044f3e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x44f3e8, 4) , (unique, 0x1200, 1)

0044f360: _nop

0044f364: subu a0,v0,a0
	(register, 0x10, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0044f368: addu a0,t2,a0
	(register, 0x10, 4) INT_ADD (register, 0x28, 4) , (register, 0x10, 4)

0044f36c: beq t8,zero,0x0044f3cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x60, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x44f3cc, 4) , (unique, 0x1200, 1)

0044f370: _sw a0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0044f374: andi a3,a3,0x1f
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)

0044f378: li t0,0x200
	(register, 0x20, 4) COPY (const, 0x200, 4)

0044f37c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0044f380: sltu t2,t1,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x24, 4) , (register, 0xc, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5380, 1)

0044f384: beq t2,zero,0x0044f3a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44f3a8, 4) , (unique, 0x1200, 1)

0044f388: _nop

0044f38c: lbu t2,0x0(t1)
	(unique, 0x100, 4) INT_ADD (register, 0x24, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f390: sll a3,a3,0x6
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x6, 4)

0044f394: andi t2,t2,0x3f
	(register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x3f, 4)

0044f398: addiu t1,t1,0x1
	(register, 0x24, 4) INT_ADD (register, 0x24, 4) , (const, 0x1, 4)

0044f39c: bne v1,t1,0x0044f38c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x24, 4)
	(register, 0x1c, 4) INT_OR (register, 0x28, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x44f38c, 4) , (unique, 0x1700, 1)

0044f3a0: _or a3,t2,a3
	(register, 0x1c, 4) INT_OR (register, 0x28, 4) , (register, 0x1c, 4)

0044f3a4: subu a0,a0,a1
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)

0044f3a8: sll v1,a0,0x1
	(register, 0xc, 4) INT_LEFT (register, 0x10, 4) , (const, 0x1, 4)

0044f3ac: addu v1,v1,a0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x10, 4)

0044f3b0: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0044f3b4: or t0,t0,v0
	(register, 0x20, 4) INT_OR (register, 0x20, 4) , (register, 0x8, 4)

0044f3b8: sllv a3,a3,v1
	(unique, 0x4f80, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (unique, 0x4f80, 4)

0044f3bc: sw t0,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0044f3c0: sw a3,0x4(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0044f3c4: b 0x0044ec94
	(register, 0x4c, 4) COPY (const, 0x7, 4)
	 ---  BRANCH (ram, 0x44ec94, 4)

0044f3c8: _li s3,0x7
	(register, 0x4c, 4) COPY (const, 0x7, 4)

0044f3cc: andi a0,a3,0xf0
	(register, 0x10, 4) INT_AND (register, 0x1c, 4) , (const, 0xf0, 4)

0044f3d0: li t0,0xe0
	(register, 0x20, 4) COPY (const, 0xe0, 4)

0044f3d4: bne a0,t0,0x0044f40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x20, 4)
	(register, 0x20, 4) COPY (const, 0x300, 4)
	 ---  CBRANCH (ram, 0x44f40c, 4) , (unique, 0x1700, 1)

0044f3d8: _li t0,0x300
	(register, 0x20, 4) COPY (const, 0x300, 4)

0044f3dc: andi a3,a3,0xf
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0xf, 4)

0044f3e0: b 0x0044f380
	(register, 0x10, 4) COPY (const, 0x2, 4)
	 ---  BRANCH (ram, 0x44f380, 4)

0044f3e4: _li a0,0x2
	(register, 0x10, 4) COPY (const, 0x2, 4)

0044f3e8: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f3ec: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f3f0: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f3f4: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f3f8: addiu a3,a3,0x724c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x724c, 4)

0044f3fc: li a2,0x193
	(register, 0x18, 4) COPY (const, 0x193, 4)

0044f400: addiu a1,a1,0x703c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x703c, 4)

0044f404: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f40c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70d4, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f408: _addiu a0,a0,0x70d4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70d4, 4)

0044f40c: andi a0,a3,0xf8
	(register, 0x10, 4) INT_AND (register, 0x1c, 4) , (const, 0xf8, 4)

0044f410: li t0,0xf0
	(register, 0x20, 4) COPY (const, 0xf0, 4)

0044f414: bne a0,t0,0x0044f44c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x20, 4)
	(register, 0x20, 4) COPY (const, 0x400, 4)
	 ---  CBRANCH (ram, 0x44f44c, 4) , (unique, 0x1700, 1)

0044f418: _li t0,0x400
	(register, 0x20, 4) COPY (const, 0x400, 4)

0044f41c: andi a3,a3,0x7
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0x7, 4)

0044f420: b 0x0044f380
	(register, 0x10, 4) COPY (const, 0x3, 4)
	 ---  BRANCH (ram, 0x44f380, 4)

0044f424: _li a0,0x3
	(register, 0x10, 4) COPY (const, 0x3, 4)

0044f428: li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0044f42c: b 0x0044f350
	(register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x44f350, 4)

0044f430: _or t5,t1,zero
	(register, 0x34, 4) INT_OR (register, 0x24, 4) , (const, 0x0, 4)

0044f434: andi a1,v0,0xfe
	(register, 0x14, 4) INT_AND (register, 0x8, 4) , (const, 0xfe, 4)

0044f438: li a2,0xfc
	(register, 0x18, 4) COPY (const, 0xfc, 4)

0044f43c: bne a1,a2,0x0044f46c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f46c, 4) , (unique, 0x1700, 1)

0044f440: _andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0044f444: b 0x0044eb44
	(register, 0x18, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44eb44, 4)

0044f448: _li a2,0x6
	(register, 0x18, 4) COPY (const, 0x6, 4)

0044f44c: andi a0,a3,0xfc
	(register, 0x10, 4) INT_AND (register, 0x1c, 4) , (const, 0xfc, 4)

0044f450: li t0,0xf8
	(register, 0x20, 4) COPY (const, 0xf8, 4)

0044f454: bne a0,t0,0x0044f4b4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x44f4b4, 4) , (unique, 0x1700, 1)

0044f458: _nop

0044f45c: andi a3,a3,0x3
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0044f460: li t0,0x500
	(register, 0x20, 4) COPY (const, 0x500, 4)

0044f464: b 0x0044f380
	(register, 0x10, 4) COPY (const, 0x4, 4)
	 ---  BRANCH (ram, 0x44f380, 4)

0044f468: _li a0,0x4
	(register, 0x10, 4) COPY (const, 0x4, 4)

0044f46c: or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044f470: li a2,-0x40
	(register, 0x18, 4) COPY (const, 0xffffffc0, 4)

0044f474: li a1,0x80
	(register, 0x14, 4) COPY (const, 0x80, 4)

0044f478: li a0,0x5
	(register, 0x10, 4) COPY (const, 0x5, 4)

0044f47c: addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044f480: addu v0,v1,t0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x20, 4)

0044f484: sltu a3,v0,s6
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0044f488: beq a3,zero,0x0044ebd0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44ebd0, 4) , (unique, 0x1200, 1)

0044f48c: _nop

0044f490: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f494: nop

0044f498: and v0,v0,a2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x18, 4)

0044f49c: bne v0,a1,0x0044ebd0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x44ebd0, 4) , (unique, 0x1700, 1)

0044f4a0: _nop

0044f4a4: bne t0,a0,0x0044f47c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x44f47c, 4) , (unique, 0x1700, 1)

0044f4a8: _nop

0044f4ac: b 0x0044ebd0
	 ---  BRANCH (ram, 0x44ebd0, 4)

0044f4b0: _nop

0044f4b4: andi a3,a3,0x1
	(register, 0x1c, 4) INT_AND (register, 0x1c, 4) , (const, 0x1, 4)

0044f4b8: li t0,0x600
	(register, 0x20, 4) COPY (const, 0x600, 4)

0044f4bc: b 0x0044f380
	(register, 0x10, 4) COPY (const, 0x5, 4)
	 ---  BRANCH (ram, 0x44f380, 4)

0044f4c0: _li a0,0x5
	(register, 0x10, 4) COPY (const, 0x5, 4)

0044f4c4: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f4c8: li a2,0x1d3
	(register, 0x18, 4) COPY (const, 0x1d3, 4)

0044f4cc: addiu a3,a3,0x7270
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)

0044f4d0: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f4d4: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f4d8: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f4dc: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

0044f4e0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f4e8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6f94, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f4e4: _addiu a0,a0,0x6f94
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x6f94, 4)

0044f4e8: andi v1,v0,0xf8
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xf8, 4)

0044f4ec: li a0,0xf0
	(register, 0x10, 4) COPY (const, 0xf0, 4)

0044f4f0: bne v1,a0,0x0044f534
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x14, 4) COPY (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x44f534, 4) , (unique, 0x1700, 1)

0044f4f4: _li a1,0x3
	(register, 0x14, 4) COPY (const, 0x3, 4)

0044f4f8: andi v0,v0,0x7
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4)

0044f4fc: b 0x0044f0c8
	(register, 0x1c, 4) COPY (const, 0x400, 4)
	 ---  BRANCH (ram, 0x44f0c8, 4)

0044f500: _li a3,0x400
	(register, 0x1c, 4) COPY (const, 0x400, 4)

0044f504: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f508: b 0x0044f4d0
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)
	 ---  BRANCH (ram, 0x44f4d0, 4)

0044f50c: _addiu a3,a3,0x7270
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)

0044f510: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f514: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f518: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f51c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f520: addiu a3,a3,0x7270
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7270, 4)

0044f524: li a2,0x282
	(register, 0x18, 4) COPY (const, 0x282, 4)

0044f528: addiu a1,a1,0x6f80
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x6f80, 4)

0044f52c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f534, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7120, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f530: _addiu a0,a0,0x7120
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7120, 4)

0044f534: andi v1,v0,0xfc
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xfc, 4)

0044f538: li a0,0xf8
	(register, 0x10, 4) COPY (const, 0xf8, 4)

0044f53c: bne v1,a0,0x0044f5c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x44f5c0, 4) , (unique, 0x1700, 1)

0044f540: _nop

0044f544: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

0044f548: li a1,0x4
	(register, 0x14, 4) COPY (const, 0x4, 4)

0044f54c: b 0x0044f0c8
	(register, 0x1c, 4) COPY (const, 0x500, 4)
	 ---  BRANCH (ram, 0x44f0c8, 4)

0044f550: _li a3,0x500
	(register, 0x1c, 4) COPY (const, 0x500, 4)

0044f554: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f558: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f55c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f560: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0044f564: addiu a3,a3,0x724c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x724c, 4)

0044f568: li a2,0x181
	(register, 0x18, 4) COPY (const, 0x181, 4)

0044f56c: addiu a1,a1,0x703c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x703c, 4)

0044f570: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x44f578, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70ac, 4)
	 ---  CALLIND (register, 0x80, 4)

0044f574: _addiu a0,a0,0x70ac
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x70ac, 4)

0044f578: andi t1,a3,0xf8
	(register, 0x24, 4) INT_AND (register, 0x1c, 4) , (const, 0xf8, 4)

0044f57c: li t9,0xf0
	(register, 0x64, 4) COPY (const, 0xf0, 4)

0044f580: bne t1,t9,0x0044f590
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x64, 4)
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x44f590, 4) , (unique, 0x1700, 1)

0044f584: _andi t9,a3,0x7
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x7, 4)

0044f588: b 0x0044f148
	(register, 0x24, 4) COPY (const, 0x4, 4)
	 ---  BRANCH (ram, 0x44f148, 4)

0044f58c: _li t1,0x4
	(register, 0x24, 4) COPY (const, 0x4, 4)

0044f590: andi t1,a3,0xfc
	(register, 0x24, 4) INT_AND (register, 0x1c, 4) , (const, 0xfc, 4)

0044f594: li t9,0xf8
	(register, 0x64, 4) COPY (const, 0xf8, 4)

0044f598: bne t1,t9,0x0044f5d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x64, 4)
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x44f5d0, 4) , (unique, 0x1700, 1)

0044f59c: _andi t9,a3,0x3
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0044f5a0: b 0x0044f148
	(register, 0x24, 4) COPY (const, 0x5, 4)
	 ---  BRANCH (ram, 0x44f148, 4)

0044f5a4: _li t1,0x5
	(register, 0x24, 4) COPY (const, 0x5, 4)

0044f5a8: andi a2,v1,0xfc
	(register, 0x18, 4) INT_AND (register, 0xc, 4) , (const, 0xfc, 4)

0044f5ac: li t1,0xf8
	(register, 0x24, 4) COPY (const, 0xf8, 4)

0044f5b0: bne a2,t1,0x0044f5e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x24, 4)
	(register, 0x34, 4) COPY (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x44f5e8, 4) , (unique, 0x1700, 1)

0044f5b4: _li t5,0x5
	(register, 0x34, 4) COPY (const, 0x5, 4)

0044f5b8: b 0x0044ef54
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x44ef54, 4)

0044f5bc: _andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

0044f5c0: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0044f5c4: li a1,0x5
	(register, 0x14, 4) COPY (const, 0x5, 4)

0044f5c8: b 0x0044f0c8
	(register, 0x1c, 4) COPY (const, 0x600, 4)
	 ---  BRANCH (ram, 0x44f0c8, 4)

0044f5cc: _li a3,0x600
	(register, 0x1c, 4) COPY (const, 0x600, 4)

0044f5d0: andi t1,a3,0xfe
	(register, 0x24, 4) INT_AND (register, 0x1c, 4) , (const, 0xfe, 4)

0044f5d4: li t9,0xfc
	(register, 0x64, 4) COPY (const, 0xfc, 4)

0044f5d8: bne t1,t9,0x0044f600
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (register, 0x64, 4)
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f600, 4) , (unique, 0x1700, 1)

0044f5dc: _andi t9,a3,0x1
	(register, 0x64, 4) INT_AND (register, 0x1c, 4) , (const, 0x1, 4)

0044f5e0: b 0x0044f148
	(register, 0x24, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44f148, 4)

0044f5e4: _li t1,0x6
	(register, 0x24, 4) COPY (const, 0x6, 4)

0044f5e8: andi a2,v1,0xfe
	(register, 0x18, 4) INT_AND (register, 0xc, 4) , (const, 0xfe, 4)

0044f5ec: li t1,0xfc
	(register, 0x24, 4) COPY (const, 0xfc, 4)

0044f5f0: bne a2,t1,0x0044f644
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x24, 4)
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f644, 4) , (unique, 0x1700, 1)

0044f5f4: _andi v1,v1,0x1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

0044f5f8: b 0x0044ef54
	(register, 0x34, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x44ef54, 4)

0044f5fc: _li t5,0x6
	(register, 0x34, 4) COPY (const, 0x6, 4)

0044f600: addiu v0,sp,0x29
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x29, 4)

0044f604: or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044f608: li t5,-0x40
	(register, 0x34, 4) COPY (const, 0xffffffc0, 4)

0044f60c: li t1,0x80
	(register, 0x24, 4) COPY (const, 0x80, 4)

0044f610: li a3,0x5
	(register, 0x1c, 4) COPY (const, 0x5, 4)

0044f614: sltu a1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0044f618: beq a1,zero,0x0044f248
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1200, 1)

0044f61c: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0044f620: lbu a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f624: nop

0044f628: and a1,a1,t5
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x34, 4)

0044f62c: bne a1,t1,0x0044f248
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x44f248, 4) , (unique, 0x1700, 1)

0044f630: _nop

0044f634: bne t0,a3,0x0044f614
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x44f614, 4) , (unique, 0x1700, 1)

0044f638: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0044f63c: b 0x0044f248
	 ---  BRANCH (ram, 0x44f248, 4)

0044f640: _nop

0044f644: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0044f648: li t1,-0x40
	(register, 0x24, 4) COPY (const, 0xffffffc0, 4)

0044f64c: li t0,0x80
	(register, 0x20, 4) COPY (const, 0x80, 4)

0044f650: li a1,0x5
	(register, 0x14, 4) COPY (const, 0x5, 4)

0044f654: addiu a2,a2,0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)

0044f658: addu v1,s1,a2
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0x18, 4)

0044f65c: sltu t5,v1,s6
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x58, 4)
	(register, 0x34, 4) INT_ZEXT (unique, 0x5380, 1)

0044f660: beq t5,zero,0x0044efe0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x44efe0, 4) , (unique, 0x1200, 1)

0044f664: _nop

0044f668: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0044f66c: nop

0044f670: and v1,v1,t1
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x24, 4)

0044f674: bne v1,t0,0x0044efe0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x44efe0, 4) , (unique, 0x1700, 1)

0044f678: _nop

0044f67c: bne a2,a1,0x0044f654
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x44f654, 4) , (unique, 0x1700, 1)

0044f680: _nop

0044f684: b 0x0044efe0
	 ---  BRANCH (ram, 0x44efe0, 4)

0044f688: _nop

