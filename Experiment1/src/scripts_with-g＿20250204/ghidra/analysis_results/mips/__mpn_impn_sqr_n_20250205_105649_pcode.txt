Function: __mpn_impn_sqr_n
Address: 0046df38
P-code:

0046df38: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046df3c: addiu gp,gp,-0x30d8
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffcf28, 4)

0046df40: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046df44: addiu sp,sp,-0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffa8, 4)

0046df48: sw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046df4c: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046df50: andi s7,a2,0x1
	(register, 0x5c, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4)

0046df54: sw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046df58: sw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046df5c: sw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046df60: sw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046df64: sw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0046df68: sw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046df6c: sw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046df70: sw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046df74: sw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046df78: or s2,a2,zero
	(register, 0x48, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046df7c: or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046df80: beq s7,zero,0x0046e038
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e038, 4) , (unique, 0x1200, 1)

0046df84: _or s5,a1,zero
	(register, 0x54, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046df88: addiu s0,a2,-0x1
	(register, 0x40, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046df8c: slti v0,s0,0x20
	(unique, 0x5180, 1) INT_SLESS (register, 0x40, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046df90: bne v0,zero,0x0046e264
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e264, 4) , (unique, 0x1700, 1)

0046df94: _or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046df98: lw t9,-0x769c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8964, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046df9c: nop

0046dfa0: bal 0x0046df38
	(register, 0x7c, 4) COPY (const, 0x46dfa8, 4)
	(register, 0x4c, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)
	 ---  CALL (ram, 0x46df38, 4)

0046dfa4: _sll s3,s0,0x2
	(register, 0x4c, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)

0046dfa8: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046dfac: nop

0046dfb0: lw s4,-0x76a4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff895c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046dfb4: addu s6,s5,s3
	(register, 0x58, 4) INT_ADD (register, 0x54, 4) , (register, 0x4c, 4)

0046dfb8: lw a3,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046dfbc: addu s3,s1,s3
	(register, 0x4c, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)

0046dfc0: or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046dfc4: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046dfc8: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046dfcc: bal 0x00475b90
	(register, 0x7c, 4) COPY (const, 0x46dfd4, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475b90, 4)

0046dfd0: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046dfd4: sll v1,s0,0x3
	(register, 0xc, 4) INT_LEFT (register, 0x40, 4) , (const, 0x3, 4)

0046dfd8: addu v1,s1,v1
	(register, 0xc, 4) INT_ADD (register, 0x44, 4) , (register, 0xc, 4)

0046dfdc: sw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046dfe0: lw a3,0x0(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046dfe4: addu s0,s2,s0
	(register, 0x40, 4) INT_ADD (register, 0x48, 4) , (register, 0x40, 4)

0046dfe8: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046dfec: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046dff0: or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046dff4: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046dff8: sll s0,s0,0x2
	(register, 0x40, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)

0046dffc: bal 0x00475b90
	(register, 0x7c, 4) COPY (const, 0x46e004, 4)
	(register, 0x40, 4) INT_ADD (register, 0x44, 4) , (register, 0x40, 4)
	 ---  CALL (ram, 0x475b90, 4)

0046e000: _addu s0,s1,s0
	(register, 0x40, 4) INT_ADD (register, 0x44, 4) , (register, 0x40, 4)

0046e004: sw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e008: lw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e00c: lw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e010: lw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e014: lw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e018: lw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e01c: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e020: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e024: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e028: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e02c: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e030: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	 ---  RETURN (register, 0x80, 4)

0046e034: _addiu sp,sp,0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)

0046e038: sra s6,a2,0x1
	(register, 0x58, 4) INT_SRIGHT (register, 0x18, 4) , (const, 0x1, 4)

0046e03c: sll s4,a2,0x2
	(register, 0x50, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0046e040: sll s8,s6,0x2
	(register, 0x78, 4) INT_LEFT (register, 0x58, 4) , (const, 0x2, 4)

0046e044: slti v0,s6,0x20
	(unique, 0x5180, 1) INT_SLESS (register, 0x58, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046e048: addu a0,a0,s4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x50, 4)

0046e04c: or s0,a3,zero
	(register, 0x40, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046e050: sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e054: sw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046e058: bne v0,zero,0x0046e244
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x46e244, 4) , (unique, 0x1700, 1)

0046e05c: _addu s3,a1,s8
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (register, 0x78, 4)

0046e060: lw t9,-0x769c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8964, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e064: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e068: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e06c: bal 0x0046df38
	(register, 0x7c, 4) COPY (const, 0x46e074, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46df38, 4)

0046e070: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e074: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e078: nop

0046e07c: lw t9,-0x77bc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8844, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e080: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e084: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046e088: bal 0x0046c8d0
	(register, 0x7c, 4) COPY (const, 0x46e090, 4)
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46c8d0, 4)

0046e08c: _or a0,s3,zero
	(register, 0x10, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e090: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e094: or a3,s6,zero
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e098: lw t9,-0x76ac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8954, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e09c: bltz v0,0x0046e2a4
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x64, 4)
	 ---  CBRANCH (ram, 0x46e2a4, 4) , (unique, 0x1600, 1)

0046e0a0: _sw t9,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x64, 4)

0046e0a4: or a2,s5,zero
	(register, 0x18, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046e0a8: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e0ac: bal 0x0046e570
	(register, 0x7c, 4) COPY (const, 0x46e0b4, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e570, 4)

0046e0b0: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046e0b4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e0b8: addu v0,s1,s8
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x78, 4)

0046e0bc: addu s3,s2,s6
	(register, 0x4c, 4) INT_ADD (register, 0x48, 4) , (register, 0x58, 4)

0046e0c0: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e0c4: lw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e0c8: sll s3,s3,0x2
	(register, 0x4c, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0046e0cc: beq v0,zero,0x0046e280
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x46e280, 4) , (unique, 0x1200, 1)

0046e0d0: _addu s3,s1,s3
	(register, 0x4c, 4) INT_ADD (register, 0x44, 4) , (register, 0x4c, 4)

0046e0d4: lw v1,-0x7698(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8968, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e0d8: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e0dc: or t9,v1,zero
	(register, 0x64, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046e0e0: sw v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e0e4: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046e0e8: bal 0x0046dd94
	(register, 0x7c, 4) COPY (const, 0x46e0f0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46dd94, 4)

0046e0ec: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e0f0: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e0f4: lw v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e0f8: blez s6,0x0046e314
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e314, 4) , (unique, 0x1500, 1)

0046e0fc: _or a3,s6,zero
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e100: lw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e104: nop

0046e108: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e10c: subu v1,v0,s4
	(register, 0xc, 4) INT_SUB (register, 0x8, 4) , (register, 0x50, 4)

0046e110: addiu s7,s7,0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0046e114: addu v1,v1,s8
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x78, 4)

0046e118: slt a0,s7,s6
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x58, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0046e11c: sw a1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0046e120: bne a0,zero,0x0046e108
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46e108, 4) , (unique, 0x1700, 1)

0046e124: _addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0046e128: lw s7,-0x76b0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8950, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e12c: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e130: or a3,s6,zero
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e134: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e138: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046e13c: bal 0x00475a70
	(register, 0x7c, 4) COPY (const, 0x46e144, 4)
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475a70, 4)

0046e140: _or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e144: lw a0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e148: lw t9,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e14c: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046e150: or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e154: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e158: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46e160, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046e15c: _sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e160: lw v1,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e164: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e168: subu v0,v1,v0
	(register, 0x8, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0046e16c: sw v0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e170: lw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e174: nop

0046e178: bne v0,zero,0x0046e3b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (register, 0x50, 4)
	 ---  CBRANCH (ram, 0x46e3b8, 4) , (unique, 0x1700, 1)

0046e17c: _addu a3,s0,s4
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (register, 0x50, 4)

0046e180: lw t9,-0x769c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8964, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e184: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e188: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046e18c: bal 0x0046df38
	(register, 0x7c, 4) COPY (const, 0x46e194, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46df38, 4)

0046e190: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e194: lw a0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e198: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046e19c: or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e1a0: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046e1a4: bal 0x00475a70
	(register, 0x7c, 4) COPY (const, 0x46e1ac, 4)
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475a70, 4)

0046e1a8: _or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e1ac: lw v1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e1b0: nop

0046e1b4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046e1b8: bne v0,zero,0x0046e2c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e2c0, 4) , (unique, 0x1700, 1)

0046e1bc: _nop

0046e1c0: addu a2,s0,s8
	(register, 0x18, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)

0046e1c4: lw v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e1c8: addiu s0,s0,0x4
	(register, 0x40, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

0046e1cc: sw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e1d0: bne a2,s0,0x0046e1c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x40, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46e1c4, 4) , (unique, 0x1700, 1)

0046e1d4: _addiu s1,s1,0x4
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)

0046e1d8: lw a1,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e1dc: or a3,s6,zero
	(register, 0x1c, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e1e0: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046e1e4: bal 0x00475a70
	(register, 0x7c, 4) COPY (const, 0x46e1ec, 4)
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475a70, 4)

0046e1e8: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046e1ec: beq v0,zero,0x0046e008
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e008, 4) , (unique, 0x1200, 1)

0046e1f0: _nop

0046e1f4: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e1f8: nop

0046e1fc: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e200: nop

0046e204: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046e208: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046e20c: beq v0,zero,0x0046e008
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46e008, 4) , (unique, 0x1200, 1)

0046e210: _sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e214: b 0x0046e230
	(register, 0x50, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x46e230, 4)

0046e218: _addiu s4,a0,0x4
	(register, 0x50, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046e21c: lw v0,-0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e220: nop

0046e224: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046e228: bne v0,zero,0x0046e008
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46e008, 4) , (unique, 0x1700, 1)

0046e22c: _sw v0,-0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e230: addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0046e234: bne s2,zero,0x0046e21c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46e21c, 4) , (unique, 0x1700, 1)

0046e238: _addiu s4,s4,0x4
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)

0046e23c: b 0x0046e008
	 ---  BRANCH (ram, 0x46e008, 4)

0046e240: _nop

0046e244: lw v1,-0x7698(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8968, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e248: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e24c: or t9,v1,zero
	(register, 0x64, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046e250: bal 0x0046dd94
	(register, 0x7c, 4) COPY (const, 0x46e258, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46dd94, 4)

0046e254: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e258: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e25c: b 0x0046e07c
	 ---  BRANCH (ram, 0x46e07c, 4)

0046e260: _nop

0046e264: lw t9,-0x7698(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8968, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e268: nop

0046e26c: bal 0x0046dd94
	(register, 0x7c, 4) COPY (const, 0x46e274, 4)
	(register, 0x4c, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)
	 ---  CALL (ram, 0x46dd94, 4)

0046e270: _sll s3,s0,0x2
	(register, 0x4c, 4) INT_LEFT (register, 0x40, 4) , (const, 0x2, 4)

0046e274: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e278: b 0x0046dfb0
	 ---  BRANCH (ram, 0x46dfb0, 4)

0046e27c: _nop

0046e280: lw t9,-0x769c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8964, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e284: addu a3,s0,s4
	(register, 0x1c, 4) INT_ADD (register, 0x40, 4) , (register, 0x50, 4)

0046e288: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e28c: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046e290: bal 0x0046df38
	(register, 0x7c, 4) COPY (const, 0x46e298, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46df38, 4)

0046e294: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e298: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e29c: b 0x0046e100
	 ---  BRANCH (ram, 0x46e100, 4)

0046e2a0: _nop

0046e2a4: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e2a8: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046e2ac: bal 0x0046e570
	(register, 0x7c, 4) COPY (const, 0x46e2b4, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e570, 4)

0046e2b0: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046e2b4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e2b8: b 0x0046e0bc
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x78, 4)
	 ---  BRANCH (ram, 0x46e0bc, 4)

0046e2bc: _addu v0,s1,s8
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (register, 0x78, 4)

0046e2c0: lw v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e2c4: nop

0046e2c8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046e2cc: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046e2d0: beq v1,zero,0x0046e1c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46e1c0, 4) , (unique, 0x1200, 1)

0046e2d4: _sw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e2d8: addiu s3,s3,0x4
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)

0046e2dc: b 0x0046e2f8
	(register, 0xc, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46e2f8, 4)

0046e2e0: _or v1,s6,zero
	(register, 0xc, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e2e4: lw v0,-0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e2e8: nop

0046e2ec: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046e2f0: bne v0,zero,0x0046e304
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46e304, 4) , (unique, 0x1700, 1)

0046e2f4: _sw v0,-0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e2f8: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0046e2fc: bne v1,zero,0x0046e2e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46e2e4, 4) , (unique, 0x1700, 1)

0046e300: _addiu s3,s3,0x4
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)

0046e304: bgtz s6,0x0046e1c0
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x58, 4)
	(register, 0x18, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)
	 ---  CBRANCH (ram, 0x46e1c0, 4) , (unique, 0x1400, 1)

0046e308: _addu a2,s0,s8
	(register, 0x18, 4) INT_ADD (register, 0x40, 4) , (register, 0x78, 4)

0046e30c: b 0x0046e1d8
	 ---  BRANCH (ram, 0x46e1d8, 4)

0046e310: _nop

0046e314: lw s7,-0x76b0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8950, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e318: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e31c: sw v1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e320: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e324: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046e328: bal 0x00475a70
	(register, 0x7c, 4) COPY (const, 0x46e330, 4)
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475a70, 4)

0046e32c: _or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046e330: addu a0,s1,s8
	(register, 0x10, 4) INT_ADD (register, 0x44, 4) , (register, 0x78, 4)

0046e334: lw t9,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e338: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046e33c: or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e340: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e344: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46e34c, 4)
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046e348: _or s4,v0,zero
	(register, 0x50, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046e34c: subu v0,s4,v0
	(register, 0x8, 4) INT_SUB (register, 0x50, 4) , (register, 0x8, 4)

0046e350: lw v1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e354: sw v0,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e358: or t9,v1,zero
	(register, 0x64, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046e35c: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046e360: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046e364: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46e36c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046e368: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e36c: lw a0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e370: or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046e374: or a2,s0,zero
	(register, 0x18, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046e378: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0046e37c: bal 0x00475a70
	(register, 0x7c, 4) COPY (const, 0x46e384, 4)
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x475a70, 4)

0046e380: _or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046e384: lw v1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e388: nop

0046e38c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046e390: beq v0,zero,0x0046e304
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e304, 4) , (unique, 0x1200, 1)

0046e394: _nop

0046e398: lw v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e39c: nop

0046e3a0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046e3a4: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0046e3a8: beq v1,zero,0x0046e304
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46e304, 4) , (unique, 0x1200, 1)

0046e3ac: _sw v0,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046e3b0: b 0x0046e2dc
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x46e2dc, 4)

0046e3b4: _addiu s3,s3,0x4
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)

0046e3b8: lw v1,-0x7698(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8968, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e3bc: b 0x0046e35c
	(register, 0x64, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46e35c, 4)

0046e3c0: _or t9,v1,zero
	(register, 0x64, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

