Function: _nl_find_locale
Address: 0046a250
P-code:

0046a250: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046a254: addiu gp,gp,0xc10
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xc10, 4)

0046a258: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046a25c: addiu sp,sp,-0x80
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff80, 4)

0046a260: sw s0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046a264: lw s0,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a268: sw s8,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0046a26c: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0046a270: sw s6,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0046a274: sw s5,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0046a278: sw s4,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0046a27c: sw s2,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0046a280: sw ra,0x7c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0046a284: sw s7,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046a288: sw s3,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0046a28c: sw s1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0046a290: sw gp,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0046a294: sw s0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046a298: lb v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a29c: or s2,a3,zero
	(register, 0x48, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

0046a2a0: or s5,a0,zero
	(register, 0x54, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046a2a4: or s6,a1,zero
	(register, 0x58, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0046a2a8: beq v0,zero,0x0046a444
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a444, 4) , (unique, 0x1200, 1)

0046a2ac: _or s4,a2,zero
	(register, 0x50, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

0046a2b0: lw s1,-0x7d20(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82e0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2b4: lw a1,-0x78e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8720, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2b8: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a2bc: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a2c4, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a2c0: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a2c4: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2c8: beq v0,zero,0x0046a504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a504, 4) , (unique, 0x1200, 1)

0046a2cc: _or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a2d0: lw a1,-0x78dc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8724, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2d4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a2dc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a2d8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a2dc: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2e0: beq v0,zero,0x0046a504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a504, 4) , (unique, 0x1200, 1)

0046a2e4: _nop

0046a2e8: lw s3,-0x7fa4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff805c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a2ec: nop

0046a2f0: or t9,s3,zero
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046a2f4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a2fc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a2f8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a2fc: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a300: sltiu v0,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046a304: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a308: beq v0,zero,0x0046a428
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46a428, 4) , (unique, 0x1200, 1)

0046a30c: _li a3,0x4
	(register, 0x1c, 4) COPY (const, 0x4, 4)

0046a310: lw a2,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a314: lw t9,-0x76dc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8924, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a318: addiu a2,a2,-0x7544
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffff8abc, 4)

0046a31c: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a320: bal 0x0046f724
	(register, 0x7c, 4) COPY (const, 0x46a328, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46f724, 4)

0046a324: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a328: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a32c: bne v0,zero,0x0046a428
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a428, 4) , (unique, 0x1700, 1)

0046a330: _nop

0046a334: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0046a338: beq s1,v0,0x0046a3ec
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x44, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x46a3ec, 4) , (unique, 0x1200, 1)

0046a33c: _sltiu v0,s1,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x44, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046a340: bne v0,zero,0x0046a36c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x2e, 4)
	 ---  CBRANCH (ram, 0x46a36c, 4) , (unique, 0x1700, 1)

0046a344: _li v1,0x2e
	(register, 0xc, 4) COPY (const, 0x2e, 4)

0046a348: lb v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a34c: nop

0046a350: beq v0,v1,0x0046aa7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46aa7c, 4) , (unique, 0x1200, 1)

0046a354: _nop

0046a358: addu v0,s0,s1
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x44, 4)

0046a35c: lb a0,-0x3(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffd, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

0046a360: li v1,0x2f
	(register, 0xc, 4) COPY (const, 0x2f, 4)

0046a364: beq a0,v1,0x0046aaa4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x10, 4) COPY (const, 0x2e, 4)
	 ---  CBRANCH (ram, 0x46aaa4, 4) , (unique, 0x1200, 1)

0046a368: _li a0,0x2e
	(register, 0x10, 4) COPY (const, 0x2e, 4)

0046a36c: lw t9,-0x7d48(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82b8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a370: or a2,s1,zero
	(register, 0x18, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a374: li a1,0x2f
	(register, 0x14, 4) COPY (const, 0x2f, 4)

0046a378: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a380, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a37c: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a380: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a384: bne v0,zero,0x0046a958
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x2f, 4)
	 ---  CBRANCH (ram, 0x46a958, 4) , (unique, 0x1700, 1)

0046a388: _li v0,0x2f
	(register, 0x8, 4) COPY (const, 0x2f, 4)

0046a38c: lw a0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a390: bne s5,zero,0x0046a520
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46a520, 4) , (unique, 0x1700, 1)

0046a394: _sw a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046a398: lw s0,-0x76d8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8928, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a39c: or a1,s2,zero
	(register, 0x14, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0046a3a0: or t9,s0,zero
	(register, 0x64, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a3a4: bal 0x0046acc0
	(register, 0x7c, 4) COPY (const, 0x46a3ac, 4)
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46acc0, 4)

0046a3a8: _or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a3ac: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3b0: beq v0,zero,0x0046a970
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a970, 4) , (unique, 0x1200, 1)

0046a3b4: _nop

0046a3b8: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0046a3bc: lw ra,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3c0: lw s8,0x78(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3c4: lw s7,0x74(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3c8: lw s6,0x70(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3cc: lw s5,0x6c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3d0: lw s4,0x68(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3d4: lw s3,0x64(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x64, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3d8: lw s2,0x60(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3dc: lw s1,0x5c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x5c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3e0: lw s0,0x58(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a3e4: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)
	 ---  RETURN (register, 0x80, 4)

0046a3e8: _addiu sp,sp,0x80
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x80, 4)

0046a3ec: lb v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a3f0: li v1,0x2e
	(register, 0xc, 4) COPY (const, 0x2e, 4)

0046a3f4: bne v0,v1,0x0046a36c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46a36c, 4) , (unique, 0x1700, 1)

0046a3f8: _nop

0046a3fc: lb v1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a400: nop

0046a404: beq v1,v0,0x0046a428
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46a428, 4) , (unique, 0x1200, 1)

0046a408: _li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0046a40c: lw t9,-0x7d48(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82b8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a410: li a1,0x2f
	(register, 0x14, 4) COPY (const, 0x2f, 4)

0046a414: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a41c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a418: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a41c: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a420: beq v0,zero,0x0046a38c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a38c, 4) , (unique, 0x1200, 1)

0046a424: _nop

0046a428: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a42c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0046a430: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046a434: li v1,0x16
	(register, 0xc, 4) COPY (const, 0x16, 4)

0046a438: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a43c: b 0x0046a3b8
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46a3b8, 4)

0046a440: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046a444: lw s0,-0x7c60(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff83a0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a448: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a44c: or t9,s0,zero
	(register, 0x64, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a450: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a458, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8a84, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a454: _addiu a0,a0,-0x757c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8a84, 4)

0046a458: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a45c: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a460: beq v0,zero,0x0046a49c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a49c, 4) , (unique, 0x1200, 1)

0046a464: _nop

0046a468: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a46c: nop

0046a470: beq v0,zero,0x0046a49c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a49c, 4) , (unique, 0x1200, 1)

0046a474: _nop

0046a478: lw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a47c: nop

0046a480: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a484: nop

0046a488: beq v0,zero,0x0046a4f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a4f8, 4) , (unique, 0x1200, 1)

0046a48c: _nop

0046a490: lw s0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a494: b 0x0046a2b0
	 ---  BRANCH (ram, 0x46a2b0, 4)

0046a498: _nop

0046a49c: lw v0,-0x78d8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8728, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4a0: lw a0,-0x78d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff872c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4a4: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046a4a8: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046a4ac: or t9,s0,zero
	(register, 0x64, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a4b0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a4b8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a4b4: _addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0046a4b8: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a4bc: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4c0: beq v0,zero,0x0046a4d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a4d8, 4) , (unique, 0x1200, 1)

0046a4c4: _nop

0046a4c8: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a4cc: nop

0046a4d0: bne v0,zero,0x0046a478
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a478, 4) , (unique, 0x1700, 1)

0046a4d4: _nop

0046a4d8: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4dc: or t9,s0,zero
	(register, 0x64, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a4e0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a4e8, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8a8c, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a4e4: _addiu a0,a0,-0x7574
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8a8c, 4)

0046a4e8: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a4ec: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4f0: bne v0,zero,0x0046a480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a480, 4) , (unique, 0x1700, 1)

0046a4f4: _nop

0046a4f8: lw s0,-0x78e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8720, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a4fc: b 0x0046a2b0
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x46a2b0, 4)

0046a500: _sw s0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046a504: lw v0,-0x76d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff892c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a508: lw v1,-0x78e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8720, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a50c: sll s4,s4,0x2
	(register, 0x50, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)

0046a510: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046a514: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a518: b 0x0046a3b8
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x46a3b8, 4)

0046a51c: _sw v1,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a520: lw t9,-0x7838(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a524: nop

0046a528: bal 0x0045893c
	(register, 0x7c, 4) COPY (const, 0x46a530, 4)
	 ---  CALL (ram, 0x45893c, 4)

0046a52c: _nop

0046a530: or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a534: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a538: beq s0,zero,0x0046a9cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a9cc, 4) , (unique, 0x1200, 1)

0046a53c: _nop

0046a540: or t9,s3,zero
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046a544: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a54c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a548: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a54c: addiu v1,v0,0x8
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)

0046a550: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a554: srl v1,v1,0x3
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x3, 4)

0046a558: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

0046a55c: subu sp,sp,v1
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0xc, 4)

0046a560: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a564: addiu a2,v0,0x1
	(register, 0x18, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0046a568: or a1,s0,zero
	(register, 0x14, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a56c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a574, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a570: _addiu a0,sp,0x30
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0046a574: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a578: addiu v1,s8,0x38
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)

0046a57c: sw v1,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a580: lw t9,-0x7834(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87cc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a584: addiu v1,s8,0x3c
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)

0046a588: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a58c: addiu a3,s8,0x40
	(register, 0x1c, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)

0046a590: addiu a2,s8,0x44
	(register, 0x18, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)

0046a594: addiu a1,s8,0x48
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)

0046a598: bal 0x004593c0
	(register, 0x7c, 4) COPY (const, 0x46a5a0, 4)
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4593c0, 4)

0046a59c: _or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a5a0: or s1,v0,zero
	(register, 0x44, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a5a4: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0046a5a8: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5ac: beq s1,v0,0x0046a43c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x48, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46a43c, 4) , (unique, 0x1200, 1)

0046a5b0: _sll s2,s4,0x2
	(register, 0x48, 4) INT_LEFT (register, 0x50, 4) , (const, 0x2, 4)

0046a5b4: lw v0,-0x78d8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8728, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5b8: lw s7,-0x78d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8730, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5bc: addu v0,v0,s4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x50, 4)

0046a5c0: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0046a5c4: lw v1,-0x78d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff872c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5c8: addu a0,s7,s2
	(register, 0x10, 4) INT_ADD (register, 0x5c, 4) , (register, 0x48, 4)

0046a5cc: addu s7,v1,v0
	(register, 0x5c, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046a5d0: sw zero,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046a5d4: sw s7,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046a5d8: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5dc: lw t9,-0x783c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5e0: sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a5e4: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5e8: or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a5ec: sw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a5f0: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a5f4: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046a5f8: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a5fc: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a600: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046a604: sw v0,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a608: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a60c: nop

0046a610: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a614: bal 0x00458c30
	(register, 0x7c, 4) COPY (const, 0x46a61c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CALL (ram, 0x458c30, 4)

0046a618: _sw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0046a61c: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a620: lw a0,0x50(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a624: beq v0,zero,0x0046ab7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ab7c, 4) , (unique, 0x1200, 1)

0046a628: _or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a62c: andi v0,s1,0x1
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)

0046a630: bne v0,zero,0x0046aae8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46aae8, 4) , (unique, 0x1700, 1)

0046a634: _nop

0046a638: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a63c: nop

0046a640: beq v0,zero,0x0046aacc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46aacc, 4) , (unique, 0x1200, 1)

0046a644: _or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a648: lw s5,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a64c: nop

0046a650: beq s5,zero,0x0046ab04
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ab04, 4) , (unique, 0x1200, 1)

0046a654: _nop

0046a658: lw s1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a65c: nop

0046a660: beq s1,zero,0x0046a898
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a898, 4) , (unique, 0x1200, 1)

0046a664: _nop

0046a668: lw v0,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a66c: nop

0046a670: addiu v0,v0,-0x57d0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffa830, 4)

0046a674: addu v0,v0,s2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x48, 4)

0046a678: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a67c: nop

0046a680: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046a684: addu v0,s5,v0
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (register, 0x8, 4)

0046a688: lw s5,0x20(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a68c: nop

0046a690: beq s5,zero,0x0046abf8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46abf8, 4) , (unique, 0x1200, 1)

0046a694: _or t9,s3,zero
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046a698: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a6a0, 4)
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a69c: _or a0,s5,zero
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046a6a0: addiu v0,v0,0xa
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)

0046a6a4: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a6a8: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0046a6ac: lw s6,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a6b0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046a6b4: lb v1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a6b8: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0046a6bc: lw s2,0x3c(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a6c0: beq v1,zero,0x0046abe4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x50, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x46abe4, 4) , (unique, 0x1200, 1)

0046a6c4: _addiu s4,sp,0x30
	(register, 0x50, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0046a6c8: lw a1,0x34(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a6cc: or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a6d0: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046a6d4: li a2,0x5f
	(register, 0x18, 4) COPY (const, 0x5f, 4)

0046a6d8: li t0,0x3a
	(register, 0x20, 4) COPY (const, 0x3a, 4)

0046a6dc: li t1,0x2f
	(register, 0x24, 4) COPY (const, 0x2f, 4)

0046a6e0: sll v0,v1,0x1
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0046a6e4: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0046a6e8: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0046a6ec: nop

0046a6f0: andi v0,v0,0x800
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

0046a6f4: bne v0,zero,0x0046a92c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a92c, 4) , (unique, 0x1700, 1)

0046a6f8: _nop

0046a6fc: beq v1,a2,0x0046a92c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)
	 ---  CBRANCH (ram, 0x46a92c, 4) , (unique, 0x1200, 1)

0046a700: _addiu v0,v1,-0x2c
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)

0046a704: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0046a708: sltiu v0,v0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046a70c: bne v0,zero,0x0046a92c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a92c, 4) , (unique, 0x1700, 1)

0046a710: _nop

0046a714: beq v1,t0,0x0046a92c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x20, 4)
	 ---  CBRANCH (ram, 0x46a92c, 4) , (unique, 0x1200, 1)

0046a718: _nop

0046a71c: beq v1,t1,0x0046aa48
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x24, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46aa48, 4) , (unique, 0x1200, 1)

0046a720: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0046a724: lb v1,0x1(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a728: nop

0046a72c: bne v1,zero,0x0046a6e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a6e0, 4) , (unique, 0x1700, 1)

0046a730: _addiu s5,s5,0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)

0046a734: slti v0,a3,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046a738: beq v0,zero,0x0046a760
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a760, 4) , (unique, 0x1200, 1)

0046a73c: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0046a740: nor v0,zero,a3
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0046a744: li v1,0x2f
	(register, 0xc, 4) COPY (const, 0x2f, 4)

0046a748: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0046a74c: beq v0,zero,0x0046a758
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x46a758, 4) , (unique, 0x1200, 1)

0046a750: _sb v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0046a754: sb v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0046a758: addiu a0,a0,0x3
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)

0046a75c: subu a0,a0,a3
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x1c, 4)

0046a760: sb zero,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0046a764: or t9,s3,zero
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0046a768: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a770, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a76c: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046a770: addiu v0,v0,0xa
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xa, 4)

0046a774: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0046a778: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0046a77c: lb v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a780: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0046a784: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a788: beq v1,zero,0x0046abd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x46abd8, 4) , (unique, 0x1200, 1)

0046a78c: _addiu a0,sp,0x30
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)

0046a790: lw a2,0x34(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a794: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046a798: or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046a79c: li a3,0x5f
	(register, 0x1c, 4) COPY (const, 0x5f, 4)

0046a7a0: li t1,0x3a
	(register, 0x24, 4) COPY (const, 0x3a, 4)

0046a7a4: li t2,0x2f
	(register, 0x28, 4) COPY (const, 0x2f, 4)

0046a7a8: sll v0,v1,0x1
	(register, 0x8, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0046a7ac: addu v0,a2,v0
	(register, 0x8, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0046a7b0: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0046a7b4: nop

0046a7b8: andi v0,v0,0x800
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x800, 4)

0046a7bc: bne v0,zero,0x0046a900
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a900, 4) , (unique, 0x1700, 1)

0046a7c0: _nop

0046a7c4: beq v1,a3,0x0046a900
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)
	 ---  CBRANCH (ram, 0x46a900, 4) , (unique, 0x1200, 1)

0046a7c8: _addiu v0,v1,-0x2c
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffd4, 4)

0046a7cc: andi v0,v0,0xff
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)

0046a7d0: sltiu v0,v0,0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0046a7d4: bne v0,zero,0x0046a900
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a900, 4) , (unique, 0x1700, 1)

0046a7d8: _nop

0046a7dc: beq v1,t1,0x0046a900
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x46a900, 4) , (unique, 0x1200, 1)

0046a7e0: _nop

0046a7e4: beq v1,t2,0x0046aa34
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x28, 4)
	(register, 0x8, 4) COPY (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x46aa34, 4) , (unique, 0x1200, 1)

0046a7e8: _li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0046a7ec: lb v1,0x1(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a7f0: nop

0046a7f4: bne v1,zero,0x0046a7a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a7a8, 4) , (unique, 0x1700, 1)

0046a7f8: _addiu s1,s1,0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0046a7fc: slti v0,t0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x20, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046a800: beq v0,zero,0x0046a828
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a828, 4) , (unique, 0x1200, 1)

0046a804: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0046a808: nor v0,zero,t0
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x20, 4)
	(register, 0x8, 4) INT_NEGATE (unique, 0x4280, 4)

0046a80c: li v1,0x2f
	(register, 0xc, 4) COPY (const, 0x2f, 4)

0046a810: addiu v0,v0,0x3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)

0046a814: beq v0,zero,0x0046a820
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x46a820, 4) , (unique, 0x1200, 1)

0046a818: _sb v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0046a81c: sb v1,0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0046a820: addiu a1,a1,0x3
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x3, 4)

0046a824: subu a1,a1,t0
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x20, 4)

0046a828: sb zero,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0046a82c: or v1,a0,zero
	(register, 0xc, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046a830: lb v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a834: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046a838: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046a83c: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0046a840: lb v0,0x3(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a844: nop

0046a848: bne v0,zero,0x0046a830
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x46a830, 4) , (unique, 0x1700, 1)

0046a84c: _sb v0,-0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046a850: or v1,s4,zero
	(register, 0xc, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a854: lb v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a858: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046a85c: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0046a860: addu v0,s2,v0
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (register, 0x8, 4)

0046a864: lb v0,0x3(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046a868: nop

0046a86c: bne v0,zero,0x0046a854
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x46a854, 4) , (unique, 0x1700, 1)

0046a870: _sb v0,-0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046a874: lw t9,-0x76d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8930, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a878: nop

0046a87c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a884, 4)
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a880: _or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a884: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a888: bne v0,zero,0x0046aa60
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46aa60, 4) , (unique, 0x1700, 1)

0046a88c: _nop

0046a890: lw s5,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a894: nop

0046a898: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a89c: nop

0046a8a0: beq v0,zero,0x0046a9d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a9d8, 4) , (unique, 0x1200, 1)

0046a8a4: _nop

0046a8a8: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8ac: nop

0046a8b0: beq a0,zero,0x0046a9b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a9b8, 4) , (unique, 0x1200, 1)

0046a8b4: _nop

0046a8b8: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8bc: lw a2,-0x7e78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8188, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8c0: lw t9,-0x7818(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8c4: nop

0046a8c8: bal 0x00466c30
	(register, 0x7c, 4) COPY (const, 0x46a8d0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x59d4, 4)
	 ---  CALL (ram, 0x466c30, 4)

0046a8cc: _addiu a1,a1,0x59d4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x59d4, 4)

0046a8d0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046a8d4: lw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8d8: bne v1,zero,0x0046a8e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a8e4, 4) , (unique, 0x1700, 1)

0046a8dc: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0046a8e0: sw v1,0x18(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a8e4: lw v1,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a8e8: nop

0046a8ec: sltiu a0,v1,-0x2
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0xfffffffe, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0046a8f0: beq a0,zero,0x0046a3b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a3b8, 4) , (unique, 0x1200, 1)

0046a8f4: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0046a8f8: b 0x0046a3b8
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x46a3b8, 4)

0046a8fc: _sw v1,0x14(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046a900: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046a904: addu v1,s2,v1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

0046a908: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a90c: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0046a910: sb v0,-0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046a914: lb v1,0x1(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a918: nop

0046a91c: bne v1,zero,0x0046a7a8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a7a8, 4) , (unique, 0x1700, 1)

0046a920: _addiu s1,s1,0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0046a924: b 0x0046a800
	(unique, 0x5180, 1) INT_SLESS (register, 0x20, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  BRANCH (ram, 0x46a800, 4)

0046a928: _slti v0,t0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x20, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046a92c: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0046a930: addu v1,s2,v1
	(register, 0xc, 4) INT_ADD (register, 0x48, 4) , (register, 0xc, 4)

0046a934: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a938: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0046a93c: sb v0,-0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0046a940: lb v1,0x1(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a944: nop

0046a948: bne v1,zero,0x0046a6e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a6e0, 4) , (unique, 0x1700, 1)

0046a94c: _addiu s5,s5,0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)

0046a950: b 0x0046a738
	(unique, 0x5180, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)
	 ---  BRANCH (ram, 0x46a738, 4)

0046a954: _slti v0,a3,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0046a958: lb v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046a95c: nop

0046a960: beq v1,v0,0x0046a38c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46a38c, 4) , (unique, 0x1200, 1)

0046a964: _nop

0046a968: b 0x0046a428
	 ---  BRANCH (ram, 0x46a428, 4)

0046a96c: _nop

0046a970: lw t9,-0x7838(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87c8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a974: lw a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a978: bal 0x0045893c
	(register, 0x7c, 4) COPY (const, 0x46a980, 4)
	 ---  CALL (ram, 0x45893c, 4)

0046a97c: _nop

0046a980: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046a984: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a988: beq v0,zero,0x0046a9c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	 ---  CBRANCH (ram, 0x46a9c4, 4) , (unique, 0x1200, 1)

0046a98c: _addiu a1,s8,0x4c
	(register, 0x14, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)

0046a990: or t9,s0,zero
	(register, 0x64, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046a994: bal 0x0046acc0
	(register, 0x7c, 4) COPY (const, 0x46a99c, 4)
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46acc0, 4)

0046a998: _or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046a99c: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9a0: bne v0,zero,0x0046a3b8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) COPY (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46a3b8, 4) , (unique, 0x1700, 1)

0046a9a4: _li s6,0x10
	(register, 0x58, 4) COPY (const, 0x10, 4)

0046a9a8: lw s0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9ac: lw s5,-0x78bc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8744, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9b0: b 0x0046a538
	 ---  BRANCH (ram, 0x46a538, 4)

0046a9b4: _nop

0046a9b8: lw v0,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9bc: b 0x0046a8e4
	 ---  BRANCH (ram, 0x46a8e4, 4)

0046a9c0: _nop

0046a9c4: lw s5,-0x78bc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8744, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9c8: li s6,0x10
	(register, 0x58, 4) COPY (const, 0x10, 4)

0046a9cc: lw s0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9d0: b 0x0046a540
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  BRANCH (ram, 0x46a540, 4)

0046a9d4: _sw s0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0046a9d8: lw a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9dc: lw t9,-0x7d08(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff82f8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9e0: nop

0046a9e4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46a9ec, 4)
	(register, 0x14, 4) COPY (const, 0x2f, 4)
	 ---  CALLIND (register, 0x80, 4)

0046a9e8: _li a1,0x2f
	(register, 0x14, 4) COPY (const, 0x2f, 4)

0046a9ec: lb a1,-0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0046a9f0: li v1,0x2f
	(register, 0xc, 4) COPY (const, 0x2f, 4)

0046a9f4: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046a9f8: beq a1,v1,0x0046abf0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46abf0, 4) , (unique, 0x1200, 1)

0046a9fc: _addiu a0,v0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0046aa00: li a2,0x2f
	(register, 0x18, 4) COPY (const, 0x2f, 4)

0046aa04: lb v1,-0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046aa08: nop

0046aa0c: bne v1,a2,0x0046aa04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x46aa04, 4) , (unique, 0x1700, 1)

0046aa10: _addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

0046aa14: subu a1,v0,a0
	(register, 0x14, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0046aa18: lw t9,-0x76cc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8934, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aa1c: nop

0046aa20: bal 0x0046f9e0
	(register, 0x7c, 4) COPY (const, 0x46aa28, 4)
	 ---  CALL (ram, 0x46f9e0, 4)

0046aa24: _nop

0046aa28: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aa2c: b 0x0046a8a8
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x46a8a8, 4)

0046aa30: _sw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046aa34: beq t0,v0,0x0046a828
	(unique, 0x1200, 1) INT_EQUAL (register, 0x20, 4) , (register, 0x8, 4)
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a828, 4) , (unique, 0x1200, 1)

0046aa38: _addiu t0,t0,0x1
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)

0046aa3c: sb t2,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2b, 1)

0046aa40: b 0x0046a7ec
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46a7ec, 4)

0046aa44: _addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0046aa48: beq a3,v0,0x0046a760
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (register, 0x8, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x46a760, 4) , (unique, 0x1200, 1)

0046aa4c: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0046aa50: sb t1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x27, 1)

0046aa54: b 0x0046a724
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46a724, 4)

0046aa58: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0046aa5c: sw zero,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0046aa60: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aa64: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0046aa68: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0046aa6c: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0046aa70: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046aa74: b 0x0046a3b8
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46a3b8, 4)

0046aa78: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046aa7c: lb v1,0x1(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046aa80: nop

0046aa84: bne v1,v0,0x0046a35c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x46a35c, 4) , (unique, 0x1700, 1)

0046aa88: _addu v0,s0,s1
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (register, 0x44, 4)

0046aa8c: lb v1,0x2(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046aa90: li v0,0x2f
	(register, 0x8, 4) COPY (const, 0x2f, 4)

0046aa94: bne v1,v0,0x0046a358
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46a358, 4) , (unique, 0x1700, 1)

0046aa98: _nop

0046aa9c: b 0x0046a428
	 ---  BRANCH (ram, 0x46a428, 4)

0046aaa0: _nop

0046aaa4: lb v1,-0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0046aaa8: nop

0046aaac: bne v1,a0,0x0046a36c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x46a36c, 4) , (unique, 0x1700, 1)

0046aab0: _nop

0046aab4: lb v0,-0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0046aab8: nop

0046aabc: bne v0,v1,0x0046a36c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x46a36c, 4) , (unique, 0x1700, 1)

0046aac0: _nop

0046aac4: b 0x0046a428
	 ---  BRANCH (ram, 0x46a428, 4)

0046aac8: _nop

0046aacc: lw t9,-0x76c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8938, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aad0: nop

0046aad4: bal 0x0046c434
	(register, 0x7c, 4) COPY (const, 0x46aadc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46c434, 4)

0046aad8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0046aadc: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aae0: b 0x0046a648
	 ---  BRANCH (ram, 0x46a648, 4)

0046aae4: _nop

0046aae8: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aaec: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aaf0: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46aaf8, 4)
	 ---  CALLIND (register, 0x80, 4)

0046aaf4: _nop

0046aaf8: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aafc: b 0x0046a638
	 ---  BRANCH (ram, 0x46a638, 4)

0046ab00: _nop

0046ab04: lw a0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab08: nop

0046ab0c: beq a0,zero,0x0046aa60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x46aa60, 4) , (unique, 0x1200, 1)

0046ab10: _addiu s1,s0,0x10
	(register, 0x44, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)

0046ab14: lw s5,-0x76c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8938, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab18: b 0x0046ab48
	 ---  BRANCH (ram, 0x46ab48, 4)

0046ab1c: _nop

0046ab20: lw v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab24: nop

0046ab28: lw v1,0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab2c: nop

0046ab30: bne v1,zero,0x0046ab6c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ab6c, 4) , (unique, 0x1700, 1)

0046ab34: _nop

0046ab38: lw a0,0x4(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab3c: nop

0046ab40: beq a0,zero,0x0046aa5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x46aa5c, 4) , (unique, 0x1200, 1)

0046ab44: _addiu s1,s1,0x4
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)

0046ab48: lw v0,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab4c: nop

0046ab50: bne v0,zero,0x0046ab20
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46ab20, 4) , (unique, 0x1700, 1)

0046ab54: _or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046ab58: bal 0x0046c434
	(register, 0x7c, 4) COPY (const, 0x46ab60, 4)
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46c434, 4)

0046ab5c: _or a1,s4,zero
	(register, 0x14, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046ab60: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab64: b 0x0046ab20
	 ---  BRANCH (ram, 0x46ab20, 4)

0046ab68: _nop

0046ab6c: sw v0,0x10(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ab70: or s5,v1,zero
	(register, 0x54, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0046ab74: b 0x0046a658
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46a658, 4)

0046ab78: _or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046ab7c: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0046ab80: sw v0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ab84: sw s7,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0046ab88: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab8c: lw t9,-0x783c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87c4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab90: sw v0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046ab94: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ab98: or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0046ab9c: sw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046aba0: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046aba4: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0046aba8: sw v0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046abac: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046abb0: or a1,s5,zero
	(register, 0x14, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0046abb4: sw v0,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046abb8: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046abbc: bal 0x00458c30
	(register, 0x7c, 4) COPY (const, 0x46abc4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x458c30, 4)

0046abc0: _sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0046abc4: lw gp,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046abc8: bne v0,zero,0x0046a62c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46a62c, 4) , (unique, 0x1700, 1)

0046abcc: _or s0,v0,zero
	(register, 0x40, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0046abd0: b 0x0046a3b8
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x46a3b8, 4)

0046abd4: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046abd8: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0046abdc: b 0x0046a808
	(register, 0x20, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46a808, 4)

0046abe0: _li t0,0x1
	(register, 0x20, 4) COPY (const, 0x1, 4)

0046abe4: or a0,s4,zero
	(register, 0x10, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

0046abe8: b 0x0046a740
	(register, 0x1c, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46a740, 4)

0046abec: _li a3,0x1
	(register, 0x1c, 4) COPY (const, 0x1, 4)

0046abf0: b 0x0046aa18
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x46aa18, 4)

0046abf4: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

0046abf8: lw a3,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046abfc: lw a1,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ac00: lw a0,-0x7e64(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff819c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ac04: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046ac08: addiu a3,a3,-0x753c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffff8ac4, 4)

0046ac0c: li a2,0x121
	(register, 0x18, 4) COPY (const, 0x121, 4)

0046ac10: addiu a1,a1,-0x756c
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xffff8a94, 4)

0046ac14: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x46ac1c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8aa4, 4)
	 ---  CALLIND (register, 0x80, 4)

0046ac18: _addiu a0,a0,-0x755c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffff8aa4, 4)

