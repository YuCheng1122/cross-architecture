Function: memset
Address: 0041cb30
P-code:

0041cb30: slti t2,a2,0x8
	(unique, 0x5180, 1) INT_SLESS (register, 0x18, 4) , (const, 0x8, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5180, 1)

0041cb34: bne t2,zero,0x0041cc30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x41cc30, 4) , (unique, 0x1700, 1)

0041cb38: _or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0041cb3c: beq a1,zero,0x0041cb5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x41cb5c, 4) , (unique, 0x1200, 1)

0041cb40: _subu a3,zero,a0
	(register, 0x1c, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)

0041cb44: nop

0041cb48: andi a1,a1,0xff
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (const, 0xff, 4)

0041cb4c: sll t2,a1,0x8
	(register, 0x28, 4) INT_LEFT (register, 0x14, 4) , (const, 0x8, 4)

0041cb50: or a1,a1,t2
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x28, 4)

0041cb54: sll t2,a1,0x10
	(register, 0x28, 4) INT_LEFT (register, 0x14, 4) , (const, 0x10, 4)

0041cb58: or a1,a1,t2
	(register, 0x14, 4) INT_OR (register, 0x14, 4) , (register, 0x28, 4)

0041cb5c: andi t2,a3,0x3
	(register, 0x28, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

0041cb60: beq t2,zero,0x0041cb70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x41cb70, 4) , (unique, 0x1200, 1)

0041cb64: _subu a2,a2,t2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x28, 4)

0041cb68: swl a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0xe500, 4) COPY (register, 0x14, 4)
	(unique, 0xe600, 4) INT_AND (unique, 0x180, 4) , (const, 0x3, 4)
	(unique, 0xe700, 4) INT_SUB (unique, 0x180, 4) , (unique, 0xe600, 4)
	(unique, 0xe780, 4) LOAD (const, 0x1a1, 8) , (unique, 0xe700, 4)
	(unique, 0xe800, 4) INT_SUB (const, 0x4, 4) , (unique, 0xe600, 4)
	(unique, 0xe880, 4) INT_MULT (unique, 0xe800, 4) , (const, 0x8, 4)
	(unique, 0xe900, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0xe880, 4)
	(unique, 0xea00, 4) INT_AND (unique, 0xe780, 4) , (unique, 0xe900, 4)
	(unique, 0xea80, 4) INT_MULT (unique, 0xe600, 4) , (const, 0x8, 4)
	(unique, 0xeb80, 4) INT_RIGHT (unique, 0xe500, 4) , (unique, 0xea80, 4)
	(unique, 0xec00, 4) INT_OR (unique, 0xea00, 4) , (unique, 0xeb80, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0xe700, 4) , (unique, 0xec00, 4)

0041cb6c: addu a0,a0,t2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x28, 4)

0041cb70: andi t2,a3,0x4
	(register, 0x28, 4) INT_AND (register, 0x1c, 4) , (const, 0x4, 4)

0041cb74: beq t2,zero,0x0041cb84
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x28, 4)
	 ---  CBRANCH (ram, 0x41cb84, 4) , (unique, 0x1200, 1)

0041cb78: _subu a2,a2,t2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x28, 4)

0041cb7c: sw a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cb80: addu a0,a0,t2
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x28, 4)

0041cb84: andi t8,a2,0x3f
	(register, 0x60, 4) INT_AND (register, 0x18, 4) , (const, 0x3f, 4)

0041cb88: beq a2,t8,0x0041cbe4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x60, 4)
	(register, 0x1c, 4) INT_SUB (register, 0x18, 4) , (register, 0x60, 4)
	 ---  CBRANCH (ram, 0x41cbe4, 4) , (unique, 0x1200, 1)

0041cb8c: _subu a3,a2,t8
	(register, 0x1c, 4) INT_SUB (register, 0x18, 4) , (register, 0x60, 4)

0041cb90: addu a3,a0,a3
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x1c, 4)

0041cb94: sw a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cb98: sw a1,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cb9c: sw a1,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cba0: sw a1,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cba4: sw a1,0x10(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cba8: sw a1,0x14(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbac: sw a1,0x18(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbb0: sw a1,0x1c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbb4: sw a1,0x20(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbb8: sw a1,0x24(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbbc: sw a1,0x28(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbc0: sw a1,0x2c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbc4: sw a1,0x30(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbc8: sw a1,0x34(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbcc: sw a1,0x38(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbd0: sw a1,0x3c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbd4: addiu a0,a0,0x40
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x40, 4)

0041cbd8: bne a0,a3,0x0041cb94
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x1c, 4)
	 ---  CBRANCH (ram, 0x41cb94, 4) , (unique, 0x1700, 1)

0041cbdc: _nop

0041cbe0: or a2,t8,zero
	(register, 0x18, 4) INT_OR (register, 0x60, 4) , (const, 0x0, 4)

0041cbe4: andi t8,a2,0x1f
	(register, 0x60, 4) INT_AND (register, 0x18, 4) , (const, 0x1f, 4)

0041cbe8: beq a2,t8,0x0041cc14
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x60, 4)
	 ---  CBRANCH (ram, 0x41cc14, 4) , (unique, 0x1200, 1)

0041cbec: _nop

0041cbf0: sw a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbf4: sw a1,0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbf8: sw a1,0x8(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cbfc: sw a1,0xc(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc00: sw a1,0x10(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc04: sw a1,0x14(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc08: sw a1,0x18(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc0c: sw a1,0x1c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc10: addiu a0,a0,0x20
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)

0041cc14: andi a2,t8,0x3
	(register, 0x18, 4) INT_AND (register, 0x60, 4) , (const, 0x3, 4)

0041cc18: beq a2,t8,0x0041cc30
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x60, 4)
	(register, 0x1c, 4) INT_SUB (register, 0x60, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x41cc30, 4) , (unique, 0x1200, 1)

0041cc1c: _subu a3,t8,a2
	(register, 0x1c, 4) INT_SUB (register, 0x60, 4) , (register, 0x18, 4)

0041cc20: addu a3,a0,a3
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x1c, 4)

0041cc24: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0041cc28: bne a0,a3,0x0041cc24
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x41cc24, 4) , (unique, 0x1700, 1)

0041cc2c: _sw a1,-0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0041cc30: blez a2,0x0041cc44
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x41cc44, 4) , (unique, 0x1500, 1)

0041cc34: _addu a3,a0,a2
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x18, 4)

0041cc38: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0041cc3c: bne a0,a3,0x0041cc38
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x1c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)
	 ---  CBRANCH (ram, 0x41cc38, 4) , (unique, 0x1700, 1)

0041cc40: _sb a1,-0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0041cc44: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0041cc48: _nop

