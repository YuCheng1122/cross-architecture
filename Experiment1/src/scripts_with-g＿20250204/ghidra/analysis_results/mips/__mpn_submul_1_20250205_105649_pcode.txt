Function: __mpn_submul_1
Address: 0046e690
P-code:

0046e690: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

0046e694: addiu gp,gp,-0x3830
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffc7d0, 4)

0046e698: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0046e69c: lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e6a0: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046e6a4: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046e6a8: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046e6ac: beq a2,zero,0x0046e730
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x46e730, 4) , (unique, 0x1200, 1)

0046e6b0: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0046e6b4: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046e6b8: beq a2,zero,0x0046e700
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	 ---  CBRANCH (ram, 0x46e700, 4) , (unique, 0x1200, 1)

0046e6bc: _lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e6c0: lw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e6c4: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0046e6c8: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046e6cc: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0046e6d0: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046e6d4: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046e6d8: lw t0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e6dc: addiu a2,a2,-0x1
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)

0046e6e0: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046e6e4: subu v1,t2,v1
	(register, 0xc, 4) INT_SUB (register, 0x28, 4) , (register, 0xc, 4)

0046e6e8: sltu t2,t2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0xc, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5380, 1)

0046e6ec: addu v0,v0,t2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x28, 4)

0046e6f0: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e6f4: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046e6f8: bne a2,zero,0x0046e6c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x46e6c0, 4) , (unique, 0x1700, 1)

0046e6fc: _addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

0046e700: lw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e704: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0046e708: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046e70c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046e710: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046e714: multu t0,a3
	(unique, 0xe000, 8) INT_ZEXT (register, 0x20, 4)
	(unique, 0xe100, 8) INT_ZEXT (register, 0x1c, 4)
	(unique, 0xe200, 8) INT_MULT (unique, 0xe000, 8) , (unique, 0xe100, 8)
	(register, 0x3004, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)
	(unique, 0xe200, 8) INT_RIGHT (unique, 0xe200, 8) , (const, 0x20, 4)
	(register, 0x3000, 4) SUBPIECE (unique, 0xe200, 8) , (const, 0x0, 4)

0046e718: subu v1,t2,v1
	(register, 0xc, 4) INT_SUB (register, 0x28, 4) , (register, 0xc, 4)

0046e71c: sltu t2,t2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0xc, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5380, 1)

0046e720: addu v0,v0,t2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x28, 4)

0046e724: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e728: addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0046e72c: addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

0046e730: lw t2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0046e734: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0046e738: mfhi t1
	(register, 0x24, 4) COPY (register, 0x3000, 4)

0046e73c: addu v1,v1,v0
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0046e740: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0046e744: subu v1,t2,v1
	(register, 0xc, 4) INT_SUB (register, 0x28, 4) , (register, 0xc, 4)

0046e748: sltu t2,t2,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x28, 4) , (register, 0xc, 4)
	(register, 0x28, 4) INT_ZEXT (unique, 0x5380, 1)

0046e74c: addu v0,v0,t2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x28, 4)

0046e750: sw v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0046e754: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)
	 ---  RETURN (register, 0x80, 4)

0046e758: _addu v0,t1,v0
	(register, 0x8, 4) INT_ADD (register, 0x24, 4) , (register, 0x8, 4)

