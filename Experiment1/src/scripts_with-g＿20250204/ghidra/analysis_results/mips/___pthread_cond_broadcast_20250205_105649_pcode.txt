Function: ___pthread_cond_broadcast
Address: 004804c0
P-code:

004804c0: lui gp,0x4
	(register, 0x70, 4) INT_LEFT (const, 0x4, 4) , (const, 0x10, 4)

004804c4: addiu gp,gp,-0x5660
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xffffa9a0, 4)

004804c8: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

004804cc: addiu sp,sp,-0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffa8, 4)

004804d0: sw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

004804d4: sw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

004804d8: sw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

004804dc: sw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

004804e0: sw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

004804e4: sw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

004804e8: sw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

004804ec: sw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

004804f0: sw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

004804f4: sw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

004804f8: sw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

004804fc: lw s2,0x24(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480500: nop

00480504: srl v0,s2,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x48, 4) , (const, 0x3, 4)

00480508: beq v0,zero,0x00480668
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1200, 1)

0048050c: _sll s2,s2,0x7
	(register, 0x48, 4) INT_LEFT (register, 0x48, 4) , (const, 0x7, 4)

00480510: lw a2,0x20(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480514: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00480518: andi s2,s2,0xff
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (const, 0xff, 4)

0048051c: addiu s1,a0,0x20
	(register, 0x44, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)

00480520: andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

00480524: bne v0,zero,0x00480a30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480a30, 4) , (unique, 0x1700, 1)

00480528: _ori a0,a2,0x1
	(register, 0x10, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

0048052c: ll v1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480530: bne v1,a2,0x0048054c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48054c, 4) , (unique, 0x1700, 1)

00480534: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00480538: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0048053c: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480540: beq at,zero,0x0048052c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x48052c, 4) , (unique, 0x1200, 1)

00480544: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00480548: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0048054c: beq v0,zero,0x00480520
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480520, 4) , (unique, 0x1200, 1)

00480550: _or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00480554: lw s8,-0x7618(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89e8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480558: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0048055c: or t9,s8,zero
	(register, 0x64, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00480560: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x480568, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)
	 ---  CALL (ram, 0x476c24, 4)

00480564: _sw s0,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00480568: nor s5,zero,v1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0x54, 4) INT_NEGATE (unique, 0x4280, 4)

0048056c: andi s5,s5,0x1
	(register, 0x54, 4) INT_AND (register, 0x54, 4) , (const, 0x1, 4)

00480570: sll s7,s5,0x2
	(register, 0x5c, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00480574: addu a1,s0,s7
	(register, 0x14, 4) INT_ADD (register, 0x40, 4) , (register, 0x5c, 4)

00480578: or s3,v1,zero
	(register, 0x4c, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0048057c: lw v1,0x18(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480580: sll v0,v0,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00480584: srl s6,s3,0x1
	(register, 0x58, 4) INT_RIGHT (register, 0x4c, 4) , (const, 0x1, 4)

00480588: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048058c: beq v1,zero,0x004805f0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x4805f0, 4) , (unique, 0x1200, 1)

00480590: _or s6,v0,s6
	(register, 0x58, 4) INT_OR (register, 0x8, 4) , (register, 0x58, 4)

00480594: addiu t0,s0,0x28
	(register, 0x20, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00480598: addu a0,t0,s7
	(register, 0x10, 4) INT_ADD (register, 0x20, 4) , (register, 0x5c, 4)

0048059c: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

004805a0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004805a4: ll at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004805a8: addu at,at,v1
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (register, 0xc, 4)

004805ac: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004805b0: beq at,zero,0x004805a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4805a4, 4) , (unique, 0x1200, 1)

004805b4: _nop

004805b8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004805bc: lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

004805c0: sw zero,0x18(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004805c4: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

004805c8: xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

004805cc: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

004805d0: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

004805d4: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

004805d8: beq a3,zero,0x004805e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x4805e8, 4) , (unique, 0x1200, 1)

004805dc: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004805e0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

004805e4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

004805e8: beq v1,zero,0x00480a18
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x480a18, 4) , (unique, 0x1200, 1)

004805ec: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

004805f0: addiu v0,s0,0x8
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

004805f4: lw s4,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004805f8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004805fc: or t9,s8,zero
	(register, 0x64, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

00480600: bal 0x00476c24
	(register, 0x7c, 4) COPY (const, 0x480608, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x476c24, 4)

00480604: _sw v0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00480608: andi t2,s3,0x1
	(register, 0x28, 4) INT_AND (register, 0x4c, 4) , (const, 0x1, 4)

0048060c: sll t1,t2,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x28, 4) , (const, 0x2, 4)

00480610: addu s3,s0,t1
	(register, 0x4c, 4) INT_ADD (register, 0x40, 4) , (register, 0x24, 4)

00480614: lw a0,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480618: srl s4,s4,0x2
	(register, 0x50, 4) INT_RIGHT (register, 0x50, 4) , (const, 0x2, 4)

0048061c: sll v0,v0,0x1f
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00480620: srl v1,v1,0x1
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00480624: addu a0,a0,s6
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x58, 4)

00480628: or s8,v0,v1
	(register, 0x78, 4) INT_OR (register, 0x8, 4) , (register, 0xc, 4)

0048062c: subu a0,a0,s4
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x50, 4)

00480630: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480634: bne s8,a0,0x0048069c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x78, 4) , (register, 0x10, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x48069c, 4) , (unique, 0x1700, 1)

00480638: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

0048063c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480640: ll v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480644: and at,v0,v1
	(register, 0x4, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

00480648: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0048064c: beq at,zero,0x00480640
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480640, 4) , (unique, 0x1200, 1)

00480650: _nop

00480654: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480658: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

0048065c: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00480660: beq v0,v1,0x0048091c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48091c, 4) , (unique, 0x1200, 1)

00480664: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480668: lw ra,0x54(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048066c: lw s8,0x50(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x50, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480670: lw s7,0x4c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480674: lw s6,0x48(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480678: lw s5,0x44(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048067c: lw s4,0x40(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480680: lw s3,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480684: lw s2,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480688: lw s1,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048068c: lw s0,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480690: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480694: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)
	 ---  RETURN (register, 0x80, 4)

00480698: _addiu sp,sp,0x58
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x58, 4)

0048069c: addiu t0,s0,0x28
	(register, 0x20, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

004806a0: addu s5,t0,s7
	(register, 0x54, 4) INT_ADD (register, 0x20, 4) , (register, 0x5c, 4)

004806a4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004806a8: ll at,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004806ac: ori at,at,0x1
	(register, 0x4, 4) INT_OR (register, 0x4, 4) , (const, 0x1, 4)

004806b0: sc at,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004806b4: beq at,zero,0x004806a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4806a8, 4) , (unique, 0x1200, 1)

004806b8: _nop

004806bc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004806c0: addiu a0,s0,0x10
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x10, 4)

004806c4: addu a0,a0,s7
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x5c, 4)

004806c8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004806cc: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004806d0: ori at,v0,0x0
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

004806d4: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004806d8: beq at,zero,0x004806cc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4806cc, 4) , (unique, 0x1200, 1)

004806dc: _nop

004806e0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004806e4: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

004806e8: beq v0,zero,0x00480798
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x7c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480798, 4) , (unique, 0x1200, 1)

004806ec: _or ra,s1,zero
	(register, 0x7c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

004806f0: xori a1,s2,0x80
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x80, 4)

004806f4: li s6,-0xb
	(register, 0x58, 4) COPY (const, 0xfffffff5, 4)

004806f8: sw t1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

004806fc: or s1,t2,zero
	(register, 0x44, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

00480700: b 0x0048071c
	(register, 0x5c, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x48071c, 4)

00480704: _or s7,t0,zero
	(register, 0x5c, 4) INT_OR (register, 0x20, 4) , (const, 0x0, 4)

00480708: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048070c: nop

00480710: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00480714: beq v0,zero,0x00480788
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480788, 4) , (unique, 0x1200, 1)

00480718: _nop

0048071c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480720: ll a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480724: ori at,a2,0x1
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

00480728: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

0048072c: beq at,zero,0x00480720
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480720, 4) , (unique, 0x1200, 1)

00480730: _ori a2,a2,0x1
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x1, 4)

00480734: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480738: srl v0,a2,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x1, 4)

0048073c: beq v0,zero,0x00480708
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480708, 4) , (unique, 0x1200, 1)

00480740: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480744: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00480748: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

0048074c: beq a3,zero,0x0048075c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x48075c, 4) , (unique, 0x1200, 1)

00480750: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480754: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00480758: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0048075c: bne v1,zero,0x00480708
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480708, 4) , (unique, 0x1700, 1)

00480760: _nop

00480764: beq v0,s6,0x00480708
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x480708, 4) , (unique, 0x1200, 1)

00480768: _li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

0048076c: bne v0,v1,0x00480998
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x480998, 4) , (unique, 0x1700, 1)

00480770: _nop

00480774: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480778: nop

0048077c: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00480780: bne v0,zero,0x0048071c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48071c, 4) , (unique, 0x1700, 1)

00480784: _nop

00480788: lw t1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048078c: or t2,s1,zero
	(register, 0x28, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00480790: or t0,s7,zero
	(register, 0x20, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

00480794: or s1,ra,zero
	(register, 0x44, 4) INT_OR (register, 0x7c, 4) , (const, 0x0, 4)

00480798: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

0048079c: beq t2,zero,0x004809c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x50, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x4809c8, 4) , (unique, 0x1200, 1)

004807a0: _sll v0,s4,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x50, 4) , (const, 0x1, 4)

004807a4: li a1,-0x1
	(register, 0x14, 4) COPY (const, 0xffffffff, 4)

004807a8: lw t9,-0x7614(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff89ec, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807ac: lw a0,0x1c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807b0: sw t0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

004807b4: sw t2,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x28, 4)

004807b8: sw t1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

004807bc: bal 0x00476bc0
	(register, 0x7c, 4) COPY (const, 0x4807c4, 4)
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CALL (ram, 0x476bc0, 4)

004807c0: _addu a1,v0,a1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

004807c4: lw gp,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807c8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004807cc: sw zero,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004807d0: lw t1,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807d4: lw t2,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807d8: lw t0,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807dc: addiu v1,s0,0x4
	(register, 0xc, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)

004807e0: lw v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807e4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004807e8: lw a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807ec: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004807f0: lw a0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004807f4: nop

004807f8: bne v0,a0,0x004807e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x4807e0, 4) , (unique, 0x1700, 1)

004807fc: _nop

00480800: bltz a1,0x004809ac
	(unique, 0x1600, 1) INT_SLESS (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x4809ac, 4) , (unique, 0x1600, 1)

00480804: _lui a0,0x7fff
	(register, 0x10, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00480808: ori a0,a0,0xffff
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0xffff, 4)

0048080c: lw a2,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480810: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

00480814: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480818: ll v1,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048081c: xori at,v1,0x1
	(register, 0x4, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)

00480820: sc at,0x0(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480824: beq at,zero,0x00480818
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480818, 4) , (unique, 0x1200, 1)

00480828: _nop

0048082c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480830: and v1,v1,a0
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (register, 0x10, 4)

00480834: and a1,a1,a0
	(register, 0x14, 4) INT_AND (register, 0x14, 4) , (register, 0x10, 4)

00480838: sltu a1,v1,a1
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0048083c: bne a1,zero,0x00480914
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480914, 4) , (unique, 0x1700, 1)

00480840: _nop

00480844: sll a0,v0,0x1f
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1f, 4)

00480848: addu v1,a0,v1
	(register, 0xc, 4) INT_ADD (register, 0x10, 4) , (register, 0xc, 4)

0048084c: srl v0,v0,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x1, 4)

00480850: sltu a0,v1,a0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

00480854: addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

00480858: sll a0,a0,0x1f
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x1f, 4)

0048085c: srl v0,v1,0x1
	(register, 0x8, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x1, 4)

00480860: or v0,a0,v0
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4)

00480864: lw v1,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480868: addu s4,s4,s8
	(register, 0x50, 4) INT_ADD (register, 0x50, 4) , (register, 0x78, 4)

0048086c: subu v0,v0,s4
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x50, 4)

00480870: sll a0,v0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

00480874: andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

00480878: or v1,v1,a0
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (register, 0x10, 4)

0048087c: ll a1,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480880: or at,v1,zero
	(register, 0x4, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00480884: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480888: beq at,zero,0x0048087c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x48087c, 4) , (unique, 0x1200, 1)

0048088c: _nop

00480890: xor v1,v1,a1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x14, 4)

00480894: andi v1,v1,0x3
	(register, 0xc, 4) INT_AND (register, 0xc, 4) , (const, 0x3, 4)

00480898: bne v1,zero,0x00480a0c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480a0c, 4) , (unique, 0x1700, 1)

0048089c: _nop

004808a0: lw v1,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004808a4: nop

004808a8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

004808ac: beq v0,zero,0x004809d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x4809d0, 4) , (unique, 0x1200, 1)

004808b0: _sw v0,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

004808b4: addu v1,t0,t1
	(register, 0xc, 4) INT_ADD (register, 0x20, 4) , (register, 0x24, 4)

004808b8: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

004808bc: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004808c0: ll at,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004808c4: addu at,at,v0
	(register, 0x4, 4) INT_ADD (register, 0x4, 4) , (register, 0x8, 4)

004808c8: sc at,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004808cc: beq at,zero,0x004808c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4808c0, 4) , (unique, 0x1200, 1)

004808d0: _nop

004808d4: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004808d8: li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

004808dc: sw zero,0x18(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

004808e0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004808e4: ll v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004808e8: and at,v0,v1
	(register, 0x4, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004808ec: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004808f0: beq at,zero,0x004808e4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4808e4, 4) , (unique, 0x1200, 1)

004808f4: _nop

004808f8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004808fc: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

00480900: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00480904: beq v0,v1,0x004809bc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)
	 ---  CBRANCH (ram, 0x4809bc, 4) , (unique, 0x1200, 1)

00480908: _xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

0048090c: b 0x0048095c
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  BRANCH (ram, 0x48095c, 4)

00480910: _lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00480914: b 0x00480844
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x480844, 4)

00480918: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0048091c: xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

00480920: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00480924: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

00480928: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0048092c: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00480930: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00480934: beq a3,zero,0x00480944
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480944, 4) , (unique, 0x1200, 1)

00480938: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0048093c: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00480940: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480944: beq v1,zero,0x00480ad8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x480ad8, 4) , (unique, 0x1200, 1)

00480948: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

0048094c: beq s3,zero,0x00480668
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1200, 1)

00480950: _addiu t0,s0,0x28
	(register, 0x20, 4) INT_ADD (register, 0x40, 4) , (const, 0x28, 4)

00480954: sll t1,s5,0x2
	(register, 0x24, 4) INT_LEFT (register, 0x54, 4) , (const, 0x2, 4)

00480958: lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0048095c: addu a0,t0,t1
	(register, 0x10, 4) INT_ADD (register, 0x20, 4) , (register, 0x24, 4)

00480960: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

00480964: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480968: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

0048096c: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00480970: beq a3,zero,0x00480980
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480980, 4) , (unique, 0x1200, 1)

00480974: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480978: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

0048097c: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480980: bne v1,zero,0x00480668
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1700, 1)

00480984: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00480988: beq v0,v1,0x00480668
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1200, 1)

0048098c: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00480990: beq v0,v1,0x00480668
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1200, 1)

00480994: _nop

00480998: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0048099c: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004809a0: nop

004809a4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x4809ac, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

004809a8: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

004809ac: bltz v0,0x00480808
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480808, 4) , (unique, 0x1600, 1)

004809b0: _nop

004809b4: b 0x00480808
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x480808, 4)

004809b8: _addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

004809bc: or s5,t2,zero
	(register, 0x54, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

004809c0: b 0x0048091c
	(register, 0x4c, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x48091c, 4)

004809c4: _li s3,0x1
	(register, 0x4c, 4) COPY (const, 0x1, 4)

004809c8: b 0x004807a8
	(register, 0x14, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x4807a8, 4)

004809cc: _li a1,0x1
	(register, 0x14, 4) COPY (const, 0x1, 4)

004809d0: or s5,t2,zero
	(register, 0x54, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

004809d4: li v1,-0x4
	(register, 0xc, 4) COPY (const, 0xfffffffc, 4)

004809d8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004809dc: ll v0,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

004809e0: and at,v0,v1
	(register, 0x4, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

004809e4: sc at,0x0(s1)
	(unique, 0x100, 4) INT_ADD (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

004809e8: beq at,zero,0x004809dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x4809dc, 4) , (unique, 0x1200, 1)

004809ec: _nop

004809f0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

004809f4: li v1,0x2
	(register, 0xc, 4) COPY (const, 0x2, 4)

004809f8: andi v0,v0,0x3
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

004809fc: bne v0,v1,0x00480668
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480668, 4) , (unique, 0x1700, 1)

00480a00: _or s3,zero,zero
	(register, 0x4c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480a04: b 0x00480920
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)
	 ---  BRANCH (ram, 0x480920, 4)

00480a08: _xori a1,s2,0x81
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x81, 4)

00480a0c: ori a0,a0,0x2
	(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x2, 4)

00480a10: b 0x004808a0
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x4808a0, 4)

00480a14: _sw a0,0x20(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

00480a18: beq v0,v1,0x004805f0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x4805f0, 4) , (unique, 0x1200, 1)

00480a1c: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00480a20: beq v0,v1,0x004805f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x4805f4, 4) , (unique, 0x1200, 1)

00480a24: _addiu v0,s0,0x8
	(register, 0x8, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00480a28: b 0x00480998
	 ---  BRANCH (ram, 0x480998, 4)

00480a2c: _nop

00480a30: li s4,0x2
	(register, 0x50, 4) COPY (const, 0x2, 4)

00480a34: xori a1,s2,0x80
	(register, 0x14, 4) INT_XOR (register, 0x48, 4) , (const, 0x80, 4)

00480a38: li s3,-0x4
	(register, 0x4c, 4) COPY (const, 0xfffffffc, 4)

00480a3c: li s5,-0xb
	(register, 0x54, 4) COPY (const, 0xfffffff5, 4)

00480a40: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

00480a44: beq v0,s4,0x00480a84
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x480a84, 4) , (unique, 0x1200, 1)

00480a48: _and v0,a2,s3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (register, 0x4c, 4)

00480a4c: ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00480a50: ll a3,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480a54: bne a3,a2,0x00480a70
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (register, 0x18, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480a70, 4) , (unique, 0x1700, 1)

00480a58: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00480a5c: or at,v0,zero
	(register, 0x4, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

00480a60: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00480a64: beq at,zero,0x00480a50
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x480a50, 4) , (unique, 0x1200, 1)

00480a68: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00480a6c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00480a70: or a2,a3,zero
	(register, 0x18, 4) INT_OR (register, 0x1c, 4) , (const, 0x0, 4)

00480a74: beq v1,zero,0x00480ab4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x480ab4, 4) , (unique, 0x1200, 1)

00480a78: _andi v0,a3,0x3
	(register, 0x8, 4) INT_AND (register, 0x1c, 4) , (const, 0x3, 4)

00480a7c: beq v0,zero,0x00480554
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480554, 4) , (unique, 0x1200, 1)

00480a80: _or s1,a0,zero
	(register, 0x44, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00480a84: and a2,a2,s3
	(register, 0x18, 4) INT_AND (register, 0x18, 4) , (register, 0x4c, 4)

00480a88: ori a2,a2,0x2
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0x2, 4)

00480a8c: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00480a90: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00480a94: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00480a98: beq a3,zero,0x00480aa8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x480aa8, 4) , (unique, 0x1200, 1)

00480a9c: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480aa0: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00480aa4: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00480aa8: beq v1,zero,0x00480abc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x480abc, 4) , (unique, 0x1200, 1)

00480aac: _nop

00480ab0: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480ab4: b 0x00480a44
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x480a44, 4)

00480ab8: _andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

00480abc: beq v0,s5,0x00480ab0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x54, 4)
	 ---  CBRANCH (ram, 0x480ab0, 4) , (unique, 0x1200, 1)

00480ac0: _nop

00480ac4: bne v0,s3,0x00480998
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x480998, 4) , (unique, 0x1700, 1)

00480ac8: _nop

00480acc: lw a2,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00480ad0: b 0x00480a44
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x480a44, 4)

00480ad4: _andi v0,a2,0x3
	(register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0x3, 4)

00480ad8: beq v0,v1,0x0048094c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x48094c, 4) , (unique, 0x1200, 1)

00480adc: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00480ae0: beq v0,v1,0x0048094c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x48094c, 4) , (unique, 0x1200, 1)

00480ae4: _nop

00480ae8: b 0x00480998
	 ---  BRANCH (ram, 0x480998, 4)

00480aec: _nop

