Function: __printf_fp_buffer_1
Address: 0045bd5c
P-code:

0045bd5c: lui gp,0x6
	(register, 0x70, 4) INT_LEFT (const, 0x6, 4) , (const, 0x10, 4)

0045bd60: addiu gp,gp,-0xefc
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0xfffff104, 4)

0045bd64: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

0045bd68: addiu sp,sp,-0xc8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffff38, 4)

0045bd6c: sw s8,0xc0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0045bd70: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0045bd74: sw s4,0xb0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

0045bd78: lw s4,0xd8(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bd7c: sw s1,0xa4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

0045bd80: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045bd84: sw s0,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0045bd88: sw ra,0xc4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0045bd8c: sw s7,0xbc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xbc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x5c, 4)

0045bd90: sw s6,0xb8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

0045bd94: sw s5,0xb4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045bd98: sw s3,0xac(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045bd9c: sw s2,0xa8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045bda0: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

0045bda4: andi t5,s1,0x80
	(register, 0x34, 4) INT_AND (register, 0x44, 4) , (const, 0x80, 4)

0045bda8: lw t4,0xdc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xdc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x30, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bdac: sw a1,0xcc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xcc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045bdb0: sw a2,0xd0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045bdb4: sw a3,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0045bdb8: beq t5,zero,0x0045bf20
	(unique, 0x1200, 1) INT_EQUAL (register, 0x34, 4) , (const, 0x0, 4)
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45bf20, 4) , (unique, 0x1200, 1)

0045bdbc: _or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045bdc0: li a0,0x4
	(register, 0x10, 4) COPY (const, 0x4, 4)

0045bdc4: sw a0,0x88(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045bdc8: lw s2,0x0(t4)
	(unique, 0x100, 4) INT_ADD (register, 0x30, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bdcc: lw s3,0x4(t4)
	(unique, 0x100, 4) INT_ADD (register, 0x30, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bdd0: lw t9,-0x77e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8820, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bdd4: sw t1,0x6c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x6c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x24, 4)

0045bdd8: sw t0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x20, 4)

0045bddc: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045bde0: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045bde4: sw zero,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045bde8: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045bdec: or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045bdf0: bal 0x004790f0
	(register, 0x7c, 4) COPY (const, 0x45bdf8, 4)
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4790f0, 4)

0045bdf4: _or a0,s2,zero
	(register, 0x10, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045bdf8: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bdfc: bne v0,zero,0x0045d464
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x54, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d464, 4) , (unique, 0x1700, 1)

0045be00: _lui s5,0x7fff
	(register, 0x54, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045be04: lw v1,-0x7fac(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8054, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be08: ori s5,s5,0xffff
	(register, 0x54, 4) INT_OR (register, 0x54, 4) , (const, 0xffff, 4)

0045be0c: lw t9,-0x77e0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8820, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be10: lw a3,-0x57ec(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa814, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be14: lw a2,-0x57f0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa810, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be18: and s5,s2,s5
	(register, 0x54, 4) INT_AND (register, 0x48, 4) , (register, 0x54, 4)

0045be1c: or a0,s5,zero
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045be20: sw v1,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045be24: bal 0x004790f0
	(register, 0x7c, 4) COPY (const, 0x45be2c, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4790f0, 4)

0045be28: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045be2c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be30: bne v0,zero,0x0045bf2c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45bf2c, 4) , (unique, 0x1700, 1)

0045be34: _or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045be38: lw v1,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be3c: lw t9,-0x77dc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8824, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be40: lw a3,-0x57ec(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa814, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be44: lw a2,-0x57f0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffa810, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be48: bal 0x00478fd0
	(register, 0x7c, 4) COPY (const, 0x45be50, 4)
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x478fd0, 4)

0045be4c: _or a0,s5,zero
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045be50: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be54: blez v0,0x0045bf2c
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45bf2c, 4) , (unique, 0x1500, 1)

0045be58: _nop

0045be5c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045be60: lw v0,-0x74d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be64: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045be68: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045be6c: lw v1,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be70: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be74: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0045be78: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045be7c: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045be80: lui v1,0x8000
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

0045be84: and s2,s2,v1
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (register, 0xc, 4)

0045be88: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0045be8c: bne v0,zero,0x0045c124
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x45c124, 4) , (unique, 0x1700, 1)

0045be90: _sw s2,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045be94: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045be98: nop

0045be9c: addiu s3,a1,0x79ec
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79ec, 4)

0045bea0: lw v1,0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bea4: beq s2,zero,0x0045c0f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  CBRANCH (ram, 0x45c0f8, 4) , (unique, 0x1200, 1)

0045bea8: _andi v0,s1,0x400
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045beac: bne v0,zero,0x0045c7c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45c7c4, 4) , (unique, 0x1700, 1)

0045beb0: _addiu s2,v1,-0x4
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)

0045beb4: blez s2,0x0045c7c4
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c7c4, 4) , (unique, 0x1500, 1)

0045beb8: _nop

0045bebc: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bec0: or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045bec4: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045bec8: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45bed0, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045becc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045bed0: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bed4: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bed8: bne v0,zero,0x0045c7c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c7c4, 4) , (unique, 0x1700, 1)

0045bedc: _nop

0045bee0: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045bee4: nop

0045bee8: andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045beec: bne v0,zero,0x0045d018
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x45d018, 4) , (unique, 0x1700, 1)

0045bef0: _andi s1,s1,0x800
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)

0045bef4: beq s1,zero,0x0045c7e4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c7e4, 4) , (unique, 0x1200, 1)

0045bef8: _nop

0045befc: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bf00: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bf04: nop

0045bf08: beq v0,v1,0x0045dc54
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45dc54, 4) , (unique, 0x1200, 1)

0045bf0c: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045bf10: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045bf14: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045bf18: b 0x0045c7e4
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  BRANCH (ram, 0x45c7e4, 4)

0045bf1c: _sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045bf20: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0045bf24: b 0x0045bdc8
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45bdc8, 4)

0045bf28: _sw a0,0x88(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045bf2c: lw t9,-0x77d8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8828, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bf30: addiu s1,s8,0x58
	(register, 0x44, 4) INT_ADD (register, 0x78, 4) , (const, 0x58, 4)

0045bf34: sw s2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045bf38: addiu a2,s8,0x28
	(register, 0x18, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)

0045bf3c: sw s3,0x14(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x14, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045bf40: addiu a3,s8,0x60
	(register, 0x1c, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)

0045bf44: li a1,0x2
	(register, 0x14, 4) COPY (const, 0x2, 4)

0045bf48: bal 0x0046e760
	(register, 0x7c, 4) COPY (const, 0x45bf50, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e760, 4)

0045bf4c: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045bf50: lw s7,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bf54: sll s2,v0,0x5
	(register, 0x48, 4) INT_LEFT (register, 0x8, 4) , (const, 0x5, 4)

0045bf58: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bf5c: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045bf60: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045bf64: addiu s2,s2,-0x34
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffcc, 4)

0045bf68: bgez s7,0x0045bf74
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x5c, 4)
	(register, 0xc, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45bf74, 4) , (unique, 0x1300, 1)

0045bf6c: _or v1,s7,zero
	(register, 0xc, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045bf70: subu v1,zero,s7
	(register, 0xc, 4) INT_SUB (const, 0x0, 4) , (register, 0x5c, 4)

0045bf74: addiu v1,v1,0x1f
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1f, 4)

0045bf78: sra v1,v1,0x5
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x5, 4)

0045bf7c: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045bf80: addiu v1,v1,0x17
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x17, 4)

0045bf84: srl v1,v1,0x3
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (const, 0x3, 4)

0045bf88: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

0045bf8c: subu sp,sp,v1
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0xc, 4)

0045bf90: addiu a0,sp,0x18
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045bf94: subu sp,sp,v1
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0xc, 4)

0045bf98: addiu a1,sp,0x18
	(register, 0x14, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045bf9c: subu sp,sp,v1
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0xc, 4)

0045bfa0: addiu v1,sp,0x18
	(register, 0xc, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045bfa4: slti v0,s7,0x3
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x3, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045bfa8: sw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045bfac: sw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045bfb0: sw v1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045bfb4: bne v0,zero,0x0045c130
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c130, 4) , (unique, 0x1700, 1)

0045bfb8: _sw zero,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045bfbc: addu s5,s2,s7
	(register, 0x54, 4) INT_ADD (register, 0x48, 4) , (register, 0x5c, 4)

0045bfc0: bltz s5,0x0045ca5c
	(unique, 0x1600, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ca5c, 4) , (unique, 0x1600, 1)

0045bfc4: _or s3,s5,zero
	(register, 0x4c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045bfc8: andi v0,s5,0x1f
	(register, 0x8, 4) INT_AND (register, 0x54, 4) , (const, 0x1f, 4)

0045bfcc: bne v0,zero,0x0045ca64
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_SRIGHT (register, 0x4c, 4) , (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x45ca64, 4) , (unique, 0x1700, 1)

0045bfd0: _sra s3,s3,0x5
	(register, 0x4c, 4) INT_SRIGHT (register, 0x4c, 4) , (const, 0x5, 4)

0045bfd4: blez a2,0x0045bffc
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45bffc, 4) , (unique, 0x1500, 1)

0045bfd8: _sll v0,s3,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0045bfdc: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bfe0: sll a2,a2,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045bfe4: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045bfe8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45bff0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0045bfec: _addu a0,a0,v0
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0045bff0: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bff4: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045bff8: nop

0045bffc: addu a2,a2,s3
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x4c, 4)

0045c000: sw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045c004: slti v0,s5,0x20
	(unique, 0x5180, 1) INT_SLESS (register, 0x54, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045c008: bne v0,zero,0x0045c034
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c034, 4) , (unique, 0x1700, 1)

0045c00c: _nop

0045c010: blez s3,0x0045c01c
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45c01c, 4) , (unique, 0x1500, 1)

0045c014: _li a2,0x4
	(register, 0x18, 4) COPY (const, 0x4, 4)

0045c018: sll a2,s3,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0045c01c: lw t9,-0x7fb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8048, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c020: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c024: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c02c, 4)
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c028: _or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c02c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c030: nop

0045c034: lw v0,-0x77d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff882c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c038: lw s1,-0x77d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8830, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c03c: sw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c040: lw v0,-0x77cc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8834, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c044: lw a2,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c048: sw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c04c: lw v0,-0x77c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8838, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c050: addiu s3,s1,0x90
	(register, 0x4c, 4) INT_ADD (register, 0x44, 4) , (const, 0x90, 4)

0045c054: sw v0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c058: lui v0,0x3fff
	(register, 0x8, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

0045c05c: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0045c060: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c064: li s6,0x8
	(register, 0x58, 4) COPY (const, 0x8, 4)

0045c068: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c06c: sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c070: lw v0,-0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c074: nop

0045c078: addu v0,s5,v0
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (register, 0x8, 4)

0045c07c: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045c080: slt v0,s7,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c084: bne v0,zero,0x0045c0e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff0, 4)
	 ---  CBRANCH (ram, 0x45c0e4, 4) , (unique, 0x1700, 1)

0045c088: _addiu s3,s3,-0x10
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff0, 4)

0045c08c: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c090: bne a2,zero,0x0045ce24
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce24, 4) , (unique, 0x1700, 1)

0045c094: _nop

0045c098: lw a1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c09c: lw v0,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0a0: lw v1,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0a4: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0a8: sll a1,a1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x2, 4)

0045c0ac: sll a2,v0,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045c0b0: addu a1,v1,a1
	(register, 0x14, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)

0045c0b4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c0bc, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c0b8: _sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c0bc: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0c0: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0c4: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0c8: nop

0045c0cc: slt a1,v0,a0
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

0045c0d0: bne a1,zero,0x0045c88c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c88c, 4) , (unique, 0x1700, 1)

0045c0d4: _nop

0045c0d8: beq a0,v0,0x0045c868
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c868, 4) , (unique, 0x1200, 1)

0045c0dc: _nop

0045c0e0: lw a2,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0e4: beq s3,s1,0x0045c920
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (register, 0x44, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45c920, 4) , (unique, 0x1200, 1)

0045c0e8: _addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0045c0ec: lw s7,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0f0: b 0x0045c070
	 ---  BRANCH (ram, 0x45c070, 4)

0045c0f4: _nop

0045c0f8: lw a0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c0fc: lui a1,0xa00
	(register, 0x14, 4) INT_LEFT (const, 0xa00, 4) , (const, 0x10, 4)

0045c100: and a0,a0,a1
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x14, 4)

0045c104: bne a0,zero,0x0045c858
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c858, 4) , (unique, 0x1700, 1)

0045c108: _nop

0045c10c: bne v0,zero,0x0045bee8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffd, 4)
	 ---  CBRANCH (ram, 0x45bee8, 4) , (unique, 0x1700, 1)

0045c110: _addiu s2,v1,-0x3
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffd, 4)

0045c114: blez s2,0x0045beec
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)
	 ---  CBRANCH (ram, 0x45beec, 4) , (unique, 0x1500, 1)

0045c118: _andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045c11c: b 0x0045bebc
	 ---  BRANCH (ram, 0x45bebc, 4)

0045c120: _nop

0045c124: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c128: b 0x0045bea0
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f0, 4)
	 ---  BRANCH (ram, 0x45bea0, 4)

0045c12c: _addiu s3,a1,0x79f0
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f0, 4)

0045c130: bltz s7,0x0045cad0
	(unique, 0x1600, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (register, 0x5c, 4)
	 ---  CBRANCH (ram, 0x45cad0, 4) , (unique, 0x1600, 1)

0045c134: _addu a3,s2,s7
	(register, 0x1c, 4) INT_ADD (register, 0x48, 4) , (register, 0x5c, 4)

0045c138: slti v0,a3,0x20
	(unique, 0x5180, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x20, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045c13c: beq v0,zero,0x0045dea8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dea8, 4) , (unique, 0x1200, 1)

0045c140: _nop

0045c144: lw t9,-0x77c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff883c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c148: nop

0045c14c: bal 0x0046d1a0
	(register, 0x7c, 4) COPY (const, 0x45c154, 4)
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d1a0, 4)

0045c150: _or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045c154: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c158: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c15c: sll a1,v1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045c160: addu a0,a0,a1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0045c164: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045c168: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c16c: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c170: sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c174: sw zero,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045c178: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045c17c: lw v0,-0x74f4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b0c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c180: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045c184: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045c188: lw v1,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c18c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c190: sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045c194: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045c198: lb a0,0x3(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_SEXT (unique, 0x2d00, 1)

0045c19c: lw a1,0x4(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1a0: li v0,0x65
	(register, 0x8, 4) COPY (const, 0x65, 4)

0045c1a4: lw s3,0x0(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1a8: sw a0,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045c1ac: beq a0,v0,0x0045cfac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45cfac, 4) , (unique, 0x1200, 1)

0045c1b0: _sw a1,0x94(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045c1b4: lw a1,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1b8: li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c1bc: lw a0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1c0: beq a1,v0,0x0045d064
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45d064, 4) , (unique, 0x1200, 1)

0045c1c4: _nop

0045c1c8: bltz s3,0x0045d208
	(unique, 0x1600, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x44, 4) COPY (const, 0x6, 4)
	 ---  CBRANCH (ram, 0x45d208, 4) , (unique, 0x1600, 1)

0045c1cc: _li s1,0x6
	(register, 0x44, 4) COPY (const, 0x6, 4)

0045c1d0: beq s3,zero,0x0045d458
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d458, 4) , (unique, 0x1200, 1)

0045c1d4: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045c1d8: or s1,s3,zero
	(register, 0x44, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045c1dc: sw s3,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045c1e0: lw s7,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1e4: beq a0,zero,0x0045d0ac
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d0ac, 4) , (unique, 0x1200, 1)

0045c1e8: _nop

0045c1ec: slti s7,s7,0x5
	(unique, 0x5180, 1) INT_SLESS (register, 0x5c, 4) , (const, 0x5, 4)
	(register, 0x5c, 4) INT_ZEXT (unique, 0x5180, 1)

0045c1f0: bne s7,zero,0x0045d504
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d504, 4) , (unique, 0x1700, 1)

0045c1f4: _nop

0045c1f8: lw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c1fc: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0045c200: addiu s3,v0,-0x1
	(register, 0x4c, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045c204: addiu v1,v1,-0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffe, 4)

0045c208: addiu s1,s1,0x7
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x7, 4)

0045c20c: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045c210: sw a0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045c214: lhu a0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

0045c218: sw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c21c: andi v1,a0,0x1000
	(register, 0xc, 4) INT_AND (register, 0x10, 4) , (const, 0x1000, 4)

0045c220: bne v1,zero,0x0045d214
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d214, 4) , (unique, 0x1700, 1)

0045c224: _nop

0045c228: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c22c: sw zero,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045c230: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045c234: bne v0,zero,0x0045d090
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d090, 4) , (unique, 0x1700, 1)

0045c238: _nop

0045c23c: lw t9,-0x77c0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8840, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c240: addiu s1,s1,0x2
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x2, 4)

0045c244: bal 0x004652a0
	(register, 0x7c, 4) COPY (const, 0x45c24c, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4652a0, 4)

0045c248: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045c24c: sw v0,0x8c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c250: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c254: beq v0,zero,0x0045da38
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x8001, 4)
	 ---  CBRANCH (ram, 0x45da38, 4) , (unique, 0x1200, 1)

0045c258: _ori v0,zero,0x8001
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x8001, 4)

0045c25c: addiu v0,s1,0x7
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0x7, 4)

0045c260: srl v0,v0,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)

0045c264: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0045c268: subu sp,sp,v0
	(register, 0x74, 4) INT_SUB (register, 0x74, 4) , (register, 0x8, 4)

0045c26c: addiu v0,sp,0x18
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045c270: sw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c274: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c278: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045c27c: sw v0,0x8c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c280: lw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c284: nop

0045c288: addiu v0,v0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)

0045c28c: beq v1,zero,0x0045cfd8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45cfd8, 4) , (unique, 0x1200, 1)

0045c290: _sw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c294: lw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c298: li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c29c: beq v1,v0,0x0045d324
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d324, 4) , (unique, 0x1200, 1)

0045c2a0: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045c2a4: lw v1,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2a8: nop

0045c2ac: bne v1,v0,0x0045df78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x2fd, 4)
	 ---  CBRANCH (ram, 0x45df78, 4) , (unique, 0x1700, 1)

0045c2b0: _li a2,0x2fd
	(register, 0x18, 4) COPY (const, 0x2fd, 4)

0045c2b4: lw s1,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2b8: addiu v0,s8,0x20
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0045c2bc: lw v1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2c0: sw v0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c2c4: addiu v0,s1,-0x4480
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffbb80, 4)

0045c2c8: sw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c2cc: lw s6,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2d0: li v0,-0x2
	(register, 0x8, 4) COPY (const, 0xfffffffe, 4)

0045c2d4: subu s5,v0,v1
	(register, 0x54, 4) INT_SUB (register, 0x8, 4) , (register, 0xc, 4)

0045c2d8: lw a0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2dc: lw t9,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2e0: nop

0045c2e4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c2ec, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c2e8: _addiu s6,s6,0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1, 4)

0045c2ec: lw a0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c2f0: addu v1,s6,s5
	(register, 0xc, 4) INT_ADD (register, 0x58, 4) , (register, 0x54, 4)

0045c2f4: slt v1,v1,a0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x10, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0045c2f8: bne v1,zero,0x0045c2d8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)
	 ---  CBRANCH (ram, 0x45c2d8, 4) , (unique, 0x1700, 1)

0045c2fc: _sb v0,-0x1(s6)
	(unique, 0x100, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045c300: lw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c304: nop

0045c308: addu v1,v0,a0
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045c30c: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045c310: nop

0045c314: andi v0,v0,0x1000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045c318: bne v0,zero,0x0045c330
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c330, 4) , (unique, 0x1700, 1)

0045c31c: _nop

0045c320: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c324: nop

0045c328: blez v0,0x0045d38c
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d38c, 4) , (unique, 0x1500, 1)

0045c32c: _nop

0045c330: lw v0,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c334: addiu s2,v1,0x1
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045c338: sb v0,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045c33c: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045c340: lw s1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c344: sw zero,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045c348: or s7,zero,zero
	(register, 0x5c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c34c: li s6,0x30
	(register, 0x58, 4) COPY (const, 0x30, 4)

0045c350: slt v0,s7,s1
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c354: bne v0,zero,0x0045c37c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c37c, 4) , (unique, 0x1700, 1)

0045c358: _or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045c35c: slt v0,s7,s3
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c360: beq v0,zero,0x0045c3b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c3b8, 4) , (unique, 0x1200, 1)

0045c364: _nop

0045c368: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c36c: nop

0045c370: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045c374: bne v0,zero,0x0045ce04
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce04, 4) , (unique, 0x1700, 1)

0045c378: _nop

0045c37c: lw a0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c380: lw t9,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c384: nop

0045c388: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c390, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c38c: _addiu s7,s7,0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0045c390: sb v0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045c394: beq v0,s6,0x0045cdd4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45cdd4, 4) , (unique, 0x1200, 1)

0045c398: _addiu s2,s2,0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)

0045c39c: slt v0,s7,s1
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c3a0: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045c3a4: bne v0,zero,0x0045c37c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c37c, 4) , (unique, 0x1700, 1)

0045c3a8: _or a3,s1,zero
	(register, 0x1c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045c3ac: slt v0,s7,s3
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c3b0: bne v0,zero,0x0045c368
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c368, 4) , (unique, 0x1700, 1)

0045c3b4: _nop

0045c3b8: lb s3,-0x1(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x4c, 4) INT_SEXT (unique, 0x2d00, 1)

0045c3bc: lw v0,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c3c0: nop

0045c3c4: bne v0,s3,0x0045c3d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x45c3d0, 4) , (unique, 0x1700, 1)

0045c3c8: _nop

0045c3cc: lb s3,-0x2(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xfffffffe, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x4c, 4) INT_SEXT (unique, 0x2d00, 1)

0045c3d0: lw a0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c3d4: lw t9,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c3d8: nop

0045c3dc: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c3e4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x9c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c3e0: _sw a3,0x9c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x9c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1c, 4)

0045c3e4: li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045c3e8: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c3ec: lw a3,0x9c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x9c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c3f0: beq v0,v1,0x0045ce7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0x35, 4)
	 ---  CBRANCH (ram, 0x45ce7c, 4) , (unique, 0x1200, 1)

0045c3f4: _li v1,0x35
	(register, 0xc, 4) COPY (const, 0x35, 4)

0045c3f8: beq v0,v1,0x0045d1a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d1a0, 4) , (unique, 0x1200, 1)

0045c3fc: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0045c400: slti v0,v0,0x35
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x35, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045c404: bne v0,zero,0x0045ce9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce9c, 4) , (unique, 0x1700, 1)

0045c408: _nop

0045c40c: beq s7,zero,0x0045d0e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d0e0, 4) , (unique, 0x1200, 1)

0045c410: _or v0,s2,zero
	(register, 0x8, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045c414: lb v1,-0x1(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045c418: lw a1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c41c: addiu v0,s2,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045c420: beq a1,v1,0x0045de10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45de10, 4) , (unique, 0x1200, 1)

0045c424: _or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c428: li a1,0x39
	(register, 0x14, 4) COPY (const, 0x39, 4)

0045c42c: b 0x0045c44c
	(register, 0x1c, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x45c44c, 4)

0045c430: _li a3,0x30
	(register, 0x1c, 4) COPY (const, 0x30, 4)

0045c434: sb a3,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x1f, 1)

0045c438: lb v1,-0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045c43c: lw a2,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c440: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045c444: beq a2,v1,0x0045d8d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x18, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d8d0, 4) , (unique, 0x1200, 1)

0045c448: _addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0045c44c: beq v1,a1,0x0045c434
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45c434, 4) , (unique, 0x1200, 1)

0045c450: _nop

0045c454: lw a1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c458: nop

0045c45c: beq a0,a1,0x0045da20
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45da20, 4) , (unique, 0x1200, 1)

0045c460: _nop

0045c464: lw a0,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c468: nop

0045c46c: beq a0,v1,0x0045d8e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d8e0, 4) , (unique, 0x1200, 1)

0045c470: _addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045c474: sll v1,v1,0x18
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x18, 4)

0045c478: sra v1,v1,0x18
	(register, 0xc, 4) INT_SRIGHT (register, 0xc, 4) , (const, 0x18, 4)

0045c47c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c480: lw a0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c484: lw a1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c488: nop

0045c48c: addu a3,a0,a1
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0045c490: lw a0,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c494: nop

0045c498: beq a0,v1,0x0045d0e0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45d0e0, 4) , (unique, 0x1200, 1)

0045c49c: _nop

0045c4a0: slt v0,a3,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c4a4: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c4a8: beq v0,zero,0x0045c50c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x66, 4)
	 ---  CBRANCH (ram, 0x45c50c, 4) , (unique, 0x1200, 1)

0045c4ac: _li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c4b0: b 0x0045c4c4
	(register, 0xc, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x45c4c4, 4)

0045c4b4: _li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045c4b8: slt v0,a3,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045c4bc: beq v0,zero,0x0045c4d8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45c4d8, 4) , (unique, 0x1200, 1)

0045c4c0: _addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045c4c4: lb v0,-0x1(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0045c4c8: nop

0045c4cc: beq v0,v1,0x0045c4b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45c4b8, 4) , (unique, 0x1200, 1)

0045c4d0: _addiu s7,s7,-0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0xffffffff, 4)

0045c4d4: addiu s7,s7,0x1
	(register, 0x5c, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0045c4d8: bne s7,zero,0x0045c50c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x66, 4)
	 ---  CBRANCH (ram, 0x45c50c, 4) , (unique, 0x1700, 1)

0045c4dc: _li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c4e0: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045c4e4: nop

0045c4e8: andi v0,v0,0x1000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045c4ec: bne v0,zero,0x0045c50c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x66, 4)
	 ---  CBRANCH (ram, 0x45c50c, 4) , (unique, 0x1700, 1)

0045c4f0: _li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c4f4: lb v0,-0x1(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0045c4f8: lw v1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c4fc: nop

0045c500: bne v0,v1,0x0045c50c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) COPY (const, 0x66, 4)
	 ---  CBRANCH (ram, 0x45c50c, 4) , (unique, 0x1700, 1)

0045c504: _li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045c508: addiu s2,s2,-0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045c50c: beq a0,v0,0x0045c5dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c5dc, 4) , (unique, 0x1200, 1)

0045c510: _nop

0045c514: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c518: nop

0045c51c: bne v0,zero,0x0045dad8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45dad8, 4) , (unique, 0x1700, 1)

0045c520: _li v0,0x4
	(register, 0x8, 4) COPY (const, 0x4, 4)

0045c524: sb a0,0x0(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x13, 1)

0045c528: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c52c: nop

0045c530: beq v0,zero,0x0045c53c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x2b, 4)
	 ---  CBRANCH (ram, 0x45c53c, 4) , (unique, 0x1200, 1)

0045c534: _li v0,0x2b
	(register, 0x8, 4) COPY (const, 0x2b, 4)

0045c538: li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

0045c53c: sb v0,0x1(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045c540: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c544: nop

0045c548: slti v0,v1,0xa
	(unique, 0x5180, 1) INT_SLESS (register, 0xc, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045c54c: bne v0,zero,0x0045d004
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_ADD (register, 0x48, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45d004, 4) , (unique, 0x1700, 1)

0045c550: _addiu a1,s2,0x2
	(register, 0x14, 4) INT_ADD (register, 0x48, 4) , (const, 0x2, 4)

0045c554: li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

0045c558: sll a0,v0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045c55c: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0045c560: sll v0,v0,0x1
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x1, 4)

0045c564: slt a0,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0045c568: beq a0,zero,0x0045c55c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45c55c, 4) , (unique, 0x1200, 1)

0045c56c: _sll a0,v0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045c570: li a2,0xa
	(register, 0x18, 4) COPY (const, 0xa, 4)

0045c574: bne a2,zero,0x0045c580
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_SDIV (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x3000, 4) INT_SREM (register, 0x8, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x45c580, 4) , (unique, 0x1700, 1)

0045c578: _div v0,a2
	(register, 0x3004, 4) INT_SDIV (register, 0x8, 4) , (register, 0x18, 4)
	(register, 0x3000, 4) INT_SREM (register, 0x8, 4) , (register, 0x18, 4)

0045c57c: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0045c580: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045c584: addiu a1,a1,0x1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0045c588: slti a0,a0,0x6e
	(unique, 0x5180, 1) INT_SLESS (register, 0x10, 4) , (const, 0x6e, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5180, 1)

0045c58c: mflo v0
	(register, 0x8, 4) COPY (register, 0x3004, 4)

0045c590: nop

0045c594: nop

0045c598: bne v0,zero,0x0045c5a4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c5a4, 4) , (unique, 0x1700, 1)

0045c59c: _div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

0045c5a0: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0045c5a4: mflo v1
	(register, 0xc, 4) COPY (register, 0x3004, 4)

0045c5a8: addiu v1,v1,0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x30, 4)

0045c5ac: sb v1,-0x1(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c5b0: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c5b4: nop

0045c5b8: bne v0,zero,0x0045c5c4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c5c4, 4) , (unique, 0x1700, 1)

0045c5bc: _div v1,v0
	(register, 0x3004, 4) INT_SDIV (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x3000, 4) INT_SREM (register, 0xc, 4) , (register, 0x8, 4)

0045c5c0: break 0x1c00
	 ---  CALLOTHER (const, 0x1, 4) , (const, 0x1c00, 4)

0045c5c4: mfhi v1
	(register, 0xc, 4) COPY (register, 0x3000, 4)

0045c5c8: beq a0,zero,0x0045c574
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45c574, 4) , (unique, 0x1200, 1)

0045c5cc: _sw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c5d0: addiu v1,v1,0x30
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x30, 4)

0045c5d4: addiu s2,a1,0x1
	(register, 0x48, 4) INT_ADD (register, 0x14, 4) , (const, 0x1, 4)

0045c5d8: sb v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c5dc: lw v0,0xd0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c5e0: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045c5e4: beq v0,zero,0x0045c5f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x100, 4)
	 ---  CBRANCH (ram, 0x45c5f4, 4) , (unique, 0x1200, 1)

0045c5e8: _andi v0,s1,0x100
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x100, 4)

0045c5ec: bne v0,zero,0x0045ceb4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ceb4, 4) , (unique, 0x1700, 1)

0045c5f0: _nop

0045c5f4: sw zero,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045c5f8: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c5fc: lw v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c600: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c604: subu s3,s2,v1
	(register, 0x4c, 4) INT_SUB (register, 0x48, 4) , (register, 0xc, 4)

0045c608: beq v0,zero,0x0045cee0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  CBRANCH (ram, 0x45cee0, 4) , (unique, 0x1200, 1)

0045c60c: _andi v1,s1,0x400
	(register, 0xc, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045c610: lw v0,0x94(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c614: nop

0045c618: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045c61c: subu v0,v0,s3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)

0045c620: bne v1,zero,0x0045c640
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45c640, 4) , (unique, 0x1700, 1)

0045c624: _subu s6,v0,a0
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0045c628: lw a1,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c62c: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045c630: beq a1,v0,0x0045c640
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c640, 4) , (unique, 0x1200, 1)

0045c634: _nop

0045c638: bgtz s6,0x0045cf24
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x45cf24, 4) , (unique, 0x1400, 1)

0045c63c: _nop

0045c640: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c644: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c648: nop

0045c64c: beq v0,v1,0x0045db74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45db74, 4) , (unique, 0x1200, 1)

0045c650: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045c654: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c658: li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

0045c65c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c660: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045c664: nop

0045c668: andi s1,s1,0x400
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045c66c: bne s1,zero,0x0045c684
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x30, 4)
	 ---  CBRANCH (ram, 0x45c684, 4) , (unique, 0x1700, 1)

0045c670: _li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045c674: lw v1,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c678: nop

0045c67c: beq v1,v0,0x0045d3c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45d3c8, 4) , (unique, 0x1200, 1)

0045c680: _nop

0045c684: lw v0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c688: nop

0045c68c: beq v0,zero,0x0045c758
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c758, 4) , (unique, 0x1200, 1)

0045c690: _nop

0045c694: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c698: nop

0045c69c: beq v0,zero,0x0045c758
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c758, 4) , (unique, 0x1200, 1)

0045c6a0: _nop

0045c6a4: lw s5,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6a8: lw s3,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6ac: addu s7,s5,v0
	(register, 0x5c, 4) INT_ADD (register, 0x54, 4) , (register, 0x8, 4)

0045c6b0: b 0x0045c6e0
	(register, 0x44, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	 ---  BRANCH (ram, 0x45c6e0, 4)

0045c6b4: _addiu s1,s8,0x44
	(register, 0x44, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)

0045c6b8: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6bc: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6c0: lb a1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0045c6c4: beq v0,v1,0x0045c738
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c738, 4) , (unique, 0x1200, 1)

0045c6c8: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c6cc: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045c6d0: addiu s5,s5,0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)

0045c6d4: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c6d8: beq s5,s7,0x0045c750
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)
	 ---  CBRANCH (ram, 0x45c750, 4) , (unique, 0x1200, 1)

0045c6dc: _sb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045c6e0: lw t9,-0x7bc8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8438, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6e4: nop

0045c6e8: bal 0x0045b308
	(register, 0x7c, 4) COPY (const, 0x45c6f0, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b308, 4)

0045c6ec: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045c6f0: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c6f4: beq v0,zero,0x0045c6b8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c6b8, 4) , (unique, 0x1200, 1)

0045c6f8: _nop

0045c6fc: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c700: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c704: nop

0045c708: beq v0,v1,0x0045d03c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d03c, 4) , (unique, 0x1200, 1)

0045c70c: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045c710: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c714: lw v1,0xd0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c718: nop

0045c71c: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c720: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c724: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c728: lb a1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0045c72c: bne v0,v1,0x0045c6d0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45c6d0, 4) , (unique, 0x1700, 1)

0045c730: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045c734: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c738: or t9,s3,zero
	(register, 0x64, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045c73c: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45c744, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045c740: _addiu s5,s5,0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0x1, 4)

0045c744: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c748: bne s5,s7,0x0045c6e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (register, 0x5c, 4)
	 ---  CBRANCH (ram, 0x45c6e0, 4) , (unique, 0x1700, 1)

0045c74c: _nop

0045c750: sw s5,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045c754: subu s3,s2,s5
	(register, 0x4c, 4) INT_SUB (register, 0x48, 4) , (register, 0x54, 4)

0045c758: lw t9,-0x7bd4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff842c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c75c: lw a1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c760: or a2,s3,zero
	(register, 0x18, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045c764: bal 0x0045ba60
	(register, 0x7c, 4) COPY (const, 0x45c76c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45ba60, 4)

0045c768: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c76c: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045c770: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c774: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045c778: beq v0,zero,0x0045c79c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c79c, 4) , (unique, 0x1200, 1)

0045c77c: _nop

0045c780: blez s6,0x0045c79c
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c79c, 4) , (unique, 0x1500, 1)

0045c784: _or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045c788: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c78c: lb a1,0x13(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x13, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0045c790: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45c798, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045c794: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c798: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c79c: lw v1,0x8c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7a0: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045c7a4: beq v1,v0,0x0045c824
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c824, 4) , (unique, 0x1200, 1)

0045c7a8: _nop

0045c7ac: lw t9,-0x7f78(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8088, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7b0: lw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7b4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c7bc, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c7b8: _nop

0045c7bc: b 0x0045c824
	 ---  BRANCH (ram, 0x45c824, 4)

0045c7c0: _nop

0045c7c4: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7c8: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7cc: nop

0045c7d0: beq v0,v1,0x0045da04
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45da04, 4) , (unique, 0x1200, 1)

0045c7d4: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045c7d8: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045c7dc: li v1,0x2d
	(register, 0xc, 4) COPY (const, 0x2d, 4)

0045c7e0: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045c7e4: lw t9,-0x7bd4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff842c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c7e8: li a2,0x3
	(register, 0x18, 4) COPY (const, 0x3, 4)

0045c7ec: or a1,s3,zero
	(register, 0x14, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045c7f0: bal 0x0045ba60
	(register, 0x7c, 4) COPY (const, 0x45c7f8, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45ba60, 4)

0045c7f4: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c7f8: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045c7fc: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c800: andi v0,v0,0x400
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x400, 4)

0045c804: beq v0,zero,0x0045c824
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c824, 4) , (unique, 0x1200, 1)

0045c808: _nop

0045c80c: blez s2,0x0045c824
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c824, 4) , (unique, 0x1500, 1)

0045c810: _or a2,s2,zero
	(register, 0x18, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045c814: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c818: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045c81c: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45c824, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045c820: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045c824: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0045c828: lw ra,0xc4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xc4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c82c: lw s8,0xc0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xc0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c830: lw s7,0xbc(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xbc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c834: lw s6,0xb8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c838: lw s5,0xb4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c83c: lw s4,0xb0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xb0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c840: lw s3,0xac(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xac, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c844: lw s2,0xa8(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c848: lw s1,0xa4(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c84c: lw s0,0xa0(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0xa0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c850: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xc8, 4)
	 ---  RETURN (register, 0x80, 4)

0045c854: _addiu sp,sp,0xc8
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xc8, 4)

0045c858: beq v0,zero,0x0045c114
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45c114, 4) , (unique, 0x1200, 1)

0045c85c: _addiu s2,v1,-0x4
	(register, 0x48, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffffc, 4)

0045c860: b 0x0045beec
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)
	 ---  BRANCH (ram, 0x45beec, 4)

0045c864: _andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045c868: lw t9,-0x77bc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8844, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c86c: lw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c870: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c874: bal 0x0046c8d0
	(register, 0x7c, 4) COPY (const, 0x45c87c, 4)
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46c8d0, 4)

0045c878: _or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045c87c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c880: bltz v0,0x0045c0e0
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c0e0, 4) , (unique, 0x1600, 1)

0045c884: _nop

0045c888: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c88c: lw t9,-0x7fa0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8060, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c890: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c894: lw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c898: sll a2,v0,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045c89c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45c8a4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALLIND (register, 0x80, 4)

0045c8a0: _sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045c8a4: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8a8: lw a2,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8ac: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8b0: addu a0,a2,v0
	(register, 0x10, 4) INT_ADD (register, 0x18, 4) , (register, 0x8, 4)

0045c8b4: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8b8: sll a0,a0,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0045c8bc: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045c8c0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8c4: lui a0,0x1
	(register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045c8c8: sltu a0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0045c8cc: beq a0,zero,0x0045cf94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45cf94, 4) , (unique, 0x1200, 1)

0045c8d0: _lui a0,0x100
	(register, 0x10, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045c8d4: sltiu a1,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0045c8d8: xori a1,a1,0x1
	(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x1, 4)

0045c8dc: sll a1,a1,0x3
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x3, 4)

0045c8e0: li a0,0x20
	(register, 0x10, 4) COPY (const, 0x20, 4)

0045c8e4: subu a0,a0,a1
	(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x14, 4)

0045c8e8: lw v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c8ec: srlv v0,v0,a1
	(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0045c8f0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0045c8f4: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0045c8f8: addiu t0,a2,-0x2
	(register, 0x20, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)

0045c8fc: subu v0,a0,v0
	(register, 0x8, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)

0045c900: sll t0,t0,0x5
	(register, 0x20, 4) INT_LEFT (register, 0x20, 4) , (const, 0x5, 4)

0045c904: subu t0,t0,v0
	(register, 0x20, 4) INT_SUB (register, 0x20, 4) , (register, 0x8, 4)

0045c908: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045c90c: sllv v0,v0,s6
	(unique, 0x4f80, 4) INT_AND (register, 0x58, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0045c910: addiu s5,t0,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x20, 4) , (const, 0xffffffff, 4)

0045c914: or s2,s2,v0
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (register, 0x8, 4)

0045c918: bne s3,s1,0x0045c0ec
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x44, 4)
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45c0ec, 4) , (unique, 0x1700, 1)

0045c91c: _addiu s6,s6,-0x1
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0xffffffff, 4)

0045c920: blez a2,0x0045c178
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x45c178, 4) , (unique, 0x1500, 1)

0045c924: _sw s2,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045c928: lw a0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c92c: nop

0045c930: lw t1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c934: nop

0045c938: bne t1,zero,0x0045ddf0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ddf0, 4) , (unique, 0x1700, 1)

0045c93c: _or t0,zero,zero
	(register, 0x20, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c940: lw v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c944: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045c948: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c94c: b 0x0045c968
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c968, 4)

0045c950: _or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c954: lw v0,0x4(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c958: addiu s2,s2,0x1
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)

0045c95c: addiu a1,a1,0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x4, 4)

0045c960: bne v0,zero,0x0045d3f0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45d3f0, 4) , (unique, 0x1700, 1)

0045c964: _addiu s1,s1,0x4
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x4, 4)

0045c968: addu v0,v1,s1
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x44, 4)

0045c96c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c970: nop

0045c974: beq v0,zero,0x0045c954
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x20, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c954, 4) , (unique, 0x1200, 1)

0045c978: _or t0,s2,zero
	(register, 0x20, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045c97c: sll v0,a2,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045c980: addu v0,a0,v0
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4)

0045c984: lw v1,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c988: lui v0,0x1
	(register, 0x8, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045c98c: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045c990: beq v0,zero,0x0045d2c4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d2c4, 4) , (unique, 0x1200, 1)

0045c994: _lui v0,0x100
	(register, 0x8, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045c998: sltiu v0,v1,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x100, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045c99c: xori v0,v0,0x1
	(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

0045c9a0: sll v0,v0,0x3
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x3, 4)

0045c9a4: lw s7,-0x77d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff882c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c9a8: srlv v1,v1,v0
	(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0045c9ac: addu v1,s7,v1
	(register, 0xc, 4) INT_ADD (register, 0x5c, 4) , (register, 0xc, 4)

0045c9b0: lbu s3,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x4c, 4) INT_ZEXT (unique, 0x2f00, 1)

0045c9b4: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045c9b8: addu s3,s3,v0
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (register, 0x8, 4)

0045c9bc: bne v1,s3,0x0045d220
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x4c, 4)
	(register, 0x54, 4) INT_SUB (register, 0xc, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x45d220, 4) , (unique, 0x1700, 1)

0045c9c0: _subu s5,v1,s3
	(register, 0x54, 4) INT_SUB (register, 0xc, 4) , (register, 0x4c, 4)

0045c9c4: beq s2,zero,0x0045c178
	(unique, 0x1200, 1) INT_EQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x45c178, 4) , (unique, 0x1200, 1)

0045c9c8: _subu a2,a2,s2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)

0045c9cc: blez a2,0x0045ca08
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ca08, 4) , (unique, 0x1500, 1)

0045c9d0: _nop

0045c9d4: sll a3,t0,0x2
	(register, 0x1c, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

0045c9d8: addu v0,a0,a3
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (register, 0x1c, 4)

0045c9dc: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045c9e0: subu a3,zero,a3
	(register, 0x1c, 4) INT_SUB (const, 0x0, 4) , (register, 0x1c, 4)

0045c9e4: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c9e8: addu a0,v0,a3
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

0045c9ec: sw a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045c9f0: lw a2,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045c9f4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045c9f8: subu a2,a2,s2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)

0045c9fc: slt a0,v1,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5080, 1)

0045ca00: bne a0,zero,0x0045c9e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45c9e4, 4) , (unique, 0x1700, 1)

0045ca04: _addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0045ca08: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca0c: nop

0045ca10: subu v0,v0,s2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x48, 4)

0045ca14: blez v0,0x0045ca54
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x45ca54, 4) , (unique, 0x1500, 1)

0045ca18: _sw a2,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045ca1c: lw v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca20: sll a2,t0,0x2
	(register, 0x18, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

0045ca24: addu v1,v1,a2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0045ca28: or a0,zero,zero
	(register, 0x10, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ca2c: subu a2,zero,a2
	(register, 0x18, 4) INT_SUB (const, 0x0, 4) , (register, 0x18, 4)

0045ca30: lw a1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca34: addu v0,v1,a2
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0045ca38: sw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045ca3c: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca40: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0045ca44: subu v0,v0,s2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x48, 4)

0045ca48: slt a1,a0,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

0045ca4c: bne a1,zero,0x0045ca30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45ca30, 4) , (unique, 0x1700, 1)

0045ca50: _addiu v1,v1,0x4
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x4, 4)

0045ca54: b 0x0045c178
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c178, 4)

0045ca58: _sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ca5c: b 0x0045bfc8
	(register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f, 4)
	 ---  BRANCH (ram, 0x45bfc8, 4)

0045ca60: _addiu s3,s5,0x1f
	(register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f, 4)

0045ca64: lui a3,0x8000
	(register, 0x1c, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

0045ca68: addiu a3,a3,0x1f
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1f, 4)

0045ca6c: and a3,s5,a3
	(register, 0x1c, 4) INT_AND (register, 0x54, 4) , (register, 0x1c, 4)

0045ca70: bltz a3,0x0045d5f0
	(unique, 0x1600, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0xffffffe0, 4)
	 ---  CBRANCH (ram, 0x45d5f0, 4) , (unique, 0x1600, 1)

0045ca74: _li v0,-0x20
	(register, 0x8, 4) COPY (const, 0xffffffe0, 4)

0045ca78: lw t9,-0x77c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff883c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca7c: sll s3,s3,0x2
	(register, 0x4c, 4) INT_LEFT (register, 0x4c, 4) , (const, 0x2, 4)

0045ca80: addu a0,a0,s3
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x4c, 4)

0045ca84: bal 0x0046d1a0
	(register, 0x7c, 4) COPY (const, 0x45ca8c, 4)
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d1a0, 4)

0045ca88: _or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045ca8c: lw s7,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca90: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ca94: addu s5,s2,s7
	(register, 0x54, 4) INT_ADD (register, 0x48, 4) , (register, 0x5c, 4)

0045ca98: bltz s5,0x0045d600
	(unique, 0x1600, 1) INT_SLESS (register, 0x54, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d600, 4) , (unique, 0x1600, 1)

0045ca9c: _or s3,s5,zero
	(register, 0x4c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045caa0: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045caa4: sra s3,s3,0x5
	(register, 0x4c, 4) INT_SRIGHT (register, 0x4c, 4) , (const, 0x5, 4)

0045caa8: addu v1,s3,v1
	(register, 0xc, 4) INT_ADD (register, 0x4c, 4) , (register, 0xc, 4)

0045caac: beq v0,zero,0x0045c004
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45c004, 4) , (unique, 0x1200, 1)

0045cab0: _sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cab4: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cab8: sll a1,v1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045cabc: addu a0,a0,a1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0045cac0: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045cac4: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cac8: b 0x0045c004
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c004, 4)

0045cacc: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045cad0: lw t9,-0x77c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff883c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cad4: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045cad8: sw t9,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x64, 4)

0045cadc: bal 0x0046d1a0
	(register, 0x7c, 4) COPY (const, 0x45cae4, 4)
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d1a0, 4)

0045cae0: _or a3,s2,zero
	(register, 0x1c, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045cae4: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cae8: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045caec: sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045caf0: addu a0,a1,a0
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0045caf4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045caf8: li a2,0x1
	(register, 0x18, 4) COPY (const, 0x1, 4)

0045cafc: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb00: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cb04: beq v0,a2,0x0045cb60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45cb60, 4) , (unique, 0x1200, 1)

0045cb08: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045cb0c: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb10: nop

0045cb14: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045cb18: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0045cb1c: lw v0,-0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb20: nop

0045cb24: bne v0,zero,0x0045cb3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cb3c, 4) , (unique, 0x1700, 1)

0045cb28: _nop

0045cb2c: lw v0,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb30: nop

0045cb34: beq v0,zero,0x0045cb60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cb60, 4) , (unique, 0x1200, 1)

0045cb38: _nop

0045cb3c: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb40: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb44: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb48: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb4c: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045cb50: li a2,0x1f5
	(register, 0x18, 4) COPY (const, 0x1f5, 4)

0045cb54: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045cb58: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45cb60, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a00, 4)
	 ---  CALLIND (register, 0x80, 4)

0045cb5c: _addiu a0,a0,0x7a00
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a00, 4)

0045cb60: lw t0,-0x77d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8830, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x20, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb64: lw t3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb68: lw v0,0x8c(t0)
	(unique, 0x100, 4) INT_ADD (register, 0x20, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb6c: subu t3,zero,t3
	(register, 0x2c, 4) INT_SUB (const, 0x0, 4) , (register, 0x2c, 4)

0045cb70: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0045cb74: slt v0,t3,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x2c, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cb78: sw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cb7c: beq v0,zero,0x0045d610
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)
	 ---  CBRANCH (ram, 0x45d610, 4) , (unique, 0x1200, 1)

0045cb80: _sw t3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x2c, 4)

0045cb84: addiu s3,t0,0x80
	(register, 0x4c, 4) INT_ADD (register, 0x20, 4) , (const, 0x80, 4)

0045cb88: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045cb8c: b 0x0045cc98
	(register, 0x54, 4) COPY (const, 0x7, 4)
	 ---  BRANCH (ram, 0x45cc98, 4)

0045cb90: _li s5,0x7
	(register, 0x54, 4) COPY (const, 0x7, 4)

0045cb94: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cb98: sw s5,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045cb9c: lw v0,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cba0: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cba4: addiu v0,v0,-0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)

0045cba8: slt v1,a2,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x18, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0045cbac: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbb0: beq v1,zero,0x0045d6d0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d6d0, 4) , (unique, 0x1200, 1)

0045cbb4: _nop

0045cbb8: lw v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbbc: or a3,a1,zero
	(register, 0x1c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045cbc0: addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0045cbc4: lw a1,-0x77cc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8834, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbc8: lw t9,-0x77c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8838, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbcc: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045cbd0: sw a2,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045cbd4: addu a1,a1,v1
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (register, 0xc, 4)

0045cbd8: bal 0x0046d270
	(register, 0x7c, 4) COPY (const, 0x45cbe0, 4)
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d270, 4)

0045cbdc: _or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045cbe0: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbe4: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbe8: lw a2,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbec: beq v0,zero,0x0045d6c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x45d6c8, 4) , (unique, 0x1200, 1)

0045cbf0: _addu a2,v1,a2
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (register, 0x18, 4)

0045cbf4: addiu a2,a2,-0x2
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)

0045cbf8: lw t2,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cbfc: sll a0,a2,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045cc00: addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0045cc04: sw a2,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045cc08: addu a0,t2,a0
	(register, 0x10, 4) INT_ADD (register, 0x28, 4) , (register, 0x10, 4)

0045cc0c: lw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cc10: lui a1,0x1
	(register, 0x14, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045cc14: sltu a1,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0045cc18: beq a1,zero,0x0045d6b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d6b4, 4) , (unique, 0x1200, 1)

0045cc1c: _lui a1,0x100
	(register, 0x14, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045cc20: sltiu a1,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)

0045cc24: xori a1,a1,0x1
	(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x1, 4)

0045cc28: sll a1,a1,0x3
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x3, 4)

0045cc2c: lw s7,-0x77d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff882c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cc30: srlv v0,v0,a1
	(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0045cc34: addu v0,s7,v0
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x8, 4)

0045cc38: lbu a3,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x2f00, 1)

0045cc3c: subu s6,a2,v1
	(register, 0x58, 4) INT_SUB (register, 0x18, 4) , (register, 0xc, 4)

0045cc40: addu a3,a3,a1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0x14, 4)

0045cc44: sll s6,s6,0x5
	(register, 0x58, 4) INT_LEFT (register, 0x58, 4) , (const, 0x5, 4)

0045cc48: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045cc4c: lw v0,0x8(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cc50: subu v1,v1,a3
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x1c, 4)

0045cc54: addiu s6,s6,0x1f
	(register, 0x58, 4) INT_ADD (register, 0x58, 4) , (const, 0x1f, 4)

0045cc58: subu s6,s6,v1
	(register, 0x58, 4) INT_SUB (register, 0x58, 4) , (register, 0xc, 4)

0045cc5c: slt v0,v0,s6
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cc60: bne v0,zero,0x0045df54
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45df54, 4) , (unique, 0x1700, 1)

0045cc64: _nop

0045cc68: lw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cc6c: nop

0045cc70: addiu v0,a1,0x3
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x3, 4)

0045cc74: beq s6,v0,0x0045d6fc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x58, 4) , (register, 0x8, 4)
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d6fc, 4) , (unique, 0x1200, 1)

0045cc78: _or t3,a1,zero
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045cc7c: addiu v0,a1,0x2
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0045cc80: slt v0,v0,s6
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cc84: beq v0,zero,0x0045d874
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d874, 4) , (unique, 0x1200, 1)

0045cc88: _nop

0045cc8c: addiu s5,s5,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0045cc90: beq s5,zero,0x0045ccc0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ccc0, 4) , (unique, 0x1200, 1)

0045cc94: _nop

0045cc98: blez t3,0x0045cdcc
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cdcc, 4) , (unique, 0x1500, 1)

0045cc9c: _nop

0045cca0: lw v0,-0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cca4: nop

0045cca8: slt v0,t3,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x2c, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045ccac: beq v0,zero,0x0045cb94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff0, 4)
	 ---  CBRANCH (ram, 0x45cb94, 4) , (unique, 0x1200, 1)

0045ccb0: _addiu s3,s3,-0x10
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0xfffffff0, 4)

0045ccb4: addiu s5,s5,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0045ccb8: bne s5,zero,0x0045cca0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cca0, 4) , (unique, 0x1700, 1)

0045ccbc: _nop

0045ccc0: blez t3,0x0045cdcc
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cdcc, 4) , (unique, 0x1500, 1)

0045ccc4: _nop

0045ccc8: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cccc: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ccd0: lw t9,-0x77e8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8818, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ccd4: lw a0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ccd8: bal 0x0046d660
	(register, 0x7c, 4) COPY (const, 0x45cce0, 4)
	(register, 0x1c, 4) COPY (const, 0xa, 4)
	 ---  CALL (ram, 0x46d660, 4)

0045ccdc: _li a3,0xa
	(register, 0x1c, 4) COPY (const, 0xa, 4)

0045cce0: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cce4: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cce8: lw a1,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ccec: beq v0,zero,0x0045cd10
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  CBRANCH (ram, 0x45cd10, 4) , (unique, 0x1200, 1)

0045ccf0: _sw a2,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045ccf4: sll v0,a2,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045ccf8: addu v0,a1,v0
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)

0045ccfc: lw v0,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd00: nop

0045cd04: sltiu v0,v0,0x14
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x14, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045cd08: beq v0,zero,0x0045df30
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45df30, 4) , (unique, 0x1200, 1)

0045cd0c: _nop

0045cd10: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd14: lw a3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd18: subu v0,zero,v1
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0045cd1c: slti t0,a3,0x5
	(unique, 0x5180, 1) INT_SLESS (register, 0x1c, 4) , (const, 0x5, 4)
	(register, 0x20, 4) INT_ZEXT (unique, 0x5180, 1)

0045cd20: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd24: bne t0,zero,0x0045cd30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45cd30, 4) , (unique, 0x1700, 1)

0045cd28: _and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0045cd2c: li a3,0x4
	(register, 0x1c, 4) COPY (const, 0x4, 4)

0045cd30: sltiu v1,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0045cd34: beq v1,zero,0x0045dc7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dc7c, 4) , (unique, 0x1200, 1)

0045cd38: _nop

0045cd3c: lw v1,-0x77d4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff882c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd40: nop

0045cd44: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0045cd48: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0045cd4c: nop

0045cd50: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045cd54: slt v0,v0,a3
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cd58: beq v0,zero,0x0045dc7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dc7c, 4) , (unique, 0x1200, 1)

0045cd5c: _nop

0045cd60: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0045cd64: lw t9,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd68: nop

0045cd6c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45cd74, 4)
	(register, 0x1c, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045cd70: _subu a3,v0,a3
	(register, 0x1c, 4) INT_SUB (register, 0x8, 4) , (register, 0x1c, 4)

0045cd74: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045cd78: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd7c: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd80: beq v1,zero,0x0045cda4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cda4, 4) , (unique, 0x1200, 1)

0045cd84: _nop

0045cd88: lw a0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cd8c: nop

0045cd90: sll a1,a0,0x2
	(register, 0x14, 4) INT_LEFT (register, 0x10, 4) , (const, 0x2, 4)

0045cd94: addu a1,v0,a1
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (register, 0x14, 4)

0045cd98: addiu a0,a0,0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)

0045cd9c: sw a0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045cda0: sw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cda4: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cda8: nop

0045cdac: sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045cdb0: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cdb4: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045cdb8: lw v0,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cdbc: nop

0045cdc0: sltiu v0,v0,0xa
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5280, 1)

0045cdc4: beq v0,zero,0x0045decc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45decc, 4) , (unique, 0x1200, 1)

0045cdc8: _ori s2,s2,0x1
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (const, 0x1, 4)

0045cdcc: b 0x0045c178
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x45c178, 4)

0045cdd0: _sw s2,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045cdd4: bne s5,zero,0x0045c354
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x45c354, 4) , (unique, 0x1700, 1)

0045cdd8: _slt v0,s7,s1
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x44, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cddc: lw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cde0: nop

0045cde4: blez v0,0x0045c350
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45c350, 4) , (unique, 0x1500, 1)

0045cde8: _addiu s3,s3,0x1
	(register, 0x4c, 4) INT_ADD (register, 0x4c, 4) , (const, 0x1, 4)

0045cdec: lw v1,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cdf0: nop

0045cdf4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045cdf8: sw v1,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cdfc: b 0x0045c350
	(register, 0x44, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c350, 4)

0045ce00: _addu s1,v1,v0
	(register, 0x44, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0045ce04: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce08: nop

0045ce0c: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce10: nop

0045ce14: bne v0,zero,0x0045c37c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c37c, 4) , (unique, 0x1700, 1)

0045ce18: _nop

0045ce1c: b 0x0045c3b8
	 ---  BRANCH (ram, 0x45c3b8, 4)

0045ce20: _nop

0045ce24: lw v0,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce28: lw a3,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce2c: addiu v0,v0,-0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffe, 4)

0045ce30: lw a1,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce34: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ce38: lw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce3c: addiu a3,a3,0x2
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2, 4)

0045ce40: lw t9,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce44: sll a3,a3,0x2
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x2, 4)

0045ce48: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45ce50, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045ce4c: _addu a3,v0,a3
	(register, 0x1c, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

0045ce50: lw a1,0x4(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce54: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce58: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce5c: beq v0,zero,0x0045ce70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45ce70, 4) , (unique, 0x1200, 1)

0045ce60: _addu a0,a0,a1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0045ce64: addiu v0,a0,-0x2
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffe, 4)

0045ce68: b 0x0045c0c4
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c0c4, 4)

0045ce6c: _sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ce70: addiu v0,a0,-0x3
	(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffd, 4)

0045ce74: b 0x0045c0c4
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c0c4, 4)

0045ce78: _sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ce7c: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce80: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0045ce84: beq v1,a0,0x0045d8a0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d8a0, 4) , (unique, 0x1200, 1)

0045ce88: _nop

0045ce8c: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ce90: nop

0045ce94: beq a0,zero,0x0045d4a8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d4a8, 4) , (unique, 0x1200, 1)

0045ce98: _nop

0045ce9c: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cea0: slt v0,a3,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045cea4: bne v0,zero,0x0045c4b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c4b0, 4) , (unique, 0x1700, 1)

0045cea8: _nop

0045ceac: b 0x0045c4d8
	 ---  BRANCH (ram, 0x45c4d8, 4)

0045ceb0: _nop

0045ceb4: lw t9,-0x7b98(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8468, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ceb8: lw a3,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cebc: lw a2,0xcc(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xcc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cec0: lw a1,0x88(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cec4: bal 0x0045b1b0
	(register, 0x7c, 4) COPY (const, 0x45cecc, 4)
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	 ---  CALL (ram, 0x45b1b0, 4)

0045cec8: _addiu a0,s8,0x44
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)

0045cecc: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ced0: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045ced4: lw a0,0x54(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x54, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ced8: b 0x0045c5fc
	 ---  BRANCH (ram, 0x45c5fc, 4)

0045cedc: _nop

0045cee0: lw v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cee4: lui a1,0xa00
	(register, 0x14, 4) INT_LEFT (const, 0xa00, 4) , (const, 0x10, 4)

0045cee8: and v0,v0,a1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x14, 4)

0045ceec: beq v0,zero,0x0045d170
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d170, 4) , (unique, 0x1200, 1)

0045cef0: _nop

0045cef4: lw v0,0x94(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cef8: nop

0045cefc: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045cf00: subu v0,v0,s3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)

0045cf04: bne v1,zero,0x0045cf54
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45cf54, 4) , (unique, 0x1700, 1)

0045cf08: _subu s6,v0,a0
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0045cf0c: lw a1,0x10(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf10: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045cf14: beq a1,v0,0x0045cf58
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)
	 ---  CBRANCH (ram, 0x45cf58, 4) , (unique, 0x1200, 1)

0045cf18: _andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045cf1c: blez s6,0x0045cf58
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cf58, 4) , (unique, 0x1500, 1)

0045cf20: _nop

0045cf24: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf28: sll a1,a1,0x18
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x18, 4)

0045cf2c: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045cf30: sra a1,a1,0x18
	(register, 0x14, 4) INT_SRIGHT (register, 0x14, 4) , (const, 0x18, 4)

0045cf34: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45cf3c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045cf38: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045cf3c: lw v0,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf40: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf44: bne v0,zero,0x0045c640
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c640, 4) , (unique, 0x1700, 1)

0045cf48: _nop

0045cf4c: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045cf50: nop

0045cf54: andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045cf58: bne v0,zero,0x0045d1dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x45d1dc, 4) , (unique, 0x1700, 1)

0045cf5c: _andi v0,s1,0x800
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)

0045cf60: beq v0,zero,0x0045c66c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  CBRANCH (ram, 0x45c66c, 4) , (unique, 0x1200, 1)

0045cf64: _andi s1,s1,0x400
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045cf68: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf6c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cf70: nop

0045cf74: beq v0,v1,0x0045d690
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d690, 4) , (unique, 0x1200, 1)

0045cf78: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045cf7c: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cf80: li v1,0x20
	(register, 0xc, 4) COPY (const, 0x20, 4)

0045cf84: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045cf88: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045cf8c: b 0x0045c66c
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  BRANCH (ram, 0x45c66c, 4)

0045cf90: _andi s1,s1,0x400
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045cf94: sltu a0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0045cf98: bne a0,zero,0x0045d058
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d058, 4) , (unique, 0x1700, 1)

0045cf9c: _nop

0045cfa0: li a0,0x8
	(register, 0x10, 4) COPY (const, 0x8, 4)

0045cfa4: b 0x0045c8e8
	(register, 0x14, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45c8e8, 4)

0045cfa8: _li a1,0x18
	(register, 0x14, 4) COPY (const, 0x18, 4)

0045cfac: bltz s3,0x0045d2d8
	(unique, 0x1600, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45d2d8, 4) , (unique, 0x1600, 1)

0045cfb0: _sw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045cfb4: addiu s1,s3,0x8
	(register, 0x44, 4) INT_ADD (register, 0x4c, 4) , (const, 0x8, 4)

0045cfb8: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045cfbc: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0045cfc0: sw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045cfc4: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045cfc8: sw s3,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045cfcc: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045cfd0: b 0x0045c23c
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c23c, 4)

0045cfd4: _sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045cfd8: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cfdc: nop

0045cfe0: bgtz v0,0x0045c2b4
	(unique, 0x1400, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	 ---  CBRANCH (ram, 0x45c2b4, 4) , (unique, 0x1400, 1)

0045cfe4: _addiu v0,s8,0x20
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0045cfe8: lw s1,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cfec: sw v0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045cff0: addiu v0,s1,-0x4480
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffbb80, 4)

0045cff4: lw v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045cff8: sw zero,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045cffc: b 0x0045c30c
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c30c, 4)

0045d000: _sw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d004: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0045d008: sb v0,0x2(s2)
	(unique, 0x100, 4) INT_ADD (register, 0x48, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045d00c: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d010: b 0x0045c5d0
	(register, 0x14, 4) INT_ADD (register, 0x48, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x45c5d0, 4)

0045d014: _addiu a1,s2,0x3
	(register, 0x14, 4) INT_ADD (register, 0x48, 4) , (const, 0x3, 4)

0045d018: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d01c: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d020: nop

0045d024: beq v0,v1,0x0045dbf0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45dbf0, 4) , (unique, 0x1200, 1)

0045d028: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045d02c: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d030: li v1,0x2b
	(register, 0xc, 4) COPY (const, 0x2b, 4)

0045d034: b 0x0045c7e4
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  BRANCH (ram, 0x45c7e4, 4)

0045d038: _sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045d03c: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d040: lw a1,0xd0(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d044: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45d04c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045d048: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045d04c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d050: b 0x0045c6b8
	 ---  BRANCH (ram, 0x45c6b8, 4)

0045d054: _nop

0045d058: li a0,0x10
	(register, 0x10, 4) COPY (const, 0x10, 4)

0045d05c: b 0x0045c8e8
	(register, 0x14, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45c8e8, 4)

0045d060: _li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0045d064: bltz s3,0x0045d958
	(unique, 0x1600, 1) INT_SLESS (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45d958, 4) , (unique, 0x1600, 1)

0045d068: _sw a1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045d06c: bne a0,zero,0x0045d608
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d608, 4) , (unique, 0x1700, 1)

0045d070: _or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d074: lw s7,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d078: nop

0045d07c: addiu s1,s7,0x2
	(register, 0x44, 4) INT_ADD (register, 0x5c, 4) , (const, 0x2, 4)

0045d080: addu s1,s1,v0
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (register, 0x8, 4)

0045d084: sltiu v1,s1,-0x3
	(unique, 0x5280, 1) INT_LESS (register, 0x44, 4) , (const, 0xfffffffd, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0045d088: bne v1,zero,0x0045d674
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d674, 4) , (unique, 0x1700, 1)

0045d08c: _addiu v1,s7,0x1
	(register, 0xc, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0045d090: lw v0,-0x74e4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d094: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045d098: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045d09c: li v1,0x22
	(register, 0xc, 4) COPY (const, 0x22, 4)

0045d0a0: sw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d0a4: b 0x0045c824
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c824, 4)

0045d0a8: _sw zero,0x18(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045d0ac: lw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d0b0: nop

0045d0b4: slt v0,s7,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x5c, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045d0b8: beq v0,zero,0x0045c1f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45c1f8, 4) , (unique, 0x1200, 1)

0045d0bc: _addiu v0,s7,0x1
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0045d0c0: lw v1,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d0c4: nop

0045d0c8: subu s3,v1,v0
	(register, 0x4c, 4) INT_SUB (register, 0xc, 4) , (register, 0x8, 4)

0045d0cc: sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d0d0: addiu s1,s1,0x5
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x5, 4)

0045d0d4: or v0,s3,zero
	(register, 0x8, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d0d8: b 0x0045c214
	(register, 0xc, 4) COPY (const, 0x66, 4)
	 ---  BRANCH (ram, 0x45c214, 4)

0045d0dc: _li v1,0x66
	(register, 0xc, 4) COPY (const, 0x66, 4)

0045d0e0: lb v1,-0x1(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045d0e4: lw a0,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d0e8: nop

0045d0ec: bne v1,a0,0x0045d0f8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d0f8, 4) , (unique, 0x1700, 1)

0045d0f0: _nop

0045d0f4: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045d0f8: lw v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d0fc: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045d100: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0045d104: bne v1,zero,0x0045d3fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x39, 4)
	 ---  CBRANCH (ram, 0x45d3fc, 4) , (unique, 0x1700, 1)

0045d108: _li a0,0x39
	(register, 0x10, 4) COPY (const, 0x39, 4)

0045d10c: lw v1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d110: nop

0045d114: addiu t1,v1,0x1
	(register, 0x24, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d118: b 0x0045d130
	(register, 0x14, 4) COPY (const, 0x30, 4)
	 ---  BRANCH (ram, 0x45d130, 4)

0045d11c: _li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045d120: sb a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045d124: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045d128: beq v0,t1,0x0045d140
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x45d140, 4) , (unique, 0x1200, 1)

0045d12c: _nop

0045d130: lb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045d134: nop

0045d138: beq v1,a0,0x0045d120
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d120, 4) , (unique, 0x1200, 1)

0045d13c: _nop

0045d140: lw v1,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d144: nop

0045d148: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0045d14c: bne v1,zero,0x0045d3fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d3fc, 4) , (unique, 0x1700, 1)

0045d150: _nop

0045d154: lbu v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0045d158: nop

0045d15c: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d160: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045d164: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d168: b 0x0045cea4
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  BRANCH (ram, 0x45cea4, 4)

0045d16c: _slt v0,a3,s7
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x5c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045d170: lw v0,0x94(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x94, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d174: nop

0045d178: subu v0,v0,s3
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x4c, 4)

0045d17c: beq v1,zero,0x0045cf0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45cf0c, 4) , (unique, 0x1200, 1)

0045d180: _subu s6,v0,a0
	(register, 0x58, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)

0045d184: andi v0,s1,0x200
	(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x200, 4)

0045d188: bne v0,zero,0x0045d1dc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)
	 ---  CBRANCH (ram, 0x45d1dc, 4) , (unique, 0x1700, 1)

0045d18c: _andi s1,s1,0x800
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x800, 4)

0045d190: beq s1,zero,0x0045c684
	(unique, 0x1200, 1) INT_EQUAL (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c684, 4) , (unique, 0x1200, 1)

0045d194: _nop

0045d198: b 0x0045cf68
	 ---  BRANCH (ram, 0x45cf68, 4)

0045d19c: _nop

0045d1a0: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d1a4: nop

0045d1a8: beq v1,a0,0x0045da70
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45da70, 4) , (unique, 0x1200, 1)

0045d1ac: _nop

0045d1b0: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d1b4: nop

0045d1b8: bne a0,zero,0x0045c40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c40c, 4) , (unique, 0x1700, 1)

0045d1bc: _nop

0045d1c0: bne v1,zero,0x0045d4b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d4b0, 4) , (unique, 0x1700, 1)

0045d1c4: _nop

0045d1c8: andi s3,s3,0x1
	(register, 0x4c, 4) INT_AND (register, 0x4c, 4) , (const, 0x1, 4)

0045d1cc: bne s3,zero,0x0045c40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c40c, 4) , (unique, 0x1700, 1)

0045d1d0: _nop

0045d1d4: b 0x0045ce9c
	 ---  BRANCH (ram, 0x45ce9c, 4)

0045d1d8: _nop

0045d1dc: lw v0,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d1e0: lw v1,0x8(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d1e4: nop

0045d1e8: beq v0,v1,0x0045dc4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45dc4c, 4) , (unique, 0x1200, 1)

0045d1ec: _addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045d1f0: sw v1,0x4(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d1f4: li v1,0x2b
	(register, 0xc, 4) COPY (const, 0x2b, 4)

0045d1f8: sb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045d1fc: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045d200: b 0x0045c66c
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  BRANCH (ram, 0x45c66c, 4)

0045d204: _andi s1,s1,0x400
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045d208: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0045d20c: b 0x0045c1e0
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c1e0, 4)

0045d210: _sw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d214: sw s3,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045d218: b 0x0045c230
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c230, 4)

0045d21c: _or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045d220: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d224: nop

0045d228: addu v0,v0,s1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x44, 4)

0045d22c: lw v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d230: beq t1,zero,0x0045d538
	(unique, 0x1200, 1) INT_EQUAL (register, 0x24, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45d538, 4) , (unique, 0x1200, 1)

0045d234: _subu v0,zero,v1
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0045d238: subu v0,zero,t1
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x24, 4)

0045d23c: and v0,v0,t1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x24, 4)

0045d240: lui a3,0x1
	(register, 0x1c, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045d244: sltu a3,v0,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0045d248: beq a3,zero,0x0045dc34
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45dc34, 4) , (unique, 0x1200, 1)

0045d24c: _lui a3,0x100
	(register, 0x1c, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045d250: sltiu a3,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5280, 1)

0045d254: xori a3,a3,0x1
	(register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (const, 0x1, 4)

0045d258: sll a3,a3,0x3
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x3, 4)

0045d25c: addiu t1,a3,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0045d260: srlv v0,v0,a3
	(unique, 0x5780, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0045d264: addu v0,s7,v0
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x8, 4)

0045d268: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0045d26c: beq v1,zero,0x0045d570
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)
	 ---  CBRANCH (ram, 0x45d570, 4) , (unique, 0x1200, 1)

0045d270: _addu v0,v0,t1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x24, 4)

0045d274: subu a3,zero,v1
	(register, 0x1c, 4) INT_SUB (const, 0x0, 4) , (register, 0xc, 4)

0045d278: and v1,a3,v1
	(register, 0xc, 4) INT_AND (register, 0x1c, 4) , (register, 0xc, 4)

0045d27c: lui a3,0x1
	(register, 0x1c, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045d280: sltu a3,v1,a3
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0045d284: beq a3,zero,0x0045dd40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45dd40, 4) , (unique, 0x1200, 1)

0045d288: _lui a3,0x100
	(register, 0x1c, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045d28c: sltiu a3,v1,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0xc, 4) , (const, 0x100, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5280, 1)

0045d290: xori a3,a3,0x1
	(register, 0x1c, 4) INT_XOR (register, 0x1c, 4) , (const, 0x1, 4)

0045d294: sll a3,a3,0x3
	(register, 0x1c, 4) INT_LEFT (register, 0x1c, 4) , (const, 0x3, 4)

0045d298: addiu t1,a3,-0x1
	(register, 0x24, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0045d29c: srlv v1,v1,a3
	(unique, 0x5780, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
	(register, 0xc, 4) INT_RIGHT (register, 0xc, 4) , (unique, 0x5780, 4)

0045d2a0: addu v1,s7,v1
	(register, 0xc, 4) INT_ADD (register, 0x5c, 4) , (register, 0xc, 4)

0045d2a4: lbu v1,0x0(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

0045d2a8: nop

0045d2ac: addu v1,v1,t1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x24, 4)

0045d2b0: slt a3,v1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

0045d2b4: beq a3,zero,0x0045d570
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d570, 4) , (unique, 0x1200, 1)

0045d2b8: _nop

0045d2bc: b 0x0045d570
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45d570, 4)

0045d2c0: _or v0,v1,zero
	(register, 0x8, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045d2c4: sltu v0,v1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045d2c8: beq v0,zero,0x0045d530
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d530, 4) , (unique, 0x1200, 1)

0045d2cc: _nop

0045d2d0: b 0x0045c9a4
	(register, 0x8, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45c9a4, 4)

0045d2d4: _li v0,0x10
	(register, 0x8, 4) COPY (const, 0x10, 4)

0045d2d8: addiu sp,sp,-0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffff0, 4)

0045d2dc: addiu a0,sp,0x18
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045d2e0: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d2e4: sw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045d2e8: addiu a0,sp,0x1a
	(register, 0x10, 4) INT_ADD (register, 0x74, 4) , (const, 0x1a, 4)

0045d2ec: beq v0,zero,0x0045d364
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d364, 4) , (unique, 0x1200, 1)

0045d2f0: _sw a0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045d2f4: li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045d2f8: bne v1,v0,0x0045d368
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d368, 4) , (unique, 0x1700, 1)

0045d2fc: _lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045d300: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045d304: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0045d308: sw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d30c: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0045d310: sw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d314: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045d318: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045d31c: sw v0,0x8c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d320: li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0045d324: lw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d328: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d32c: li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045d330: addiu v0,v0,-0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)

0045d334: lw s1,-0x780c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff87f4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d338: sb v1,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045d33c: lw v1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d340: sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d344: addiu v0,s8,0x20
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)

0045d348: sw v0,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d34c: addiu v0,s1,-0x4480
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffbb80, 4)

0045d350: addiu s2,a0,0x4
	(register, 0x48, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0045d354: sb v1,0x3(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045d358: sw zero,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045d35c: b 0x0045c340
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c340, 4)

0045d360: _sw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d364: lui v0,0x7fff
	(register, 0x8, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045d368: ori v0,v0,0xffff
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0xffff, 4)

0045d36c: sw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d370: li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0045d374: sw v0,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d378: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045d37c: sw v0,0x8c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x8c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d380: sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d384: b 0x0045c2b4
	(register, 0x4c, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x45c2b4, 4)

0045d388: _li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0045d38c: blez s3,0x0045d3c0
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	(register, 0x48, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d3c0, 4) , (unique, 0x1500, 1)

0045d390: _or s2,v1,zero
	(register, 0x48, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045d394: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d398: nop

0045d39c: slti v0,v0,0x2
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x2, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045d3a0: beq v0,zero,0x0045c330
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c330, 4) , (unique, 0x1200, 1)

0045d3a4: _nop

0045d3a8: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d3ac: nop

0045d3b0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d3b4: nop

0045d3b8: bne v0,zero,0x0045c330
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c330, 4) , (unique, 0x1700, 1)

0045d3bc: _nop

0045d3c0: b 0x0045c340
	(register, 0x54, 4) COPY (const, 0x1, 4)
	 ---  BRANCH (ram, 0x45c340, 4)

0045d3c4: _li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045d3c8: blez s6,0x0045c684
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x58, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c684, 4) , (unique, 0x1500, 1)

0045d3cc: _nop

0045d3d0: lw t9,-0x7bd0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8430, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d3d4: or a2,s6,zero
	(register, 0x18, 4) INT_OR (register, 0x58, 4) , (const, 0x0, 4)

0045d3d8: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045d3dc: bal 0x0045b450
	(register, 0x7c, 4) COPY (const, 0x45d3e4, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b450, 4)

0045d3e0: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045d3e4: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d3e8: b 0x0045c684
	 ---  BRANCH (ram, 0x45c684, 4)

0045d3ec: _nop

0045d3f0: or t0,s2,zero
	(register, 0x20, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

0045d3f4: b 0x0045c97c
	(register, 0x24, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c97c, 4)

0045d3f8: _or t1,v0,zero
	(register, 0x24, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045d3fc: lw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d400: li v0,0x66
	(register, 0x8, 4) COPY (const, 0x66, 4)

0045d404: beq a0,v0,0x0045d634
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x14, 4) COPY (const, 0x31, 4)
	 ---  CBRANCH (ram, 0x45d634, 4) , (unique, 0x1200, 1)

0045d408: _li a1,0x31
	(register, 0x14, 4) COPY (const, 0x31, 4)

0045d40c: lw a2,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d410: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d414: lw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d418: bne v1,zero,0x0045dbe8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)
	 ---  CBRANCH (ram, 0x45dbe8, 4) , (unique, 0x1700, 1)

0045d41c: _sb a1,0x2(a2)
	(unique, 0x100, 4) INT_ADD (register, 0x18, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045d420: li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0045d424: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045d428: bne v0,zero,0x0045d434
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45d434, 4) , (unique, 0x1700, 1)

0045d42c: _sw v0,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d430: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045d434: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d438: lw a1,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d43c: addu v0,v0,s7
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x5c, 4)

0045d440: slt v1,a1,v0
	(unique, 0x5080, 1) INT_SLESS (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5080, 1)

0045d444: beq v1,zero,0x0045cea0
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45cea0, 4) , (unique, 0x1200, 1)

0045d448: _subu v0,v0,a1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x14, 4)

0045d44c: subu s2,s2,v0
	(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (register, 0x8, 4)

0045d450: b 0x0045cea0
	(register, 0x5c, 4) INT_SUB (register, 0x5c, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45cea0, 4)

0045d454: _subu s7,s7,v0
	(register, 0x5c, 4) INT_SUB (register, 0x5c, 4) , (register, 0x8, 4)

0045d458: li s1,0x1
	(register, 0x44, 4) COPY (const, 0x1, 4)

0045d45c: b 0x0045c1e0
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c1e0, 4)

0045d460: _sw v0,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d464: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045d468: lw v0,-0x74d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d46c: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045d470: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045d474: lw v1,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d478: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d47c: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0045d480: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045d484: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045d488: lui v1,0x8000
	(register, 0xc, 4) INT_LEFT (const, 0x8000, 4) , (const, 0x10, 4)

0045d48c: and s2,s2,v1
	(register, 0x48, 4) INT_AND (register, 0x48, 4) , (register, 0xc, 4)

0045d490: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0045d494: beq v0,zero,0x0045d628
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x45d628, 4) , (unique, 0x1200, 1)

0045d498: _sw s2,0x60(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x60, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045d49c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d4a0: b 0x0045bea0
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79e8, 4)
	 ---  BRANCH (ram, 0x45bea0, 4)

0045d4a4: _addiu s3,a1,0x79e8
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79e8, 4)

0045d4a8: beq v1,zero,0x0045ce9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce9c, 4) , (unique, 0x1200, 1)

0045d4ac: _nop

0045d4b0: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d4b4: sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045d4b8: b 0x0045d4c8
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45d4c8, 4)

0045d4bc: _addu a0,a1,a0
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0045d4c0: beq v1,zero,0x0045d4dc
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45d4dc, 4) , (unique, 0x1200, 1)

0045d4c4: _addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0045d4c8: lw a1,-0x4(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d4cc: nop

0045d4d0: beq a1,zero,0x0045d4c0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45d4c0, 4) , (unique, 0x1200, 1)

0045d4d4: _addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0045d4d8: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d4dc: li a0,0x35
	(register, 0x10, 4) COPY (const, 0x35, 4)

0045d4e0: bne v0,a0,0x0045ce9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45ce9c, 4) , (unique, 0x1700, 1)

0045d4e4: _nop

0045d4e8: andi s3,s3,0x1
	(register, 0x4c, 4) INT_AND (register, 0x4c, 4) , (const, 0x1, 4)

0045d4ec: bne s3,zero,0x0045c40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c40c, 4) , (unique, 0x1700, 1)

0045d4f0: _nop

0045d4f4: beq v1,zero,0x0045ce9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce9c, 4) , (unique, 0x1200, 1)

0045d4f8: _nop

0045d4fc: b 0x0045c40c
	 ---  BRANCH (ram, 0x45c40c, 4)

0045d500: _nop

0045d504: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045d508: li v1,0x66
	(register, 0xc, 4) COPY (const, 0x66, 4)

0045d50c: andi v0,v0,0x1000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045d510: lw s3,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d514: sw v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d518: beq v0,zero,0x0045dc0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x5, 4)
	 ---  CBRANCH (ram, 0x45dc0c, 4) , (unique, 0x1200, 1)

0045d51c: _addiu s1,s1,0x5
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x5, 4)

0045d520: sw s3,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045d524: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045d528: b 0x0045c23c
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c23c, 4)

0045d52c: _sw zero,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045d530: b 0x0045c9a4
	(register, 0x8, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45c9a4, 4)

0045d534: _li v0,0x18
	(register, 0x8, 4) COPY (const, 0x18, 4)

0045d538: and v0,v0,v1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0xc, 4)

0045d53c: lui v1,0x1
	(register, 0xc, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045d540: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0045d544: beq v1,zero,0x0045dc1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45dc1c, 4) , (unique, 0x1200, 1)

0045d548: _lui v1,0x100
	(register, 0xc, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045d54c: sltiu v1,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

0045d550: xori v1,v1,0x1
	(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (const, 0x1, 4)

0045d554: sll v1,v1,0x3
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x3, 4)

0045d558: addiu a3,v1,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0045d55c: srlv v0,v0,v1
	(unique, 0x5780, 4) INT_AND (register, 0xc, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0045d560: addu v0,s7,v0
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x8, 4)

0045d564: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0045d568: nop

0045d56c: addu v0,v0,a3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

0045d570: bne s2,zero,0x0045d978
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x48, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x45d978, 4) , (unique, 0x1700, 1)

0045d574: _slt v0,v0,s3
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x4c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045d578: bne v0,zero,0x0045dc9c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dc9c, 4) , (unique, 0x1700, 1)

0045d57c: _nop

0045d580: lw s5,-0x77b8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8848, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d584: subu a2,a2,s2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)

0045d588: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045d58c: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45d594, 4)
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045d590: _or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d594: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d598: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d59c: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d5a0: addiu s6,s2,0x1
	(register, 0x58, 4) INT_ADD (register, 0x48, 4) , (const, 0x1, 4)

0045d5a4: subu v0,v0,s6
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x58, 4)

0045d5a8: subu a2,a2,s2
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x48, 4)

0045d5ac: addu a1,a0,s1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (register, 0x44, 4)

0045d5b0: or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d5b4: or t9,s5,zero
	(register, 0x64, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045d5b8: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45d5c0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045d5bc: _sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d5c0: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d5c4: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d5c8: subu s2,v1,s2
	(register, 0x48, 4) INT_SUB (register, 0xc, 4) , (register, 0x48, 4)

0045d5cc: sll a0,s2,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x48, 4) , (const, 0x2, 4)

0045d5d0: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045d5d4: lw v0,-0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffffc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d5d8: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d5dc: bne v0,zero,0x0045d5e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d5e8, 4) , (unique, 0x1700, 1)

0045d5e0: _nop

0045d5e4: subu s2,v1,s6
	(register, 0x48, 4) INT_SUB (register, 0xc, 4) , (register, 0x58, 4)

0045d5e8: b 0x0045c178
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)
	 ---  BRANCH (ram, 0x45c178, 4)

0045d5ec: _sw s2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

0045d5f0: addiu a3,a3,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xffffffff, 4)

0045d5f4: or a3,a3,v0
	(register, 0x1c, 4) INT_OR (register, 0x1c, 4) , (register, 0x8, 4)

0045d5f8: b 0x0045ca78
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x45ca78, 4)

0045d5fc: _addiu a3,a3,0x1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)

0045d600: b 0x0045caa0
	(register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f, 4)
	 ---  BRANCH (ram, 0x45caa0, 4)

0045d604: _addiu s3,s5,0x1f
	(register, 0x4c, 4) INT_ADD (register, 0x54, 4) , (const, 0x1f, 4)

0045d608: b 0x0045cfb8
	(register, 0x44, 4) INT_ADD (register, 0x4c, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x45cfb8, 4)

0045d60c: _addiu s1,s3,0x2
	(register, 0x44, 4) INT_ADD (register, 0x4c, 4) , (const, 0x2, 4)

0045d610: li v0,0x8
	(register, 0x8, 4) COPY (const, 0x8, 4)

0045d614: li s5,0x8
	(register, 0x54, 4) COPY (const, 0x8, 4)

0045d618: or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045d61c: sw v0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d620: b 0x0045cb9c
	(register, 0x4c, 4) INT_ADD (register, 0x20, 4) , (const, 0x80, 4)
	 ---  BRANCH (ram, 0x45cb9c, 4)

0045d624: _addiu s3,t0,0x80
	(register, 0x4c, 4) INT_ADD (register, 0x20, 4) , (const, 0x80, 4)

0045d628: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d62c: b 0x0045bea0
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79e4, 4)
	 ---  BRANCH (ram, 0x45bea0, 4)

0045d630: _addiu s3,a1,0x79e4
	(register, 0x4c, 4) INT_ADD (register, 0x14, 4) , (const, 0x79e4, 4)

0045d634: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d638: lw v1,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d63c: nop

0045d640: beq v0,v1,0x0045dd70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45dd70, 4) , (unique, 0x1200, 1)

0045d644: _nop

0045d648: lw v1,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d64c: nop

0045d650: addiu v0,v1,0x1
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d654: sw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d658: li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045d65c: sb v0,0x1(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0045d660: lw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d664: nop

0045d668: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045d66c: b 0x0045d434
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45d434, 4)

0045d670: _sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d674: sw v1,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d678: lui v1,0x7fff
	(register, 0xc, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

0045d67c: ori v1,v1,0xffff
	(register, 0xc, 4) INT_OR (register, 0xc, 4) , (const, 0xffff, 4)

0045d680: sw s3,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

0045d684: li s5,0x1
	(register, 0x54, 4) COPY (const, 0x1, 4)

0045d688: b 0x0045c230
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x45c230, 4)

0045d68c: _sw v1,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d690: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045d694: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d698: nop

0045d69c: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45d6a4, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045d6a0: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045d6a4: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d6a8: lhu s1,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x44, 4) INT_ZEXT (unique, 0x3300, 2)

0045d6ac: b 0x0045c66c
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)
	 ---  BRANCH (ram, 0x45c66c, 4)

0045d6b0: _andi s1,s1,0x400
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x400, 4)

0045d6b4: sltu a1,v0,a1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

0045d6b8: beq a1,zero,0x0045d898
	(unique, 0x1200, 1) INT_EQUAL (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d898, 4) , (unique, 0x1200, 1)

0045d6bc: _nop

0045d6c0: b 0x0045cc2c
	(register, 0x14, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45cc2c, 4)

0045d6c4: _li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0045d6c8: b 0x0045cbf8
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffd, 4)
	 ---  BRANCH (ram, 0x45cbf8, 4)

0045d6cc: _addiu a2,a2,-0x3
	(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffd, 4)

0045d6d0: lw v1,0x0(s3)
	(unique, 0x100, 4) INT_ADD (register, 0x4c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d6d4: lw a3,-0x77cc(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8834, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d6d8: addiu v1,v1,0x2
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x2, 4)

0045d6dc: lw t9,-0x77c8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8838, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d6e0: sll v1,v1,0x2
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045d6e4: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d6e8: bal 0x0046d270
	(register, 0x7c, 4) COPY (const, 0x45d6f0, 4)
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0xc, 4)
	 ---  CALL (ram, 0x46d270, 4)

0045d6ec: _addu a3,a3,v1
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (register, 0xc, 4)

0045d6f0: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d6f4: b 0x0045cbe4
	 ---  BRANCH (ram, 0x45cbe4, 4)

0045d6f8: _nop

0045d6fc: slti v0,v1,0x1d
	(unique, 0x5180, 1) INT_SLESS (register, 0xc, 4) , (const, 0x1d, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0045d700: beq v0,zero,0x0045db7c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)
	 ---  CBRANCH (ram, 0x45db7c, 4) , (unique, 0x1200, 1)

0045d704: _addiu t3,a3,-0x4
	(register, 0x2c, 4) INT_ADD (register, 0x1c, 4) , (const, 0xfffffffc, 4)

0045d708: li v0,0xa
	(register, 0x8, 4) COPY (const, 0xa, 4)

0045d70c: addiu a3,a1,0x2
	(register, 0x1c, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0045d710: sllv v0,v0,t3
	(unique, 0x4f80, 4) INT_AND (register, 0x2c, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0045d714: slt a3,a3,s6
	(unique, 0x5080, 1) INT_SLESS (register, 0x1c, 4) , (register, 0x58, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5080, 1)

0045d718: sw zero,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045d71c: beq a3,zero,0x0045d874
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45d874, 4) , (unique, 0x1200, 1)

0045d720: _sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d724: lw a0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d728: nop

0045d72c: sltu a3,a0,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0045d730: bne a3,zero,0x0045d764
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d764, 4) , (unique, 0x1700, 1)

0045d734: _nop

0045d738: beq a0,v0,0x0045d748
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)
	 ---  CBRANCH (ram, 0x45d748, 4) , (unique, 0x1200, 1)

0045d73c: _sll v0,a2,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045d740: b 0x0045cc8c
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45cc8c, 4)

0045d744: _or t3,a1,zero
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045d748: addu v0,t2,v0
	(register, 0x8, 4) INT_ADD (register, 0x28, 4) , (register, 0x8, 4)

0045d74c: lw v0,-0x8(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d750: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d754: nop

0045d758: sltu v0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045d75c: beq v0,zero,0x0045cc8c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45cc8c, 4) , (unique, 0x1200, 1)

0045d760: _or t3,a1,zero
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045d764: lw a0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d768: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045d76c: subu a1,a1,s6
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x58, 4)

0045d770: sllv v0,v0,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0045d774: sw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045d778: or s2,s2,v0
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (register, 0x8, 4)

0045d77c: subu v1,v1,a1
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)

0045d780: lw a0,0x0(t2)
	(unique, 0x100, 4) INT_ADD (register, 0x28, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d784: nop

0045d788: bne a0,zero,0x0045de00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45de00, 4) , (unique, 0x1700, 1)

0045d78c: _addiu v0,t2,0x4
	(register, 0x8, 4) INT_ADD (register, 0x28, 4) , (const, 0x4, 4)

0045d790: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045d794: lw a0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d798: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0045d79c: addiu s1,s1,0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0x1, 4)

0045d7a0: beq a0,zero,0x0045d794
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45d794, 4) , (unique, 0x1200, 1)

0045d7a4: _addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0045d7a8: or t3,s1,zero
	(register, 0x2c, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045d7ac: li v0,0x1f
	(register, 0x8, 4) COPY (const, 0x1f, 4)

0045d7b0: beq v1,v0,0x0045dcf4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45dcf4, 4) , (unique, 0x1200, 1)

0045d7b4: _subu v0,zero,a0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x10, 4)

0045d7b8: and v0,v0,a0
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (register, 0x10, 4)

0045d7bc: lui a0,0x1
	(register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (const, 0x10, 4)

0045d7c0: sltu a0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0045d7c4: beq a0,zero,0x0045dac0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45dac0, 4) , (unique, 0x1200, 1)

0045d7c8: _lui a0,0x100
	(register, 0x10, 4) INT_LEFT (const, 0x100, 4) , (const, 0x10, 4)

0045d7cc: sltiu a0,v0,0x100
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5280, 1)

0045d7d0: xori a0,a0,0x1
	(register, 0x10, 4) INT_XOR (register, 0x10, 4) , (const, 0x1, 4)

0045d7d4: sll a0,a0,0x3
	(register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x3, 4)

0045d7d8: addiu a3,a0,-0x1
	(register, 0x1c, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

0045d7dc: srlv v0,v0,a0
	(unique, 0x5780, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)

0045d7e0: addu v0,s7,v0
	(register, 0x8, 4) INT_ADD (register, 0x5c, 4) , (register, 0x8, 4)

0045d7e4: lbu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

0045d7e8: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d7ec: addu v0,v0,a3
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x1c, 4)

0045d7f0: li a3,0x1f
	(register, 0x1c, 4) COPY (const, 0x1f, 4)

0045d7f4: subu a3,a3,v1
	(register, 0x1c, 4) INT_SUB (register, 0x1c, 4) , (register, 0xc, 4)

0045d7f8: bne s1,zero,0x0045daa0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)
	 ---  CBRANCH (ram, 0x45daa0, 4) , (unique, 0x1700, 1)

0045d7fc: _slt v0,v0,a3
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045d800: bne v0,zero,0x0045d834
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d834, 4) , (unique, 0x1700, 1)

0045d804: _nop

0045d808: subu a2,a2,s1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x44, 4)

0045d80c: lw t9,-0x77b8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8848, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d810: nop

0045d814: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45d81c, 4)
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045d818: _addiu s5,s5,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x54, 4) , (const, 0xffffffff, 4)

0045d81c: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d820: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d824: subu v0,v0,s1
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x44, 4)

0045d828: lw t3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d82c: b 0x0045cc90
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45cc90, 4)

0045d830: _sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d834: lw t9,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d838: addiu a3,v1,0x1
	(register, 0x1c, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d83c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45d844, 4)
	(register, 0x14, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045d840: _or a1,t2,zero
	(register, 0x14, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0045d844: lw v1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d848: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d84c: sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045d850: addu a0,a1,a0
	(register, 0x10, 4) INT_ADD (register, 0x14, 4) , (register, 0x10, 4)

0045d854: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045d858: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d85c: lw t3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d860: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045d864: b 0x0045cc8c
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45cc8c, 4)

0045d868: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d86c: lw t2,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d870: lw a2,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d874: lw a0,0x68(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x68, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d878: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045d87c: subu a1,a1,s6
	(register, 0x14, 4) INT_SUB (register, 0x14, 4) , (register, 0x58, 4)

0045d880: sllv v0,v0,a0
	(unique, 0x4f80, 4) INT_AND (register, 0x10, 4) , (const, 0x1f, 4)
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)

0045d884: sw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045d888: bgez a1,0x0045d780
	(unique, 0x1300, 1) INT_SLESSEQUAL (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45d780, 4) , (unique, 0x1300, 1)

0045d88c: _or s2,s2,v0
	(register, 0x48, 4) INT_OR (register, 0x48, 4) , (register, 0x8, 4)

0045d890: b 0x0045d780
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x45d780, 4)

0045d894: _subu v1,v1,a1
	(register, 0xc, 4) INT_SUB (register, 0xc, 4) , (register, 0x14, 4)

0045d898: b 0x0045cc2c
	(register, 0x14, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45cc2c, 4)

0045d89c: _li a1,0x18
	(register, 0x14, 4) COPY (const, 0x18, 4)

0045d8a0: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8a4: nop

0045d8a8: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8ac: nop

0045d8b0: beq v1,zero,0x0045ce9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45ce9c, 4) , (unique, 0x1200, 1)

0045d8b4: _nop

0045d8b8: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8bc: nop

0045d8c0: beq a0,zero,0x0045d4b4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45d4b4, 4) , (unique, 0x1200, 1)

0045d8c4: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0045d8c8: b 0x0045ce9c
	 ---  BRANCH (ram, 0x45ce9c, 4)

0045d8cc: _nop

0045d8d0: lw a1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8d4: nop

0045d8d8: beq a0,a1,0x0045da20
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x14, 4)
	 ---  CBRANCH (ram, 0x45da20, 4) , (unique, 0x1200, 1)

0045d8dc: _nop

0045d8e0: lw a1,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8e4: li a0,0x67
	(register, 0x10, 4) COPY (const, 0x67, 4)

0045d8e8: lb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045d8ec: bne a1,a0,0x0045c480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45c480, 4) , (unique, 0x1700, 1)

0045d8f0: _nop

0045d8f4: lw a1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d8f8: li a0,0x66
	(register, 0x10, 4) COPY (const, 0x66, 4)

0045d8fc: bne a1,a0,0x0045c480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45c480, 4) , (unique, 0x1700, 1)

0045d900: _nop

0045d904: lhu a0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x3300, 2)

0045d908: nop

0045d90c: andi a0,a0,0x1000
	(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1000, 4)

0045d910: beq a0,zero,0x0045c480
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c480, 4) , (unique, 0x1200, 1)

0045d914: _nop

0045d918: lw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d91c: nop

0045d920: addiu a0,a0,0x3
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3, 4)

0045d924: bne v0,a0,0x0045c480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45c480, 4) , (unique, 0x1700, 1)

0045d928: _nop

0045d92c: lw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d930: nop

0045d934: lb a1,0x2(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_SEXT (unique, 0x2d00, 1)

0045d938: li a0,0x30
	(register, 0x10, 4) COPY (const, 0x30, 4)

0045d93c: bne a1,a0,0x0045c480
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x10, 4)
	 ---  CBRANCH (ram, 0x45c480, 4) , (unique, 0x1700, 1)

0045d940: _nop

0045d944: lw a0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d948: nop

0045d94c: addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

0045d950: b 0x0045c480
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45c480, 4)

0045d954: _sw a0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045d958: beq a0,zero,0x0045db6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x6, 4)
	 ---  CBRANCH (ram, 0x45db6c, 4) , (unique, 0x1200, 1)

0045d95c: _li v0,0x6
	(register, 0x8, 4) COPY (const, 0x6, 4)

0045d960: addiu sp,sp,-0x10
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xfffffff0, 4)

0045d964: addiu v0,sp,0x18
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)

0045d968: sw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d96c: addiu v0,sp,0x1a
	(register, 0x8, 4) INT_ADD (register, 0x74, 4) , (const, 0x1a, 4)

0045d970: b 0x0045d300
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45d300, 4)

0045d974: _sw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d978: beq v0,zero,0x0045d580
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x58, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x45d580, 4) , (unique, 0x1200, 1)

0045d97c: _lui s6,0x3fff
	(register, 0x58, 4) INT_LEFT (const, 0x3fff, 4) , (const, 0x10, 4)

0045d980: ori s6,s6,0xffff
	(register, 0x58, 4) INT_OR (register, 0x58, 4) , (const, 0xffff, 4)

0045d984: lw s7,-0x77b8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8848, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d988: addu t0,t0,s6
	(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (register, 0x58, 4)

0045d98c: sll s1,t0,0x2
	(register, 0x44, 4) INT_LEFT (register, 0x20, 4) , (const, 0x2, 4)

0045d990: addiu s5,s2,-0x1
	(register, 0x54, 4) INT_ADD (register, 0x48, 4) , (const, 0xffffffff, 4)

0045d994: subu a2,a2,s5
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x54, 4)

0045d998: addu a1,a0,s1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (register, 0x44, 4)

0045d99c: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045d9a0: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45d9a8, 4)
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045d9a4: _or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d9a8: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9ac: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9b0: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9b4: subu v0,v0,s2
	(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x48, 4)

0045d9b8: subu a2,a2,s5
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x54, 4)

0045d9bc: addu a1,a0,s1
	(register, 0x14, 4) INT_ADD (register, 0x10, 4) , (register, 0x44, 4)

0045d9c0: or a3,s3,zero
	(register, 0x1c, 4) INT_OR (register, 0x4c, 4) , (const, 0x0, 4)

0045d9c4: or t9,s7,zero
	(register, 0x64, 4) INT_OR (register, 0x5c, 4) , (const, 0x0, 4)

0045d9c8: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45d9d0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045d9cc: _sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045d9d0: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9d4: lw v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9d8: subu s5,a0,s5
	(register, 0x54, 4) INT_SUB (register, 0x10, 4) , (register, 0x54, 4)

0045d9dc: addu v0,s5,s6
	(register, 0x8, 4) INT_ADD (register, 0x54, 4) , (register, 0x58, 4)

0045d9e0: sll v0,v0,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x2, 4)

0045d9e4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0045d9e8: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9ec: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045d9f0: bne v0,zero,0x0045d9fc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d9fc, 4) , (unique, 0x1700, 1)

0045d9f4: _nop

0045d9f8: subu s5,a0,s2
	(register, 0x54, 4) INT_SUB (register, 0x10, 4) , (register, 0x48, 4)

0045d9fc: b 0x0045c178
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)
	 ---  BRANCH (ram, 0x45c178, 4)

0045da00: _sw s5,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

0045da04: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da08: li a1,0x2d
	(register, 0x14, 4) COPY (const, 0x2d, 4)

0045da0c: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45da14, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045da10: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045da14: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da18: b 0x0045c7e4
	 ---  BRANCH (ram, 0x45c7e4, 4)

0045da1c: _nop

0045da20: lw a0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da24: nop

0045da28: beq a0,zero,0x0045c464
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)
	 ---  CBRANCH (ram, 0x45c464, 4) , (unique, 0x1200, 1)

0045da2c: _addiu a0,a0,-0x1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)

0045da30: b 0x0045c464
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45c464, 4)

0045da34: _sw a0,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045da38: sltu v0,s1,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x44, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045da3c: bne v0,zero,0x0045c260
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x45c260, 4) , (unique, 0x1700, 1)

0045da40: _addiu v0,s1,0x7
	(register, 0x8, 4) INT_ADD (register, 0x44, 4) , (const, 0x7, 4)

0045da44: lw t9,-0x7f8c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8074, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da48: nop

0045da4c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45da54, 4)
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045da50: _or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045da54: sw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045da58: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da5c: beq v0,zero,0x0045d0a4
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d0a4, 4) , (unique, 0x1200, 1)

0045da60: _nop

0045da64: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da68: b 0x0045c280
	 ---  BRANCH (ram, 0x45c280, 4)

0045da6c: _nop

0045da70: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da74: nop

0045da78: lw v1,0x0(a1)
	(unique, 0x100, 4) INT_ADD (register, 0x14, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da7c: nop

0045da80: beq v1,zero,0x0045d1c8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d1c8, 4) , (unique, 0x1200, 1)

0045da84: _nop

0045da88: lw v1,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045da8c: nop

0045da90: bne v1,zero,0x0045c40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x45c40c, 4) , (unique, 0x1700, 1)

0045da94: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

0045da98: b 0x0045d4b8
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)
	 ---  BRANCH (ram, 0x45d4b8, 4)

0045da9c: _sll a0,v1,0x2
	(register, 0x10, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045daa0: beq v0,zero,0x0045d808
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d808, 4) , (unique, 0x1200, 1)

0045daa4: _nop

0045daa8: sll a1,t3,0x2
	(register, 0x14, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)

0045daac: addiu s1,s1,-0x1
	(register, 0x44, 4) INT_ADD (register, 0x44, 4) , (const, 0xffffffff, 4)

0045dab0: addiu a1,a1,-0x4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0xfffffffc, 4)

0045dab4: subu a2,a2,s1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x44, 4)

0045dab8: b 0x0045d80c
	(register, 0x14, 4) INT_ADD (register, 0x28, 4) , (register, 0x14, 4)
	 ---  BRANCH (ram, 0x45d80c, 4)

0045dabc: _addu a1,t2,a1
	(register, 0x14, 4) INT_ADD (register, 0x28, 4) , (register, 0x14, 4)

0045dac0: sltu a0,v0,a0
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x5380, 1)

0045dac4: beq a0,zero,0x0045dc70
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dc70, 4) , (unique, 0x1200, 1)

0045dac8: _nop

0045dacc: li a3,0xf
	(register, 0x1c, 4) COPY (const, 0xf, 4)

0045dad0: b 0x0045d7dc
	(register, 0x10, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45d7dc, 4)

0045dad4: _li a0,0x10
	(register, 0x10, 4) COPY (const, 0x10, 4)

0045dad8: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dadc: nop

0045dae0: bne v1,v0,0x0045c524
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x67, 4)
	 ---  CBRANCH (ram, 0x45c524, 4) , (unique, 0x1700, 1)

0045dae4: _li v0,0x67
	(register, 0x8, 4) COPY (const, 0x67, 4)

0045dae8: lw v1,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045daec: nop

0045daf0: bne v1,v0,0x0045c524
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45c524, 4) , (unique, 0x1700, 1)

0045daf4: _nop

0045daf8: lw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dafc: nop

0045db00: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0045db04: sltu v0,s2,v0
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045db08: bne v0,zero,0x0045df10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) COPY (const, 0x3ae, 4)
	 ---  CBRANCH (ram, 0x45df10, 4) , (unique, 0x1700, 1)

0045db0c: _li a2,0x3ae
	(register, 0x18, 4) COPY (const, 0x3ae, 4)

0045db10: lw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db14: nop

0045db18: lb v1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0045db1c: li v0,0x31
	(register, 0x8, 4) COPY (const, 0x31, 4)

0045db20: bne v1,v0,0x0045def0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	(register, 0x18, 4) COPY (const, 0x3af, 4)
	 ---  CBRANCH (ram, 0x45def0, 4) , (unique, 0x1700, 1)

0045db24: _li a2,0x3af
	(register, 0x18, 4) COPY (const, 0x3af, 4)

0045db28: lw v0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db2c: lw a3,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db30: lw v1,0x7b34(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x7b34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db34: addiu v0,v0,0x7b34
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7b34, 4)

0045db38: lbu a1,0x4(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

0045db3c: lbu a0,0x5(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x10, 4) INT_ZEXT (unique, 0x2f00, 1)

0045db40: swl v1,0x0(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045db44: swr v1,0x3(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x3, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)

0045db48: sb a1,0x4(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x17, 1)

0045db4c: sb a0,0x5(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x5, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x13, 1)

0045db50: lw v1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db54: addiu a2,a3,0x2
	(register, 0x18, 4) INT_ADD (register, 0x1c, 4) , (const, 0x2, 4)

0045db58: sltu v0,s2,a2
	(unique, 0x5380, 1) INT_LESS (register, 0x48, 4) , (register, 0x18, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

0045db5c: beq v0,zero,0x0045de88
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x45de88, 4) , (unique, 0x1200, 1)

0045db60: _sb v1,0x1(a3)
	(unique, 0x100, 4) INT_ADD (register, 0x1c, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045db64: b 0x0045c5dc
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)
	 ---  BRANCH (ram, 0x45c5dc, 4)

0045db68: _addiu s2,s2,0x5
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x5, 4)

0045db6c: b 0x0045d074
	(register, 0x4c, 4) COPY (const, 0x6, 4)
	 ---  BRANCH (ram, 0x45d074, 4)

0045db70: _li s3,0x6
	(register, 0x4c, 4) COPY (const, 0x6, 4)

0045db74: b 0x0045d694
	(register, 0x14, 4) COPY (const, 0x2d, 4)
	 ---  BRANCH (ram, 0x45d694, 4)

0045db78: _li a1,0x2d
	(register, 0x14, 4) COPY (const, 0x2d, 4)

0045db7c: addiu s1,s8,0x44
	(register, 0x44, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)

0045db80: lui v0,0xa000
	(register, 0x8, 4) INT_LEFT (const, 0xa000, 4) , (const, 0x10, 4)

0045db84: lw t9,0x70(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x70, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045db88: sw v1,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045db8c: or a1,s1,zero
	(register, 0x14, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045db90: li a2,0x2
	(register, 0x18, 4) COPY (const, 0x2, 4)

0045db94: or a0,s1,zero
	(register, 0x10, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045db98: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045db9c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45dba4, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  CALLIND (register, 0x80, 4)

0045dba0: _sw zero,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045dba4: lw a1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dba8: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbac: addiu v0,a1,0x2
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x2, 4)

0045dbb0: slt v0,v0,s6
	(unique, 0x5080, 1) INT_SLESS (register, 0x8, 4) , (register, 0x58, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5080, 1)

0045dbb4: lw v1,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbb8: beq v0,zero,0x0045d86c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d86c, 4) , (unique, 0x1200, 1)

0045dbbc: _or t3,a1,zero
	(register, 0x2c, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045dbc0: addiu v0,a1,0x3
	(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (const, 0x3, 4)

0045dbc4: bne s6,v0,0x0045cc8c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x58, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x45cc8c, 4) , (unique, 0x1700, 1)

0045dbc8: _nop

0045dbcc: lw a2,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbd0: lw t2,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbd4: sll a0,a2,0x2
	(register, 0x10, 4) INT_LEFT (register, 0x18, 4) , (const, 0x2, 4)

0045dbd8: addiu a0,a0,-0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)

0045dbdc: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbe0: b 0x0045d724
	(register, 0x10, 4) INT_ADD (register, 0x28, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45d724, 4)

0045dbe4: _addu a0,t2,a0
	(register, 0x10, 4) INT_ADD (register, 0x28, 4) , (register, 0x10, 4)

0045dbe8: b 0x0045d424
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)
	 ---  BRANCH (ram, 0x45d424, 4)

0045dbec: _li v1,-0x1
	(register, 0xc, 4) COPY (const, 0xffffffff, 4)

0045dbf0: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dbf4: li a1,0x2b
	(register, 0x14, 4) COPY (const, 0x2b, 4)

0045dbf8: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45dc00, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045dbfc: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045dc00: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc04: b 0x0045c7e4
	 ---  BRANCH (ram, 0x45c7e4, 4)

0045dc08: _nop

0045dc0c: or s5,zero,zero
	(register, 0x54, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045dc10: sw zero,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045dc14: b 0x0045c23c
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c23c, 4)

0045dc18: _sw zero,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0045dc1c: sltu v1,v0,v1
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

0045dc20: beq v1,zero,0x0045dd58
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dd58, 4) , (unique, 0x1200, 1)

0045dc24: _nop

0045dc28: li a3,0xf
	(register, 0x1c, 4) COPY (const, 0xf, 4)

0045dc2c: b 0x0045d55c
	(register, 0xc, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45d55c, 4)

0045dc30: _li v1,0x10
	(register, 0xc, 4) COPY (const, 0x10, 4)

0045dc34: sltu a3,v0,a3
	(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (register, 0x1c, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0045dc38: beq a3,zero,0x0045dd64
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dd64, 4) , (unique, 0x1200, 1)

0045dc3c: _nop

0045dc40: li t1,0xf
	(register, 0x24, 4) COPY (const, 0xf, 4)

0045dc44: b 0x0045d260
	(register, 0x1c, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45d260, 4)

0045dc48: _li a3,0x10
	(register, 0x1c, 4) COPY (const, 0x10, 4)

0045dc4c: b 0x0045d694
	(register, 0x14, 4) COPY (const, 0x2b, 4)
	 ---  BRANCH (ram, 0x45d694, 4)

0045dc50: _li a1,0x2b
	(register, 0x14, 4) COPY (const, 0x2b, 4)

0045dc54: lw t9,-0x7bc4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff843c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc58: li a1,0x20
	(register, 0x14, 4) COPY (const, 0x20, 4)

0045dc5c: bal 0x0045b570
	(register, 0x7c, 4) COPY (const, 0x45dc64, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x45b570, 4)

0045dc60: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0045dc64: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc68: b 0x0045c7e4
	 ---  BRANCH (ram, 0x45c7e4, 4)

0045dc6c: _nop

0045dc70: li a3,0x17
	(register, 0x1c, 4) COPY (const, 0x17, 4)

0045dc74: b 0x0045d7dc
	(register, 0x10, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45d7dc, 4)

0045dc78: _li a0,0x18
	(register, 0x10, 4) COPY (const, 0x18, 4)

0045dc7c: lw t9,-0x77b8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8848, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc80: nop

0045dc84: bal 0x0046e4a0
	(register, 0x7c, 4) COPY (const, 0x45dc8c, 4)
	 ---  CALL (ram, 0x46e4a0, 4)

0045dc88: _nop

0045dc8c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc90: lw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dc94: b 0x0045cda4
	 ---  BRANCH (ram, 0x45cda4, 4)

0045dc98: _nop

0045dc9c: lw s1,-0x77c4(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff883c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dca0: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045dca4: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045dca8: bal 0x0046d1a0
	(register, 0x7c, 4) COPY (const, 0x45dcb0, 4)
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d1a0, 4)

0045dcac: _or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045dcb0: lw a1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dcb4: lw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dcb8: or a3,s5,zero
	(register, 0x1c, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

0045dcbc: or t9,s1,zero
	(register, 0x64, 4) INT_OR (register, 0x44, 4) , (const, 0x0, 4)

0045dcc0: bal 0x0046d1a0
	(register, 0x7c, 4) COPY (const, 0x45dcc8, 4)
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x46d1a0, 4)

0045dcc4: _or a0,a1,zero
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

0045dcc8: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dccc: beq v0,zero,0x0045c178
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45c178, 4) , (unique, 0x1200, 1)

0045dcd0: _nop

0045dcd4: lw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dcd8: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dcdc: sll a1,v1,0x2
	(register, 0x14, 4) INT_LEFT (register, 0xc, 4) , (const, 0x2, 4)

0045dce0: addu a0,a0,a1
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x14, 4)

0045dce4: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045dce8: sw v1,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045dcec: b 0x0045c178
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45c178, 4)

0045dcf0: _sw v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045dcf4: subu a2,a2,s1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x44, 4)

0045dcf8: blez a2,0x0045dd34
	(unique, 0x1500, 1) INT_SLESSEQUAL (register, 0x18, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45dd34, 4) , (unique, 0x1500, 1)

0045dcfc: _nop

0045dd00: sll v0,t3,0x2
	(register, 0x8, 4) INT_LEFT (register, 0x2c, 4) , (const, 0x2, 4)

0045dd04: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd08: addu v0,t2,v0
	(register, 0x8, 4) INT_ADD (register, 0x28, 4) , (register, 0x8, 4)

0045dd0c: or v1,zero,zero
	(register, 0xc, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045dd10: lw a1,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd14: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045dd18: sw a1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x14, 4)

0045dd1c: lw a2,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd20: addiu v0,v0,0x4
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x4, 4)

0045dd24: subu a2,a2,s1
	(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x44, 4)

0045dd28: slt a1,v1,a2
	(unique, 0x5080, 1) INT_SLESS (register, 0xc, 4) , (register, 0x18, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5080, 1)

0045dd2c: bne a1,zero,0x0045dd10
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x45dd10, 4) , (unique, 0x1700, 1)

0045dd30: _addiu a0,a0,0x4
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4)

0045dd34: lw t3,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd38: b 0x0045cc8c
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)
	 ---  BRANCH (ram, 0x45cc8c, 4)

0045dd3c: _sw a2,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x18, 4)

0045dd40: sltu a3,v1,a3
	(unique, 0x5380, 1) INT_LESS (register, 0xc, 4) , (register, 0x1c, 4)
	(register, 0x1c, 4) INT_ZEXT (unique, 0x5380, 1)

0045dd44: beq a3,zero,0x0045de5c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45de5c, 4) , (unique, 0x1200, 1)

0045dd48: _nop

0045dd4c: li t1,0xf
	(register, 0x24, 4) COPY (const, 0xf, 4)

0045dd50: b 0x0045d29c
	(register, 0x1c, 4) COPY (const, 0x10, 4)
	 ---  BRANCH (ram, 0x45d29c, 4)

0045dd54: _li a3,0x10
	(register, 0x1c, 4) COPY (const, 0x10, 4)

0045dd58: li a3,0x17
	(register, 0x1c, 4) COPY (const, 0x17, 4)

0045dd5c: b 0x0045d55c
	(register, 0xc, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45d55c, 4)

0045dd60: _li v1,0x18
	(register, 0xc, 4) COPY (const, 0x18, 4)

0045dd64: li t1,0x17
	(register, 0x24, 4) COPY (const, 0x17, 4)

0045dd68: b 0x0045d260
	(register, 0x1c, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45d260, 4)

0045dd6c: _li a3,0x18
	(register, 0x1c, 4) COPY (const, 0x18, 4)

0045dd70: lw v1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd74: lw a0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd78: lhu v0,0xc(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0xc, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045dd7c: sb v1,0x1(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045dd80: andi v0,v0,0x1000
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1000, 4)

0045dd84: li v1,0x31
	(register, 0xc, 4) COPY (const, 0x31, 4)

0045dd88: bne v0,zero,0x0045de3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)
	 ---  CBRANCH (ram, 0x45de3c, 4) , (unique, 0x1700, 1)

0045dd8c: _sb v1,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045dd90: bne s7,zero,0x0045de3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x5c, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45de3c, 4) , (unique, 0x1700, 1)

0045dd94: _nop

0045dd98: lw s7,0x98(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x98, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x5c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dd9c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

0045dda0: lw v0,-0x74d0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8b30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dda4: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0045dda8: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045ddac: lw v1,0x8(s4)
	(unique, 0x100, 4) INT_ADD (register, 0x50, 4) , (const, 0x8, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ddb0: lw v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ddb4: sll v1,v1,0x1
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x1, 4)

0045ddb8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0045ddbc: lhu v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0045ddc0: lw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ddc4: andi v0,v0,0x1
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

0045ddc8: addiu v1,v1,0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x1, 4)

0045ddcc: beq v0,zero,0x0045de68
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x45de68, 4) , (unique, 0x1200, 1)

0045ddd0: _sw v1,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045ddd4: li a0,0x45
	(register, 0x10, 4) COPY (const, 0x45, 4)

0045ddd8: lw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dddc: sw a0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x10, 4)

0045dde0: sw v0,0x78(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x78, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045dde4: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0045dde8: b 0x0045d434
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)
	 ---  BRANCH (ram, 0x45d434, 4)

0045ddec: _sw v0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0045ddf0: or a1,a0,zero
	(register, 0x14, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0045ddf4: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045ddf8: b 0x0045c97c
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45c97c, 4)

0045ddfc: _or s2,zero,zero
	(register, 0x48, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045de00: or a1,t2,zero
	(register, 0x14, 4) INT_OR (register, 0x28, 4) , (const, 0x0, 4)

0045de04: or t3,zero,zero
	(register, 0x2c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045de08: b 0x0045d7ac
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  BRANCH (ram, 0x45d7ac, 4)

0045de0c: _or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045de10: lw v1,0x7c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x7c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de14: nop

0045de18: bne v1,zero,0x0045d8e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d8e0, 4) , (unique, 0x1700, 1)

0045de1c: _nop

0045de20: lw v1,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de24: nop

0045de28: beq v1,zero,0x0045de70
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x67, 4)
	 ---  CBRANCH (ram, 0x45de70, 4) , (unique, 0x1200, 1)

0045de2c: _li a0,0x67
	(register, 0x10, 4) COPY (const, 0x67, 4)

0045de30: addiu v1,v1,-0x1
	(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xffffffff, 4)

0045de34: b 0x0045d8e0
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)
	 ---  BRANCH (ram, 0x45d8e0, 4)

0045de38: _sw v1,0x80(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x80, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0045de3c: lw a0,0x74(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x74, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de40: lw v0,0x84(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x84, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de44: addiu a2,s7,0x1
	(register, 0x18, 4) INT_ADD (register, 0x5c, 4) , (const, 0x1, 4)

0045de48: addu v0,v0,a0
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)

0045de4c: li v1,0x30
	(register, 0xc, 4) COPY (const, 0x30, 4)

0045de50: sb v1,0x2(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xf, 1)

0045de54: b 0x0045dd9c
	(register, 0x5c, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)
	 ---  BRANCH (ram, 0x45dd9c, 4)

0045de58: _addu s7,a2,a0
	(register, 0x5c, 4) INT_ADD (register, 0x18, 4) , (register, 0x10, 4)

0045de5c: li t1,0x17
	(register, 0x24, 4) COPY (const, 0x17, 4)

0045de60: b 0x0045d29c
	(register, 0x1c, 4) COPY (const, 0x18, 4)
	 ---  BRANCH (ram, 0x45d29c, 4)

0045de64: _li a3,0x18
	(register, 0x1c, 4) COPY (const, 0x18, 4)

0045de68: b 0x0045ddd8
	(register, 0x10, 4) COPY (const, 0x65, 4)
	 ---  BRANCH (ram, 0x45ddd8, 4)

0045de6c: _li a0,0x65
	(register, 0x10, 4) COPY (const, 0x65, 4)

0045de70: lw a1,0x90(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x90, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de74: lw v1,0xd4(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0xd4, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de78: bne a1,a0,0x0045d0e0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x10, 4)
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x45d0e0, 4) , (unique, 0x1700, 1)

0045de7c: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0045de80: b 0x0045d8f4
	 ---  BRANCH (ram, 0x45d8f4, 4)

0045de84: _nop

0045de88: lw t9,-0x7fb8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8048, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045de8c: subu a2,s2,a2
	(register, 0x18, 4) INT_SUB (register, 0x48, 4) , (register, 0x18, 4)

0045de90: li a1,0x30
	(register, 0x14, 4) COPY (const, 0x30, 4)

0045de94: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45de9c, 4)
	(register, 0x10, 4) INT_ADD (register, 0x1c, 4) , (const, 0x6, 4)
	 ---  CALLIND (register, 0x80, 4)

0045de98: _addiu a0,a3,0x6
	(register, 0x10, 4) INT_ADD (register, 0x1c, 4) , (const, 0x6, 4)

0045de9c: lw gp,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dea0: b 0x0045c5dc
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)
	 ---  BRANCH (ram, 0x45c5dc, 4)

0045dea4: _addiu s2,s2,0x4
	(register, 0x48, 4) INT_ADD (register, 0x48, 4) , (const, 0x4, 4)

0045dea8: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045deac: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045deb0: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045deb4: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045deb8: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045debc: li a2,0x28f
	(register, 0x18, 4) COPY (const, 0x28f, 4)

0045dec0: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045dec4: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45decc, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a98, 4)
	 ---  CALLIND (register, 0x80, 4)

0045dec8: _addiu a0,a0,0x7a98
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a98, 4)

0045decc: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ded0: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ded4: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045ded8: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045dedc: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045dee0: li a2,0x285
	(register, 0x18, 4) COPY (const, 0x285, 4)

0045dee4: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045dee8: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45def0, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a7c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045deec: _addiu a0,a0,0x7a7c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a7c, 4)

0045def0: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045def4: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045def8: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045defc: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df00: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045df04: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045df08: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45df10, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b20, 4)
	 ---  CALLIND (register, 0x80, 4)

0045df0c: _addiu a0,a0,0x7b20
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b20, 4)

0045df10: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df14: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df18: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df1c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df20: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045df24: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045df28: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45df30, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b0c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045df2c: _addiu a0,a0,0x7b0c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7b0c, 4)

0045df30: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df34: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df38: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df3c: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df40: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045df44: li a2,0x277
	(register, 0x18, 4) COPY (const, 0x277, 4)

0045df48: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045df4c: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45df54, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a54, 4)
	 ---  CALLIND (register, 0x80, 4)

0045df50: _addiu a0,a0,0x7a54
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a54, 4)

0045df54: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df58: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df5c: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df60: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df64: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045df68: li a2,0x217
	(register, 0x18, 4) COPY (const, 0x217, 4)

0045df6c: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045df70: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45df78, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a3c, 4)
	 ---  CALLIND (register, 0x80, 4)

0045df74: _addiu a0,a0,0x7a3c
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7a3c, 4)

0045df78: lw a3,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x1c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df7c: lw a1,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df80: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df84: lw t9,-0x7ea0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8160, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0045df88: addiu a3,a3,0x7b3c
	(register, 0x1c, 4) INT_ADD (register, 0x1c, 4) , (const, 0x7b3c, 4)

0045df8c: addiu a1,a1,0x79f4
	(register, 0x14, 4) INT_ADD (register, 0x14, 4) , (const, 0x79f4, 4)

0045df90: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x45df98, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7ae8, 4)
	 ---  CALLIND (register, 0x80, 4)

0045df94: _addiu a0,a0,0x7ae8
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x7ae8, 4)

