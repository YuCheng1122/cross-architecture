Function: killer_kill_by_port
Address: 0040d13c
P-code:

0040d13c: addiu sp,sp,-0x2288
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffdd78, 4)

0040d140: sw ra,0x2284(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2284, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

0040d144: sw s8,0x2280(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2280, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x78, 4)

0040d148: sw s0,0x227c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x227c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

0040d14c: or s8,sp,zero
	(register, 0x78, 4) INT_OR (register, 0x74, 4) , (const, 0x0, 4)

0040d150: or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040d154: sh v0,0x2288(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2288, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xa, 2)

0040d158: addiu v1,s8,0x50
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040d15c: li v0,0x1000
	(register, 0x8, 4) COPY (const, 0x1000, 4)

0040d160: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d164: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d168: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d16c: jal 0x0041cb28
	(register, 0x7c, 4) COPY (const, 0x40d174, 4)
	 ---  CALL (ram, 0x41cb28, 4)

0040d170: _nop

0040d174: addiu v1,s8,0x1050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d178: li v0,0x1000
	(register, 0x8, 4) COPY (const, 0x1000, 4)

0040d17c: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d180: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d184: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d188: jal 0x0041cb28
	(register, 0x7c, 4) COPY (const, 0x40d190, 4)
	 ---  CALL (ram, 0x41cb28, 4)

0040d18c: _nop

0040d190: addiu v1,s8,0x2050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d194: li v0,0x201
	(register, 0x8, 4) COPY (const, 0x201, 4)

0040d198: or a2,v0,zero
	(register, 0x18, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d19c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d1a0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d1a4: jal 0x0041cb28
	(register, 0x7c, 4) COPY (const, 0x40d1ac, 4)
	 ---  CALL (ram, 0x41cb28, 4)

0040d1a8: _nop

0040d1ac: sw zero,0x28(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1b0: sw zero,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1b4: sw zero,0x2254(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2254, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1b8: sw zero,0x2258(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2258, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1bc: sw zero,0x225c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x225c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1c0: sw zero,0x2260(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2260, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1c4: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040d1c8: sw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d1cc: sw zero,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d1d0: lhu v0,0x2288(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2288, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x3300, 2) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x3300, 2)

0040d1d4: nop

0040d1d8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d1dc: jal 0x004222a8
	(register, 0x7c, 4) COPY (const, 0x40d1e4, 4)
	 ---  CALL (ram, 0x4222a8, 4)

0040d1e0: _nop

0040d1e4: addiu v1,s8,0x2264
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2264, 4)

0040d1e8: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d1ec: li a1,0x10
	(register, 0x14, 4) COPY (const, 0x10, 4)

0040d1f0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d1f4: jal 0x004113a0
	(register, 0x7c, 4) COPY (const, 0x40d1fc, 4)
	 ---  CALL (ram, 0x4113a0, 4)

0040d1f8: _nop

0040d1fc: addiu v0,s8,0x2264
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2264, 4)

0040d200: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d204: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d20c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d208: _nop

0040d20c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d210: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

0040d214: bne v1,v0,0x0040d248
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d248, 4) , (unique, 0x1700, 1)

0040d218: _nop

0040d21c: lb v0,0x2264(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2264, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d220: nop

0040d224: sb v0,0x2266(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2266, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d228: lb v0,0x2265(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2265, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d22c: nop

0040d230: sb v0,0x2267(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2267, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d234: sb zero,0x2268(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2268, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d238: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0040d23c: sb v0,0x2264(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2264, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d240: li v0,0x30
	(register, 0x8, 4) COPY (const, 0x30, 4)

0040d244: sb v0,0x2265(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2265, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d248: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d24c: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40d254, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040d250: _nop

0040d254: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040d258: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40d260, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040d25c: _nop

0040d260: li a0,0x9
	(register, 0x10, 4) COPY (const, 0x9, 4)

0040d264: jal 0x004108dc
	(register, 0x7c, 4) COPY (const, 0x40d26c, 4)
	 ---  CALL (ram, 0x4108dc, 4)

0040d268: _nop

0040d26c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d270: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040d274: addiu a0,v0,0x3250
	(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (const, 0x3250, 4)

0040d278: jal 0x0041f878
	(register, 0x7c, 4) COPY (const, 0x40d280, 4)
	 ---  CALL (ram, 0x41f878, 4)

0040d27c: _nop

0040d280: sw v0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d284: lw v1,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d288: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040d28c: bne v1,v0,0x0040d5e8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d5e8, 4) , (unique, 0x1700, 1)

0040d290: _nop

0040d294: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d298: b 0x0040daac
	 ---  BRANCH (ram, 0x40daac, 4)

0040d29c: _nop

0040d2a0: sw zero,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d2a4: sw zero,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d2a8: b 0x0040d2c0
	 ---  BRANCH (ram, 0x40d2c0, 4)

0040d2ac: _nop

0040d2b0: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d2b4: nop

0040d2b8: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d2bc: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d2c0: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d2c4: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d2c8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d2cc: lb v0,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d2d0: nop

0040d2d4: beq v0,zero,0x0040d2f8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d2f8, 4) , (unique, 0x1200, 1)

0040d2d8: _nop

0040d2dc: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d2e0: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d2e4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d2e8: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d2ec: li v0,0x3a
	(register, 0x8, 4) COPY (const, 0x3a, 4)

0040d2f0: bne v1,v0,0x0040d2b0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d2b0, 4) , (unique, 0x1700, 1)

0040d2f4: _nop

0040d2f8: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d2fc: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d300: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d304: lb v0,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d308: nop

0040d30c: bne v0,zero,0x0040d31c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d31c, 4) , (unique, 0x1700, 1)

0040d310: _nop

0040d314: b 0x0040d5e8
	 ---  BRANCH (ram, 0x40d5e8, 4)

0040d318: _nop

0040d31c: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d320: nop

0040d324: addiu v0,v0,0x2
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)

0040d328: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d32c: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d330: nop

0040d334: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d338: b 0x0040d350
	 ---  BRANCH (ram, 0x40d350, 4)

0040d33c: _nop

0040d340: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d344: nop

0040d348: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d34c: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d350: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d354: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d358: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d35c: lb v0,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d360: nop

0040d364: beq v0,zero,0x0040d388
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d388, 4) , (unique, 0x1200, 1)

0040d368: _nop

0040d36c: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d370: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d374: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d378: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d37c: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0040d380: bne v1,v0,0x0040d340
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d340, 4) , (unique, 0x1700, 1)

0040d384: _nop

0040d388: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d38c: nop

0040d390: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d394: sw v1,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040d398: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d39c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d3a0: sb zero,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d3a4: addiu v1,s8,0x2050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d3a8: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d3ac: nop

0040d3b0: addu s0,v1,v0
	(register, 0x40, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d3b4: addiu v1,s8,0x2050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d3b8: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d3bc: nop

0040d3c0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d3c4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d3c8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d3d0, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d3cc: _nop

0040d3d0: addiu v1,s8,0x2264
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2264, 4)

0040d3d4: or a2,v1,zero
	(register, 0x18, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d3d8: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d3dc: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040d3e0: jal 0x004116b0
	(register, 0x7c, 4) COPY (const, 0x40d3e8, 4)
	 ---  CALL (ram, 0x4116b0, 4)

0040d3e4: _nop

0040d3e8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d3ec: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040d3f0: beq v1,v0,0x0040d5e8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d5e8, 4) , (unique, 0x1200, 1)

0040d3f4: _nop

0040d3f8: sw zero,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 4)

0040d3fc: sb zero,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d400: sb zero,0x25(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x25, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d404: b 0x0040d4c4
	 ---  BRANCH (ram, 0x40d4c4, 4)

0040d408: _nop

0040d40c: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d410: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d414: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d418: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d41c: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0040d420: beq v1,v0,0x0040d444
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d444, 4) , (unique, 0x1200, 1)

0040d424: _nop

0040d428: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d42c: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d430: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d434: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d438: li v0,0x9
	(register, 0x8, 4) COPY (const, 0x9, 4)

0040d43c: bne v1,v0,0x0040d454
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d454, 4) , (unique, 0x1700, 1)

0040d440: _nop

0040d444: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d448: sb v0,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d44c: b 0x0040d4c4
	 ---  BRANCH (ram, 0x40d4c4, 4)

0040d450: _nop

0040d454: lb v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d458: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d45c: bne v1,v0,0x0040d474
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d474, 4) , (unique, 0x1700, 1)

0040d460: _nop

0040d464: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d468: nop

0040d46c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d470: sw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d474: lb v1,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d478: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d47c: bne v1,v0,0x0040d4c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d4c0, 4) , (unique, 0x1700, 1)

0040d480: _nop

0040d484: lw v1,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d488: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d48c: bne v1,v0,0x0040d4c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d4c0, 4) , (unique, 0x1700, 1)

0040d490: _nop

0040d494: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d498: nop

0040d49c: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d4a0: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d4a4: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d4a8: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d4ac: li v0,0x41
	(register, 0x8, 4) COPY (const, 0x41, 4)

0040d4b0: bne v1,v0,0x0040d4c0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d4c0, 4) , (unique, 0x1700, 1)

0040d4b4: _nop

0040d4b8: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d4bc: sb v0,0x25(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x25, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xb, 1)

0040d4c0: sb zero,0x24(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d4c4: lw v0,0x20(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d4c8: nop

0040d4cc: slti v0,v0,0x7
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x7, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040d4d0: beq v0,zero,0x0040d504
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d504, 4) , (unique, 0x1200, 1)

0040d4d4: _nop

0040d4d8: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d4dc: nop

0040d4e0: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d4e4: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d4e8: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d4ec: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d4f0: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d4f4: lb v0,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d4f8: nop

0040d4fc: bne v0,zero,0x0040d40c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d40c, 4) , (unique, 0x1700, 1)

0040d500: _nop

0040d504: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d508: nop

0040d50c: sw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d510: lb v0,0x25(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x25, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d514: nop

0040d518: bne v0,zero,0x0040d538
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d538, 4) , (unique, 0x1700, 1)

0040d51c: _nop

0040d520: b 0x0040d5e8
	 ---  BRANCH (ram, 0x40d5e8, 4)

0040d524: _nop

0040d528: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d52c: nop

0040d530: addiu v0,v0,0x1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d534: sw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d538: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d53c: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d540: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d544: lb v0,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d548: nop

0040d54c: beq v0,zero,0x0040d570
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d570, 4) , (unique, 0x1200, 1)

0040d550: _nop

0040d554: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d558: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d55c: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d560: lb v1,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_SEXT (unique, 0x2d00, 1)

0040d564: li v0,0x20
	(register, 0x8, 4) COPY (const, 0x20, 4)

0040d568: bne v1,v0,0x0040d528
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d528, 4) , (unique, 0x1700, 1)

0040d56c: _nop

0040d570: lw v0,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d574: nop

0040d578: addiu v1,v0,0x1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)

0040d57c: sw v1,0x1c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

0040d580: addiu v1,s8,0x18
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)

0040d584: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d588: sb zero,0x2038(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x2038, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (const, 0x0, 1)

0040d58c: addiu v1,s8,0x2050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d590: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d594: nop

0040d598: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d59c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d5a0: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d5a8, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d5a4: _nop

0040d5a8: slti v0,v0,0x10
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x10, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040d5ac: bne v0,zero,0x0040d5bc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d5bc, 4) , (unique, 0x1700, 1)

0040d5b0: _nop

0040d5b4: b 0x0040d5e8
	 ---  BRANCH (ram, 0x40d5e8, 4)

0040d5b8: _nop

0040d5bc: addiu v1,s8,0x2050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d5c0: lw v0,0x34(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d5c4: nop

0040d5c8: addu v0,v1,v0
	(register, 0x8, 4) INT_ADD (register, 0xc, 4) , (register, 0x8, 4)

0040d5cc: addiu v1,s8,0x2254
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x2254, 4)

0040d5d0: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d5d4: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d5d8: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d5e0, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d5dc: _nop

0040d5e0: b 0x0040d608
	 ---  BRANCH (ram, 0x40d608, 4)

0040d5e4: _nop

0040d5e8: addiu v0,s8,0x2050
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2050, 4)

0040d5ec: lw a2,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x18, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d5f0: li a1,0x200
	(register, 0x14, 4) COPY (const, 0x200, 4)

0040d5f4: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d5f8: jal 0x00411934
	(register, 0x7c, 4) COPY (const, 0x40d600, 4)
	 ---  CALL (ram, 0x411934, 4)

0040d5fc: _nop

0040d600: bne v0,zero,0x0040d2a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d2a0, 4) , (unique, 0x1700, 1)

0040d604: _nop

0040d608: lw a0,0x2c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d60c: jal 0x0041f008
	(register, 0x7c, 4) COPY (const, 0x40d614, 4)
	 ---  CALL (ram, 0x41f008, 4)

0040d610: _nop

0040d614: addiu v0,s8,0x2254
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x2254, 4)

0040d618: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d61c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d624, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d620: _nop

0040d624: bne v0,zero,0x0040d65c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d65c, 4) , (unique, 0x1700, 1)

0040d628: _nop

0040d62c: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d630: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40d638, 4)
	 ---  CALL (ram, 0x410940, 4)

0040d634: _nop

0040d638: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040d63c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40d644, 4)
	 ---  CALL (ram, 0x410940, 4)

0040d640: _nop

0040d644: li a0,0x9
	(register, 0x10, 4) COPY (const, 0x9, 4)

0040d648: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40d650, 4)
	 ---  CALL (ram, 0x410940, 4)

0040d64c: _nop

0040d650: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d654: b 0x0040daac
	 ---  BRANCH (ram, 0x40daac, 4)

0040d658: _nop

0040d65c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d660: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d664: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d66c, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d668: _nop

0040d66c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d670: jal 0x00400410
	(register, 0x7c, 4) COPY (const, 0x40d678, 4)
	 ---  CALL (ram, 0x400410, 4)

0040d674: _nop

0040d678: sw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d67c: lw v0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d680: nop

0040d684: beq v0,zero,0x0040da6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40da6c, 4) , (unique, 0x1200, 1)

0040d688: _nop

0040d68c: b 0x0040da30
	 ---  BRANCH (ram, 0x40da30, 4)

0040d690: _nop

0040d694: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d698: nop

0040d69c: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

0040d6a0: sw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d6a4: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d6a8: nop

0040d6ac: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d6b0: nop

0040d6b4: slti v0,v0,0x30
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x30, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040d6b8: bne v0,zero,0x0040da30
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40da30, 4) , (unique, 0x1700, 1)

0040d6bc: _nop

0040d6c0: lw v0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d6c4: nop

0040d6c8: lb v0,0x0(v0)
	(unique, 0x100, 4) INT_ADD (register, 0x8, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2d00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_SEXT (unique, 0x2d00, 1)

0040d6cc: nop

0040d6d0: slti v0,v0,0x3a
	(unique, 0x5180, 1) INT_SLESS (register, 0x8, 4) , (const, 0x3a, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5180, 1)

0040d6d4: bne v0,zero,0x0040d6e4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d6e4, 4) , (unique, 0x1700, 1)

0040d6d8: _nop

0040d6dc: b 0x0040da30
	 ---  BRANCH (ram, 0x40da30, 4)

0040d6e0: _nop

0040d6e4: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d6e8: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d6ec: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d6f4, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d6f0: _nop

0040d6f4: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d6f8: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d6fc: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d704, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d700: _nop

0040d704: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d708: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d710, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d70c: _nop

0040d710: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d714: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d718: nop

0040d71c: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d720: lw a1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d724: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d728: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d730, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d72c: _nop

0040d730: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d734: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d73c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d738: _nop

0040d73c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d740: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d744: nop

0040d748: addu s0,v0,v1
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d74c: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d750: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040d754: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d75c, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d758: _nop

0040d75c: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d760: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040d764: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d76c, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d768: _nop

0040d76c: addiu v1,s8,0x1050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d770: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040d774: li a2,0x1000
	(register, 0x18, 4) COPY (const, 0x1000, 4)

0040d778: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d77c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d780: jal 0x0041fb48
	(register, 0x7c, 4) COPY (const, 0x40d788, 4)
	 ---  CALL (ram, 0x41fb48, 4)

0040d784: _nop

0040d788: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d78c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040d790: bne v1,v0,0x0040d7a0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d7a0, 4) , (unique, 0x1700, 1)

0040d794: _nop

0040d798: b 0x0040da30
	 ---  BRANCH (ram, 0x40da30, 4)

0040d79c: _nop

0040d7a0: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d7a4: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d7a8: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d7b0, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d7ac: _nop

0040d7b0: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d7b4: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d7b8: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d7c0, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d7bc: _nop

0040d7c0: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d7c4: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d7cc, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d7c8: _nop

0040d7cc: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d7d0: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d7d4: nop

0040d7d8: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d7dc: lw a1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d7e0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d7e4: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d7ec, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d7e8: _nop

0040d7ec: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d7f0: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d7f8, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d7f4: _nop

0040d7f8: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d7fc: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d800: nop

0040d804: addu s0,v0,v1
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d808: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d80c: li a0,0x9
	(register, 0x10, 4) COPY (const, 0x9, 4)

0040d810: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d818, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d814: _nop

0040d818: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d81c: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040d820: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d828, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d824: _nop

0040d828: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040d82c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d830: jal 0x00400410
	(register, 0x7c, 4) COPY (const, 0x40d838, 4)
	 ---  CALL (ram, 0x400410, 4)

0040d834: _nop

0040d838: sw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d83c: lw v0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d840: nop

0040d844: beq v0,zero,0x0040da30
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40da30, 4) , (unique, 0x1200, 1)

0040d848: _nop

0040d84c: b 0x0040d9f4
	 ---  BRANCH (ram, 0x40d9f4, 4)

0040d850: _nop

0040d854: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d858: nop

0040d85c: addiu v0,v0,0xb
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xb, 4)

0040d860: sw v0,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d864: addiu v0,s8,0x1050
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d868: li a1,0x1000
	(register, 0x14, 4) COPY (const, 0x1000, 4)

0040d86c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d870: jal 0x00410fe8
	(register, 0x7c, 4) COPY (const, 0x40d878, 4)
	 ---  CALL (ram, 0x410fe8, 4)

0040d874: _nop

0040d878: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d87c: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040d880: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d888, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d884: _nop

0040d888: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d88c: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d890: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d898, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d894: _nop

0040d898: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d89c: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d8a4, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d8a0: _nop

0040d8a4: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d8a8: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d8ac: nop

0040d8b0: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d8b4: lw a1,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d8b8: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d8bc: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d8c4, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d8c0: _nop

0040d8c4: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d8c8: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d8d0, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d8cc: _nop

0040d8d0: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d8d4: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d8d8: nop

0040d8dc: addu s0,v0,v1
	(register, 0x40, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d8e0: or a1,zero,zero
	(register, 0x14, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

0040d8e4: li a0,0x9
	(register, 0x10, 4) COPY (const, 0x9, 4)

0040d8e8: jal 0x004109a4
	(register, 0x7c, 4) COPY (const, 0x40d8f0, 4)
	 ---  CALL (ram, 0x4109a4, 4)

0040d8ec: _nop

0040d8f0: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d8f4: or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

0040d8f8: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d900, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d8fc: _nop

0040d900: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d904: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d90c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d908: _nop

0040d90c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d910: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d914: nop

0040d918: addu v1,v0,v1
	(register, 0xc, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d91c: lui v0,0x48
	(register, 0x8, 4) INT_LEFT (const, 0x48, 4) , (const, 0x10, 4)

0040d920: addiu a1,v0,0x3260
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0x3260, 4)

0040d924: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d928: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d930, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d92c: _nop

0040d930: lw a0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d934: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d93c, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d938: _nop

0040d93c: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d940: lw v0,0x30(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d944: nop

0040d948: addu v0,v0,v1
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xc, 4)

0040d94c: lw a1,0x4c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x4c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d950: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d954: jal 0x00410eec
	(register, 0x7c, 4) COPY (const, 0x40d95c, 4)
	 ---  CALL (ram, 0x410eec, 4)

0040d958: _nop

0040d95c: addiu v1,s8,0x1050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d960: addiu v0,s8,0x50
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x50, 4)

0040d964: li a2,0x1000
	(register, 0x18, 4) COPY (const, 0x1000, 4)

0040d968: or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d96c: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d970: jal 0x0041fb48
	(register, 0x7c, 4) COPY (const, 0x40d978, 4)
	 ---  CALL (ram, 0x41fb48, 4)

0040d974: _nop

0040d978: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d97c: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040d980: bne v1,v0,0x0040d990
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d990, 4) , (unique, 0x1700, 1)

0040d984: _nop

0040d988: b 0x0040d9f4
	 ---  BRANCH (ram, 0x40d9f4, 4)

0040d98c: _nop

0040d990: addiu v0,s8,0x1050
	(register, 0x8, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d994: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d998: jal 0x00410cd0
	(register, 0x7c, 4) COPY (const, 0x40d9a0, 4)
	 ---  CALL (ram, 0x410cd0, 4)

0040d99c: _nop

0040d9a0: addiu a0,s8,0x2254
	(register, 0x10, 4) INT_ADD (register, 0x78, 4) , (const, 0x2254, 4)

0040d9a4: addiu v1,s8,0x1050
	(register, 0xc, 4) INT_ADD (register, 0x78, 4) , (const, 0x1050, 4)

0040d9a8: or a2,a0,zero
	(register, 0x18, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

0040d9ac: or a1,v0,zero
	(register, 0x14, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d9b0: or a0,v1,zero
	(register, 0x10, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

0040d9b4: jal 0x004116b0
	(register, 0x7c, 4) COPY (const, 0x40d9bc, 4)
	 ---  CALL (ram, 0x4116b0, 4)

0040d9b8: _nop

0040d9bc: or v1,v0,zero
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d9c0: li v0,-0x1
	(register, 0x8, 4) COPY (const, 0xffffffff, 4)

0040d9c4: beq v1,v0,0x0040d9f4
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x40d9f4, 4) , (unique, 0x1200, 1)

0040d9c8: _nop

0040d9cc: li a1,0xa
	(register, 0x14, 4) COPY (const, 0xa, 4)

0040d9d0: lw a0,0x40(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x40, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d9d4: jal 0x00411058
	(register, 0x7c, 4) COPY (const, 0x40d9dc, 4)
	 ---  CALL (ram, 0x411058, 4)

0040d9d8: _nop

0040d9dc: li a1,0x9
	(register, 0x14, 4) COPY (const, 0x9, 4)

0040d9e0: or a0,v0,zero
	(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x0, 4)

0040d9e4: jal 0x00400390
	(register, 0x7c, 4) COPY (const, 0x40d9ec, 4)
	 ---  CALL (ram, 0x400390, 4)

0040d9e8: _nop

0040d9ec: li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

0040d9f0: sw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040d9f4: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040d9f8: jal 0x00400370
	(register, 0x7c, 4) COPY (const, 0x40da00, 4)
	 ---  CALL (ram, 0x400370, 4)

0040d9fc: _nop

0040da00: sw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040da04: lw v0,0x48(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x48, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da08: nop

0040da0c: beq v0,zero,0x0040da24
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40da24, 4) , (unique, 0x1200, 1)

0040da10: _nop

0040da14: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da18: nop

0040da1c: beq v0,zero,0x0040d854
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d854, 4) , (unique, 0x1200, 1)

0040da20: _nop

0040da24: lw a0,0x44(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x44, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da28: jal 0x0041d578
	(register, 0x7c, 4) COPY (const, 0x40da30, 4)
	 ---  CALL (ram, 0x41d578, 4)

0040da2c: _nop

0040da30: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da34: jal 0x00400370
	(register, 0x7c, 4) COPY (const, 0x40da3c, 4)
	 ---  CALL (ram, 0x400370, 4)

0040da38: _nop

0040da3c: sw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

0040da40: lw v0,0x3c(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da44: nop

0040da48: beq v0,zero,0x0040da60
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40da60, 4) , (unique, 0x1200, 1)

0040da4c: _nop

0040da50: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da54: nop

0040da58: beq v0,zero,0x0040d694
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x40d694, 4) , (unique, 0x1200, 1)

0040da5c: _nop

0040da60: lw a0,0x38(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040da64: jal 0x0041d578
	(register, 0x7c, 4) COPY (const, 0x40da6c, 4)
	 ---  CALL (ram, 0x41d578, 4)

0040da68: _nop

0040da6c: li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

0040da70: jal 0x0041eed8
	(register, 0x7c, 4) COPY (const, 0x40da78, 4)
	 ---  CALL (ram, 0x41eed8, 4)

0040da74: _nop

0040da78: li a0,0x6
	(register, 0x10, 4) COPY (const, 0x6, 4)

0040da7c: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40da84, 4)
	 ---  CALL (ram, 0x410940, 4)

0040da80: _nop

0040da84: li a0,0x7
	(register, 0x10, 4) COPY (const, 0x7, 4)

0040da88: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40da90, 4)
	 ---  CALL (ram, 0x410940, 4)

0040da8c: _nop

0040da90: li a0,0x9
	(register, 0x10, 4) COPY (const, 0x9, 4)

0040da94: jal 0x00410940
	(register, 0x7c, 4) COPY (const, 0x40da9c, 4)
	 ---  CALL (ram, 0x410940, 4)

0040da98: _nop

0040da9c: lw v0,0x18(s8)
	(unique, 0x100, 4) INT_ADD (register, 0x78, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040daa0: nop

0040daa4: sll v0,v0,0x18
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x18, 4)

0040daa8: sra v0,v0,0x18
	(register, 0x8, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x18, 4)

0040daac: or sp,s8,zero
	(register, 0x74, 4) INT_OR (register, 0x78, 4) , (const, 0x0, 4)

0040dab0: lw ra,0x2284(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2284, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040dab4: lw s8,0x2280(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2280, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x78, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040dab8: lw s0,0x227c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x227c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

0040dabc: addiu sp,sp,0x2288
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x2288, 4)

0040dac0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	 ---  RETURN (register, 0x80, 4)

0040dac4: _nop

