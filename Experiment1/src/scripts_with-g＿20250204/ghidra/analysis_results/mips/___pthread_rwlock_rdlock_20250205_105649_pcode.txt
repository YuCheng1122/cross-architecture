Function: ___pthread_rwlock_rdlock
Address: 00465a30
P-code:

00465a30: lui gp,0x5
	(register, 0x70, 4) INT_LEFT (const, 0x5, 4) , (const, 0x10, 4)

00465a34: addiu gp,gp,0x5430
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (const, 0x5430, 4)

00465a38: addu gp,gp,t9
	(register, 0x70, 4) INT_ADD (register, 0x70, 4) , (register, 0x64, 4)

00465a3c: addiu sp,sp,-0x40
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0xffffffc0, 4)

00465a40: sw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x40, 4)

00465a44: sw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x70, 4)

00465a48: sw ra,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x7c, 4)

00465a4c: sw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x58, 4)

00465a50: sw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x54, 4)

00465a54: sw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x50, 4)

00465a58: sw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4c, 4)

00465a5c: sw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x48, 4)

00465a60: sw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x44, 4)

00465a64: or s0,a0,zero
	(register, 0x40, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00465a68: lw a0,0x1c(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465a6c: rdhwr v1,HW_ULR
	(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)

00465a70: lw v0,-0x7478(v1)
	(unique, 0x100, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465a74: nop

00465a78: beq a0,v0,0x00465ac0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0x8, 4) COPY (const, 0x2d, 4)
	 ---  CBRANCH (ram, 0x465ac0, 4) , (unique, 0x1200, 1)

00465a7c: _li v0,0x2d
	(register, 0x8, 4) COPY (const, 0x2d, 4)

00465a80: lbu v1,0x1b(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1b, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00465a84: li v0,0x2
	(register, 0x8, 4) COPY (const, 0x2, 4)

00465a88: beq v1,v0,0x00465ae8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
	 ---  CBRANCH (ram, 0x465ae8, 4) , (unique, 0x1200, 1)

00465a8c: _nop

00465a90: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00465a94: ll v0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465a98: addiu at,v0,0x8
	(register, 0x4, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)

00465a9c: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465aa0: beq at,zero,0x00465a94
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)
	 ---  CBRANCH (ram, 0x465a94, 4) , (unique, 0x1200, 1)

00465aa4: _addiu v0,v0,0x8
	(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x8, 4)

00465aa8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00465aac: bltz v0,0x00465c48
	(unique, 0x1600, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465c48, 4) , (unique, 0x1600, 1)

00465ab0: _andi v1,v0,0x1
	(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)

00465ab4: bne v1,zero,0x00465b90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465b90, 4) , (unique, 0x1700, 1)

00465ab8: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00465abc: or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465ac0: lw ra,0x3c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x3c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x7c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ac4: lw s6,0x38(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x38, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x58, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ac8: lw s5,0x34(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x34, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x54, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465acc: lw s4,0x30(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x30, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ad0: lw s3,0x2c(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x2c, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x4c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ad4: lw s2,0x28(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x28, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ad8: lw s1,0x24(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x24, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465adc: lw s0,0x20(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x20, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x40, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ae0: jr ra
	(unique, 0xc80, 4) INT_AND (register, 0x7c, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x7c, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)
	 ---  RETURN (register, 0x80, 4)

00465ae4: _addiu sp,sp,0x40
	(register, 0x74, 4) INT_ADD (register, 0x74, 4) , (const, 0x40, 4)

00465ae8: lw a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465aec: lw s2,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x48, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465af0: li s4,0x2
	(register, 0x50, 4) COPY (const, 0x2, 4)

00465af4: li s1,0x91
	(register, 0x44, 4) COPY (const, 0x91, 4)

00465af8: andi v0,a1,0x3
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)

00465afc: bne v0,s4,0x00465a90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x50, 4)
	(register, 0x8, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x3, 4)
	 ---  CBRANCH (ram, 0x465a90, 4) , (unique, 0x1700, 1)

00465b00: _srl v0,a1,0x3
	(register, 0x8, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x3, 4)

00465b04: beq v0,zero,0x00465a90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x4, 4)
	 ---  CBRANCH (ram, 0x465a90, 4) , (unique, 0x1200, 1)

00465b08: _ori a0,a1,0x4
	(register, 0x10, 4) INT_OR (register, 0x14, 4) , (const, 0x4, 4)

00465b0c: ll v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465b10: bne v1,a1,0x00465b28
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x14, 4)
	(register, 0x8, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465b28, 4) , (unique, 0x1700, 1)

00465b14: _li v0,0x0
	(register, 0x8, 4) COPY (const, 0x0, 4)

00465b18: or at,a0,zero
	(register, 0x4, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00465b1c: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465b20: beq at,zero,0x00465b0c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x8, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465b0c, 4) , (unique, 0x1200, 1)

00465b24: _li v0,0x1
	(register, 0x8, 4) COPY (const, 0x1, 4)

00465b28: li s3,0x4f
	(register, 0x4c, 4) COPY (const, 0x4f, 4)

00465b2c: bne v0,zero,0x00465b44
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465b44, 4) , (unique, 0x1700, 1)

00465b30: _or a1,v1,zero
	(register, 0x14, 4) INT_OR (register, 0xc, 4) , (const, 0x0, 4)

00465b34: b 0x00465afc
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)
	 ---  BRANCH (ram, 0x465afc, 4)

00465b38: _andi v0,a1,0x3
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x3, 4)

00465b3c: beq v0,s3,0x00465ac0
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x465ac0, 4) , (unique, 0x1200, 1)

00465b40: _nop

00465b44: lw a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465b48: nop

00465b4c: andi v0,a1,0x4
	(register, 0x8, 4) INT_AND (register, 0x14, 4) , (const, 0x4, 4)

00465b50: beq v0,zero,0x00465af8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465af8, 4) , (unique, 0x1200, 1)

00465b54: _or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465b58: lbu v0,0x1a(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)

00465b5c: nop

00465b60: sltu v0,zero,v0
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x8, 4)
	(register, 0x8, 4) INT_ZEXT (unique, 0x5380, 1)

00465b64: sll v0,v0,0x7
	(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x7, 4)

00465b68: sw v0,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x8, 4)

00465b6c: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465b70: or t9,s2,zero
	(register, 0x64, 4) INT_OR (register, 0x48, 4) , (const, 0x0, 4)

00465b74: bal 0x004654f0
	(register, 0x7c, 4) COPY (const, 0x465b7c, 4)
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4654f0, 4)

00465b78: _or a0,s0,zero
	(register, 0x10, 4) INT_OR (register, 0x40, 4) , (const, 0x0, 4)

00465b7c: lw gp,0x18(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x18, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x70, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465b80: bne v0,s1,0x00465b3c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x44, 4)
	 ---  CBRANCH (ram, 0x465b3c, 4) , (unique, 0x1700, 1)

00465b84: _nop

00465b88: b 0x00465ac0
	 ---  BRANCH (ram, 0x465ac0, 4)

00465b8c: _nop

00465b90: andi a0,v0,0x3
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)

00465b94: bne a0,v1,0x00465c78
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0xc, 4)
	(register, 0x18, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465c78, 4) , (unique, 0x1700, 1)

00465b98: _xori a2,v0,0x1
	(register, 0x18, 4) INT_XOR (register, 0x8, 4) , (const, 0x1, 4)

00465b9c: ll a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ba0: bne a1,v0,0x00465bbc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x10, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465bbc, 4) , (unique, 0x1700, 1)

00465ba4: _li a0,0x0
	(register, 0x10, 4) COPY (const, 0x0, 4)

00465ba8: or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00465bac: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465bb0: beq at,zero,0x00465b9c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465b9c, 4) , (unique, 0x1200, 1)

00465bb4: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00465bb8: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00465bbc: beq a0,zero,0x00465b90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465b90, 4) , (unique, 0x1200, 1)

00465bc0: _or v0,a1,zero
	(register, 0x8, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00465bc4: addiu a0,s0,0x8
	(register, 0x10, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00465bc8: ll v0,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465bcc: li at,0x0
	(register, 0x4, 4) COPY (const, 0x0, 4)

00465bd0: sc at,0x0(a0)
	(unique, 0x100, 4) INT_ADD (register, 0x10, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465bd4: beq at,zero,0x00465bc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465bc8, 4) , (unique, 0x1200, 1)

00465bd8: _nop

00465bdc: andi v0,v0,0x2
	(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

00465be0: beq v0,zero,0x00465abc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)
	 ---  CBRANCH (ram, 0x465abc, 4) , (unique, 0x1200, 1)

00465be4: _lui a2,0x7fff
	(register, 0x18, 4) INT_LEFT (const, 0x7fff, 4) , (const, 0x10, 4)

00465be8: lbu a1,0x1a(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x2f00, 1)

00465bec: nop

00465bf0: sltu a1,zero,a1
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0x14, 4)
	(register, 0x14, 4) INT_ZEXT (unique, 0x5380, 1)

00465bf4: sll a1,a1,0x7
	(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x7, 4)

00465bf8: xori a1,a1,0x81
	(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x81, 4)

00465bfc: ori a2,a2,0xffff
	(register, 0x18, 4) INT_OR (register, 0x18, 4) , (const, 0xffff, 4)

00465c00: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465c04: li v0,0x108e
	(register, 0x8, 4) COPY (const, 0x108e, 4)

00465c08: syscall
	 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)

00465c0c: beq a3,zero,0x00465c1c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x1c, 4) , (const, 0x0, 4)
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)
	 ---  CBRANCH (ram, 0x465c1c, 4) , (unique, 0x1200, 1)

00465c10: _sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00465c14: subu v0,zero,v0
	(register, 0x8, 4) INT_SUB (const, 0x0, 4) , (register, 0x8, 4)

00465c18: sltiu v1,v0,-0xfff
	(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0xfffff001, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5280, 1)

00465c1c: bne v1,zero,0x00465abc
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)
	 ---  CBRANCH (ram, 0x465abc, 4) , (unique, 0x1700, 1)

00465c20: _li v1,-0x16
	(register, 0xc, 4) COPY (const, 0xffffffea, 4)

00465c24: beq v0,v1,0x00465abc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)
	 ---  CBRANCH (ram, 0x465abc, 4) , (unique, 0x1200, 1)

00465c28: _li v1,-0xe
	(register, 0xc, 4) COPY (const, 0xfffffff2, 4)

00465c2c: beq v0,v1,0x00465abc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	 ---  CBRANCH (ram, 0x465abc, 4) , (unique, 0x1200, 1)

00465c30: _nop

00465c34: lw a0,-0x7fa8(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8058, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465c38: lw t9,-0x7e6c(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8194, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x64, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465c3c: nop

00465c40: jalr t9
	(unique, 0xc80, 4) INT_AND (register, 0x64, 4) , (const, 0x1, 4)
	(register, 0x3f00, 1) INT_NOTEQUAL (unique, 0xc80, 4) , (const, 0x0, 4)
	(unique, 0xe00, 4) INT_2COMP (const, 0x2, 4)
	(unique, 0xe00, 4) INT_AND (unique, 0xe00, 4) , (register, 0x64, 4)
	(register, 0x80, 4) COPY (unique, 0xe00, 4)
	(register, 0x7c, 4) COPY (const, 0x465c48, 4)
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)
	 ---  CALLIND (register, 0x80, 4)

00465c44: _addiu a0,a0,0x3910
	(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x3910, 4)

00465c48: addiu a1,v0,-0x8
	(register, 0x14, 4) INT_ADD (register, 0x8, 4) , (const, 0xfffffff8, 4)

00465c4c: ll a0,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x10, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465c50: bne a0,v0,0x00465c68
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)
	(register, 0xc, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465c68, 4) , (unique, 0x1700, 1)

00465c54: _li v1,0x0
	(register, 0xc, 4) COPY (const, 0x0, 4)

00465c58: or at,a1,zero
	(register, 0x4, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00465c5c: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465c60: beq at,zero,0x00465c4c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0xc, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465c4c, 4) , (unique, 0x1200, 1)

00465c64: _li v1,0x1
	(register, 0xc, 4) COPY (const, 0x1, 4)

00465c68: beq v1,zero,0x00465aac
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465aac, 4) , (unique, 0x1200, 1)

00465c6c: _or v0,a0,zero
	(register, 0x8, 4) INT_OR (register, 0x10, 4) , (const, 0x0, 4)

00465c70: b 0x00465ac0
	(register, 0x8, 4) COPY (const, 0xb, 4)
	 ---  BRANCH (ram, 0x465ac0, 4)

00465c74: _li v0,0xb
	(register, 0x8, 4) COPY (const, 0xb, 4)

00465c78: lw s4,-0x7ab0(gp)
	(unique, 0x100, 4) INT_ADD (register, 0x70, 4) , (const, 0xffff8550, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465c7c: or s1,zero,zero
	(register, 0x44, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465c80: addiu s5,s0,0x8
	(register, 0x54, 4) INT_ADD (register, 0x40, 4) , (const, 0x8, 4)

00465c84: li s6,0x3
	(register, 0x58, 4) COPY (const, 0x3, 4)

00465c88: li s3,0x91
	(register, 0x4c, 4) COPY (const, 0x91, 4)

00465c8c: li s2,0x4f
	(register, 0x48, 4) COPY (const, 0x4f, 4)

00465c90: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465c94: nop

00465c98: ori v1,v0,0x2
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00465c9c: beq v1,s6,0x00465cc8
	(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x58, 4)
	 ---  CBRANCH (ram, 0x465cc8, 4) , (unique, 0x1200, 1)

00465ca0: _nop

00465ca4: bne s1,zero,0x00465ac0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465ac0, 4) , (unique, 0x1700, 1)

00465ca8: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465cac: lw s1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x44, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465cb0: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00465cb4: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465cb8: nor s1,zero,s1
	(unique, 0x4280, 4) INT_OR (const, 0x0, 4) , (register, 0x44, 4)
	(register, 0x44, 4) INT_NEGATE (unique, 0x4280, 4)

00465cbc: ori v1,v0,0x2
	(register, 0xc, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00465cc0: bne v1,s6,0x00465ca4
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0xc, 4) , (register, 0x58, 4)
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465ca4, 4) , (unique, 0x1700, 1)

00465cc4: _andi s1,s1,0x1
	(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)

00465cc8: lbu v1,0x1a(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x1a, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(unique, 0x2f00, 1) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x2f00, 1)

00465ccc: andi a0,v0,0x2
	(register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)

00465cd0: sltu v1,zero,v1
	(unique, 0x5380, 1) INT_LESS (const, 0x0, 4) , (register, 0xc, 4)
	(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)

00465cd4: bne a0,zero,0x00465d00
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x7, 4)
	 ---  CBRANCH (ram, 0x465d00, 4) , (unique, 0x1700, 1)

00465cd8: _sll v1,v1,0x7
	(register, 0xc, 4) INT_LEFT (register, 0xc, 4) , (const, 0x7, 4)

00465cdc: ll a1,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465ce0: bne a1,v0,0x00465cf8
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
	(register, 0x10, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465cf8, 4) , (unique, 0x1700, 1)

00465ce4: _li a0,0x0
	(register, 0x10, 4) COPY (const, 0x0, 4)

00465ce8: li at,0x3
	(register, 0x4, 4) COPY (const, 0x3, 4)

00465cec: sc at,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465cf0: beq at,zero,0x00465cdc
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465cdc, 4) , (unique, 0x1200, 1)

00465cf4: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00465cf8: beq a0,zero,0x00465c90
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465c90, 4) , (unique, 0x1200, 1)

00465cfc: _nop

00465d00: sw v1,0x10(sp)
	(unique, 0x100, 4) INT_ADD (register, 0x74, 4) , (const, 0x10, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0xc, 4)

00465d04: or a3,zero,zero
	(register, 0x1c, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465d08: or a2,zero,zero
	(register, 0x18, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465d0c: li a1,0x3
	(register, 0x14, 4) COPY (const, 0x3, 4)

00465d10: or t9,s4,zero
	(register, 0x64, 4) INT_OR (register, 0x50, 4) , (const, 0x0, 4)

00465d14: bal 0x004654f0
	(register, 0x7c, 4) COPY (const, 0x465d1c, 4)
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)
	 ---  CALL (ram, 0x4654f0, 4)

00465d18: _or a0,s5,zero
	(register, 0x10, 4) INT_OR (register, 0x54, 4) , (const, 0x0, 4)

00465d1c: beq v0,s3,0x00465d2c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x4c, 4)
	 ---  CBRANCH (ram, 0x465d2c, 4) , (unique, 0x1200, 1)

00465d20: _nop

00465d24: bne v0,s2,0x00465c90
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x48, 4)
	 ---  CBRANCH (ram, 0x465c90, 4) , (unique, 0x1700, 1)

00465d28: _nop

00465d2c: lw v1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0xc, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465d30: nop

00465d34: andi a0,v1,0x1
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00465d38: beq a0,zero,0x00465d6c
	(unique, 0x1200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff8, 4)
	 ---  CBRANCH (ram, 0x465d6c, 4) , (unique, 0x1200, 1)

00465d3c: _addiu a2,v1,-0x8
	(register, 0x18, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffff8, 4)

00465d40: ll a1,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x14, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465d44: bne a1,v1,0x00465d5c
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0xc, 4)
	(register, 0x10, 4) COPY (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465d5c, 4) , (unique, 0x1700, 1)

00465d48: _li a0,0x0
	(register, 0x10, 4) COPY (const, 0x0, 4)

00465d4c: or at,a2,zero
	(register, 0x4, 4) INT_OR (register, 0x18, 4) , (const, 0x0, 4)

00465d50: sc at,0x0(s0)
	(unique, 0x100, 4) INT_ADD (register, 0x40, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x180, 4) , (register, 0x4, 4)
	(register, 0x4, 4) COPY (const, 0x1, 4)

00465d54: beq at,zero,0x00465d40
	(unique, 0x1200, 1) INT_EQUAL (register, 0x4, 4) , (const, 0x0, 4)
	(register, 0x10, 4) COPY (const, 0x1, 4)
	 ---  CBRANCH (ram, 0x465d40, 4) , (unique, 0x1200, 1)

00465d58: _li a0,0x1
	(register, 0x10, 4) COPY (const, 0x1, 4)

00465d5c: bne a0,zero,0x00465ac0
	(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465ac0, 4) , (unique, 0x1700, 1)

00465d60: _or v1,a1,zero
	(register, 0xc, 4) INT_OR (register, 0x14, 4) , (const, 0x0, 4)

00465d64: b 0x00465d38
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)
	 ---  BRANCH (ram, 0x465d38, 4)

00465d68: _andi a0,v1,0x1
	(register, 0x10, 4) INT_AND (register, 0xc, 4) , (const, 0x1, 4)

00465d6c: sync 0x0
	 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)

00465d70: li v1,0x3
	(register, 0xc, 4) COPY (const, 0x3, 4)

00465d74: lw v0,0x0(s5)
	(unique, 0x100, 4) INT_ADD (register, 0x54, 4) , (const, 0x0, 4)
	(unique, 0x180, 4) COPY (const, 0x0, 4)
	(unique, 0x180, 4) COPY (unique, 0x100, 4)
	(register, 0x8, 4) LOAD (const, 0x1a1, 8) , (unique, 0x180, 4)

00465d78: nop

00465d7c: ori v0,v0,0x2
	(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x2, 4)

00465d80: beq v0,v1,0x00465d74
	(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (register, 0xc, 4)
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)
	 ---  CBRANCH (ram, 0x465d74, 4) , (unique, 0x1200, 1)

00465d84: _or v0,zero,zero
	(register, 0x8, 4) INT_OR (const, 0x0, 4) , (const, 0x0, 4)

00465d88: b 0x00465ac0
	 ---  BRANCH (ram, 0x465ac0, 4)

00465d8c: _nop

