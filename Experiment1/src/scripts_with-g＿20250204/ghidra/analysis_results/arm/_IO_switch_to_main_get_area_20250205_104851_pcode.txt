Function: _IO_switch_to_main_get_area
Address: 00037d18
P-code:

00037d18: ldr r3,[r0,#0x0]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x6000, 4)

00037d1c: ldr r2,[r0,#0x24]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x24, 4)
	(register, 0x28, 4) LOAD (const, 0x1a1, 8) , (unique, 0x6000, 4)

00037d20: bic r3,r3,#0x100
	(unique, 0x1c00, 4) INT_RIGHT (const, 0x100, 4) , (const, 0x1f, 4)
	(unique, 0x1c80, 1) INT_EQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x1d00, 1) BOOL_AND (unique, 0x1c80, 1) , (register, 0x62, 1)
	(unique, 0x1d80, 1) INT_NOTEQUAL (const, 0xc, 1) , (const, 0x0, 1)
	(unique, 0x1e00, 1) SUBPIECE (unique, 0x1c00, 4) , (const, 0x0, 4)
	(unique, 0x1e80, 1) BOOL_AND (unique, 0x1d80, 1) , (unique, 0x1e00, 1)
	(register, 0x68, 1) BOOL_OR (unique, 0x1d00, 1) , (unique, 0x1e80, 1)
	(unique, 0x10880, 4) INT_NEGATE (const, 0x100, 4)
	(register, 0x2c, 4) INT_AND (register, 0x2c, 4) , (unique, 0x10880, 4)
	(register, 0x66, 1) COPY (register, 0x68, 1)
	(register, 0x67, 1) COPY (register, 0x63, 1)
	(register, 0x64, 1) INT_SLESS (register, 0x2c, 4) , (const, 0x0, 4)
	(register, 0x65, 1) INT_EQUAL (register, 0x2c, 4) , (const, 0x0, 4)

00037d24: ldr r1,[r0,#0x8]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	(register, 0x24, 4) LOAD (const, 0x1a1, 8) , (unique, 0x6000, 4)

00037d28: ldr r12,[r0,#0x2c]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	(register, 0x50, 4) LOAD (const, 0x1a1, 8) , (unique, 0x6000, 4)

00037d2c: str r3,[r0,#0x0]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x0, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x2c, 4)

00037d30: ldr r3,[r0,#0xc]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
	(register, 0x2c, 4) LOAD (const, 0x1a1, 8) , (unique, 0x6000, 4)

00037d34: str r12,[r0,#0x8]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x8, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x50, 4)

00037d38: str r1,[r0,#0x2c]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x2c, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x24, 4)

00037d3c: str r2,[r0,#0xc]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0xc, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x28, 4)

00037d40: str r3,[r0,#0x24]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x24, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x2c, 4)

00037d44: str r2,[r0,#0x4]
	(unique, 0x6000, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
	 ---  STORE (const, 0x1a1, 8) , (unique, 0x6000, 4) , (register, 0x28, 4)

00037d48: bx lr
	(unique, 0x0, 4) INT_AND (register, 0x58, 4) , (const, 0x1, 4)
	(register, 0x78, 1) INT_NOTEQUAL (unique, 0x0, 4) , (const, 0x0, 4)
	(register, 0x69, 1) COPY (register, 0x78, 1)
	(register, 0x5c, 4) INT_AND (register, 0x58, 4) , (const, 0xfffffffe, 4)
	 ---  RETURN (register, 0x5c, 4)

