Label: 836
Function: __mpn_sub_n
Architecture: arm
Source File: Unknown
Entry Point: 00065af0

High-level P-code:

(register, 0x68, 1) COPY (const, 0x1, 1)
(unique, 0x74000, 4) INT_AND (register, 0x2c, 4) , (const, 0x1, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x58, 4) PTRADD (register, 0x24, 4) , (register, 0x2c, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x65b1c, 1) , (register, 0x65, 1)
(unique, 0x100000ba, 4) COPY (register, 0x20, 4)
(unique, 0x100000be, 4) COPY (register, 0x24, 4)
(unique, 0x100000c2, 4) COPY (register, 0x28, 4)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x24, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x34, 4) LOAD (const, 0x1a1, 4) , (register, 0x28, 4)
(register, 0x28, 4) PTRADD (register, 0x28, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x66, 1) INT_LESSEQUAL (register, 0x34, 4) , (register, 0x30, 4)
(register, 0x30, 4) INT_SUB (register, 0x30, 4) , (register, 0x34, 4)
(register, 0x65, 1) INT_EQUAL (register, 0x24, 4) , (register, 0x58, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x20, 4) , (register, 0x30, 4)
(register, 0x20, 4) PTRADD (register, 0x20, 4) , (const, 0x1, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x65b64, 1) , (register, 0x65, 1)
(unique, 0x74000, 4) INT_AND (register, 0x2c, 4) , (const, 0x2, 4)
(register, 0x65, 1) INT_NOTEQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x100000ba, 4) , (register, 0x20, 4)
(register, 0x24, 4) MULTIEQUAL (unique, 0x100000be, 4) , (register, 0x24, 4)
(register, 0x28, 4) MULTIEQUAL (unique, 0x100000c2, 4) , (register, 0x28, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x68, 1) , (register, 0x66, 1)
 ---  CBRANCH (ram, 0x65b40, 1) , (register, 0x65, 1)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x34, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x38, 4) LOAD (const, 0x1a1, 4) , (register, 0x28, 4)
(register, 0x3c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(unique, 0x3f380, 4) INT_SUB (register, 0x30, 4) , (register, 0x38, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x38, 4) , (register, 0x30, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x62, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x10000056, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x38, 4) , (unique, 0x59b80, 4)
(register, 0x30, 4) INT_SUB (register, 0x30, 4) , (unique, 0x59c00, 4)
(unique, 0x10000056, 1) BOOL_NEGATE (register, 0x62, 1)
(unique, 0x3f380, 4) INT_SUB (register, 0x34, 4) , (register, 0x3c, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x3c, 4) , (register, 0x34, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b00, 1) BOOL_AND (unique, 0x10000058, 1) , (unique, 0x10000059, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x59b00, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x3c, 4) , (unique, 0x59b80, 4)
(register, 0x34, 4) INT_SUB (register, 0x34, 4) , (unique, 0x59c00, 4)
(unique, 0x10000058, 1) BOOL_NEGATE (unique, 0x3f400, 1)
(unique, 0x10000059, 1) BOOL_NEGATE (unique, 0x3f500, 1)
(register, 0x65, 1) INT_EQUAL (register, 0x80, 4) , (register, 0x58, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x20, 4) , (register, 0x30, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x34, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x2, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x65b64, 1) , (register, 0x65, 1)
(register, 0x2c, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x34, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x3c, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x48, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x20, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x80, 4) , (register, 0x80, 4)
(register, 0x24, 4) MULTIEQUAL (register, 0x24, 4) , (register, 0x80, 4) , (register, 0x80, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x80, 4) , (register, 0x80, 4)
(register, 0x62, 1) MULTIEQUAL (register, 0x62, 1) , (register, 0x66, 1) , (register, 0x66, 1)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x3, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x24, 4) , (const, 0x4, 4) , (const, 0x4, 4)
(register, 0x30, 4) LOAD (const, 0x1a1, 4) , (register, 0x28, 4)
(register, 0x38, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x40, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x50, 4) LOAD (const, 0x1a1, 4) , (register, 0x80, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x3, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x28, 4) , (const, 0x4, 4) , (const, 0x4, 4)
(unique, 0x3f380, 4) INT_SUB (register, 0x2c, 4) , (register, 0x30, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x30, 4) , (register, 0x2c, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x62, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b00, 1) BOOL_NEGATE (register, 0x62, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x59b00, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x30, 4) , (unique, 0x59b80, 4)
(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (unique, 0x59c00, 4)
(unique, 0x3f380, 4) INT_SUB (register, 0x34, 4) , (register, 0x38, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x38, 4) , (register, 0x34, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b00, 1) BOOL_AND (unique, 0x1000005a, 1) , (unique, 0x1000005b, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x59b00, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x38, 4) , (unique, 0x59b80, 4)
(register, 0x34, 4) INT_SUB (register, 0x34, 4) , (unique, 0x59c00, 4)
(unique, 0x1000005a, 1) BOOL_NEGATE (unique, 0x3f400, 1)
(unique, 0x1000005b, 1) BOOL_NEGATE (unique, 0x3f500, 1)
(unique, 0x3f380, 4) INT_SUB (register, 0x3c, 4) , (register, 0x40, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x40, 4) , (register, 0x3c, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b00, 1) BOOL_AND (unique, 0x1000005c, 1) , (unique, 0x1000005d, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x59b00, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x40, 4) , (unique, 0x59b80, 4)
(register, 0x3c, 4) INT_SUB (register, 0x3c, 4) , (unique, 0x59c00, 4)
(unique, 0x1000005c, 1) BOOL_NEGATE (unique, 0x3f400, 1)
(unique, 0x1000005d, 1) BOOL_NEGATE (unique, 0x3f500, 1)
(unique, 0x3f380, 4) INT_SUB (register, 0x48, 4) , (register, 0x50, 4)
(unique, 0x3f400, 1) INT_LESS (register, 0x50, 4) , (register, 0x48, 4)
(unique, 0x3f480, 4) INT_ZEXT (register, 0x66, 1)
(unique, 0x3f500, 1) INT_LESS (unique, 0x3f380, 4) , (unique, 0x3f480, 4)
(register, 0x66, 1) BOOL_OR (unique, 0x3f400, 1) , (unique, 0x3f500, 1)
(unique, 0x59b00, 1) BOOL_AND (unique, 0x1000005e, 1) , (unique, 0x1000005f, 1)
(unique, 0x59b80, 4) INT_ZEXT (unique, 0x59b00, 1)
(unique, 0x59c00, 4) INT_ADD (register, 0x50, 4) , (unique, 0x59b80, 4)
(register, 0x48, 4) INT_SUB (register, 0x48, 4) , (unique, 0x59c00, 4)
(unique, 0x1000005e, 1) BOOL_NEGATE (unique, 0x3f400, 1)
(unique, 0x1000005f, 1) BOOL_NEGATE (unique, 0x3f500, 1)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x80, 4) , (register, 0x58, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x20, 4) , (register, 0x2c, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x34, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x3c, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x80, 4) , (register, 0x48, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x2, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x3, 4) , (const, 0x4, 4)
(register, 0x80, 4) PTRADD (register, 0x20, 4) , (const, 0x4, 4) , (const, 0x4, 4)
 ---  CBRANCH (ram, 0x65b40, 1) , (register, 0x65, 1)
 ---  RETURN (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4)
