Label: 893
Function: __mpn_extract_double
Architecture: mips
Source File: Unknown
Entry Point: 0046e760

High-level P-code:

(stack, 0x10, 4) SUBPIECE (stack, 0x10, 8) , (const, 0x4, 4)
(stack, 0x14, 4) SUBPIECE (stack, 0x10, 8) , (const, 0x0, 4)
(register, 0x8, 4) INT_RIGHT (stack, 0x10, 4) , (const, 0x14, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7ff, 4)
(register, 0xc, 4) INT_SUB (register, 0x8, 4) , (const, 0x3ff, 4)
(register, 0x24, 4) INT_RIGHT (stack, 0x10, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_AND (stack, 0x10, 4) , (const, 0xfffff, 4)
(unique, 0x10000019, 8) INT_AND (unique, 0x1000003b, 8) , (const, 0xfffff00000000, 8)
(unique, 0x10000022, 8) INT_AND (unique, 0x10000043, 8) , (const, 0xfffff00000000, 8)
(unique, 0x1000003b, 8) CAST (stack, 0x10, 8)
(unique, 0x10000043, 8) CAST (stack, 0x10, 8)
(unique, 0x10000010, 8) INT_AND (unique, 0x1000004b, 8) , (const, 0x7ff0000000000000, 8)
(unique, 0x1000004b, 8) CAST (stack, 0x10, 8)
 ---  STORE (const, 0x1a1, 4) , (register, 0x1c, 4) , (register, 0x24, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x17, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (register, 0xc, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x1b, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (stack, 0x14, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x1f, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (unique, 0x10000010, 8) , (const, 0x0, 8)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x46e824, 1) , (unique, 0x1700, 1)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x24, 4)
(unique, 0x100, 4) PTRADD (register, 0x10, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x1700, 1) INT_EQUAL (stack, 0x14, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x46e838, 1) , (unique, 0x1700, 1)
(unique, 0x1200, 1) INT_EQUAL (unique, 0x10000019, 8) , (const, 0x0, 8)
 ---  CBRANCH (ram, 0x46e8a8, 1) , (unique, 0x1200, 1)
(unique, 0x5380, 1) INT_LESS (register, 0x8, 4) , (const, 0x10000, 4)
(register, 0x14, 4) COPY (const, 0x10, 4)
 ---  CBRANCH (ram, 0x46e7d8, 1) , (unique, 0x5380, 1)
(unique, 0x5280, 1) INT_LESS (register, 0x8, 4) , (const, 0x100, 4)
(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)
(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x1, 4)
(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x3, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x1c, 4) INT_RIGHT (register, 0x8, 4) , (register, 0x14, 4)
(register, 0xc, 4) PTRADD (ram, 0x4b368c, 4) , (register, 0x1c, 4) , (const, 0x1, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
(register, 0xc, 4) INT_ZEXT (unique, 0x10000055, 1)
(unique, 0x10000055, 1) CAST (unique, 0x2f00, 1)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)
(register, 0x14, 4) INT_SUB (const, 0x15, 4) , (register, 0xc, 4)
(register, 0x1c, 4) INT_ADD (register, 0xc, 4) , (const, 0xb, 4)
(unique, 0x5780, 4) INT_AND (register, 0x1c, 4) , (const, 0x1f, 4)
(register, 0x1c, 4) INT_RIGHT (stack, 0x14, 4) , (unique, 0x5780, 4)
(unique, 0x4f80, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (unique, 0x4f80, 4)
(register, 0x8, 4) INT_OR (register, 0x1c, 4) , (register, 0x8, 4)
(unique, 0x4f80, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x14, 4) INT_LEFT (stack, 0x14, 4) , (unique, 0x4f80, 4)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffbed, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x4f, 4)
(unique, 0x100, 4) PTRADD (register, 0x10, 4) , (const, 0x1, 4) , (const, 0x4, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0x14, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x53, 4)
(register, 0x8, 4) COPY (const, 0x2, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (register, 0xc, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) COPY (ram, 0x4b368c, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x5d, 4)
(register, 0x8, 4) INT_OR (register, 0x8, 4) , (const, 0x100000, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0xc0, 4)
(unique, 0x100, 4) PTRADD (register, 0x10, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x8, 4) COPY (const, 0x2, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) COPY (ram, 0x4b368c, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (unique, 0x10000022, 8) , (const, 0x0, 8)
 ---  CBRANCH (ram, 0x46e7bc, 1) , (unique, 0x1700, 1)
(unique, 0x5380, 1) INT_LESS (stack, 0x14, 4) , (const, 0x10000, 4)
 ---  CBRANCH (ram, 0x46e8b4, 1) , (unique, 0x5380, 1)
(unique, 0x5280, 1) INT_LESS (stack, 0x14, 4) , (const, 0x100, 4)
(register, 0x14, 4) INT_ZEXT (unique, 0x5280, 1)
(register, 0x14, 4) INT_XOR (register, 0x14, 4) , (const, 0x1, 4)
(register, 0x14, 4) INT_LEFT (register, 0x14, 4) , (const, 0x3, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
(register, 0x1c, 4) INT_RIGHT (stack, 0x14, 4) , (register, 0x14, 4)
(register, 0xc, 4) PTRADD (ram, 0x4b368c, 4) , (register, 0x1c, 4) , (const, 0x1, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
(register, 0xc, 4) INT_ZEXT (unique, 0x10000054, 1)
(unique, 0x10000054, 1) CAST (unique, 0x2f00, 1)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (register, 0x14, 4)
(register, 0x14, 4) INT_SUB (const, 0x20, 4) , (register, 0xc, 4)
(unique, 0x5180, 1) INT_SLESS (const, 0xa, 4) , (register, 0x14, 4)
 ---  CBRANCH (ram, 0x46e8d8, 1) , (unique, 0x5180, 1)
(register, 0x14, 4) INT_SUB (const, 0x15, 4) , (register, 0xc, 4)
(unique, 0x4f80, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x14, 4) INT_LEFT (stack, 0x14, 4) , (unique, 0x4f80, 4)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0xfffffbcd, 4)
(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)
(register, 0xc, 4) MULTIEQUAL (register, 0xc, 4) , (register, 0xc, 4)
(register, 0x14, 4) MULTIEQUAL (register, 0x14, 4) , (register, 0x14, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x91, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x14, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x95, 4)
(unique, 0x100, 4) PTRADD (register, 0x10, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x8, 4) COPY (const, 0x2, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (register, 0xc, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) COPY (ram, 0x4b368c, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x9f, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x18, 4) , (const, 0x0, 4)
(ram, 0x4b368c, 4) INDIRECT (ram, 0x4b368c, 4) , (const, 0x62, 4)
(register, 0x8, 4) COPY (const, 0x2, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(ram, 0x4b368c, 4) COPY (ram, 0x4b368c, 4)
(unique, 0x5380, 1) INT_LESS (stack, 0x14, 4) , (const, 0x1000000, 4)
(register, 0xc, 4) INT_RIGHT (stack, 0x14, 4) , (const, 0x18, 4)
 ---  CBRANCH (ram, 0x46e8f0, 1) , (unique, 0x5380, 1)
(register, 0x8, 4) PTRADD (ram, 0x4b368c, 4) , (register, 0xc, 4) , (const, 0x1, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(register, 0xc, 4) INT_ZEXT (unique, 0x10000053, 1)
(unique, 0x10000053, 1) CAST (unique, 0x2f00, 1)
(register, 0xc, 4) INT_ADD (register, 0xc, 4) , (const, 0x18, 4)
(register, 0xc, 4) MULTIEQUAL (register, 0xc, 4) , (register, 0xc, 4)
(register, 0x14, 4) INT_SUB (register, 0xc, 4) , (const, 0x15, 4)
(register, 0x8, 4) INT_SUB (const, 0x35, 4) , (register, 0xc, 4)
(unique, 0x5780, 4) INT_AND (register, 0x14, 4) , (const, 0x1f, 4)
(register, 0x14, 4) INT_RIGHT (stack, 0x14, 4) , (unique, 0x5780, 4)
(unique, 0x4f80, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_LEFT (stack, 0x14, 4) , (unique, 0x4f80, 4)
 ---  BRANCH (ram, 0x46e890, 1)
(register, 0x14, 4) COPY (const, 0x10, 4)
 ---  BRANCH (ram, 0x46e858, 1)
