Label: 192
Function: strlen
Architecture: arm
Source File: Unknown
Entry Point: 000282c0

High-level P-code:

(unique, 0x1000004f, 4) INT_AND (unique, 0x1000004b, 4) , (const, 0xfffffffc, 4)
(unique, 0x1000004b, 4) CAST (register, 0x20, 4)
(register, 0x24, 4) CAST (unique, 0x1000004f, 4)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x24, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(register, 0x2c, 4) INT_AND (unique, 0x10000053, 4) , (const, 0x3, 4)
(register, 0x65, 1) INT_NOTEQUAL (register, 0x2c, 4) , (const, 0x0, 4)
(unique, 0x10000053, 4) CAST (register, 0x20, 4)
(unique, 0x10000000, 4) INT_2COMP (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x282e8, 1) , (register, 0x65, 1)
(unique, 0x1000002f, 4) COPY (register, 0x24, 4)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xff, 4)
(register, 0x2c, 4) INT_SUB (register, 0x2c, 4) , (const, 0x1, 4)
(unique, 0x2680, 1) INT_LESS (const, 0x1, 4) , (register, 0x2c, 4)
 ---  CBRANCH (ram, 0x282e0, 1) , (unique, 0x2680, 1)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xffff, 4)
(unique, 0x1000003f, 4) COPY (register, 0x28, 4)
(unique, 0x10000043, 4) COPY (register, 0x28, 4)
(unique, 0x10000047, 4) MULTIEQUAL (unique, 0x1000003f, 4) , (unique, 0x10000043, 4)
(register, 0x28, 4) COPY (unique, 0x10000047, 4)
(unique, 0x2680, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000057, 4)
 ---  CBRANCH (ram, 0x282e8, 1) , (unique, 0x2680, 1)
(register, 0x28, 4) INT_OR (register, 0x28, 4) , (const, 0xff0000, 4)
(unique, 0x10000033, 4) COPY (register, 0x24, 4)
(unique, 0x10000037, 4) COPY (register, 0x24, 4)
(unique, 0x10000057, 4) CAST (register, 0x2c, 4)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x10000000, 4) , (unique, 0x10000000, 4) , (unique, 0x10000000, 4) , (register, 0x20, 4)
(register, 0x24, 4) MULTIEQUAL (unique, 0x1000002f, 4) , (unique, 0x10000033, 4) , (unique, 0x10000037, 4) , (unique, 0x1000003b, 4)
(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)
 ---  CBRANCH (ram, 0x282f0, 1) , (unique, 0x1000001f, 1)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff00, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(unique, 0x1000001f, 1) BOOL_NEGATE (register, 0x65, 1)
 ---  CBRANCH (ram, 0x282f4, 1) , (unique, 0x10000020, 1)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff0000, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x61, 1) MULTIEQUAL (register, 0x65, 1) , (register, 0x65, 1)
(unique, 0x10000020, 1) BOOL_NEGATE (register, 0x61, 1)
 ---  CBRANCH (ram, 0x282f8, 1) , (unique, 0x10000021, 1)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff000000, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
(register, 0x61, 1) MULTIEQUAL (register, 0x61, 1) , (register, 0x65, 1)
(unique, 0x10000021, 1) BOOL_NEGATE (register, 0x61, 1)
 ---  CBRANCH (ram, 0x282fc, 1) , (register, 0x61, 1)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x4, 4)
(register, 0x61, 1) MULTIEQUAL (register, 0x61, 1) , (register, 0x65, 1)
(register, 0x28, 4) LOAD (const, 0x1a1, 4) , (register, 0x24, 4)
(register, 0x24, 4) PTRADD (register, 0x24, 4) , (const, 0x1, 4) , (const, 0x4, 4)
(unique, 0x1000003b, 4) COPY (register, 0x24, 4)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x2830c, 1) , (unique, 0x10000023, 1)
(register, 0x20, 4) INT_ADD (register, 0x20, 4) , (const, 0x1, 4)
(unique, 0x10000023, 1) BOOL_NEGATE (register, 0x65, 1)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff00, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x28314, 1) , (unique, 0x10000024, 1)
(register, 0x20, 4) INT_ADD (unique, 0x10000014, 4) , (const, 0x1, 4)
(register, 0x61, 1) MULTIEQUAL (register, 0x65, 1) , (register, 0x65, 1)
(unique, 0x10000014, 4) MULTIEQUAL (register, 0x20, 4) , (register, 0x20, 4)
(unique, 0x10000024, 1) BOOL_NEGATE (register, 0x61, 1)
(unique, 0x74000, 4) INT_AND (register, 0x28, 4) , (const, 0xff0000, 4)
(register, 0x65, 1) INT_EQUAL (unique, 0x74000, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x2831c, 1) , (unique, 0x10000025, 1)
(register, 0x20, 4) INT_ADD (unique, 0x10000018, 4) , (const, 0x1, 4)
(register, 0x61, 1) MULTIEQUAL (register, 0x61, 1) , (register, 0x65, 1)
(unique, 0x10000018, 4) MULTIEQUAL (unique, 0x10000014, 4) , (register, 0x20, 4)
(unique, 0x10000025, 1) BOOL_NEGATE (register, 0x61, 1)
 ---  RETURN (const, 0x0, 4) , (register, 0x20, 4)
(register, 0x20, 4) MULTIEQUAL (unique, 0x10000018, 4) , (register, 0x20, 4)
