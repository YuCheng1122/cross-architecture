Label: 819
Function: ___pthread_rwlock_unlock
Architecture: mips
Source File: Unknown
Entry Point: 00465d90

High-level P-code:

(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000df, 4) , (const, 0x1c, 4)
(unique, 0x100000df, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0xc, 4) CALLOTHER (const, 0x26, 4) , (register, 0x3274, 4)
(unique, 0x100000e3, 4) INT_ADD (register, 0xc, 4) , (const, 0xffff8b88, 4)
(register, 0xc, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) CAST (unique, 0x100000e3, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x465f00, 1) , (unique, 0x1200, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x1000008f, 4)
(unique, 0x1000008f, 4) PTRSUB (unique, 0x1000010b, 4) , (const, 0x0, 4)
(unique, 0x100000d7, 4) COPY (register, 0x8, 4)
(unique, 0x1000010b, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x44, 4) INT_SUB (register, 0x8, 4) , (const, 0x8, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x100000d7, 4) , (unique, 0x100000db, 4)
(register, 0xc, 4) INT_RIGHT (register, 0x44, 4) , (const, 0x3, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0xc, 4) , (const, 0x0, 4)
(register, 0xc, 4) INT_AND (register, 0x44, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x465e84, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x44, 4) MULTIEQUAL (register, 0x44, 4) , (register, 0x44, 4)
(register, 0x4c, 4) LOAD (const, 0x1a1, 4) , (unique, 0x10000093, 4)
(unique, 0x10000093, 4) PTRSUB (unique, 0x1000010f, 4) , (const, 0x0, 4)
(unique, 0x1000010f, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x4c, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x465e10, 1) , (unique, 0x1700, 1)
(unique, 0x100000db, 4) COPY (register, 0x4c, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x10000097, 4) , (register, 0x44, 4)
(unique, 0x10000097, 4) PTRSUB (unique, 0x10000113, 4) , (const, 0x0, 4)
(unique, 0x10000113, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_AND (register, 0x44, 4) , (const, 0x1, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465e98, 1) , (unique, 0x1700, 1)
(register, 0x10, 4) PTRSUB (unique, 0x10000117, 4) , (const, 0x8, 4)
(unique, 0x10000117, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x44, 4) INT_XOR (register, 0x44, 4) , (register, 0x4c, 4)
(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x4, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465e64, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x8, 4) COPY (const, 0x0, 4)
 ---  RETURN (const, 0x0, 4) , (register, 0x8, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465e90, 1) , (unique, 0x1200, 1)
(register, 0x44, 4) INT_OR (register, 0x44, 4) , (const, 0x1, 4)
(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0xfffffffb, 4)
 ---  BRANCH (ram, 0x465df0, 1)
(register, 0x44, 4) MULTIEQUAL (register, 0x44, 4) , (register, 0x44, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (const, 0x1, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465e24, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x4c, 4) PTRSUB (unique, 0x100000e7, 4) , (const, 0xc, 4)
(unique, 0x100000e7, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100, 4) , (const, 0x0, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000eb, 4) , (const, 0x1c, 4)
(unique, 0x100000eb, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x44, 4) LOAD (const, 0x1a1, 4) , (register, 0x4c, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x4c, 4) , (const, 0x0, 4)
(unique, 0x2f00, 1) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000ef, 4) , (const, 0x1b, 4)
(unique, 0x100000ef, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1700, 1) INT_EQUAL (unique, 0x2f00, 1) , (const, 0x0, 1)
(register, 0x44, 4) INT_AND (register, 0x44, 4) , (const, 0x2, 4)
 ---  CBRANCH (ram, 0x465fa4, 1) , (unique, 0x1700, 1)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000ab, 4)
(unique, 0x100000ab, 4) PTRSUB (unique, 0x100000fb, 4) , (const, 0x0, 4)
(unique, 0x100000cf, 4) COPY (register, 0x8, 4)
(unique, 0x100000fb, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0xc, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4)
(register, 0x8, 4) MULTIEQUAL (unique, 0x100000cf, 4) , (unique, 0x100000d3, 4)
(unique, 0x5380, 1) INT_NOTEQUAL (register, 0xc, 4) , (const, 0x0, 4)
(register, 0xc, 4) INT_ZEXT (unique, 0x5380, 1)
(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (register, 0x8, 4)
(register, 0xc, 4) INT_XOR (register, 0xc, 4) , (const, 0x2, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x14, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100000af, 4)
(unique, 0x100000af, 4) PTRSUB (unique, 0x100000ff, 4) , (const, 0x0, 4)
(unique, 0x100000ff, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x14, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x465f64, 1) , (unique, 0x1700, 1)
(unique, 0x100000d3, 4) COPY (register, 0x14, 4)
 ---  STORE (const, 0x1a1, 4) , (unique, 0x100000b3, 4) , (register, 0xc, 4)
(unique, 0x100000b3, 4) PTRSUB (unique, 0x10000103, 4) , (const, 0x0, 4)
(unique, 0x10000103, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_RIGHT (register, 0x14, 4) , (const, 0x3, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465fe8, 1) , (unique, 0x1700, 1)
(register, 0x10, 4) PTRSUB (unique, 0x10000107, 4) , (const, 0x8, 4)
(unique, 0x10000107, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x44, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465e64, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (unique, 0x100, 4)
(unique, 0x100, 4) PTRSUB (unique, 0x100000f3, 4) , (const, 0x4, 4)
(unique, 0x100000f3, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(register, 0xc, 4) PTRSUB (unique, 0x100000f7, 4) , (const, 0x4, 4)
(unique, 0x100000c7, 4) COPY (register, 0x8, 4)
(unique, 0x100000f7, 4) PTRSUB (register, 0x10, 4) , (const, 0x0, 4)
(unique, 0x1200, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465f2c, 1) , (unique, 0x1200, 1)
(register, 0x8, 4) MULTIEQUAL (unique, 0x100000c7, 4) , (unique, 0x100000cb, 4)
(register, 0x10, 4) INT_OR (register, 0x8, 4) , (const, 0x80000000, 4)
 ---  CALLOTHER (const, 0x29, 4) , (const, 0x0, 1)
(register, 0x18, 4) LOAD (const, 0x1a1, 4) , (register, 0xc, 4)
(unique, 0x1700, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x8, 4)
 ---  CBRANCH (ram, 0x465fd8, 1) , (unique, 0x1700, 1)
(unique, 0x100000cb, 4) COPY (register, 0x18, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0xc, 4) , (register, 0x10, 4)
(register, 0x8, 4) LOAD (const, 0x1a1, 4) , (register, 0x10, 4)
 ---  STORE (const, 0x1a1, 4) , (register, 0x10, 4) , (const, 0x0, 4)
(register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)
(unique, 0x1200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)
 ---  CBRANCH (ram, 0x465f78, 1) , (unique, 0x1200, 1)
 ---  CALLOTHER (const, 0x3, 4) , (const, 0x0, 4)
